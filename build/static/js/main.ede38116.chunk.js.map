{"version":3,"sources":["tonva/index.ts","tonva/components/index.ts","tonva/CApp/CVEntity.tsx","tonva/net/guestApi.ts","tonva/net/caller.ts","tonva/net/index.ts","tonva/net/netToken.ts","tonva/components/fetchErrorView.tsx","tonva/components/nav.tsx","tonva/tool/cacheIds.ts","tonva/tool/local.ts","tonva/tool/index.ts","tonva/CApp/tools/jsonStringify.ts","tonva/CApp/tools/pureJsonContent.tsx","tonva/CApp/tools/index.ts","tonva/net/appBridge.ts","tonva/components/page.tsx","tonva/uq/caller.ts","tonva/CApp/form/viewModel.tsx","tonva/net/httpChannel.ts","tonva/net/httpChannelUI.ts","tonva/net/uqApi.ts","tonva/CApp/link/cLink.tsx","tonva/CApp/link/index.ts","tonva/uq/entity.ts","tonva/tool/uid.ts","tonva/net/wsChannel.ts","tonva/uq/index.ts","tonva/uq/query.ts","tonva/components/edit/itemEdit.tsx","tonva/components/image.tsx","tonva/tool/user.ts","tonva/net/host.ts","tonva/CApp/cUq/reactBoxId.tsx","tonva-form/index.ts","tonva/CApp/tuid/vTuidMain.tsx","tonva/CApp/tuid/vTuidEdit.tsx","tonva/CApp/tuid/vTuidSelect.tsx","tonva/CApp/tuid/vTuidView.tsx","tonva/CApp/tuid/vTuidInfo.tsx","tonva/CApp/tuid/pageItems.ts","tonva/CApp/tuid/vTuidList.tsx","tonva/CApp/tuid/cTuid.ts","tonva/CApp/tuid/index.tsx","tonva/app/vMain.tsx","tonva/uq/action.ts","tonva/CApp/form/vBand.tsx","tonva/CApp/form/vSubmit.tsx","tonva/CApp/form/rule.ts","tonva/CApp/form/vField/vField.tsx","tonva/CApp/form/vField/vComputeField.tsx","tonva/CApp/form/vArr.tsx","tonva/CApp/form/vField/vTuidField.tsx","tonva/CApp/form/bandsBuilder.ts","tonva/CApp/form/vField/buildVmField.ts","tonva/CApp/form/vForm.tsx","tonva/CApp/form/index.ts","tonva/uq/tuid/idCache.ts","tonva/uq/tuid/tuid.ts","tonva/tool/localDb.ts","tonva/components/res.ts","tonva-form/form/control/control.tsx","tonva-form/form/control/buttonsControl.tsx","tonva-form/form/control/charsControl.tsx","tonva-form/form/control/stringControl.tsx","tonva-form/form/control/numberControl.tsx","tonva-form/form/control/unknownControl.tsx","tonva-form/form/control/pickIdControl.tsx","tonva-form/form/control/pickTuidControl.tsx","tonva-form/form/control/pickControl.tsx","tonva-form/form/control/index.ts","tonva-form/form/control/checkControl.tsx","tonva-form/form/control/radioControl.tsx","tonva-form/form/control/selectControl.tsx","tonva-form/form/control/textAreaControl.tsx","tonva/tool/env.ts","tonva/uq/tuid/index.ts","tonva-form/form/rowContainer/index.tsx","tonva/uq/tuid/reactBoxId.tsx","tonva/net/apiBase.ts","tonva/components/pageHeader.tsx","tonva/CApp/query/defaultRow.tsx","tonva/CApp/query/vQueryMain.tsx","tonva/CApp/query/vQuerySelect.tsx","tonva/CApp/query/cQuery.ts","tonva/CApp/query/index.ts","tonva/components/edit/imageItemEdit.tsx","tonva/tool/pageItems.ts","tonva/components/loading.tsx","tonva/components/resUploader.tsx","tonva/uq/uqMan.ts","tonva/uq/sheet.ts","tonva/uq/book.ts","tonva/uq/history.ts","tonva/uq/map.ts","tonva/uq/pending.ts","tonva/CApp/icons.tsx","tonva/CApp/ControllerUq.ts","tonva-form/form/index.ts","tonva-form/form/formView.tsx","tonva/CApp/sheet/vMain.tsx","tonva/CApp/sheet/vNew.tsx","tonva/CApp/sheet/vSheetView.tsx","tonva/CApp/sheet/vEdit.tsx","tonva/CApp/sheet/vSheetAction.tsx","tonva/CApp/sheet/vSchema.tsx","tonva/CApp/sheet/vArchives.tsx","tonva/CApp/sheet/vList.tsx","tonva/CApp/sheet/vArchived.tsx","tonva/CApp/sheet/vSheet.tsx","tonva/CApp/sheet/vSaved.tsx","tonva/CApp/sheet/vSheetProcessing.tsx","tonva/CApp/sheet/cSheet.ts","tonva/CApp/sheet/index.ts","tonva/components/simple/Badge.tsx","tonva/components/simple/LMR.tsx","tonva/components/simple/FA.tsx","tonva/components/simple/Muted.tsx","tonva/components/simple/index.ts","tonva/CApp/book/vBookMain.tsx","tonva/CApp/book/cBook.ts","tonva/CApp/cUq/vUq.tsx","tonva/CApp/cUq/cUq.tsx","tonva/CApp/cUq/index.ts","tonva/CApp/map/vMain.tsx","tonva/CApp/map/inputValues.tsx","tonva/CApp/map/cMap.ts","tonva/CApp/map/index.ts","tonva/CApp/centerApi.ts","tonva/CApp/app/vApp.tsx","tonva/CApp/app/CApp.tsx","tonva/CApp/app/index.ts","tonva/CApp/action/vActionMain.tsx","tonva/CApp/action/cAction.ts","tonva/CApp/action/index.ts","tonva/CApp/history/vHistoryMain.tsx","tonva/CApp/history/cHistory.ts","tonva/CApp/history/index.ts","tonva/CApp/pending/vPendingMain.tsx","tonva/CApp/pending/cPending.ts","tonva/CApp/pending/index.ts","tonva/components/VM.tsx","tonva/components/schema/index.ts","tonva/components/rules/index.ts","tonva/components/dropDownActions/index.tsx","tonva/components/easyDate/index.tsx","tonva/components/media.tsx","tonva/components/searchBox.tsx","tonva/uq/tuid/tuidsCache.ts","tonva/uq/uqsMan.ts","tonva/CApp/index.ts","tonva-form/form/TonvaForm.tsx","tonva-form/multiStep/index.tsx","tonva/components/form/rules/index.ts","tonva/components/form/widgets/widget.tsx","tonva/components/form/widgets/textWidget.tsx","tonva/components/form/widgets/numberWidget.tsx","tonva/components/form/widgets/updownWidget.tsx","tonva/components/form/widgets/dateWidget.tsx","tonva/components/form/widgets/checkBoxWidget.tsx","tonva/components/form/widgets/selectWidget.tsx","tonva/components/form/widgets/radioWidget.tsx","tonva/components/form/widgets/idWidget.tsx","tonva/components/form/widgets/unknown.tsx","tonva/components/form/widgets/buttonWidget.tsx","tonva/components/form/context.tsx","tonva/components/form/widgets/arrComponent.tsx","tonva/components/form/widgets/imageWidget.tsx","tonva/components/form/widgets/factory.tsx","tonva/components/form/widgets/textareaWidget.tsx","tonva/components/form/widgets/passwordWidget.tsx","tonva/components/form/widgets/rangeWidget.tsx","tonva/components/form/formRes.ts","tonva/components/form/form.tsx","tonva/components/form/field.tsx","tonva/components/form/index.ts","tonva/components/edit/stringItemEdit.tsx","tonva/components/edit/radioItemEdit.tsx","tonva/components/edit/selectItemEdit.tsx","tonva/components/edit/idItemEdit.tsx","tonva/components/edit/edit.tsx","tonva/components/edit/index.tsx","tonva/app/centerApi.ts","tonva/components/list/base.tsx","tonva/components/list/clickable.tsx","tonva/components/list/static.tsx","tonva/components/list/selectable.tsx","tonva/components/list/index.tsx","tonva/components/propGrid/row.tsx","tonva/components/propGrid/propView.tsx","tonva/components/propGrid/PropGrid.tsx","tonva/components/propGrid/index.tsx","tonva/entry/meInfo.tsx","tonva/components/tabs/tabs.tsx","api/mainApi.ts","api/devApi.ts","store/admins.ts","store/dev.ts","store/cacheIds.ts","store/index.ts","Administors/NewFellow.tsx","Administors/EditAdmin.tsx","Administors/index.tsx","tools/idDates.tsx","tools/span.tsx","tools/unitSpan.tsx","consts.ts","tools/uqSpan.tsx","tools/appSpan.tsx","tools/serverSpan.tsx","tools/stringValueEdit.tsx","tools/idPickPage.tsx","Apps/info.tsx","Apps/new.tsx","Apps/index.tsx","Members/newRole.tsx","Members/roleApps.tsx","Members/memberPage.tsx","Members/membersPage.tsx","Members/rolePage.tsx","Members/index.tsx","Dev/apps/editPage.tsx","Dev/apps/appsPage.tsx","Dev/apps/appUqs.tsx","Dev/apps/appPage.tsx","Dev/apps/uqBindPage.tsx","Dev/apps/index.tsx","Dev/uqs/resultSections.tsx","Dev/uqs/uqUpload.tsx","createIdPick.tsx","Dev/uqs/newServicePage.tsx","Dev/uqs/servicePage.tsx","Dev/uqs/editPage.tsx","Dev/uqs/uqPage.tsx","Dev/uqs/listPage.tsx","Dev/uqs/UqDevsAdmin.tsx","Dev/uqs/uqController.tsx","Dev/buses.tsx","Dev/servers.tsx","Dev/ObjView.tsx","Users/vApps.tsx","Users/vUsers.tsx","Users/vApp.tsx","Users/vUser.tsx","Users/vAppEditUsers.tsx","Users/vUserEditApps.tsx","Users/VAddUser.tsx","Users/cUsers.tsx","Admin.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["_tool__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_net__WEBPACK_IMPORTED_MODULE_1__","_components__WEBPACK_IMPORTED_MODULE_2__","o","_uq__WEBPACK_IMPORTED_MODULE_4__","_CApp__WEBPACK_IMPORTED_MODULE_5__","_nav__WEBPACK_IMPORTED_MODULE_0__","_page__WEBPACK_IMPORTED_MODULE_2__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_edit__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_image__WEBPACK_IMPORTED_MODULE_10__","_rules__WEBPACK_IMPORTED_MODULE_12__","_list__WEBPACK_IMPORTED_MODULE_13__","_dropDownActions__WEBPACK_IMPORTED_MODULE_14__","_easyDate__WEBPACK_IMPORTED_MODULE_15__","_propGrid__WEBPACK_IMPORTED_MODULE_16__","_simple__WEBPACK_IMPORTED_MODULE_17__","_media__WEBPACK_IMPORTED_MODULE_18__","_searchBox__WEBPACK_IMPORTED_MODULE_19__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_3__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_2__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_1__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","__awaiter","ownerField","queryName","cQuerySelect","VEntity","_components__WEBPACK_IMPORTED_MODULE_0__","controller","createForm","guestApi","uqApi","get","user","token","unitName","unit","Caller","params","waiting","method","_params","headers","wsChannel","apiBase","appBridge","host","netToken","userId","setCenterToken","fetchErrorView_FetchErrorView","react","reApi","props","clearError","channel","url","resolve","reject","net","close","errContent","error","err","i","push","key","style","wordWrap","className","type","onClick","isMobile","RegExp","test","navigator","userAgent","logMark","logs","stackKey","nav_NavView","waitCount","upgradeUq","nav","start","isHistoryBack","navBack","tick","Date","now","back","console","log","stack","length","confirm","nav_awaiter","len","window","self","top","postMessage","confirmClose","pop","setState","fetchError","state","wait","addEventListener","set","level","waitTimeHandler","tool","setTimeout","clearTimeout","unauthorized","showLogin","uq","version","show","page","header","view","disposer","clear","removeCeased","history","pushState","ceased","refresh","item","dispose","p","backLevel","popAndDispose","find","v","message","elWait","elError","loading","assign","testing","lineHeight","simple","map","index","visibility","nav_Nav","local","windowOnError","event","source","lineno","colno","windowOnMouseMove","ev","y","windowOnScroll","lang","district","language","culture","guest","g","handler","ws","onWsReceiveAny","handlerId","endWsReceive","msg","receive","unitJsonPath","unitRes","fetch","json","remove","envUnit","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","REACT_APP_UNIT","Number","isDevelopment","id","getPredefinedUnitName","unitId","unitFromName","settings","navSettings","oem","href","document","location","toLowerCase","endsWith","substr","onerror","onselectstart","oncontextmenu","hash","pos","hashParam","substring","startWait","resHost","centerHost","resUrl","wsHost","setGuest","exHash","appInFrame","parent","predefinedUnit","loadPredefinedUnit","notLogined","logined","endWait","onLogined","me","nick","callback","JSON","stringify","saveLocalUser","showAppView","connect","defaultTop","loginTop","withBack","lv","e","then","bind","loginView","default","logout","logoutClear","cp","ChangePasswordPage","onError","showUpgradeUq","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","sheet","includes","uh","src","title","String","open","date","getTime","toTimeString","step","__decorate","mobx_module","CacheIds","maxCount","dict","Map","ids","loadId","shift","delete","_loadIds","_loadId","setItem","local_LocalData","env","localDb","child","forEach","uid","pageItems","replacer","value","jsonStringify","PureJSONContent","uqTokens","logoutUqTokens","appsInFrame","_unit","val","isBridged","setAppInFrame","appHash","parts","split","param","slice","getExHashPos","lastIndexOf","getExHash","appUrl","u","_tool_uid__WEBPACK_IMPORTED_MODULE_2__","evt","data","subWin","_wsChannel__WEBPACK_IMPORTED_MODULE_4__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_0___default","a","clone","_components__WEBPACK_IMPORTED_MODULE_1__","subFrameStarted","onReceive","_uqApi__WEBPACK_IMPORTED_MODULE_3__","initSubWin","from","callId","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","apiName","db","uqOwner","uqName","onReceiveAppApiMessage","urlTest","action","uqTokenActions","Error","realUrl","_host__WEBPACK_IMPORTED_MODULE_5__","getUrlOrTest","onAppApiReturn","buildAppUq","realUnit","getUnit","uqToken","at","opener","appUq","bridgeCenterApi","scrollAfter","Scroller","scrollTo","scrollTop","offsetHeight","scrollTimeGap","ScrollView","react__WEBPACK_IMPORTED_MODULE_0__","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scroller","scrollHeight","c","direct","children","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","t","lodash__WEBPACK_IMPORTED_MODULE_3___default","isSelected","isMounted","t0","load","footer","right","keepHeader","headerClassName","tabPosition","redDot","img","redDotView","cn","alt","classnames__WEBPACK_IMPORTED_MODULE_2___default","onTabClick","pageHeader","_pageHeader__WEBPACK_IMPORTED_MODULE_4__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","mobx_react__WEBPACK_IMPORTED_MODULE_1__","EntityCaller","_net__WEBPACK_IMPORTED_MODULE_0__","tries","_entity","innerRequest","xcall","jsonResult","innerCall","$uq","$modify","pullModify","xresult","retry","ver","uqVersion","en","schema","rebuildSchema","buildEntities","setSchema","ActionCaller","QueryQueryCaller","path","unpackReturns","buildParams","QueryPageCaller","pageStart","pageSize","$page","ViewModel","JSONContent","RowContent","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","methodsWithBody","httpChannel_HttpChannel","hostUrl","apiToken","showError","timeout","post","urlPrefix","caller","buildOptions","h","append","encodeURI","indexOf","innerFetch","keys","k","innerFetchResult","that","buildError","ex","timeOutHandler","ok","statusText","ct","retJson","Array","isArray","retError","catch","text","startsWith","buildHeaders","Headers","httpChannel_CenterHttpChannel","UqHttpChannel","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","init","acc","join","entities","uqApi_UnitxApi","buildChannel","centerAppApi","CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","loginedUserId","uqApi_CenterApiBase","uqTokensName","uqTokenApi","localMap","un","localCache","nowTick","Math","floor","lodash_default","appUqParams","callCenterapi","call","appOwner","appName","loadAppUqs","uqs","userApi","tool_user","account","verify","password","prop","Link","cLink_CLink","classnames_default","ln","Entity","typeId","fieldMaps","sys","cache","sName","jName","returns","f","loadEntitySchema","buildFieldsTuid","buildFieldTuid","buildArrFieldsTuid","fieldName","arrName","getTuid","fn","fieldArr","an","buildFieldsParams","arrResult","pa","rowResult","buildDateTimeParam","getIdFromObj","dt","toISOString","packRow","packArr","row","r","charCodeAt","escape","boxId","unpackRow","unpackArr","ch0","ch","fLen","to","n","isNaN","vals","ALPHABET","ID_LENGTH","rtn","charAt","random","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","WebSocket","onopen","onmessage","wsMessage","onclose","parse","postWsToSubApp","netThis","send","_uqMan__WEBPACK_IMPORTED_MODULE_0__","_tuid__WEBPACK_IMPORTED_MODULE_5__","_uqsMan__WEBPACK_IMPORTED_MODULE_10__","Query","_entity__WEBPACK_IMPORTED_MODULE_2__","isPaged","size","more","list","hasMore","startField","mobx__WEBPACK_IMPORTED_MODULE_0__","array","deep","_caller__WEBPACK_IMPORTED_MODULE_3__","pageCaller","request","queryCaller","query","table","obj","ItemEdit","itemSchema","uiItem","isChanged","internalStart","internalEnd","rules","nv","newValue","verifyRule","rule","mobx__WEBPACK_IMPORTED_MODULE_1__","Image","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","_nav__WEBPACK_IMPORTED_MODULE_2__","altImage","currentTarget","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","httpArr","urlFromHost","str","isAbsoluteUrl","resUrlFromHost","fetchOptions","Content-Type","tryLocal","getCenterHost","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","findIndex","fetchUrl","debugHostUrl","localCheck","results","all","j","debugHost","getUrlOrDebug","urlDebug","fetchLocalCheck","TuidWithUIRes","ReactBoxId","tuidUR","isUndefined","valueFromId","boxName","assureBox","Tv","tuidValue","nullUI","ttv","divObj","bi","logContent","render","boxIdContent","tv","_form__WEBPACK_IMPORTED_MODULE_0__","_multiStep__WEBPACK_IMPORTED_MODULE_1__","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","newButton","isImport","components","placeholder","vTuidEdit_VTuidEdit","next","vTuidEdit_awaiter","vForm","reset","closePage","finish","getValues","save","unique","setError","isCalling","returnCall","openPageElement","editView","vTuidSelect_VTuidSelect","mainView","index_module","react_default","createElement","initKey","onSearchMain","PageItems","renderMainRow","clickMainRow","before","vTuidSelect_awaiter","searchMain","mainRowContent","ceasePage","hasDiv","showDiv","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divs","divItems","getDivItems","vTuidView_VTuidView","vTuidView_awaiter","alert","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","search","vTuidList_VTuidListBase","vTuidList_awaiter","renderRow","clickRow","callOnSelected","rowKey","ownerId","onSelected","VTuidList","cTuid_CTuid","buildPageItems","first","searchArr","cTuid_CTuidBase","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","openVPage","onEdit","itemChanged","cTuidInfo","cTuid_CTuidInfo","cTuidEdit","CTuidEdit","edit","cTuidList","CTuidList","merge","CTuidMain","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","VUnsupportedUnit","userName","uqsMan","VUnitSelect","onRowClick","_net__WEBPACK_IMPORTED_MODULE_2__","appUnits","VErrorsPage","errors","VStartError","Action","_entity__WEBPACK_IMPORTED_MODULE_0__","ActionSubmitCaller","SubmitReturnsCaller","_caller__WEBPACK_IMPORTED_MODULE_1__","pack","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","submit","isOk","disabled","caption","Rule","RuleRequired","defy","trim","RuleNum","RuleInt","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","buildRules","required","null","checkRules","readonly","FormMode","editable","vField_decorate","vField_VInputControl","renderError","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","setValue","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","VDateField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","vArr_awaiter","valueBoxs","onRowChanged","rowValues","$owner","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","vTuidField_awaiter","showInfo","getValue","reactBoxId","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","build","band","getVFields","getVArr","getVSubmit","order","rows","initValues","arrList","ctrl","valueFromFieldName","propName","buildFieldValues","buildObservableValues","vForm_decorate","maxCacheSize","idCache_IdCache","tuidLocal","queue","waitingIds","divName","tuidInner","initLocalArr","localArr","defer","util","has","cacheTuids","moveToHead","splice","_id","useId","tuidValues","loadIds","cacheIdValues","tuids","unpackTuidIds","cacheValue","cacheTuidFieldValues","localedValues","loadTuidIdsOrLocal","filter","getItem","netIds","netRet","loadTuidIds","IdDivCache","div","tuid_Tuid","idName","TuidBox","noCache","tuid_TuidInner","idCache","newVersion","removeAll","tuidDiv","tuid_TuidDiv","createBoxId","assureObj","cacheIds","modifyIds","IdsCaller","cached","valuesText","GetCaller","cacheFieldsInValue","arrValues","mainFields","cacheFields","unpackTuidIdsOfFields","SaveCaller","removeItem","AllCaller","owner","SearchCaller","LoadArrCaller","tuid_SaveArrCaller","ArrPosCaller","tuid_TuidCaller","$id","transParams","arrParams","arrValue","buildDateParam","bid","$order","TuidImport","loadMain","loadArr","saveArr","posArr","TuidBoxDiv","LocalMap","lodash__WEBPACK_IMPORTED_MODULE_0__","__ls","localStorage","LocalCache","removeLocal","Local","caches","locals","keyForGet","keyForSet","sk","LocalArr","keyForRemove","ks","maxArrSize","unshift","saveIndex","l","ls","resOptions","resLang","_","languages","setResOptions","control_ControlBase","formView","renderControl","hasError","filled","validate","control_Control","face","setProps","element","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","controlContent","component","pickIdControl_decorate","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickTuidControl_decorate","pickControl_PickControl","pickControl_awaiter","Content","pickControl_decorate","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","global","_localDb__WEBPACK_IMPORTED_MODULE_0__","testingTags","pathname","pn","isTesting","tag","ms","args","handle","setInterval","clearInterval","_boxId__WEBPACK_IMPORTED_MODULE_0__","_tuid__WEBPACK_IMPORTED_MODULE_1__","_tuidsCache__WEBPACK_IMPORTED_MODULE_2__","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","TuidContent","tuidName","s","refetchApi","ApiBase","getHttpChannel","callFetch","put","PageHeader","logoutClick","_nav__WEBPACK_IMPORTED_MODULE_1__","showLogout","hasBack","debugLogout","b","openWindow","rightView","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","vQuerySelect_awaiter","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","ImageItemEdit","_itemEdit__WEBPACK_IMPORTED_MODULE_7__","overSize","upload","resUploader","_tool__WEBPACK_IMPORTED_MODULE_8__","resId","_page__WEBPACK_IMPORTED_MODULE_6__","_resUploader__WEBPACK_IMPORTED_MODULE_3__","multiple","maxSize","border","padding","_image__WEBPACK_IMPORTED_MODULE_4__","_nav__WEBPACK_IMPORTED_MODULE_5__","mobx__WEBPACK_IMPORTED_MODULE_2__","itemObservable","isFirst","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","topDiv","_uid__WEBPACK_IMPORTED_MODULE_1__","bottomDiv","onLoad","setPageStart","reverse","Loading","ResUploader","files","fileInput","FormData","file","abortController","AbortController","signal","onFilesChange","fieldDefaultValue","UqMan","uqData","tvs","actions","sheets","queries","books","maps","histories","pendings","createBoxIdFromTVs","_tuid_reactBoxId__WEBPACK_IMPORTED_MODULE_10__","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","clearTuids","localModifyMax","localAccess","tuidsCache","_tuid__WEBPACK_IMPORTED_MODULE_2__","accesses","loadAccess","buildTuids","buildAccess","entityName","newTuid","fromType","fromObj","_action__WEBPACK_IMPORTED_MODULE_3__","_query__WEBPACK_IMPORTED_MODULE_5__","book","_book__WEBPACK_IMPORTED_MODULE_6__","_map__WEBPACK_IMPORTED_MODULE_8__","_history__WEBPACK_IMPORTED_MODULE_7__","pending","_pending__WEBPACK_IMPORTED_MODULE_9__","_sheet__WEBPACK_IMPORTED_MODULE_4__","newAction","newQuery","newBook","newMap","newHistory","newSheet","newPending","buildSheet","buildTuidBox","buildTuidDivBox","af","modifyMax","Sheet","states","op","ops","discription","app","flow","brief","unpackSheet","flows","GetSheetCaller","getArchive","unpack","SheetArchiveCaller","SheetArchivesCaller","StateSheetsCaller","PageStateItems","StateSheetCountCaller","UserSheetsCaller","MySheetsCaller","SheetCaller","_caller__WEBPACK_IMPORTED_MODULE_2__","count","_tool_pageItems__WEBPACK_IMPORTED_MODULE_1__","getStateSheets","Book","_query__WEBPACK_IMPORTED_MODULE_0__","queryApiName","BookQueryCaller","History","schemaFrom","actionSchema","querySchema","AddCaller","DelCaller","PageCaller","qc","QueryCaller","MapCaller","getCaller","MapAddCaller","add","MapDelCaller","MapAllCaller","MapPageCaller","MapQueryCaller","_action__WEBPACK_IMPORTED_MODULE_1__","Pending","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","fixWidth","ControllerUq","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","tonva__WEBPACK_IMPORTED_MODULE_2__","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_4__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_3__","buttons","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","getStateLabel","templet","statesCount","isDev","vNew_VSheetNew","vNew_awaiter","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","sheetView","removed","sheetData","vEdit_VSheetEdit","vEdit_awaiter","saveSheet","CApp_form","vSheetAction_VSheetAction","actionClick","vSheetAction_awaiter","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","vArchives_awaiter","processing","archiveRow","getArchives","vList_VSheetList","rowClick","vList_awaiter","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSaved_awaiter","vSheetProcessing_VSheetProcessing","cSheet_CSheet","cSheet_awaiter","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","preState","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","sheetAction","VSheetProcessing","showArchived","showAction","showProcessing","beforeStart","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","stateSheetCount","getSheet","sheetTitle","disc","Badge_Badge","badgeAlign","badgeVertical","LMR_LMR","cursor","LMR_decorate","FA_FA","spin","pull","pulse","rotate","flip","inverse","Muted","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","CApp_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","cApp","tuidURs","getUI","CApp_tuid","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","CApp_history","CPending","tonva_uq","loadEntities","tuidPlaceHolder","sheetTypeId","sheetFromTypeId","startSheet","cTuidSelect","entityType","cFromName","ownerTuid","tUIs","tUI","cEntity","VUq","vMain_VMapMain","itemRender","ItemRow","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","isFrom","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","inputValues_awaiter","cMap_MapItem","cMap_CMap","cMap_awaiter","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","template","v0","del","q","retFields","newItem","addItem","VMapMain","tuidBox","callParam","centerApi","vApp_VAppMain","appPage","vApp_awaiter","appContent","cUqArr","vApp_VUnsupportedUnit","vApp_VUnitSelect","CApp_CApp","cUqCollection","cImportUqs","setSettings","getCUq","uqUI","CUq","CApp_cUq","VAppMain","retErrors","userAppUnits","showUnsupport","appUnit","vMain","localData","uqAppData","promiseInits","uqFullName","newCUq","addUq","setTuidImportsLocal","clearPrevPages","showMainPage","uqId","getCUqFromId","navSheet","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","submitReturns","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","Controller","_tool__WEBPACK_IMPORTED_MODULE_3__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","_resolve_$","View","VPage","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","mobileRegex","emailRegex","DropdownActions","handleDocumentClick","dropdownOpen","contains","menu","toggle","removeEventListener","isRight","hasIcon","data-toggle","aria-expanded","dropdown-menu","dropdown-menu-right","aria-hidden","EasyDate","EasyTime","renderDate","vDate","withTime","nDate","_date","month","year","hm","nowYear","hour","getHours","minute","getMinutes","getDate","getMonth","getFullYear","Media","___WEBPACK_IMPORTED_MODULE_2__","disp","px","py","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","TuidsCache","clearCacheTimer","cacheTimer","seconds","tuidCached","innerPullModify","tuidLists","queueModify","modify","UQsMan","tonvaAppName","buildTVs","collection","uqTVs","lj","uqsData","_uqMan__WEBPACK_IMPORTED_MODULE_1__","lower","uqMan","setInner","tuidImport","fromName","iName","setFrom","_formUI__WEBPACK_IMPORTED_MODULE_12__","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_2__","MultiStep","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","classnames__WEBPACK_IMPORTED_MODULE_2__","_form__WEBPACK_IMPORTED_MODULE_3__","stepViews","topView","onPrev","onNext","stepName","steps","ButtonConten","prefix","btnContent","formProps","setStep","nextStepName","num","pIcon","sIcon","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","maxMsg","checkMore","integer","widget_Widget","context","fieldProps","contextErrors","onInputChange","changeValue","container","visible","inNode","requiredFlag","FieldContainer","renderBody","_itemSchema","_ui","getUiItem","removeErrorWidget","addErrorWidget","isChanging","initData","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","elDiscription","discriptionClassName","uiLabel","Templet","errorList","textWidget_TextWidget","onKeyDown","internalOnKeyDown","keyCode","onEnter","blur","checkContextRules","renderTemplet","renderErrors","numberWidget_NumberWidget","updownWidget_UpdownWidget","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","selectWidget_decorate","radioStyle","height","idWidget_IdWidget","idWidget_awaiter","pickId","clearContextError","required-item","cursor-pointer","idWidget_decorate","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","buttonWidget_awaiter","observerRender","widget","widgetType","ButtonClass","context_Context","uiSchema","isRow","widgets","errorWidgets","subContexts","arrRowContexts","itemName","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","buttonName","ew","onButtonClick","checkFieldRules","rowContext","setContextError","clearWidgetsErrors","checkHasError","clearContextErrors","context_decorate","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","itemSchemas","parentData","FormContext","ContextContainer","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","imageWidget_ImageWidget","imageWidget_awaiter","imageItemEdit","imageSrc","end","components_image","imageWidget_decorate","widgetsFactory","datetime","time","email","updown","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","formRes","zh","form_Form","watch","formData","calcSelectOrDelete","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","components_res","py-3","Container","formContext","dv","initDataItem","arrItem","arrItems","arrDict","arrItemOperated","formArrVal","beforeShow","contextType","stringItemEdit_StringItemEdit","edit_itemEdit","preValue","verifyValue","radioItemEdit_RadioItemEdit","selectItemEdit_SelectItemEdit","idItemEdit_IdItemEdit","idItemEdit_awaiter","edit_Edit","defaultSepClassName","defaultRowContainerClassName","divValue","requireFlag","rowContainerClassName","edit_awaiter","stopEdit","onItemChanged","onItemClick","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","topBorder","bottomBorder","elItems","base_ListBase","selectedItems","clickable_Clickable","static_Static","selectable_Selectable","buildItems","itemsArray","comp","compare","selectItem","retItems","selected","si","labelId","obItem","onSelect","flex","marginBottom","htmlFor","anySelected","selectable_decorate","list_List","buildBase","listBase","selectAll","unselectAll","waitingMore","isLoading","staticRow","list_decorate","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","_prop","gridProps","col","labelFixLeft","bk","bg-white","renderLabel","renderProp","align","vAlign","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","row_ComponentPropRow","full","propView_PropView","isGap","PropGrid_PropGrid","propView","userSetProp","Tab","_content","contentBuilder","onShown","tabs_Tabs","tabClick","shown","selectedTab","tabBg","tabBack","contentBg","contentBack","notify","tabName","bsCur","bsTab","display","borderColor","borderStyle","borderTopWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","notifyCircle","mainApi","tonva","toUser","fromUnit","fromApp","fellow","isOwner","isAdmin","apps","member","assigned","roles","devApi","uqsText","service","admins_Admins","store","owners","admins","fellows","unitAdmins","ua","fellowId","unitSetAdmin","removeCur","admin","unitAddAdmin","dev_ObjItems","dev","_load","_save","_inc","_del","_dec","dev_decorate","dev_Apps","searchedUqs","saveApp","delApp","counts","searchUq","searchPageSize","allUqs","appBindUq","dev_Uqs","saveUq","delUq","dev_Buses","buses","saveBus","delBus","bus","checkBusFace","checkBusQuery","busTypes","refNameOk","faceName","refArrayOk","checkBusQueryParam","dev_Servers","servers","saveServer","delServer","server","dev_Services","services","saveService","delService","changeServiceProp","loadUqServices","SearchItems","dev_Dev","searchApp","searchServer","cacheIds_CacheUnits","cacheIds_CacheUqs","cacheIds_CacheApps","cacheIds_CacheServers","store_Store","cacheUnits","cacheUqs","cacheApps","cacheServers","memberCount","roleApps","roleMember","roleMembers","memberRoles","unitChangeProp","unitApps","unitMemberCount","uqServer","uqBuilderUrl","appId","unitDeleteApp","inUnit","unitAddApp","unitRoles","unitAddRole","unitRoleChangeProp","unitRoleApps","unitRoleSetApps","unitMembers","unitAssignMember","unitMemberRoles","rId","unitSetMemberRoles","org","store_decorate","store_store","NewFellow_NewFellowPage","onSendInvitation","NewFellow_awaiter","addNew","NewFellow","NewFellow_decorate","EditAdmin_EditAdmin","EditAdmin_awaiter","isRoot","unitAdmin","Fellow","Administors_EditAdmin","EditAdmin_decorate","Administors_AdministorsPage","onNewOwner","newAdmin","onNewAdmin","ownersView","adminsView","onNewFellow","showOwners","showAdmins","Administors","Administors_decorate","idDates_IdDates","date_init","date_update","span","isLink","unitSpan_UnitSpan","unitSpan_UnitInfo","unitSpan_decorate","unitSpan_UnitName","consts_appIcon","REACT_APP_ICON","REACT_APP_ITEM_ICON","uqSpan_UqSpan","uqSpan_UqInfo","api","uqSpan_decorate","appSpan_AppSpan","appSpan_AppInfo","public","appSpan_decorate","apis","appSpan_AppRow","serverSpan_ServerSpan","serverSpan_ServerInfo","cloud","ip","serverSpan_decorate","stringValueEdit_StringValueEdit","stringValueEdit_awaiter","errorDiv","info","idPickPage_IdPickPage","itemClick","idFromItem","idPickPage_awaiter","candidateItems","searchPlaceHolder","idPickPage_decorate","info_Info","renderUqRow","uqAccess","act","info_awaiter","appActed","newInUnit","restoreUnitApp","stopUnitApp","newApp","addUnitApp","uqAccesses","faName","info_decorate","new_PageApps","new_NewApp","new_awaiter","appClick","renderApp","new_decorate","Apps_AppsPage","loadApps","ban","src_Apps","Apps_decorate","newRole_NewRole","newRole_awaiter","roleApps_RoleApps","renderRoleApp","memberPage_MemberPage","renderMemberRole","setRole","memberPage_SetRole","loadRoles","loadMemberRoles","orgValue","roleUser","onAssigned","roleClick","memberPage_decorate","setMemberRoles","selectRole","renderRole","roleSelect","membersPage_MembersPage","loadMembers","MemberRow","setRoleUser","roleId","membersPage_MemberSearch","renderMember","userClick","membersPage_decorate","members","rolePage_RolePage","roleAppClick","rolePage_RoleApps","loadRoleApps","rolePage_EditRole","onMembersClick","membersLeft","membersRight","editRole","addRoleApp","rolePage_decorate","roleChangeProp","isSysRole","onNameChanged","onDiscriptionChanged","setRoleApps","appSelect","midClassName","Members_Members","newRole","allUsersClick","Members_decorate","ServerCaption","editPage_schema","editPage_EditBasePage","editPage_awaiter","moreCandidates","pickServerId","renderServerInput","itemId","editPage_EditPage","editPage_NewPage","appsPage_AppsPage","appList","listRowClick","appRow","spanCaption","appUqs_SearchUqPage","appUqs_awaiter","onUq","getMyUqs","appUqs_decorate","appUqs_AppUqs","removeBind","btnProps","appUqs_Uqs","listHeader","btn","onBind","appPage_AppPage","editItem","appPage_awaiter","deleteItem","deleteApp","menuItems","btnAddUq","uqClick","elAccess","bind_access","uqBindPage_UqBindPage","onCheckChanged","accessChecked","saveUqBind","uqBindPage_awaiter","removeUqBind","btnDelete","checkAccessList","bc","apps_AppController","apps_awaiter","service_count","buildBindUqs","isNew","uaUq","apps_decorate","groupStart","groupEnd","Section","resultSections_StringSection","resultSections_GroupSection","line","titleIcon","collaps","whiteSpace","resultSections_decorate","resultSections_ErrorSection","ResultSections","sectionId","sections","stop","addToGroup","addText","section","rowId","mayStart","addSection","uqUpload_UqUpload","upFiles","fileClick","fr","FileReader","onload","uqUpload_UqPage","readAsText","onUpload","uqUpload_awaiter","lastModifiedDate","trunc","sz","uqUpload_CompileResult","fileList","fileRender","encType","compiled","fast","thoroughly","description","uqUpload_deploy","uqUpload_UqDeploy","onCompile","compile","onCompileThoroughly","isThoroughly","autoScrollEnd","clearAutoScrollToBottom","timeHandler","doubleClick","pane","getParent","topIntoView","bottomIntoView","lastScrollTop","startAutoScrollToBottom","renderText","resultSections","abort","scrollIntoView","tagName","parentElement","uintArray","encodedString","fromCharCode","decodeURIComponent","reader","read","done","startTime","compile_time","deploy_time","uintToString","total","byteLength","getReader","pump","endAutoScrollToBottom","onDoubleClick","fontWeight","uqUpload_decorate","createIdPick_IdPickPage","newServicePage_ServerCaption","urlRow","urlRowTest","serverRow","newServicePage_awaiter","dbRow","newServicePage_NewServicePage","bindId","tonva_form","tonvaForm","servicePage_ServicePage","onUrlChanged","servicePage_awaiter","changeProp","onUrlTestChanged","onDbChanged","onDeleteClick","servicePage_decorate","editPage_formRows","uqs_editPage_EditBasePage","uqs_editPage_awaiter","uqs_editPage_EditPage","uqs_editPage_NewPage","uqPage_UQPage","uqPage_awaiter","deleteUq","adminDev","btnAddService","onServiceClick","onUqUpload","onUqTest","onUqDeploy","serviceClick","showNewServicePage","devList","uqDevs","uqDevsAdmin","renderService","deploy","listPage_ListPage","batchCompile","batchCompilePage","uqList","listCompileRow","testThoroughly","deployThoroughly","cnBtn","bar","selectItems","UqDevsAdmin_UqDevsAdmin","UqDevsAdmin_awaiter","devChanged","loadAdmins","uqController_UQController","uqController_awaiter","loadUqEntities","uqGetEntities","r0","devUser","adminDevAdd","adminDevDel","svc","uqController_decorate","buses_Info","mine","buses_SchemaView","buses_decorate","repeated","canEdit","ObjView_ObjView","ObjView_Info","ObjView_New","ObjView_decorate","saveCur","stepHeader","ObjView_Edit","extraMenuActions","vApps_VApps","appUsers","users","appUsersList","onAppsClick","searchBox","vUsers_VUsers","userApps","userAppsList","searchUser","onUsersClick","vApp_VApp","curApp","curAppUsers","onAppEditUsers","vUser_VUser","curUser","curUserApps","onUserEditApps","vAppEditUsers_VAppEditUsers","appEditUsers","renderUser","editUser","onUserChanged","vAppEditUsers_awaiter","bindAppUser","vUserEditApps_VUserEditApps","userEditApps","editApp","onAppChanged","vUserEditApps_awaiter","bindUserApp","VAddUser_VAddUser","onSearchFocus","divUser","onAddUser","VAddUser_awaiter","userFromKey","addUser","addedPage","onAddApps","onContinueAddUser","VAddUser_decorate","cUsers_UsersController","onAppUsers","cUsers_awaiter","loadAppUsers","onUserApps","loadUserApps","unitOneAppUsers","unitOneUserApps","unitAppEditUsers","unitUserEditApps","unitAddUser","appIcon","userIcon","unitAppUsers","coll","unitUsers","cUsers_decorate","Admin_CAdmin","userAdminUnits","adminUnits","loadUnit","isProduction","loadAdminUnits","Admin_VAdmin","selectUnitPage","noUnitPage","Admin_awaiter","Admin_AdminPage","rArrow","typeCaptions","1","2","3","appsAction","usersAction","newUsersAction","adminsAction","noneAction","mid","objProps","P","loadCounts","appAction","uqAction","busAction","serverAction","vice","Admin_UnitProps","Admin_decorate","src_App_0","cAdmin","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","origin","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ede38116.chunk.js","sourcesContent":["export * from './tool';\r\nexport * from './net';\r\nexport * from './components';\r\nexport * from './entry';\r\nexport * from './uq';\r\nexport * from './CApp';\r\nexport * from './app';\r\n","export * from './nav';\r\nexport * from './pageHeader';\r\nexport * from './page';\r\nexport * from './VM';\r\nexport * from './schema';\r\nexport * from './form';\r\nexport * from './edit';\r\nexport * from './res';\r\nexport * from './tabs';\r\nexport * from './loading';\r\nexport * from './image';\r\nexport * from './resUploader';\r\nexport * from './rules';\r\nexport * from './list';\r\nexport * from './dropDownActions';\r\nexport * from './easyDate';\r\nexport * from './propGrid';\r\nexport * from './simple';\r\nexport * from './media';\r\nexport * from './searchBox';\r\n","import * as React from 'react';\r\nimport { VPage } from '../components';\r\nimport { Entity, Field } from '../uq';\r\nimport { CUq } from './cUq/cUq';\r\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\r\nimport { CQuerySelect } from './query';\r\nimport { FormUI, FieldTuidUI } from './formUI';\r\nimport { entityIcons } from './icons';\r\nimport { ControllerUq } from './ControllerUq';\r\n\r\nexport interface EntityUI {\r\n    form?: FormUI;\r\n}\r\n\r\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\r\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\r\n        super(cUq, res);\r\n        Object.setPrototypeOf(this.x, cUq.x);\r\n        let {name, typeName} = entity;\r\n        this.entity = entity;\r\n        this.ui = ui; // || entityUI.ui;\r\n        this.label = this.res.label || name;\r\n        this.icon = entityIcons[typeName];\r\n    }\r\n    readonly entity: T;\r\n    readonly ui: UI;\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        return true;\r\n    }\r\n\r\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\r\n        let options = this.buildFormOptions(mode);\r\n        let ret = new VForm(options, onSubmit);\r\n        ret.setValues(values);\r\n        return ret;\r\n    }\r\n\r\n    private buildFormOptions(mode?:FormMode):FormOptions {\r\n        let {fields, arrFields} = this.entity;\r\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\r\n        if (this.res !== undefined) {\r\n            none = this.res['none'];\r\n            submitCaption = this.res['submit'];\r\n            arrNewCaption = this.res['arrNew'];\r\n            arrEditCaption = this.res['arrEdit'];\r\n            arrTitleNewButton = this.res['arrTitleNewButton'];\r\n        }\r\n        if (none === undefined) {\r\n            none = this.cUq.res['none'] || 'none';\r\n        }\r\n        if (submitCaption === undefined)\r\n            submitCaption = this.cUq.res['submit'] || 'Submit';\r\n        if (arrNewCaption === undefined)\r\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\r\n        if (arrEditCaption === undefined)\r\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\r\n        if (arrTitleNewButton === undefined)\r\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\r\n        if (mode === undefined) mode = FormMode.new;\r\n        let formUI = this.ui.form;\r\n        let ret:FormOptions = {\r\n            fields: fields,\r\n            arrs: arrFields,\r\n            ui: formUI,\r\n            res: this.res || {},\r\n            inputs: this.buildInputs(formUI),\r\n            none: none,\r\n            submitCaption: submitCaption,\r\n            arrNewCaption: arrNewCaption,\r\n            arrEditCaption: arrEditCaption,\r\n            arrTitleNewButton: arrTitleNewButton,\r\n            mode: mode,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildInputs(formUI: FormUI):FieldInputs {\r\n        let {fields, arrFields} = this.entity;\r\n        let ret:FieldInputs = {};\r\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\r\n        if (arrFields !== undefined) {\r\n            for (let arr of arrFields) {\r\n                let {name, fields} = arr;\r\n                let items = formUI && formUI.items;\r\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\r\n        if (arr !== undefined) {\r\n            let arrFieldInputs = ret[arr];\r\n            if (arrFieldInputs === undefined) {\r\n                ret[arr] = arrFieldInputs = {};\r\n                ret = arrFieldInputs;\r\n            }\r\n        }\r\n        for (let field of fields) {\r\n            let {name, _tuid} = field;\r\n            if (_tuid === undefined) continue;\r\n            let {tuid} = _tuid;\r\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\r\n            ret[name] = {\r\n                select: this.buildSelect(field, arr, fieldUI),\r\n                content: this.buildContent(field, arr),\r\n                placeHolder: this.cUq.getTuidPlaceHolder(tuid),\r\n            };\r\n        }\r\n    }\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\r\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n            let {_tuid } = field;\r\n            let {ownerField} = _tuid;\r\n            let cTuidSelect = undefined; // await tuid.cSelectFrom();\r\n            return;\r\n            // eslint-disable-next-line\r\n            let param:any = undefined;\r\n            if (ownerField !== undefined) param = form.getValue(ownerField.name);\r\n            if (fieldUI && fieldUI.autoList === true) {\r\n                console.log('select search set param=empty string');\r\n                param = '';\r\n            }\r\n            let ret = await cTuidSelect.call(param);\r\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\r\n            if (ret === undefined) return undefined;\r\n            let id = cTuidSelect.idFromItem(ret);\r\n            _tuid.useId(id);\r\n            return id;\r\n        };\r\n    }\r\n\r\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\r\n        return;\r\n    }\r\n\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        return this.cUq.cQuerySelect(queryName);\r\n    }\r\n}\r\n\r\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\r\n    protected readonly entity: T;\r\n    protected readonly ui: UI;\r\n    constructor(controller: C) {\r\n        super(controller);\r\n        this.entity = controller.entity;\r\n        this.ui = controller.ui;\r\n    }\r\n\r\n    get label():string {return this.controller.label}\r\n\r\n    //private _form_$: VForm;\r\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\r\n        //if (this._form_$ !== undefined) return this._form_$;\r\n        return this.controller.createForm(onSubmit, values, mode);\r\n    }\r\n}\r\n","import { decodeGuestToken } from '../tool/user';\r\nimport { CenterApiBase } from './uqApi';\r\n\r\nexport class GuestApi extends CenterApiBase {\r\n    async guest(): Promise<any> {\r\n        //let guest = nav.local.guest.get();\r\n        let ret = await this.get('', {});\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeGuestToken(ret);\r\n            case 'object':\r\n                let guest = decodeGuestToken(ret.token);\r\n                return guest;\r\n        }\r\n    }\r\n\r\n    async unitFromName(unitName:string): Promise<number> {\r\n        let ret = await this.get(unitName);\r\n        return ret && ret.unit;\r\n    }\r\n}\r\n\r\nexport const guestApi = new GuestApi('tv/guest/', undefined);\r\n","export abstract class Caller<T> {\r\n    protected readonly _params: T;\r\n    constructor(params: T, waiting: boolean) {\r\n        this._params = params;\r\n        this.waiting = waiting;\r\n    }\r\n    protected get params():any {return this._params;}\r\n    buildParams():any {return this.params;}\r\n    method: string  = 'POST';\r\n    abstract get path(): string;\r\n    get headers(): {[header:string]: string} {return undefined}\r\n    waiting: boolean;\r\n}\r\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\r\nexport * from './apiBase';\r\nexport * from './guestApi';\r\nexport * from './caller';\r\nexport * from './uqApi';\r\nexport {appInFrame, isBridged, getExHash} from './appBridge';\r\nexport * from './host';\r\n//export {userApi} from './userApi';","\r\nimport {setCenterToken} from './uqApi';\r\nimport {WSChannel} from './wsChannel';\r\n\r\nexport const netToken = {\r\n    set(userId:number, token:string) {\r\n        setCenterToken(userId, token);\r\n        WSChannel.setCenterToken(token);\r\n    },\r\n    clear() {\r\n        setCenterToken(0, undefined);\r\n        WSChannel.setCenterToken(undefined);\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport {FetchError} from '../net/fetchError';\r\nimport { refetchApi } from '../net';\r\n\r\nexport interface FetchErrorProps extends FetchError {\r\n    clearError: ()=>void\r\n}\r\n\r\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\r\n    private reApi = async () => {\r\n        this.props.clearError();\r\n        const {channel, url, options, resolve, reject} = this.props;\r\n        await refetchApi(channel, url, options, resolve, reject);\r\n    }\r\n    private close = async () => {\r\n        this.props.clearError();\r\n    }\r\n    render() {\r\n        let {error, url} = this.props;\r\n        let errContent:any;\r\n        if (typeof error === 'object') {\r\n            let err = [];\r\n            for (let i in error) {\r\n                err.push(<li key={i}><label>{i}</label><div style={{wordWrap:\"break-word\"}}>{error[i]}</div></li>);\r\n            }\r\n            errContent = <ul>{err}</ul>;\r\n        }\r\n        else {\r\n            errContent = <div>{error}</div>;\r\n        }\r\n        return <li>\r\n            <article className=\"page-container\">\r\n                <section>\r\n                    <div  className=\"va-error\">\r\n                        <div>网络出现问题</div>\r\n                        <div>点击重新访问</div>\r\n                        <div style={{wordWrap:\"break-word\"}}>url: {url}</div>\r\n                        {errContent}\r\n                        <div className=\"p-3\">\r\n                            <button type='button' onClick={this.reApi}>重新API</button>\r\n                            <button type='button' onClick={this.close}>关闭</button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </article>\r\n        </li>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {User, Guest/*, UserInNav*/} from '../tool/user';\r\nimport {Page} from './page';\r\nimport {netToken} from '../net/netToken';\r\nimport FetchErrorView from './fetchErrorView';\r\nimport {FetchError} from '../net/fetchError';\r\nimport {appUrl, setAppInFrame, getExHash, getExHashPos} from '../net/appBridge';\r\nimport {LocalData, env} from '../tool';\r\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, appInFrame, host, resUrlFromHost} from '../net';\r\nimport { WsBase, wsBridge } from '../net/wsChannel';\r\nimport { resOptions } from './res';\r\nimport { Loading } from './loading';\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../css/va-form.css';\r\nimport '../css/va.css';\r\nimport '../css/animation.css';\r\nimport { FA } from './simple';\r\nimport { userApi } from '../net';\r\n\r\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\r\n    'BlackBerry|Windows Phone|'  +\r\n    'Opera Mini|IEMobile|Mobile' , \r\n    'i');\r\nconst isMobile = regEx.test(navigator.userAgent);\r\n\r\n/*\r\nexport const mobileHeaderStyle = isMobile? {\r\n    minHeight:  '3em'\r\n} : undefined;\r\n*/\r\n//const logo = require('../img/logo.svg');\r\nlet logMark: number;\r\nconst logs:string[] = [];\r\n\r\nexport interface Props //extends React.Props<Nav>\r\n{\r\n    //view: JSX.Element | (()=>JSX.Element);\r\n    //start?: ()=>Promise<void>;\r\n    onLogined: ()=>Promise<void>;\r\n    notLogined?: ()=>Promise<void>;\r\n};\r\nlet stackKey = 1;\r\nexport interface StackItem {\r\n    key: number;\r\n    view: JSX.Element;\r\n    ceased: boolean;\r\n    confirmClose?: ()=>Promise<boolean>;\r\n    disposer?: ()=>void;\r\n}\r\nexport interface NavViewState {\r\n    stack: StackItem[];\r\n    wait: 0|1|2;\r\n    fetchError: FetchError\r\n}\r\n\r\nexport class NavView extends React.Component<Props, NavViewState> {\r\n    private stack: StackItem[];\r\n    private htmlTitle: string;\r\n    private waitCount: number = 0;\r\n    private waitTimeHandler?: NodeJS.Timer;\r\n\r\n    constructor(props:Props) {\r\n        super(props);\r\n        //this.back = this.back.bind(this);\r\n        //this.navBack = this.navBack.bind(this);\r\n        this.stack = [];\r\n        this.state = {\r\n            stack: this.stack,\r\n            wait: 0,\r\n            fetchError: undefined\r\n        };\r\n    }\r\n    async componentDidMount()\r\n    {\r\n        window.addEventListener('popstate', this.navBack);\r\n        nav.set(this);\r\n        await nav.start();\r\n    }\r\n\r\n    get level(): number {\r\n        return this.stack.length;\r\n    }\r\n\r\n    startWait() {\r\n        if (this.waitCount === 0) {\r\n            this.setState({wait: 1});\r\n            this.waitTimeHandler = env.setTimeout(\r\n                'NavView.startWait',\r\n                () => {\r\n                    this.waitTimeHandler = undefined;\r\n                    this.setState({wait: 2});\r\n                },\r\n                1000) as NodeJS.Timer;\r\n        }\r\n        ++this.waitCount;\r\n        this.setState({\r\n            fetchError: undefined,\r\n        });\r\n    }\r\n\r\n    endWait() {\r\n        env.setTimeout(\r\n            'NavView.endWait',\r\n            () => {\r\n            /*\r\n            this.setState({\r\n                fetchError: undefined,\r\n            });*/\r\n            --this.waitCount;\r\n            if (this.waitCount === 0) {\r\n                if (this.waitTimeHandler !== undefined) {\r\n                    env.clearTimeout(this.waitTimeHandler);\r\n                    this.waitTimeHandler = undefined;\r\n                }\r\n                this.setState({wait: 0});\r\n            }\r\n        },100);\r\n    }\r\n\r\n    async onError(fetchError: FetchError)\r\n    {\r\n        let err = fetchError.error;\r\n        if (err !== undefined && err.unauthorized === true) {\r\n            await nav.showLogin(undefined);\r\n            return;\r\n        }\r\n        this.setState({\r\n            fetchError: fetchError,\r\n        });\r\n    }\r\n\r\n    private upgradeUq = () => {\r\n        nav.start();\r\n    }\r\n\r\n    async showUpgradeUq(uq:string, version:number):Promise<void> {\r\n        this.show(<Page header={false}>\r\n            <div>\r\n                UQ升级了，请点击按钮升级 <br />\r\n                <small className=\"text-muted\">{uq} ver-{version}</small>\r\n                <button className=\"btn btn-primary\" onClick={this.upgradeUq}>升级</button>\r\n            </div>\r\n        </Page>)\r\n    }\r\n\r\n    show(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.clear();\r\n        return this.push(view, disposer);\r\n    }\r\n\r\n    push(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.removeCeased();\r\n        if (this.stack.length > 0) {\r\n            window.history.pushState('forward', null, null);\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key,\r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        this.refresh();\r\n        //console.log('push: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    replace(view: JSX.Element, disposer?: ()=>void): number {\r\n        let item:StackItem = undefined;\r\n        let stack = this.stack;\r\n        if (stack.length > 0) {\r\n            item = stack.pop();\r\n            //this.popAndDispose();\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key, \r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        if (item !== undefined) this.dispose(item.disposer);\r\n        this.refresh();\r\n        //console.log('replace: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    ceaseTop(level:number = 1) {\r\n        let p = this.stack.length - 1;\r\n        for (let i=0; i<level; i++, p--) {\r\n            if (p < 0) break;\r\n            let item = this.stack[p];\r\n            item.ceased = true;\r\n        }\r\n    }\r\n\r\n    pop(level:number = 1) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        //console.log('pop start: %s pages level=%s', len, level);\r\n        if (level <= 0 || len <= 1) return;\r\n        if (len < level) level = len;\r\n        let backLevel = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            if (stack.length === 0) break;\r\n            //stack.pop();\r\n            this.popAndDispose();\r\n            ++backLevel;\r\n        }\r\n        if (backLevel >= len) backLevel--;\r\n        this.refresh();\r\n        if (this.isHistoryBack !== true) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(backLevel);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n        //console.log('pop: %s pages', stack.length);\r\n    }\r\n\r\n    popTo(key: number) {\r\n        if (key === undefined) return;\r\n        if (this.stack.find(v => v.key === key) === undefined) return;\r\n        while (this.stack.length >0) {\r\n            let len = this.stack.length;\r\n            let top = this.stack[len-1];\r\n            if (top.key === key) break;\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    topKey():number {\r\n        let len = this.stack.length;\r\n        if (len === 0) return undefined;\r\n        return this.stack[len-1].key;\r\n    }\r\n\r\n    removeCeased() {\r\n        for (;;) {\r\n            let p=this.stack.length-1;\r\n            if (p < 0) break;\r\n            let top = this.stack[p];\r\n            if (top.ceased === false) break;\r\n            let item = this.stack.pop();\r\n            let {disposer} = item;\r\n            this.dispose(disposer);\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    private popAndDispose() {\r\n        this.removeCeased();\r\n        let item = this.stack.pop();\r\n        if (item === undefined) return;\r\n        let {disposer} = item;\r\n        this.dispose(disposer);\r\n        this.removeCeased();\r\n        return item;\r\n    }\r\n\r\n    private dispose(disposer:()=>void) {\r\n        if (disposer === undefined) return;\r\n        let item = this.stack.find(v => v.disposer === disposer);\r\n        if (item === undefined) disposer();\r\n    }\r\n\r\n    clear() {\r\n        let len = this.stack.length;\r\n        while (this.stack.length > 0) this.popAndDispose();\r\n        //this.refresh();\r\n        if (len > 1) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(len-1);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n    }\r\n\r\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        let top = stack[len-1];\r\n        top.confirmClose = confirmClose;\r\n    }\r\n\r\n    private isHistoryBack:boolean = false;\r\n    navBack = () => {\r\n        //nav.log('backbutton pressed - nav level: ' + this.stack.length);\r\n        let tick = Date.now();\r\n        this.isHistoryBack = true;\r\n        this.back(true);\r\n        this.isHistoryBack = false;\r\n        console.log(`///\\\\\\\\ ${Date.now()-tick}ms backbutton pressed - nav level: ${this.stack.length}`);\r\n    }\r\n\r\n    back = async (confirm:boolean = true) => {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        if (len === 1) {\r\n            if (window.self !== window.top) {\r\n                window.top.postMessage({type:'pop-app'}, '*');\r\n            }\r\n            return;\r\n        }\r\n        let top = stack[len-1];\r\n        if (confirm===true && top.confirmClose) {\r\n            if (await top.confirmClose()===true) this.pop();\r\n        }\r\n        else {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    confirmBox(message?:string): boolean {\r\n        return window.confirm(message);\r\n    }\r\n    clearError = () => {\r\n        this.setState({fetchError: undefined});\r\n    }\r\n    /*\r\n    private clickCount = 0;\r\n    private firstClick: number = 0;\r\n    private clickRange = 3000;\r\n    private clickMax = 6;\r\n    private onClick = () => {\r\n        let now = Date.now();\r\n        if (now - this.firstClick > this.clickRange) {\r\n            this.clickCount = 1;\r\n            this.firstClick = now;\r\n            return;\r\n        }\r\n        ++this.clickCount;\r\n        if (this.clickCount >= this.clickMax) {\r\n            nav.reverseTest();\r\n            this.firstClick = 0;\r\n            return;\r\n        }\r\n    }\r\n    */\r\n    /*\r\n    private onTestClick = () => {\r\n        nav.testing = false;\r\n        nav.push(<Page header={false}>\r\n            <div className=\"m-5 border border-info bg-white rounded p-4 text-center\">\r\n                <div>当前运行在测试模式</div>\r\n                <div className=\"mt-4\">\r\n                    <button className=\"btn btn-danger\" onClick={nav.toNormal}>正常模式</button>\r\n                    <button className=\"btn btn-outline-info ml-3\" onClick={()=>{nav.testing=true;this.pop()}}>测试模式</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    */\r\n    render() {\r\n        const {wait, fetchError} = this.state;\r\n        let stack = this.state.stack;\r\n        let top = stack.length - 1;\r\n        let elWait = null, elError = null;\r\n        switch (wait) {\r\n            case 1:\r\n                elWait = <li className=\"va-wait va-wait1\">\r\n                </li>;\r\n                break;\r\n            case 2:\r\n                elWait = <li className=\"va-wait va-wait2\">\r\n                    <Loading />\r\n                </li>;\r\n                break;\r\n        }\r\n        if (fetchError)\r\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />;\r\n        let test = nav.testing===true && \r\n            <span className=\"cursor-pointer position-absolute\" style={{lineHeight:0}}>\r\n                <FA className=\"text-warning\" name=\"info-circle\" />\r\n            </span>;\r\n        //onClick={this.onClick}\r\n        return (\r\n        <ul className=\"va\">\r\n            {\r\n                stack.map((item, index) => {\r\n                    let {key, view} = item;\r\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\r\n                        {view}\r\n                    </li>\r\n                })\r\n            }\r\n            {elWait}\r\n            {elError}\r\n            {test}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    private refresh() {\r\n        // this.setState({flag: !this.state.flag});\r\n        this.setState({stack: this.stack });\r\n        // this.forceUpdate();\r\n    }\r\n}\r\n\r\nexport interface NavSettings {\r\n    oem?: string;\r\n    loginTop?: JSX.Element;\r\n}\r\n\r\nexport class Nav {\r\n    private nav:NavView;\r\n    private ws: WsBase;\r\n    private wsHost: string;\r\n    private local: LocalData = new LocalData();\r\n    private navSettings: NavSettings;\r\n    @observable user: User/*InNav*/ = undefined;\r\n    testing: boolean;\r\n    language: string;\r\n    culture: string;\r\n    resUrl: string;\r\n\r\n    constructor() {\r\n        let {lang, district} = resOptions;\r\n        this.language = lang;\r\n        this.culture = district;\r\n        this.testing = false;\r\n    }\r\n\r\n    get guest(): number {\r\n        let guest = this.local.guest;\r\n        if (guest === undefined) return 0;\r\n        let g = guest.get();\r\n        if (g === undefined) return 0;\r\n        return g.guest;\r\n    }\r\n\r\n    set(nav:NavView) {\r\n        //this.logo = logo;\r\n        this.nav = nav;\r\n    }\r\n\r\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\r\n        if (this.ws === undefined) return;\r\n        return this.ws.onWsReceiveAny(handler);\r\n    }\r\n\r\n    unregisterReceiveHandler(handlerId:number) {\r\n        if (this.ws === undefined) return;\r\n        if (handlerId === undefined) return;\r\n        this.ws.endWsReceive(handlerId);\r\n    }\r\n\r\n    /*\r\n    private static testMode = '测试';\r\n    private static normalMode = '正常';\r\n    private setTesting(testing:boolean) {\r\n        this.testing = testing;\r\n        this.local.testing.set(testing);\r\n    };\r\n    private resetTest = () => {\r\n        this.setTesting(!this.testing);\r\n        //this.pop();\r\n        this.start();\r\n    }\r\n    toNormal = () => {\r\n        this.setTesting(false);\r\n        this.start();\r\n    }\r\n    reverseTest() {\r\n        let m1:string, m2:string;\r\n        if (this.testing === true) {\r\n            m1 = Nav.testMode;\r\n            m2 = Nav.normalMode;\r\n        }\r\n        else {\r\n            m1 = Nav.normalMode;\r\n            m2 = Nav.testMode;\r\n        }\r\n\r\n        this.push(<Page back=\"close\" header={false}>\r\n            <div className=\"m-5 border border-info bg-white rounded p-4 text-center\">\r\n                <div>\r\n                    <p>从{m1}模式切换到{m2}模式吗?</p>\r\n                    <p className=\"small text-muted\">测试模式下，页面左上角会有一个 <FA className=\"text-warning\" name=\"info-circle\" /></p>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <button className=\"btn btn-danger\" onClick={this.resetTest}>切换</button>\r\n                    <button className=\"btn btn-outline-info ml-3\" onClick={()=>this.pop()}>取消</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    */\r\n\r\n    async onReceive(msg:any) {\r\n        if (this.ws === undefined) return;\r\n        await this.ws.receive(msg);\r\n    }\r\n\r\n    private async getPredefinedUnitName() {\r\n        try {\r\n            let unitJsonPath = this.unitJsonPath();\r\n            let unitRes = await fetch(unitJsonPath, {});\r\n            let res = await unitRes.json();\r\n            return res.unit;\r\n        }\r\n        catch (err) {\r\n            this.local.unit.remove();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async loadPredefinedUnit() {\r\n        let envUnit = process.env.REACT_APP_UNIT;\r\n        if (envUnit !== undefined) {\r\n            return Number(envUnit);\r\n        }\r\n        let unitName:string;\r\n        let unit = this.local.unit.get();\r\n        if (unit !== undefined) {\r\n            if (env.isDevelopment !== true) return unit.id;\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n            if (unit.name === unitName) return unit.id;\r\n        }\r\n        else {\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n        }\r\n        let unitId = await guestApi.unitFromName(unitName);\r\n        if (unitId !== undefined) {\r\n            this.local.unit.set({id: unitId, name: unitName});\r\n        }\r\n        return unitId;\r\n    }\r\n\r\n    setSettings(settings?: NavSettings) {\r\n        this.navSettings = settings;\r\n    }\r\n\r\n    get oem():string {\r\n        return this.navSettings && this.navSettings.oem;\r\n    }\r\n\r\n    hashParam: string;\r\n    private centerHost: string;\r\n    private arrs = ['/test', '/test/'];\r\n    private unitJsonPath():string {\r\n        let {href} = document.location;\r\n        href = href.toLowerCase();\r\n        for (let item of this.arrs) {\r\n            if (href.endsWith(item) === true) {\r\n                href = href.substr(0, href.length - item.length);\r\n                break;\r\n            }\r\n        }\r\n        if (href.endsWith('/') === true || href.endsWith('\\\\') === true) {\r\n            href = href.substr(0, href.length-1);\r\n        }\r\n        return href + '/unit.json';\r\n    }\r\n    private windowOnError = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\r\n        console.error('windowOnError');\r\n        console.error(error);\r\n    }\r\n    /*\r\n    private windowOnUnhandledRejection = (ev: PromiseRejectionEvent) => {\r\n        console.error('windowOnUnhandledRejection');\r\n        console.error(ev.reason);\r\n    }\r\n    private windowOnClick = (ev: MouseEvent) => {\r\n        console.error('windowOnClick');\r\n    }\r\n    */\r\n    private windowOnMouseMove = (ev: MouseEvent) => {\r\n        console.log('navigator.userAgent: ' + navigator.userAgent);\r\n        console.log('mouse move (%s, %s)', ev.x, ev.y);\r\n    }\r\n    private windowOnScroll = (ev: Event) => {\r\n        console.log('scroll event');\r\n    }\r\n    async start() {\r\n        try {\r\n            window.onerror = this.windowOnError;\r\n            //window.onunhandledrejection = this.windowOnUnhandledRejection;\r\n            //window.addEventListener('click', this.windowOnClick);\r\n            //window.addEventListener('mousemove', this.windowOnMouseMove);\r\n            //window.addEventListener('touchmove', this.windowOnMouseMove);\r\n            //window.addEventListener('scroll', this.windowOnScroll);\r\n            if (isMobile === true) {\r\n                document.onselectstart = function() {return false;}\r\n                document.oncontextmenu = function() {return false;}\r\n            }\r\n            //window.setInterval(()=>console.error('tick every 5 seconds'), 5000);\r\n            this.testing = env.testing;\r\n            await host.start(this.testing);\r\n            let hash = document.location.hash;\r\n            if (hash !== undefined && hash.length > 0) {\r\n                let pos = getExHashPos();\r\n                if (pos < 0) pos = undefined;\r\n                this.hashParam = hash.substring(1, pos);\r\n            }\r\n            nav.clear();\r\n            this.startWait();\r\n            let {url, ws, resHost} = host;\r\n            this.centerHost = url;\r\n            this.resUrl = resUrlFromHost( resHost);\r\n            this.wsHost = ws;\r\n            setCenterUrl(url);\r\n            \r\n            let guest:Guest = this.local.guest.get();\r\n            if (guest === undefined) {\r\n                guest = await guestApi.guest();\r\n            }\r\n            nav.setGuest(guest);\r\n\r\n            let exHash = getExHash();\r\n            let appInFrame = setAppInFrame(exHash);\r\n            if (exHash !== undefined && window !== window.parent) {\r\n                // is in frame\r\n                if (appInFrame !== undefined) {\r\n                    this.ws = wsBridge;\r\n                    console.log('this.ws = wsBridge in sub frame');\r\n                    //nav.user = {id:0} as User;\r\n                    if (window.self !== window.parent) {\r\n                        window.parent.postMessage({type:'sub-frame-started', hash: appInFrame.hash}, '*');\r\n                    }\r\n                    // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\r\n                    //await this.showAppView();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let predefinedUnit = await this.loadPredefinedUnit();\r\n            appInFrame.predefinedUnit = predefinedUnit;\r\n\r\n            let user: User = this.local.user.get();\r\n            if (user === undefined) {\r\n                let {notLogined} = this.nav.props;\r\n                if (notLogined !== undefined) {\r\n                    await notLogined();\r\n                }\r\n                else {\r\n                    await nav.showLogin(undefined);\r\n                }\r\n                return;\r\n            }\r\n\r\n            await nav.logined(user);\r\n        }\r\n        catch (err) {\r\n        }\r\n        finally {\r\n            this.endWait();\r\n        }\r\n    }\r\n\r\n    async showAppView() {\r\n        let {onLogined} = this.nav.props;\r\n        if (onLogined === undefined) {\r\n            nav.push(<div>NavView has no prop onLogined</div>);\r\n            return;\r\n        }\r\n        nav.clear();\r\n        await onLogined();\r\n        console.log('logined: AppView shown');\r\n    }\r\n\r\n    setGuest(guest: Guest) {\r\n        this.local.guest.set(guest);\r\n        netToken.set(0, guest.token);\r\n    }\r\n\r\n    saveLocalUser() {\r\n        this.local.user.set(this.user);\r\n    }\r\n\r\n    async loadMe() {\r\n        let me = await userApi.me();\r\n        this.user.icon = me.icon;\r\n        this.user.nick = me.nick;\r\n    }\r\n\r\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\r\n        logoutApis();\r\n        console.log(\"logined: %s\", JSON.stringify(user));\r\n        this.user = user;\r\n        this.saveLocalUser();\r\n        netToken.set(user.id, user.token);\r\n        if (callback !== undefined) //this.loginCallbacks.has)\r\n            callback(user);\r\n            //this.loginCallbacks.call(user);\r\n        else {\r\n            await this.showAppView();\r\n        }\r\n    }\r\n\r\n    wsConnect() {\r\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, this.user.token);\r\n        ws.connect();\r\n    }\r\n\r\n    loginTop(defaultTop:JSX.Element) {\r\n        return (this.navSettings && this.navSettings.loginTop) || defaultTop;\r\n    }\r\n\r\n    async showLogin(callback?: (user:User)=>Promise<void>, withBack?:boolean) {\r\n        let lv = await import('../entry/login');\r\n        let loginView = <lv.default \r\n            withBack={withBack} \r\n            callback={callback} />;\r\n        if (withBack !== true) {\r\n            this.nav.clear();\r\n            this.pop();\r\n        }\r\n        this.nav.push(loginView);\r\n    }\r\n\r\n    async showLogout(callback?: ()=>Promise<void>) {\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\r\n        appInFrame.unit = undefined;\r\n        this.local.logoutClear();\r\n        this.user = undefined; //{} as User;\r\n        logoutApis();\r\n        let guest = this.local.guest.get();\r\n        setCenterToken(0, guest && guest.token);\r\n        this.ws = undefined;\r\n        /*\r\n        if (this.loginCallbacks.has)\r\n            this.logoutCallbacks.call();\r\n        else {\r\n            if (notShowLogin === true) return;\r\n        }\r\n        await nav.start();\r\n        */\r\n        if (callback === undefined)\r\n            await nav.start();\r\n        else\r\n            await callback();\r\n    }\r\n\r\n    async changePassword() {\r\n        let cp = await import('../entry/changePassword');\r\n        nav.push(<cp.ChangePasswordPage />);\r\n    }\r\n\r\n    get level(): number {\r\n        return this.nav.level;\r\n    }\r\n    startWait() {\r\n        this.nav.startWait();\r\n    }\r\n    endWait() {\r\n        this.nav.endWait();\r\n    }\r\n    async onError(error: FetchError) {\r\n        await this.nav.onError(error);\r\n    }\r\n    async showUpgradeUq(uq:string, version:number):Promise<void> {\r\n        await this.nav.showUpgradeUq(uq, version);\r\n    }\r\n\r\n    show (view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.show(view, disposer);\r\n    }\r\n    push(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.push(view, disposer);\r\n    }\r\n    replace(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.replace(view, disposer);\r\n    }\r\n    pop(level:number = 1) {\r\n        this.nav.pop(level);\r\n    }\r\n    topKey():number {\r\n        return this.nav.topKey();\r\n    }\r\n    popTo(key:number) {\r\n        this.nav.popTo(key);\r\n    }\r\n    clear() {\r\n        this.nav.clear();\r\n    }\r\n    navBack() {\r\n        this.nav.navBack();\r\n    }\r\n    ceaseTop(level?:number) {\r\n        this.nav.ceaseTop(level);\r\n    }\r\n    removeCeased() {\r\n        this.nav.removeCeased();\r\n    }\r\n    async back(confirm:boolean = true) {\r\n        await this.nav.back(confirm);\r\n    }\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.nav.regConfirmClose(confirmClose);\r\n    }\r\n    confirmBox(message?:string): boolean {\r\n        return this.nav.confirmBox(message);\r\n    }\r\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\r\n            let uh = sheetId === undefined?\r\n                    appUrl(url, unitId) :\r\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\r\n            console.log('navToApp: %s', JSON.stringify(uh));\r\n            nav.push(<article className='app-container'>\r\n                <span id={uh.hash} onClick={()=>this.back()} /*style={mobileHeaderStyle}*/>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </span>\r\n                {\r\n                    // eslint-disable-next-line \r\n                    <iframe src={uh.url} title={String(sheetId)} />\r\n                }\r\n            </article>, \r\n            ()=> {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    navToSite(url: string) {\r\n        // show in new window\r\n        window.open(url);\r\n    }\r\n\r\n    get logs() {return logs};\r\n    log(msg:string) {\r\n        logs.push(msg);\r\n    }\r\n    logMark() {\r\n        let date = new Date();\r\n        logMark = date.getTime();\r\n        logs.push('log-mark: ' + date.toTimeString());\r\n    }\r\n    logStep(step:string) {\r\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\r\n    }\r\n}\r\nexport const nav: Nav = new Nav();\r\n","import {observable} from 'mobx';\r\n\r\nexport interface Id {\r\n    id: number;\r\n}\r\n\r\nexport abstract class CacheIds<T extends Id> {\r\n    constructor(maxCount:number = 100) {\r\n        this.maxCount = maxCount;\r\n    }\r\n    private maxCount:number;\r\n    private arr:T[] = [];\r\n    @observable dict = new Map<number, T>();\r\n\r\n    loadIds(ids:number[]) {\r\n        let arr:number[] = [];\r\n        for (let id of ids) {\r\n            if (id === null) continue;\r\n            let item = this.dict.get(id);\r\n            if (item === undefined) {\r\n                arr.push(id);\r\n                item = {id:id} as T;\r\n                this.dict.set(id, item);\r\n            }\r\n        }                \r\n        this.loadId(arr);\r\n    }\r\n\r\n    get(id:number):T {\r\n        if (id === undefined || id === null) return null;\r\n        let item = this.dict.get(id);\r\n        if (item === undefined) {\r\n            this.dict.set(id, {id:id} as T);\r\n            this.loadId([id]);\r\n            item = this.dict.get(id);\r\n        }\r\n        return item;\r\n    }\r\n    private setItem(id:number, item:T) {\r\n        if (item === undefined) {\r\n            this.dict.set(id, null);\r\n            this.arr.push({id: id} as T);\r\n        }\r\n        else {\r\n            this.dict.set(id, item);\r\n            this.arr.push(item);\r\n        }\r\n        if (this.arr.length > this.maxCount) {\r\n            item = this.arr.shift();\r\n            this.dict.delete(item.id);\r\n        }\r\n    }\r\n    private async loadId(ids:number[]) {\r\n        let items = await this._loadIds(ids);\r\n        if (items === undefined) {\r\n            for (let id of ids) {\r\n                if (id === null) continue;\r\n                let item = await this._loadId(id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n        else {\r\n            for (let id of ids) {\r\n                let item = items.find(v => v.id === id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\r\n    protected abstract async _loadId(id:number):Promise<T>;\r\n}\r\n","import { env } from './env';\r\n\r\nexport class LocalData {\r\n    user = env.localDb.child('user');\r\n    guest = env.localDb.child('guest');\r\n    unit = env.localDb.child('unit');\r\n\r\n    logoutClear() {\r\n        [\r\n            this.user,\r\n            this.unit,\r\n        ].forEach(d => d.remove());\r\n    }\r\n}\r\n","export {left0} from './left0';\r\nexport * from './user';\r\nexport * from './uid';\r\nexport {PageItems} from './pageItems';\r\nexport {CacheIds} from './cacheIds';\r\nexport {LocalMap, LocalArr, LocalCache} from './localDb';\r\nexport {LocalData} from './local';\r\nexport {env} from './env';","function replacer(key:string, value:any) {\r\n    let first = key.substr(0, 1);\r\n    switch (first) {\r\n        default: return value;\r\n        case '$':\r\n        case '_': return;\r\n    }\r\n}\r\n\r\nexport function jsonStringify(value:any) {\r\n    return JSON.stringify(value, replacer, ' ');\r\n}\r\n","import * as React from 'react';\r\n\r\nexport const PureJSONContent = (values:any, x?:any) => <>content: {JSON.stringify(values)}</>;\r\n","export * from './jsonStringify';\r\nexport * from './pureJsonContent';","import _ from 'lodash';\r\nimport {nav} from '../components';\r\nimport {uid} from '../tool/uid';\r\nimport {uqTokenApi, callCenterapi, centerToken, setCenterToken} from './uqApi';\r\nimport {setSubAppWindow} from './wsChannel';\r\nimport { host } from './host';\r\n\r\nexport interface UqToken {\r\n    name: string;\r\n    db: string;\r\n    url: string;\r\n    token: string;\r\n}\r\nconst uqTokens:{[uqName:string]: UqToken}  = {};\r\nexport function logoutUqTokens() {\r\n    for (let i in uqTokens) {\r\n        uqTokens[i] = undefined;\r\n    }\r\n}\r\n\r\nexport interface AppInFrame {\r\n    hash: string;\r\n    unit: number;       // unit id\r\n    page?: string;\r\n    param?: string[];\r\n    predefinedUnit?: number;  // 比如像Cart这样的应用，直接让用户访问的，就需要在unit.json里面定义unitName\r\n}\r\nconst appsInFrame:{[key:string]:AppInFrame} = {};\r\n\r\nclass AppInFrameClass implements AppInFrame {\r\n    hash: string;\r\n    private _unit: number;\r\n    get unit(): number {return this._unit;}       // unit id\r\n    set unit(val:number) { this._unit=val;}\r\n    page?: string;\r\n    param?: string[];\r\n}\r\n\r\nexport let appInFrame:AppInFrame = new AppInFrameClass();\r\n/* {\r\n    hash: undefined,\r\n    get unit():number {return } undefined, //debugUnitId,\r\n    page: undefined;\r\n    param: undefined,\r\n}*/\r\n\r\nexport function isBridged():boolean {\r\n    return window.self !== window.parent;\r\n}\r\n\r\nwindow.addEventListener('message', async function(evt) {\r\n    var message = evt.data;\r\n    switch (message.type) {\r\n        case 'sub-frame-started':\r\n            subFrameStarted(evt);\r\n            break;\r\n        case 'ws':\r\n            //wsBridge.receive(message.msg);\r\n            await nav.onReceive(message.msg);\r\n            break;\r\n        case 'init-sub-win':\r\n            await initSubWin(message);\r\n            break;\r\n        case 'pop-app':\r\n            this.console.log('///\\\\\\ pop-app');\r\n            nav.navBack();\r\n            break;\r\n        case 'center-api':\r\n            await callCenterApiFromMessage(evt.source as Window, message);\r\n            break;\r\n        case 'center-api-return':\r\n            bridgeCenterApiReturn(message);\r\n            break;\r\n        case 'app-api':\r\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\r\n            (evt.source as Window).postMessage({\r\n                type: 'app-api-return', \r\n                apiName: message.apiName,\r\n                db: ret.db,\r\n                url: ret.url,\r\n                token: ret.token} as any, \"*\");\r\n            break;\r\n        case 'app-api-return':\r\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\r\n            console.log('await onAppApiReturn(message);');\r\n            await onAppApiReturn(message);\r\n            break;\r\n        default:\r\n            this.console.log('message: %s', JSON.stringify(message));\r\n            break;\r\n    }\r\n});\r\n\r\nfunction subFrameStarted(evt:any) {\r\n    var message = evt.data;\r\n    let subWin = evt.source as Window;\r\n    setSubAppWindow(subWin);\r\n    hideFrameBack(message.hash);\r\n    let msg:any = _.clone(nav.user);\r\n    msg.type = 'init-sub-win';\r\n    subWin.postMessage(msg, '*');\r\n}\r\nfunction hideFrameBack(hash:string) {\r\n    let el = document.getElementById(hash);\r\n    if (el !== undefined) el.hidden = true;\r\n}\r\nasync function initSubWin(message:any) {\r\n    console.log('initSubWin: set nav.user', message);\r\n    let user = nav.user = message; // message.user;\r\n    setCenterToken(user.id, user.token);\r\n    await nav.showAppView();\r\n}\r\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\r\n    let appInFrame = appsInFrame[hash];\r\n    if (appInFrame === undefined) return {name:apiName, db:undefined, url:undefined, token:undefined};\r\n    //let unit = getUnit();\r\n    let {unit, predefinedUnit} = appInFrame;\r\n    unit = unit || predefinedUnit;\r\n    if (!unit) {\r\n        console.error('no unit defined in unit.json or not logined in', unit);\r\n    }\r\n    let parts = apiName.split('/');\r\n    let param = {unit: unit, uqOwner: parts[0], uqName: parts[1]};\r\n    console.log('uqTokenApi.uq onReceiveAppApiMessage', param);\r\n    let ret = await uqTokenApi.uq(param);\r\n    let {db, url, token} = ret;\r\n    return {name: apiName, db:db, url: url, token: token};\r\n}\r\n\r\nasync function onAppApiReturn(message:any) {\r\n    let {apiName, db, url, urlTest, token} = message;\r\n    let action = uqTokenActions[apiName];\r\n    if (action === undefined) {\r\n        throw new Error('error app api return');\r\n        //return;\r\n    }\r\n    let realUrl = host.getUrlOrTest(db, url, urlTest);\r\n    console.log('onAppApiReturn(message:any): url=' + url + ', real=' + realUrl);\r\n    //action.url = realUrl;\r\n    //action.token = token;\r\n    action.resolve({\r\n        name: apiName,\r\n        db: db,\r\n        url: realUrl,\r\n        token: token,\r\n    } as UqToken);\r\n}\r\n\r\nexport function setAppInFrame(appHash: string):AppInFrame {\r\n    if (appHash) {\r\n        let parts = appHash.split('-');\r\n        let len = parts.length;\r\n        if (len > 0) {\r\n            let p = 1;\r\n            appInFrame.hash = parts[p++];\r\n            if (len>0) appInFrame.unit = Number(parts[p++]);\r\n            if (len>1) appInFrame.page = parts[p++];\r\n            if (len>2) appInFrame.param = parts.slice(p++);\r\n        }\r\n    }\r\n    return appInFrame;\r\n}\r\n\r\nexport function getExHashPos():number {\r\n    let hash = document.location.hash;\r\n    if (hash !== undefined && hash.length > 0) {\r\n        let pos = hash.lastIndexOf('#tv-');\r\n        if (pos < 0) pos = hash.lastIndexOf('#tvdebug-');\r\n        return pos;\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function getExHash():string {\r\n    let pos = getExHashPos();\r\n    if (pos < 0) return undefined;\r\n    return document.location.hash.substring(pos);\r\n}\r\n\r\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\r\n    let u:string;\r\n    for (;;) {\r\n        u = uid();\r\n        let a = appsInFrame[u];\r\n        if (a === undefined) {\r\n            appsInFrame[u] = {hash:u, unit:unitId};\r\n            break;\r\n        }\r\n    }\r\n    url += '#tv-' + u + '-' + unitId;\r\n    if (page !== undefined) {\r\n        url += '-' + page;\r\n        if (param !== undefined) {\r\n            for (let i=0; i<param.length; i++) {\r\n                url += '-' + param[i];\r\n            }\r\n        }\r\n    }\r\n    return {url: url, hash: u};\r\n}\r\n\r\nfunction getUnit():number {\r\n    let {unit, predefinedUnit} = appInFrame;\r\n    let realUnit = unit || predefinedUnit;\r\n    if (realUnit === undefined) {\r\n        throw new Error('no unit defined in unit.json or not logined in');\r\n    }\r\n    return realUnit;\r\n}\r\n\r\ninterface UqTokenAction {\r\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\r\n    reject: (reason?: any) => void;\r\n}\r\nconst uqTokenActions:{[uq:string]: UqTokenAction} = {};\r\nexport async function buildAppUq(uq:string, uqOwner:string, uqName:string):Promise<void> {\r\n    if (!isBridged()) {\r\n        let unit = getUnit();\r\n        let uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {db, url, urlTest} = uqToken;\r\n        let realUrl = host.getUrlOrTest(db, url, urlTest);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"**** before buildAppUq ****\", appInFrame);\r\n    let bp = uqTokenActions[uq];\r\n    if (bp !== undefined) return;\r\n    return new Promise<void>((resolve, reject) => {\r\n        uqTokenActions[uq] = {\r\n            resolve: async (at:any) => {\r\n                let {db, url, token} = await at;\r\n                uqTokens[uq] = {\r\n                    name: uq,\r\n                    db: db,\r\n                    url: url,\r\n                    token: token,\r\n                };\r\n                uqTokenActions[uq] = undefined;\r\n                console.log(\"**** after buildAppUq ****\", appInFrame);\r\n                resolve();\r\n            },\r\n            reject: reject,\r\n        };\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: appInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n\r\nexport function appUq(uq:string):UqToken {\r\n    let uts = uqTokens;\r\n    return uts[uq];\r\n}\r\n/*\r\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\r\n    let uqToken = uqTokens[uq];\r\n    if (uqToken !== undefined) return uqToken;\r\n    if (!isBridged()) {\r\n        let unit = getUnit();\r\n        uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {url, urlDebug} = uqToken;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"appApi parent send: %s\", appInFrame.hash);\r\n    uqToken = {\r\n        name: uq,\r\n        url: undefined,\r\n        urlDebug: undefined,\r\n        token: undefined,\r\n        resolve: undefined,\r\n        reject: undefined,\r\n    };\r\n    uqTokens[uq] = uqToken;\r\n    return new Promise<UqToken>((resolve, reject) => {\r\n        uqToken.resolve = async (at) => {\r\n            let a = await at;\r\n            console.log('return from parent window: %s', JSON.stringify(a));\r\n            uqToken.url = a.url;\r\n            uqToken.urlDebug = a.urlDebug;\r\n            uqToken.token = a.token;\r\n            resolve(uqToken);\r\n        }\r\n        uqToken.reject = reject;\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: appInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n*/\r\ninterface BridgeCenterApi {\r\n    id: string;\r\n    resolve: (value?:any)=>any;\r\n    reject: (reason?:any)=>void;\r\n}\r\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\r\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\r\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\r\n    return await new Promise<any>(async (resolve, reject) => {\r\n        let callId:string;\r\n        for (;;) {\r\n            callId = uid();\r\n            let bca = brideCenterApis[callId];\r\n            if (bca === undefined) {\r\n                brideCenterApis[callId] = {\r\n                    id: callId,\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'center-api',\r\n            callId: callId,\r\n            url: url,\r\n            method: method,\r\n            body: body\r\n        }, '*');\r\n    });\r\n}\r\n\r\nasync function callCenterApiFromMessage(from:Window, message:any):Promise<void> {\r\n    let {callId, url, method, body} = message;\r\n    let result = await callCenterapi.directCall(url, method, body);\r\n    from.postMessage({\r\n        type: 'center-api-return',\r\n        callId: callId,\r\n        result: result,\r\n    }, '*');\r\n}\r\n\r\nfunction bridgeCenterApiReturn(message:any) {\r\n    let {callId, result} = message;\r\n    let bca = brideCenterApis[callId];\r\n    if (bca === undefined) return;\r\n    brideCenterApis[callId] = undefined;\r\n    bca.resolve(result);\r\n}\r\n","import * as React from 'react';\r\nimport {IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport {PageHeader} from './pageHeader';\r\n\r\nconst scrollAfter = 20; // 20ms之后，scroll执行\r\nexport class Scroller {\r\n    private el: HTMLBaseElement;\r\n    constructor(el: HTMLBaseElement) {\r\n        this.el = el;\r\n    }\r\n\r\n    scrollToTop():void {\r\n        setTimeout(() => this.el.scrollTo(0, 0), scrollAfter);\r\n    }\r\n    scrollToBottom():void {\r\n        setTimeout(() => this.el.scrollTo(0, this.el.scrollTop + this.el.offsetHeight), scrollAfter);\r\n    }\r\n}\r\n\r\nexport interface ScrollProps {\r\n    onScroll?: (e:any) => void;\r\n    onScrollTop?: (scroller: Scroller) => void;\r\n    onScrollBottom?: (scroller: Scroller) => void;\r\n}\r\ninterface ScrollViewProps extends ScrollProps {\r\n    className?: string;\r\n}\r\nconst scrollTimeGap = 100;\r\nclass ScrollView extends React.Component<ScrollViewProps, null> {\r\n    private bottomTime:number = 0;\r\n    private topTime:number = 0;\r\n\r\n    private onScroll = async (e:any) => {\r\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\r\n        if (onScroll) this.props.onScroll(e);\r\n        let el = e.target as HTMLBaseElement;\r\n        let scroller = new Scroller(el);\r\n        if (el.scrollTop < 30) {\r\n            //this.eachChild(this, 'top');\r\n            if (onScrollTop !== undefined) {\r\n                let topTime = new Date().getTime();\r\n                if (topTime-this.topTime > scrollTimeGap) {\r\n                    this.topTime = topTime;\r\n                    onScrollTop(scroller);\r\n                }\r\n            }\r\n        }\r\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\r\n            //this.eachChild(this, 'bottom');\r\n            if (onScrollBottom !== undefined) {\r\n                let bottomTime = new Date().getTime();\r\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\r\n                    this.bottomTime = bottomTime;\r\n                    onScrollBottom(scroller);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private eachChild(c:any, direct:'top'|'bottom') {\r\n        let { props } = c;\r\n        if (props === undefined)\r\n            return;\r\n        let { children } = props;\r\n        if (children === undefined)\r\n            return;\r\n        React.Children.forEach(children, (child, index) => {\r\n            let {_$scroll} = child as any;\r\n            if (_$scroll) _$scroll(direct);\r\n            console.log(child.toString());\r\n            this.eachChild(child, direct);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <main className={this.props.className} onScroll={this.onScroll}>\r\n                {this.props.children}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface Tab extends ScrollProps {\r\n    title: string | JSX.Element;    \r\n    icon?: string;\r\n    className?: string;\r\n    content?: JSX.Element | (()=>JSX.Element);\r\n    header?: string;\r\n    isSelected?: boolean;\r\n    redDot?: IComputedValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\nexport interface TabState extends Tab {\r\n    isMounted?: boolean;\r\n}\r\nexport interface PageProps extends ScrollProps {\r\n    back?: 'close' | 'back' | 'none';\r\n    header?: boolean | string | JSX.Element;\r\n    keepHeader?: boolean;\r\n    right?: JSX.Element;\r\n    sideBar?: JSX.Element;\r\n    footer?: JSX.Element;\r\n    tabs?: Tab[];\r\n    tabPosition?: 'top' | 'bottom';\r\n    logout?: boolean | (()=>Promise<void>);\r\n    headerClassName?: string;\r\n}\r\nexport interface PageState {\r\n    cur?: Tab;\r\n    tabs?: TabState[];\r\n}\r\n\r\n@observer\r\nexport class Page extends React.Component<PageProps, PageState> {\r\n    private tabs:TabState[];\r\n    constructor(props: PageProps) {\r\n        super(props);\r\n        let {tabs} = props;\r\n        if (tabs === undefined || tabs.length === 0) return;\r\n        this.tabs = tabs;\r\n        let cur:Tab;\r\n        let tabStates:Tab[] = [];\r\n        for (let tab of tabs) {\r\n            let t:TabState = _.clone(tab);\r\n            if (cur === undefined) {\r\n                if (t.isSelected === true)\r\n                    cur = t;\r\n                else\r\n                    t.isSelected = false;\r\n            }\r\n            else {\r\n                t.isSelected = false;\r\n            }\r\n            t.isMounted = false;\r\n            tabStates.push(t);\r\n        }\r\n        this.state = {\r\n            cur: cur,\r\n            tabs: tabStates,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        let t0 = this.state.tabs.find(v => v.isSelected === true);\r\n        if (t0 === undefined) {\r\n            t0 = this.state.tabs[0];\r\n            if (t0 === undefined) return;\r\n        }\r\n        await t0.load && await t0.load();\r\n        //await this.onTabClick(t0);\r\n    }\r\n\r\n    private async onTabClick(tab: TabState) {\r\n        if (tab.isSelected === true) return;\r\n        let cur:TabState;\r\n        let tabs = this.state.tabs;\r\n        for (let t of tabs) {\r\n            if (t === tab) {\r\n                t.isSelected = true;\r\n                cur = t;\r\n            }\r\n            else\r\n                t.isSelected = false;\r\n        }\r\n        if (cur.isMounted !== true) {\r\n            let {load} = cur;\r\n            if (load !== undefined) {\r\n                await load();\r\n            }\r\n        }\r\n        this.setState({\r\n            cur: cur,\r\n            tabs: tabs\r\n        });\r\n    }\r\n\r\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\r\n    }\r\n\r\n    private renderTabs(footer: JSX.Element) {\r\n        const {header, back, right, keepHeader, headerClassName, tabPosition} = this.props;\r\n        let cur = this.state.cur;\r\n        let tabs = <div>{\r\n                this.state.tabs.map((tab, index) => {\r\n                    const {icon, isSelected, title, redDot, className} = tab;\r\n                    let img:any, redDotView:any, cn:any;\r\n                    if (icon !== undefined) img = <img src={icon} alt=\"tab icon\" />;\r\n                    if (redDot !== undefined) {\r\n                        let v = redDot.get();\r\n                        if (v < 0) {\r\n                            cn = classNames('red-dot', className);\r\n                            redDotView = <u />;\r\n                        }\r\n                        else if (v > 0) {\r\n                            cn = classNames('red-dot', 'num', className);\r\n                            redDotView = <u>{v}</u>;\r\n                        }\r\n                    }\r\n                    return <div key={index}\r\n                        className= {classNames('va-tab', {cur: isSelected})}\r\n                        onClick={() => this.onTabClick(tab)}>\r\n                        {img}<div className={cn}>{title}{redDotView}</div>\r\n                    </div>\r\n                })\r\n            }</div>;\r\n        let pageHeader = header !== false &&\r\n            <PageHeader \r\n                back={back} \r\n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\r\n                right={right}\r\n                className={headerClassName}\r\n            />;\r\n\r\n        return <article className='page-container'>\r\n            {pageHeader}\r\n            {tabPosition==='top' && tabs}\r\n            <section className=\"position-relative\">\r\n            {this.props.sideBar}\r\n            {\r\n                this.state.tabs.map((tab, index) => {\r\n                    let {isSelected, isMounted, content} = tab;\r\n                    if (isSelected === true || isMounted === true) {\r\n                        tab.isMounted = true;\r\n                        return <ScrollView key={index}\r\n                            className={classNames({invisible: isSelected===false})}\r\n                            onScroll={tab.onScroll}\r\n                            onScrollTop={tab.onScrollTop}\r\n                            onScrollBottom={tab.onScrollBottom}\r\n                        >\r\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\r\n                        </ScrollView>;\r\n                    }\r\n                    return undefined;\r\n                })\r\n            }\r\n            </section>\r\n            {tabPosition!=='top' && tabs}\r\n            {footer}\r\n        </article>;\r\n    }\r\n    private renderSingle(footer: JSX.Element) {\r\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children, headerClassName} = this.props;\r\n        let pageHeader = header !== false && <PageHeader \r\n            back={back} \r\n            center={header as any}\r\n            right={right}\r\n            logout={this.props.logout}\r\n            className={headerClassName}\r\n        />;\r\n        return (\r\n            <article className='page-container' onTouchStart={this.onTouchStart}>\r\n                {pageHeader}\r\n                <section className=\"position-relative\">\r\n                    {this.props.sideBar}\r\n                    <ScrollView\r\n                        onScroll={onScroll}\r\n                        onScrollTop={onScrollTop}\r\n                        onScrollBottom={onScrollBottom}\r\n                    >\r\n                        {children}\r\n                    </ScrollView>\r\n                </section>\r\n                {footer}\r\n            </article>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {footer} = this.props;\r\n        let elFooter = footer !== undefined && <footer>{footer}</footer>;\r\n        if (this.tabs !== undefined)\r\n            return this.renderTabs(elFooter);\r\n        else\r\n            return this.renderSingle(elFooter);\r\n    }\r\n}\r\n","//import _ from 'lodash';\r\nimport { Caller } from '../net';\r\nimport { Entity } from './entity';\r\nimport { Action } from './action';\r\nimport { Query } from './query';\r\n\r\ninterface UqResponseSchema {\r\n    uq: any;\r\n    entity: any;\r\n}\r\n\r\nexport abstract class EntityCaller<T> extends Caller<T> {\r\n    private tries: number;\r\n    protected _entity: Entity;\r\n\r\n    constructor(entity: Entity, params:T, waiting: boolean = true) {\r\n        super(params, waiting);\r\n        this.tries = 0;\r\n        this._entity = entity;\r\n    }\r\n\r\n    protected get entity(): Entity {return this._entity;}\r\n\r\n    //大多的entityCaller都不需要这个\r\n    //buildParams() {return this.entity.buildParams(this.params);}\r\n    \r\n    async request(): Promise<any> {\r\n        await this.entity.loadSchema();\r\n        let ret = await this.innerRequest();\r\n        return ret;\r\n    }\r\n\r\n    protected async innerCall(): Promise<any> {\r\n        return await this.entity.uqApi.xcall(this);\r\n    }\r\n\r\n    async innerRequest(): Promise<any> {\r\n        let jsonResult = await this.innerCall();\r\n        let {$uq, $modify, res} = jsonResult;\r\n        this.entity.uq.pullModify($modify);\r\n        if ($uq === undefined) {\r\n            //if (res === undefined) debugger;\r\n            let ret = this.xresult(res);\r\n            //if (ret === undefined) debugger;\r\n            return ret;\r\n        }\r\n        return await this.retry($uq);\r\n    }\r\n\r\n    xresult(res:any):any {return res}\r\n\r\n    get headers(): {[header:string]: string} {\r\n        let {ver, uq} = this.entity;\r\n        let {uqVersion} = uq;\r\n        return {\r\n            uq: `${uqVersion}`,\r\n            en: `${ver}`,\r\n        }\r\n    }\r\n\r\n    private async retry(schema: UqResponseSchema) {\r\n        ++this.tries;\r\n        if (this.tries > 5) throw new Error('can not get right uq response schema, 5 tries');\r\n        this.rebuildSchema(schema);\r\n        return await this.innerRequest();\r\n    }\r\n\r\n    private rebuildSchema(schema: UqResponseSchema) {\r\n        let {uq, entity} = schema;\r\n        if (uq !== undefined) this.entity.uq.buildEntities(uq);\r\n        if (entity !== undefined) this.entity.setSchema(entity);\r\n    }\r\n}\r\n\r\nexport abstract class ActionCaller extends EntityCaller<any> {\r\n    protected get entity(): Action {return this._entity as Action;}\r\n}\r\n\r\nexport class QueryQueryCaller extends EntityCaller<any> {\r\n    protected get entity(): Query {return this._entity as Query};\r\n    get path():string {return `query/${this.entity.name}`;}\r\n    xresult(res:any) {\r\n        let data = this.entity.unpackReturns(res);\r\n        return data;\r\n    }\r\n    buildParams() {return this.entity.buildParams(this.params);}\r\n}\r\n\r\nexport class QueryPageCaller extends EntityCaller<any> {\r\n    protected get params(): {pageStart:any; pageSize:number, params:any} {return this._params};\r\n    protected get entity(): Query {return this._entity as Query};\r\n    get path():string {return `query-page/${this.entity.name}`;}\r\n    buildParams() {\r\n        let {pageStart, pageSize, params} = this.params;\r\n        let p:any;\r\n        if (params === undefined) {\r\n            p = {key: ''};\r\n        }\r\n        else {\r\n            p = this.entity.buildParams(params);\r\n        }\r\n        /*\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        */\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return p;\r\n    };\r\n    xresult(res:any) {\r\n        let data = this.entity.unpackReturns(res);\r\n        return data.$page;// as any[];\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { jsonStringify, PureJSONContent } from '../tools';\r\n\r\nexport type TypeViewModel = typeof ViewModel;\r\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\r\nexport type TypeContent = React.StatelessComponent<any>;\r\n\r\nexport abstract class ViewModel {\r\n    protected abstract get view(): TypeView;\r\n    render(className?:string|string[]):JSX.Element {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view, {vm: this, className:className});\r\n    }\r\n}\r\n\r\n/*\r\nexport const PureJSONContent = (values:any, x?:any) => {\r\n    return <>content: {jsonStringify(values)}</>;\r\n}\r\n*/\r\n\r\nexport const JSONContent = observer(PureJSONContent);\r\nexport const RowContent = \r\n    (values:any) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\r\n;\r\n","import {bridgeCenterApi, isBridged} from './appBridge';\r\nimport {FetchError} from './fetchError';\r\nimport {HttpChannelUI} from './httpChannelUI';\r\nimport {nav} from '../components/nav';\r\nimport { Caller } from './caller';\r\nimport { env } from '../tool';\r\n\r\n/*\r\nexport async function httpGet(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.get('', params);\r\n    return ret;\r\n}\r\n\r\nexport async function httpPost(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.post('', params);\r\n    return ret;\r\n}\r\n*/\r\n\r\nconst methodsWithBody = ['POST', 'PUT'];\r\n\r\nexport abstract class HttpChannel {\r\n    private timeout: number;\r\n    protected ui?: HttpChannelUI;\r\n    protected hostUrl: string;\r\n    protected apiToken: string;\r\n\r\n    constructor(hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\r\n        this.hostUrl = hostUrl;\r\n        this.apiToken = apiToken;\r\n        this.ui = ui;\r\n        this.timeout = env.isDevelopment === true? 500000:50000;\r\n    }\r\n\r\n    private startWait = (waiting: boolean) => {\r\n        if (waiting === true) {\r\n            if (this.ui !== undefined) this.ui.startWait();\r\n        }\r\n    }\r\n\r\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\r\n        if (this.ui !== undefined) this.ui.endWait();\r\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\r\n    }\r\n\r\n    private showError = async (error:FetchError) => {\r\n        if (this.ui !== undefined) await this.ui.showError(error);\r\n    }\r\n\r\n    used() {\r\n        this.post('', {});\r\n    }\r\n\r\n    async xcall(urlPrefix:string, caller:Caller<any>): Promise<void> {\r\n        let options = this.buildOptions();\r\n        let {headers, path, method} = caller;\r\n        if (headers !== undefined) {\r\n            let h = options.headers;\r\n            for (let i in headers) {\r\n                h.append(i, encodeURI(headers[i]));\r\n            }\r\n        }\r\n        options.method = method;\r\n        let p = caller.buildParams();\r\n        if (methodsWithBody.indexOf(method) >= 0 && p !== undefined) {\r\n            options.body = JSON.stringify(p)\r\n        }\r\n        return await this.innerFetch(urlPrefix + path, options, caller.waiting);\r\n    }\r\n\r\n    private async innerFetchResult(url: string, options: any, waiting: boolean): Promise<any> {\r\n        let ret = await this.innerFetch(url, options, waiting);\r\n        return ret.res;\r\n    }\r\n\r\n    async get(url: string, params: any = undefined, waiting?: boolean): Promise<any> {\r\n        if (params) {\r\n            let keys = Object.keys(params);\r\n            if (keys.length > 0) {\r\n                let c = '?';\r\n                for (let k of keys) {\r\n                    let v = params[k];\r\n                    if (v === undefined) continue;\r\n                    url += c + k + '=' + params[k];\r\n                    c = '&';\r\n                }\r\n            }\r\n        }\r\n        let options = this.buildOptions();\r\n        options.method = 'GET';\r\n        return await this.innerFetchResult(url, options, waiting);\r\n    }\r\n\r\n    async post(url: string, params: any, waiting?: boolean): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'POST';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetchResult(url, options, waiting);\r\n    }\r\n\r\n    async put(url: string, params: any, waiting?: boolean): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'PUT';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetchResult(url, options, waiting);\r\n    }\r\n\r\n    async delete(url: string, params: any, waiting?: boolean): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'DELETE';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetchResult(url, options, waiting);\r\n    }\r\n    async fetch(url: string, options: any, waiting: boolean, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\r\n        let that = this;\r\n        this.startWait(waiting);\r\n        let path = url;\r\n        function buildError(err: any, ex?: string) {\r\n            switch (typeof err) {\r\n                case 'string':\r\n                    if (ex !== undefined) err += ' ' + ex;\r\n                    break;\r\n                case 'object':\r\n                    let retErr = {\r\n                        ex: ex,\r\n                        message: err.message,\r\n                    };\r\n                    err = retErr;\r\n                    break;\r\n            }\r\n            return {\r\n                channel: that,\r\n                url: path,\r\n                options: options,\r\n                resolve: resolve,\r\n                reject: reject,\r\n                error: err,\r\n            }\r\n        }\r\n        try {\r\n            console.log('%s-%s %s', options.method, path, options.body);\r\n            let now = Date.now();\r\n            let timeOutHandler = env.setTimeout(\r\n                'httpChannel.fetch',\r\n                () => {\r\n                    that.endWait(url + ' timeout endWait: ' + (Date.now() - now) + 'ms', reject);\r\n                },\r\n                this.timeout);\r\n            let res = await fetch(encodeURI(path), options);\r\n            if (res.ok === false) {\r\n                env.clearTimeout(timeOutHandler);\r\n                console.log('ok false endWait');       \r\n                that.endWait();\r\n                console.log('call error %s', res.statusText);\r\n                throw res.statusText;\r\n            }\r\n            let ct = res.headers.get('content-type');\r\n            if (ct && ct.indexOf('json')>=0) {\r\n                return res.json().then(async retJson => {\r\n                    env.clearTimeout(timeOutHandler);\r\n                    that.endWait();\r\n                    if (retJson.ok === true) {\r\n                        if (typeof retJson !== 'object') {\r\n                            debugger;\r\n                        }\r\n                        else if (Array.isArray(retJson) === true) {\r\n                            debugger;\r\n                        }\r\n                        return resolve(retJson);\r\n                    }\r\n                    let retError = retJson.error;\r\n                    if (retError === undefined) {\r\n                        await that.showError(buildError('not valid tonva json'));\r\n                    }\r\n                    else {\r\n                        await that.showError(buildError(retError, 'retJson.error'));\r\n                        reject(retError);\r\n                    }\r\n                }).catch(async error => {\r\n                    await that.showError(buildError(error, 'catch res.json()'));\r\n                });\r\n            }\r\n            else {\r\n                let text = await res.text();\r\n                env.clearTimeout(timeOutHandler);\r\n                console.log('text endWait');\r\n                that.endWait();\r\n                resolve(text);\r\n            }\r\n        }\r\n        catch(error) {\r\n            this.endWait(url, reject);\r\n            if (typeof error === 'string') {\r\n                let err = error.toLowerCase();\r\n                if (err.startsWith('unauthorized') === true) {\r\n                    nav.logout();\r\n                    return;\r\n                }\r\n            }\r\n            console.error('fecth error (no nav.showError): ' + url);\r\n            // await this.showError(buildError(error, 'catch outmost'));\r\n        };\r\n    }\r\n\r\n    protected abstract async innerFetch(url: string, options: any, waiting: boolean): Promise<any>;\r\n\r\n    async callFetch(url:string, method:string, body:any):Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = method;\r\n        options.body = body;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(url, options, true, resolve, reject);\r\n        });\r\n    }\r\n\r\n    private buildOptions(): {method:string; headers:Headers; body:any} {\r\n        let headers = this.buildHeaders();\r\n        let options = {\r\n            headers: headers,\r\n            method: undefined as any,\r\n            body: undefined as any,\r\n            // cache: 'no-cache',\r\n        };\r\n        return options;\r\n    }\r\n\r\n    protected buildHeaders():Headers {\r\n        let {language, culture} = nav;\r\n        let headers = new Headers();\r\n        //headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\r\n        let lang = language;\r\n        if (culture) lang += '-' + culture;\r\n        headers.append('Accept-Language', lang);\r\n        if (this.apiToken) { \r\n            headers.append('Authorization', this.apiToken); \r\n        }\r\n        return headers;\r\n    }\r\n}\r\n\r\nexport class CenterHttpChannel extends HttpChannel {\r\n    protected async innerFetch(url: string, options: any, waiting: boolean): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        if (this.apiToken === undefined && isBridged())\r\n            return await bridgeCenterApi(u, options.method, options.body);\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, waiting, resolve, reject);\r\n        });\r\n    }\r\n}\r\n\r\nexport class UqHttpChannel extends HttpChannel {\r\n    /*\r\n    private uqForChannel: IUqForChannel;\r\n    constructor(hostUrl: string, apiToken:string, uqForChannel: IUqForChannel, ui?: HttpChannelUI) {\r\n        super(hostUrl, apiToken, ui);\r\n        this.uqForChannel = uqForChannel;\r\n    }\r\n    */\r\n    protected async innerFetch(url: string, options: any, waiting: boolean): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, waiting, resolve, reject);\r\n        });\r\n    }\r\n\r\n    /*\r\n    protected buildHeaders():Headers {\r\n        let headers = super.buildHeaders();\r\n        if (this.uqForChannel !== undefined) {\r\n            let {uqVersion} = this.uqForChannel;\r\n            if (uqVersion !== undefined) {\r\n                headers.append('tonva-uq-version', String(uqVersion));\r\n            }\r\n        }\r\n        return headers;\r\n    }\r\n\r\n    protected async showSpecificError(err:string):Promise<boolean> {\r\n        if (err === 'unmatched uq version') {\r\n            if (this.ui !== undefined) {\r\n                let uq:string, uqVersion:number;\r\n                if (this.uqForChannel !== undefined) {\r\n                    uq = this.uqForChannel.uq;\r\n                    uqVersion = this.uqForChannel.uqVersion;\r\n                }\r\n                else {\r\n                    uq = 'undefined uq';\r\n                    uqVersion = 0;\r\n                }\r\n                await this.ui.showUpgradeUq(uq, uqVersion);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    */\r\n}\r\n","import {nav} from '../components/nav';\r\nimport {FetchError} from './fetchError';\r\n\r\nexport interface HttpChannelUI {\r\n    startWait():void;\r\n    endWait():void;\r\n    showError(error:FetchError):Promise<void>;\r\n    showUpgradeUq(uq:string, version:number):Promise<void>;\r\n}\r\n\r\nexport class HttpChannelNavUI implements HttpChannelUI {\r\n    startWait() {\r\n        nav.startWait();\r\n    }\r\n    endWait() {\r\n        nav.endWait();\r\n    }\r\n    async showError(error:FetchError):Promise<void> {\r\n        nav.endWait();\r\n        /*\r\n        if (error.name === 'SyntaxError') {\r\n            error = {\r\n                name: error.name,\r\n                message: error.message,\r\n            }\r\n        }*/\r\n        await nav.onError(error);\r\n    }\r\n    async showUpgradeUq(uq:string, version:number):Promise<void> {\r\n        await nav.showUpgradeUq(uq, version);\r\n    }\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {HttpChannel, CenterHttpChannel, UqHttpChannel} from './httpChannel';\r\nimport {HttpChannelNavUI} from './httpChannelUI';\r\nimport {appUq, logoutUqTokens, buildAppUq} from './appBridge';\r\nimport {ApiBase} from './apiBase';\r\nimport { host } from './host';\r\nimport { nav } from '../components';\r\nimport { LocalCache, LocalMap, env } from '../tool';\r\nimport {decodeUserToken} from '../tool/user';\r\n\r\nlet channelUIs:{[name:string]: HttpChannel} = {};\r\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\r\n\r\nexport function logoutApis() {\r\n    channelUIs = {};\r\n    channelNoUIs = {};\r\n    logoutUnitxApis();\r\n    logoutUqTokens();\r\n}\r\n\r\ninterface UqLocal {\r\n    user: number;\r\n    unit: number;\r\n    value: any;\r\n    tick?: number;\r\n    isNet?: boolean;\r\n}\r\ninterface UqLocals {\r\n    user: number;\r\n    unit: number;\r\n    uqs: {[uq:string]: UqLocal};\r\n}\r\n/*\r\nconst uqLocalEntities = 'uqLocalEntities';\r\nclass CacheUqLocals {\r\n    private local:UqLocals;\r\n\r\n    async loadAccess(uqApi: UqApi):Promise<any> {\r\n        try {\r\n            let {uqOwner, uqName} = uqApi;\r\n            if (this.local === undefined) {\r\n                let ls = null; // localStorage.getItem(uqLocalEntities);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {user, uqs} = this.local;\r\n                if (user !== loginedUserId || uqs === undefined) {\r\n                    this.local = undefined;\r\n                }\r\n                else {\r\n                    for (let i in uqs) {\r\n                        let ul = uqs[i];\r\n                        ul.isNet = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: undefined,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let ret: any;\r\n            let un = uqOwner+'/'+uqName;\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {value} = uq;\r\n                ret = value;\r\n            }\r\n            if (ret === undefined) {\r\n                ret = await uqApi.__loadAccess();\r\n                //this.saveLocal(un, ret);\r\n            }\r\n            return _.cloneDeep(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqLocalEntities);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private saveLocal(uqName:string, accessValue: any) {\r\n        this.local.uqs[uqName] = {\r\n            value: accessValue,\r\n            isNet: true,\r\n        }\r\n        let str = JSON.stringify(this.local);\r\n        localStorage.setItem(uqLocalEntities, str);\r\n    }\r\n\r\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\r\n        if (this.local === undefined) return false;\r\n        let {uqOwner, uqName} = uqApi;\r\n        let un = uqOwner+'/'+uqName;\r\n        let uq = this.local.uqs[un];\r\n        if (uq === undefined) return false;\r\n        let {isNet, value} = uq;\r\n        if (isNet === true) return true;\r\n        let ret = await uqApi.__loadAccess();\r\n        let isMatch = _.isMatch(value, ret);\r\n        if (isMatch === false) {\r\n            this.saveLocal(un, ret);\r\n            return false;\r\n        }\r\n        uq.isNet = true;\r\n        return true;\r\n    }\r\n}\r\n\r\nconst localUqs = new CacheUqLocals;\r\n*/\r\nexport class UqApi extends ApiBase {\r\n    private access:string[];\r\n    uqOwner: string;\r\n    uqName: string;\r\n    uq: string;\r\n    //uqVersion: number;\r\n\r\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\r\n        super(basePath, showWaiting);\r\n        if (uqName) {\r\n            this.uqOwner = uqOwner;\r\n            this.uqName = uqName;\r\n            this.uq = uqOwner + '/' + uqName;\r\n        }\r\n        this.access = access;\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    //setUqVersion(uqVersion:number) {this.uqVersion = undefined}\r\n\r\n    async init() {\r\n        await buildAppUq(this.uq, this.uqOwner, this.uqName);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channels: {[name:string]: HttpChannel};\r\n        let channelUI: HttpChannelNavUI;\r\n        if (this.showWaiting === true || this.showWaiting === undefined) {\r\n            channels = channelUIs;\r\n            channelUI = new HttpChannelNavUI();\r\n        }\r\n        else {\r\n            channels = channelNoUIs;\r\n        }\r\n        let channel = channels[this.uq];\r\n        if (channel !== undefined) return channel;\r\n        let uqToken = appUq(this.uq); //, this.uqOwner, this.uqName);\r\n        if (!uqToken) {\r\n            //debugger;\r\n            await this.init();\r\n            uqToken = appUq(this.uq);\r\n        }\r\n        let {url, token} = uqToken;\r\n        this.token = token;\r\n        channel = new UqHttpChannel(url, token, channelUI);\r\n        return channels[this.uq] = channel;\r\n    }\r\n\r\n    /*async update():Promise<string> {\r\n        return await this.get('update');\r\n    }*/\r\n\r\n    /*\r\n    async __loadAccess():Promise<any> {\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        let ret = await this.get('access', {acc:acc});\r\n        return ret;\r\n    }\r\n    */\r\n    async loadAccess():Promise<any> {\r\n        //return await localUqs.loadAccess(this);\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        let ret = await this.get('access', {acc:acc});\r\n        return ret;\r\n    }\r\n\r\n    /*async loadEntities():Promise<any> {\r\n        return await this.get('entities');\r\n    }*/\r\n\r\n    /*\r\n    async checkAccess():Promise<boolean> {\r\n        return await localUqs.checkAccess(this);\r\n    }\r\n    */\r\n\r\n    async schema(name:string):Promise<any> {\r\n        return await this.get('schema/' + name);\r\n    }\r\n\r\n    async queueModify(start:number, page:number, entities:string) {\r\n        return await this.post('queue-modify', {start:start, page:page, entities:entities});\r\n    }\r\n\r\n    /*async schemas(names:string[]):Promise<any[]> {\r\n        return await this.post('schema', names);\r\n    }*/\r\n\r\n    /*\r\n    async tuidGet(name:string, id:number):Promise<any> {\r\n        return await this.get('tuid/' + name + '/' + id);\r\n    }\r\n\r\n    async tuidGetAll(name:string):Promise<any[]> {\r\n        return await this.get('tuid-all/' + name + '/');\r\n    }\r\n\r\n    async tuidSave(name:string, params:any):Promise<any> {\r\n        return await this.post('tuid/' + name, params);\r\n    }\r\n\r\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret = await this.post('tuids/' + name, {\r\n            arr: arr,\r\n            owner: owner,\r\n            key: key,\r\n            pageStart: pageStart,\r\n            pageSize: pageSize\r\n        });\r\n        return ret;\r\n    }\r\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\r\n    }\r\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\r\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\r\n    }\r\n    async tuidArrSave(name:string, arr:string, owner:number, params:any):Promise<any> {\r\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\r\n    }\r\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\r\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\r\n            id: id,\r\n            $order: order\r\n        });\r\n    }\r\n\r\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\r\n        try {\r\n            let url = 'tuidids/' + name + '/';\r\n            if (arr !== undefined) url += arr;\r\n            else url += '$';\r\n            let ret = await this.post(url, ids);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n    */\r\n    /*async sheetSave(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name, data);\r\n    }*/\r\n\r\n    /*async sheetAction(name:string, data:object) {\r\n        return await this.put('sheet/' + name, data);\r\n    }*/\r\n\r\n    /*async stateSheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/states', data);\r\n    }*/\r\n\r\n    /*async stateSheetCount(name:string):Promise<any> {\r\n        return await this.get('sheet/' + name + '/statecount');\r\n    }*/\r\n\r\n    /*async mySheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/my-sheets', data);\r\n    }*/\r\n\r\n    /*async getSheet(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/get/' + id);\r\n    }*/\r\n\r\n    /*async sheetArchives(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name + '/archives', data);\r\n    }\r\n\r\n    async sheetArchive(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/archive/' + id);\r\n    }*/\r\n\r\n    /*async action(name:string, data:object):Promise<any> {\r\n        return await this.post('action/' + name, data);\r\n    }\r\n\r\n    async actionReturns(name:string, data:object):Promise<any[][]> {\r\n        return await this.post('action/' + name + '/returns', data);\r\n    }\r\n\r\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p:any;\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return await this.post('query-page/' + name, p);\r\n    }\r\n\r\n    async query(name:string, params:any):Promise<any> {\r\n        let ret = await this.post('query/' + name, params);\r\n        return ret;\r\n    }\r\n    */\r\n/*\r\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n\r\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n*/\r\n    /*async user():Promise<any> {\r\n        return await this.get('user');\r\n    }*/\r\n}\r\n\r\nlet channels:{[unitId:number]: HttpChannel} = {};\r\n\r\nexport function logoutUnitxApis() {\r\n    channels = {};\r\n}\r\n\r\nexport class UnitxApi extends UqApi {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super('tv/', undefined, undefined, undefined, true);\r\n        this.unitId = unitId;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channel = channels[this.unitId];\r\n        if (channel !== undefined) return channel;\r\n        return channels[this.unitId] = await this.buildChannel();\r\n    }\r\n\r\n    private async buildChannel():Promise<HttpChannel> {\r\n        let channelUI = new HttpChannelNavUI();\r\n        let centerAppApi = new CenterAppApi('tv/', undefined);\r\n        let ret = await centerAppApi.unitxUq(this.unitId);\r\n        let {token, db, url, urlTest} = ret;\r\n        let realUrl = host.getUrlOrTest(db, url, urlTest);\r\n        this.token = token;\r\n        return new UqHttpChannel(realUrl, token, channelUI);\r\n    }\r\n}\r\n\r\nlet centerHost:string;\r\n\r\nexport function setCenterUrl(url:string) {\r\n    console.log('setCenterUrl %s', url);\r\n    centerHost = url;\r\n    centerToken = undefined;\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nexport let centerToken:string|undefined = undefined;\r\n\r\nlet loginedUserId:number = 0;\r\nexport function setCenterToken(userId:number, t?:string) {\r\n    loginedUserId = userId;\r\n    centerToken = t;\r\n    console.log('setCenterToken %s', t);\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nlet centerChannelUI:HttpChannel;\r\nlet centerChannel:HttpChannel;\r\nfunction getCenterChannelUI():HttpChannel {\r\n    if (centerChannelUI !== undefined) return centerChannelUI;\r\n    return centerChannelUI = new CenterHttpChannel(centerHost, centerToken, new HttpChannelNavUI());\r\n}\r\nfunction getCenterChannel():HttpChannel {\r\n    if (centerChannel !== undefined) return centerChannel;\r\n    return centerChannel = new CenterHttpChannel(centerHost, centerToken);\r\n}\r\n\r\nexport abstract class CenterApiBase extends ApiBase {\r\n    /*\r\n    constructor(path: string, showWaiting?: boolean) {\r\n        super(path, showWaiting);\r\n    }*/\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        return (this.showWaiting === true || this.showWaiting === undefined)?\r\n            getCenterChannelUI():\r\n            getCenterChannel();\r\n    }\r\n}\r\n\r\nconst uqTokensName = 'uqTokens';\r\nexport class UqTokenApi extends CenterApiBase {\r\n    private localMap: LocalMap = env.localDb.map(uqTokensName);\r\n\r\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\r\n        let {uqOwner, uqName} = params;\r\n        let un = uqOwner+'/'+uqName;\r\n        let localCache = this.localMap.child(un);\r\n        try {\r\n            let uqToken:UqLocal = localCache.get();\r\n            if (uqToken !== undefined) {\r\n                let {unit, user} = uqToken;\r\n                if (unit !== params.unit || user !== loginedUserId) {\r\n                    localCache.remove();\r\n                    uqToken = undefined;\r\n                }\r\n            }\r\n            let nowTick = Math.floor(Date.now() / 1000);\r\n            if (uqToken !== undefined) {\r\n                let {tick, value} = uqToken;\r\n                if (value !== undefined && (nowTick - tick) < 24*3600) {\r\n                    return _.clone(value);\r\n                }\r\n            }\r\n            let appUqParams:any = _.clone(params);\r\n            appUqParams.testing = host.testing;\r\n            let ret = await this.get('app-uq', appUqParams);\r\n            if (ret === undefined) {\r\n                let {unit, uqOwner, uqName} = params;\r\n                let err = `center get app-uq(unit=${unit}, '${uqOwner}/${uqName}') - not exists or no unit-service`;\r\n                throw err;\r\n            }\r\n\r\n            uqToken = {\r\n                unit: params.unit,\r\n                user: loginedUserId,\r\n                tick: nowTick,\r\n                value: ret,\r\n            }\r\n            localCache.set(uqToken);\r\n            return _.clone(ret);\r\n        }\r\n        catch (err) {\r\n            localCache.remove();\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\r\n\r\nexport class CallCenterApi extends CenterApiBase {\r\n    directCall(url:string, method:string, body:any):Promise<any> {\r\n        return this.call(url, method, body);\r\n    }\r\n}\r\nexport const callCenterapi = new CallCenterApi('', undefined);\r\n\r\nexport interface UqAppData {\r\n    appName: string;\r\n    appOwner: string;\r\n    id: number;\r\n    version: string;        // AppUI version\r\n    uqs: UqData[];\r\n}\r\n\r\nexport interface UqData {\r\n    id: number;\r\n    uqOwner: string;\r\n    uqName: string;\r\n    access: string;\r\n    newVersion: boolean;\r\n}\r\n\r\nexport interface UqServiceData {\r\n    id: number;\r\n    db: string;\r\n    url: string;\r\n    urlTest: string;\r\n    token: string;\r\n}\r\n\r\nconst appUqsName = 'appUqs';\r\n\r\nexport class CenterAppApi extends CenterApiBase {\r\n    //private local: LocalCache = env.localDb.item(appUqsName);\r\n    //private cachedUqs: UqAppData;\r\n    async uqs(appOwner:string, appName:string):Promise<UqAppData> {\r\n        let ret:UqAppData = await this.get('tie/app-uqs', {appOwner:appOwner, appName:appName});\r\n        return ret;\r\n        /*\r\n        let ret:UqAppData;\r\n        let appUqs = this.local.get();\r\n        if (appUqs) {\r\n            let {appOwner:rAppOwner, appName:rAppName} = appUqs;\r\n            if (appOwner === rAppOwner && appName === rAppName) ret = appUqs;\r\n        }\r\n        if (ret === undefined) {\r\n            ret = await this.uqsPure(appOwner, appName);\r\n            ret.appName = appName;\r\n            ret.appOwner = appOwner;\r\n            //localStorage.setItem(JSON.stringify(obj));\r\n            this.local.set(ret);\r\n        }\r\n        //return this.cachedUqs = _.cloneDeep(ret);\r\n        return ret;\r\n        */\r\n    }\r\n    private async uqsPure(appOwner:string, appName:string):Promise<UqAppData> {\r\n        return await this.get('tie/app-uqs', {appOwner:appOwner, appName:appName});\r\n    }\r\n    /*\r\n    private async isOkCheckUqs(appOwner:string, appName:string):Promise<boolean> {\r\n        let ret = await this.uqsPure(appOwner, appName);\r\n        let {id:cachedId, uqs:cachedUqs} = this.local.get(); //.cachedUqs;\r\n        let {id:retId, uqs:retUqs} = ret;\r\n        if (cachedId !== retId) return false;\r\n        if (cachedUqs.length !== retUqs.length) return false;\r\n        let len = cachedUqs.length;\r\n        for (let i=0; i<len; i++) {\r\n            if (_.isMatch(cachedUqs[i], retUqs[i]) === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    async checkUqs(appOwner:string, appName:string):Promise<boolean> {\r\n        let ret = await this.isOkCheckUqs(appOwner, appName);\r\n        if (ret === false) {\r\n            this.local.remove();\r\n            nav.start();\r\n        }\r\n        return ret;\r\n    }\r\n    */\r\n    async unitxUq(unit:number):Promise<UqServiceData> {\r\n        return await this.get('tie/unitx-uq', {unit:unit});\r\n    }\r\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\r\n        return await this.post('tie/change-password', param);\r\n    }\r\n}\r\n\r\nexport async function loadAppUqs(appOwner:string, appName:string): Promise<UqAppData> {\r\n    let centerAppApi = new CenterAppApi('tv/', undefined);\r\n    //let unit = meInFrame.unit;\r\n    let ret = await centerAppApi.uqs(appOwner, appName);\r\n    //await centerAppApi.checkUqs(appOwner, appName);\r\n    /*\r\n    .then(v => {\r\n        if (v === false) {\r\n            localStorage.removeItem(appUqs);\r\n            nav.start();\r\n        }\r\n    });\r\n    */\r\n    return ret;\r\n}\r\n\r\n//import { nav } from '../ui';\r\n\r\nexport interface RegisterParameter {\r\n    nick:string, \r\n    user:string, \r\n    pwd:string,\r\n    country:number, \r\n    mobile:number, \r\n    mobileCountry:number,\r\n    email:string,\r\n    verify:string,\r\n};\r\n\r\nexport class UserApi extends CenterApiBase {\r\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\r\n        //(params as any).device = nav.local.device.get();\r\n        let ret = await this.get('user/login', params);\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeUserToken(ret);\r\n            case 'object':\r\n                let token = ret.token;\r\n                let user = decodeUserToken(token);\r\n                let {nick, icon} = ret;\r\n                if (nick) user.nick = nick;\r\n                if (icon) user.icon = icon;\r\n                return user;\r\n        }\r\n        // !== undefined) return decodeToken(token);\r\n    }\r\n    async register(params: RegisterParameter): Promise<any>\r\n    {\r\n        return await this.post('user/register', params);\r\n    }\r\n\r\n    async sendVerify(account:string, type:'mobile'|'email', oem:string) {\r\n        return await this.post('user/set-verify', {account:account, type:type, oem:oem});\r\n    }\r\n\r\n    async checkVerify(account:string, verify:string) {\r\n        return await this.post('user/check-verify', {account:account, verify:verify});\r\n    }\r\n\r\n    async isExists(account:string) {\r\n        return await this.get('user/is-exists', {account:account});\r\n    }\r\n\r\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email'):Promise<any[]> {\r\n        return await this.post('user/reset-password', {account:account, password, verify, type});\r\n    }\r\n    \r\n    async userSetProp(prop:string, value:any) {\r\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\r\n    }\r\n\r\n    async me():Promise<any> {\r\n        return await this.get('tie/me');\r\n    }\r\n}\r\n\r\nexport const userApi = new UserApi('tv/', undefined);\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Controller } from '../../components';\r\n\r\nexport abstract class Link {\r\n    abstract onClick: () => void;\r\n    abstract render(className?:string):JSX.Element;\r\n}\r\n\r\nexport class CLink extends Link {\r\n    private controller: Controller;\r\n    protected icon:string|JSX.Element;\r\n    protected label:string|JSX.Element;\r\n\r\n    constructor(controller:Controller) {\r\n        super();\r\n        this.controller = controller;\r\n        this.icon = controller.icon;\r\n        this.label = controller.label;\r\n    }\r\n\r\n    onClick = async () => {\r\n        await this.controller.start();\r\n    }\r\n\r\n    render(className?:string) {\r\n        return <div\r\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\r\n            onClick={this.onClick}>\r\n            {this.icon} &nbsp; {this.label}\r\n        </div>;\r\n        //return React.createElement(this.view, className);\r\n    }\r\n}\r\n","export * from './cLink';\r\n","import { UqApi } from '../net';\r\nimport { LocalCache } from '../tool';\r\nimport { UqMan, Field, ArrFields, FieldMap } from './uqMan';\r\nimport { Tuid } from './tuid';\r\n//import { EntityCache } from './caches';\r\n\r\nconst tab = '\\t';\r\nconst ln = '\\n';\r\n\r\nexport abstract class Entity {\r\n    private jName: string;\r\n    schema: any;\r\n    ver: number = 0;\r\n    sys?: boolean;\r\n    readonly uq: UqMan;\r\n    readonly name: string;\r\n    readonly typeId: number;\r\n    readonly cache: LocalCache;\r\n    readonly uqApi: UqApi;\r\n    abstract get typeName(): string;\r\n    get sName():string {return this.jName || this.name}\r\n    fields: Field[];\r\n    arrFields: ArrFields[];\r\n    returns: ArrFields[];\r\n\r\n    constructor(uq:UqMan, name:string, typeId:number) {\r\n        this.uq = uq;\r\n        this.name = name;\r\n        this.typeId = typeId;\r\n        this.sys = this.name.indexOf('$') >= 0;\r\n        this.cache = this.uq.localMap.item(this.name); // new EntityCache(this);\r\n        this.uqApi = this.uq.uqApi;\r\n    }\r\n\r\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\r\n\r\n    //getApiFrom() {return this.entities.uqApi;}\r\n\r\n    private fieldMaps: {[arr:string]: FieldMap} = {};\r\n    fieldMap(arr?:string): FieldMap {\r\n        if (arr === undefined) arr = '$';\r\n        let ret = this.fieldMaps[arr];\r\n        if (ret === undefined) {\r\n            let fields:Field[];\r\n            if (arr === '$') fields = this.fields;\r\n            else if (this.arrFields !== undefined) {\r\n                let arrFields = this.arrFields.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            else if (this.returns !== undefined) {\r\n                let arrFields = this.returns.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            if (fields === undefined) return {};\r\n            ret = {};\r\n            for (let f of fields) ret[f.name] = f;\r\n            this.fieldMaps[arr] = ret;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public async loadSchema():Promise<void> {\r\n        if (this.schema !== undefined) return;\r\n        let schema = this.cache.get();\r\n        if (!schema) {\r\n            schema = await this.uq.loadEntitySchema(this.name);\r\n        }\r\n        this.setSchema(schema);\r\n        this.buildFieldsTuid();\r\n    }\r\n\r\n    // 如果要在setSchema里面保存cache，必须先调用clearSchema\r\n    public clearSchema() {\r\n        this.schema = undefined;\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        if (schema === undefined) return;\r\n        let {name, version} = schema;\r\n        this.ver = version || 0;\r\n        if (name !== this.name) this.jName = name;\r\n        //if (this.schema === undefined) \r\n        this.cache.set(schema);\r\n        this.schema = schema;\r\n        //this.buildFieldsTuid();\r\n    }\r\n\r\n    public buildFieldsTuid() {\r\n        let {fields, arrs, returns} = this.schema;\r\n        this.uq.buildFieldTuid(this.fields = fields);\r\n        this.uq.buildArrFieldsTuid(this.arrFields = arrs, fields);\r\n        this.uq.buildArrFieldsTuid(this.returns = returns, fields);\r\n    }\r\n\r\n    schemaStringify():string {\r\n        return JSON.stringify(this.schema, (key:string, value:any) => {\r\n            if (key === '_tuid') return undefined;\r\n            return value;\r\n        }, 4);\r\n    }\r\n\r\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\r\n        if (this.schema === undefined) return;\r\n        let {fields, arrs} = this.schema;\r\n        let entities = this.uq;\r\n        function getTuid(fn:string, fieldArr:Field[]) {\r\n            if (fieldArr === undefined) return;\r\n            let f = fieldArr.find(v => v.name === fn);\r\n            if (f === undefined) return;\r\n            return entities.getTuid(f.tuid);\r\n        }\r\n        let fn = fieldName.toLowerCase();\r\n        if (arrName === undefined) return getTuid(fn, fields);\r\n        if (arrs === undefined) return;\r\n        let an = arrName.toLowerCase();\r\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\r\n        if (arr === undefined) return;\r\n        return getTuid(fn, arr.fields);\r\n    }\r\n\r\n    buildParams(params:any):any {\r\n        let result:any = {};\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\r\n        let arrs = this.arrFields;\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                let {name, fields} = arr;\r\n                let paramsArr:any[] = params[name];\r\n                if (paramsArr === undefined) continue;\r\n                let arrResult:any[] = [];\r\n                result[name] = arrResult;\r\n                for (let pa of params) {\r\n                    let rowResult = {};\r\n                    this.buildFieldsParams(rowResult, fields, pa);\r\n                    arrResult.push(rowResult);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\r\n        for (let field of fields) {\r\n            let {name, type} = field;            \r\n            let d = params[name];\r\n            let val:any;\r\n            if (type === 'datetime') {\r\n                val = this.buildDateTimeParam(d);\r\n            }\r\n            else {\r\n                switch (typeof d) {\r\n                    default: val = d; break;\r\n                    case 'object':\r\n                        let tuid = field._tuid;\r\n                        if (tuid === undefined) val = d.id;\r\n                        else val = tuid.getIdFromObj(d);\r\n                        break;\r\n                }\r\n            }\r\n            result[name] = val;\r\n        }\r\n    }\r\n\r\n    buildDateTimeParam(val:any) {\r\n        let dt: Date;\r\n        switch (typeof val) {\r\n            default: debugger; throw new Error('escape datetime field in pack data error: value=' + val);\r\n            case 'undefined': return undefined;\r\n            case 'object': dt = (val as Date); break;\r\n            case 'string':\r\n            case 'number': dt = new Date(val); break;\r\n        }\r\n        return Math.floor(dt.getTime()/1000);\r\n    }\r\n\r\n    buildDateParam(val:any) {\r\n        let dt: Date;\r\n        switch (typeof val) {\r\n            default: debugger; throw new Error('escape datetime field in pack data error: value=' + val);\r\n            case 'undefined': return undefined;\r\n            case 'string': return val;\r\n            case 'object': dt = (val as Date); break;\r\n            case 'number': dt = new Date(val); break;\r\n        }\r\n        let ret = dt.toISOString();\r\n        let p = ret.indexOf('T');\r\n        return p>0? ret.substr(0, p) : ret;\r\n}\r\n\r\n    pack(data:any):string {\r\n        let ret:string[] = [];\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.packRow(ret, fields, data);\r\n        let arrs = this.arrFields; \r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                this.packArr(ret, arr.fields, data[arr.name]);\r\n            }\r\n        }\r\n        return ret.join('');\r\n    }\r\n\r\n    private escape(row:any, field:Field):any {\r\n        let d = row[field.name];\r\n        switch (field.type) {\r\n            case 'datetime':\r\n                return this.buildDateTimeParam(d);\r\n            default:\r\n                switch (typeof d) {\r\n                    default: return d;\r\n                    case 'object':\r\n                        let tuid = field._tuid;\r\n                        if (tuid === undefined) return d.id;\r\n                        return tuid.getIdFromObj(d);\r\n                    case 'string':\r\n                        let len = d.length;\r\n                        let r = '', p = 0;\r\n                        for (let i=0;i<len;i++) {\r\n                            let c = d.charCodeAt(i);\r\n                            switch(c) {\r\n                                case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\r\n                                case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\r\n                            }\r\n                        }\r\n                        return r + d.substring(p);\r\n                    case 'undefined': return '';\r\n                }\r\n        }\r\n    }\r\n\r\n    private packRow(result:string[], fields:Field[], data:any) {\r\n        let len = fields.length;\r\n        if (len === 0) return;\r\n        let ret = '';\r\n        ret += this.escape(data, fields[0]);\r\n        for (let i=1;i<len;i++) {\r\n            let f = fields[i];\r\n            ret += tab + this.escape(data, f);\r\n        }\r\n        result.push(ret + ln);\r\n    }\r\n\r\n    private packArr(result:string[], fields:Field[], data:any[]) {\r\n        if (data !== undefined) {\r\n            for (let row of data) {\r\n                this.packRow(result, fields, row);\r\n            }\r\n        }\r\n        result.push(ln);\r\n    }\r\n    protected cacheFieldsInValue(values:any, fields:Field[]) {\r\n        for (let f of fields as Field[]) {\r\n            let {name, _tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            let id = values[name];\r\n            //_tuid.useId(id);\r\n            values[name] = _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    protected unpackTuidIdsOfFields(values:string[], fields: Field[]):any[] {\r\n        if (fields === undefined) return values as any[];\r\n        //if (this.fields === undefined) return values as any[];\r\n        let ret:any[] = []\r\n        for (let ln of values) {\r\n            if (!ln) continue;\r\n            let len = ln.length;\r\n            let p = 0;\r\n            while (p<len) {\r\n                let ch = ln.charCodeAt(p);\r\n                if (ch === 10) {\r\n                    ++p;\r\n                    break;\r\n                }\r\n                let row = {};\r\n                p = this.unpackRow(row, fields, ln, p);\r\n                ret.push(row);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    unpackSheet(data:string):any {\r\n        let ret = {} as any; //new this.newMain();\r\n        //if (schema === undefined || data === undefined) return;\r\n        let fields = this.fields;\r\n        let p = 0;\r\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    unpackReturns(data:string):any {\r\n        if (data === undefined) debugger;\r\n        let ret = {} as any;\r\n        //if (schema === undefined || data === undefined) return;\r\n        //let fields = schema.fields;\r\n        let p = 0;\r\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\r\n        let arrs = this.returns; //schema['returns'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                //let creater = this.newRet[arr.name];\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    protected unpackRow(ret:any, fields:Field[], data:string, p:number):number {\r\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\r\n        for (;p<len;p++) {\r\n            ch0 = ch;\r\n            ch = data.charCodeAt(p);\r\n            if (ch === 9) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                c = p+1;\r\n                ++i;\r\n                if (i>=fLen) {\r\n                    p = data.indexOf('\\n', c);\r\n                    if (p >= 0) ++p;\r\n                    else p = len;\r\n                    return p;\r\n                }\r\n            }\r\n            else if (ch === 10) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                ++p;\r\n                ++i;\r\n                return p;\r\n            }\r\n        }\r\n        let f = fields[i];\r\n        let {name} = f;\r\n        if (ch0 !== 8) {\r\n            let v = data.substring(c);\r\n            ret[name] = this.to(ret, v, f);\r\n        }\r\n        return len;\r\n    }\r\n\r\n    private to(ret:any, v:string, f:Field):any {\r\n        switch (f.type) {\r\n            default: return v;\r\n            case 'datetime':\r\n            case 'time':\r\n                let n = Number(v);\r\n                let date = isNaN(n) === true? new Date(v) : new Date(n*1000);\r\n                return date;\r\n            case 'date':\r\n                let parts = v.split('-');\r\n                return new Date(Number(parts[0]), Number(parts[1])-1, Number(parts[2]));\r\n            case 'tinyint':\r\n            case 'smallint':\r\n            case 'int':\r\n            case 'bigint':\r\n            case 'dec':\r\n                return Number(v);\r\n            case 'id':\r\n                let id = Number(v);\r\n                let {_tuid} = f;\r\n                if (_tuid === undefined) return id;\r\n                return _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\r\n        let vals:any[] = [], len = data.length;\r\n        let {name, fields} = arr;\r\n        while (p<len) {\r\n            let ch = data.charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let val = {} as any; //new creater();\r\n            vals.push(val);\r\n            p = this.unpackRow(val, fields, data, p);\r\n        }\r\n        ret[name] = vals;\r\n        return p;\r\n    }\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","\r\nlet subAppWindow:Window;\r\nfunction postWsToSubApp(msg:any) {\r\n    if (subAppWindow === undefined) return;\r\n    subAppWindow.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport function setSubAppWindow(win:Window) {\r\n    subAppWindow = win;\r\n}\r\n\r\nexport function postWsToTop(msg:any) {\r\n    window.top.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport abstract class WsBase {\r\n    wsBaseId:string;\r\n    private handlerSeed = 1;\r\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\r\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\r\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.anyHandlers[seed] = handler;\r\n        return seed;\r\n    }\r\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.msgHandlers[seed] = {type:type, handler: handler};\r\n        return seed;\r\n    }\r\n    endWsReceive(handlerId:number) {\r\n        delete this.anyHandlers[handlerId];\r\n        delete this.msgHandlers[handlerId];\r\n    }\r\n    async receive(msg:any) {\r\n        let {$type} = msg;\r\n        for (let i in this.anyHandlers) {\r\n            await this.anyHandlers[i](msg);\r\n        }\r\n        for (let i in this.msgHandlers) {\r\n            let {type, handler} = this.msgHandlers[i];\r\n            if (type !== $type) continue;\r\n            await handler(msg);\r\n        }\r\n    }\r\n}\r\n\r\nlet wsBaseSeed = 1;\r\nexport class WsBridge extends WsBase {\r\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\r\n}\r\n\r\nexport const wsBridge = new WsBridge();\r\n\r\nexport class WSChannel extends WsBase {\r\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\r\n    static centerToken:string;\r\n    private wsHost: string;\r\n    private token: string;\r\n    private ws: WebSocket;\r\n\r\n    constructor(wsHost: string, token: string) {\r\n        super();\r\n        this.wsHost = wsHost;\r\n        this.token = token;\r\n    }\r\n\r\n    static setCenterToken(token?: string) {\r\n        WSChannel.centerToken = token;\r\n    }\r\n    \r\n    connect():Promise<void> {\r\n        //this.wsHost = wsHost;\r\n        //this.token = token || WSChannel.centerToken;\r\n        if (this.ws !== undefined) return;\r\n        let that = this;\r\n        return new Promise((resolve, reject) => {\r\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\r\n            console.log('connect webSocket %s', this.wsHost);\r\n            ws.onopen = (ev) => {\r\n                console.log('webSocket connected %s', this.wsHost);\r\n                that.ws = ws;\r\n                resolve();\r\n            };\r\n            ws.onerror = (ev) => {\r\n                reject('webSocket can\\'t open!');\r\n            };\r\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\r\n            ws.onclose = (ev) => {\r\n                that.ws = undefined;\r\n                console.log('webSocket closed!');\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        if (this.ws !== undefined) {\r\n            this.ws.close();\r\n            this.ws = undefined;\r\n        }\r\n    }\r\n    private async wsMessage(event:any):Promise<void> {\r\n        try {\r\n            console.log('websocket message: %s', event.data);\r\n            let msg = JSON.parse(event.data);\r\n            postWsToSubApp(msg);\r\n            await this.receive(msg);\r\n        }\r\n        catch (err) {\r\n            console.log('ws msg error: ', err);\r\n        }\r\n    }\r\n    sendWs(msg:any) {\r\n        let netThis = this;\r\n        this.connect().then(() => {\r\n            netThis.ws.send(msg);\r\n        });\r\n    }\r\n}\r\n","export * from './uqMan';\r\nexport * from './entity';\r\nexport * from './action';\r\nexport * from './query';\r\nexport * from './sheet';\r\nexport * from './tuid';\r\nexport * from './book';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './uqsMan';\r\n","//import _ from 'lodash';\r\nimport {observable, IObservableArray} from 'mobx';\r\nimport { PageItems } from '../tool';\r\nimport {Field, ArrFields} from './uqMan';\r\nimport {Entity} from './entity';\r\nimport { QueryQueryCaller, QueryPageCaller } from './caller';\r\n\r\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\r\n\r\nexport class QueryPager<T extends any> extends PageItems<T> {\r\n    private query: Query;\r\n    constructor(query: Query, pageSize?: number, firstSize?: number) {\r\n        super();\r\n        this.query = query;\r\n        if (pageSize !== undefined) this.pageSize = pageSize;\r\n        if (firstSize !== undefined) this.firstSize = firstSize;\r\n    }\r\n\r\n    protected async onLoad() {\r\n        let {schema} = this.query;\r\n        if (schema === undefined) await this.query.loadSchema();\r\n    }\r\n\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<T[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.query.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:T) {\r\n        let {schema} = this.query;\r\n        if (schema === undefined) return;\r\n        let $page = (schema.returns as any[]).find(v => v.name === '$page');\r\n        if ($page === undefined) return;\r\n        let {order} = $page;\r\n        if (order === undefined) return;\r\n        let {field, type, asc} = order;\r\n        let start:any;\r\n        if (item !== undefined) start = item[field];\r\n        if (asc === false) {\r\n            this.appendPosition = 'head';\r\n            switch (type) {\r\n                default:\r\n                case 'tinyint':\r\n                case 'smallint':\r\n                case 'int':\r\n                case 'bigint':\r\n                case 'dec': start = 999999999999; break;\r\n                case 'date':\r\n                case 'datetime': start = undefined; break;          // 会自动使用现在\r\n                case 'char': start = ''; break;\r\n            }\r\n        }\r\n        else {\r\n            this.appendPosition = 'tail';\r\n            switch (type) {\r\n                default:\r\n                case 'tinyint':\r\n                case 'smallint':\r\n                case 'int':\r\n                case 'bigint':\r\n                case 'dec': start = 0; break;\r\n                case 'date':\r\n                case 'datetime': start = '1970-1-1'; break;\r\n                case 'char': start = ''; break;\r\n            }\r\n        }\r\n        this.pageStart = start;\r\n    }\r\n}\r\n\r\nexport class Query extends Entity {\r\n    get typeName(): string { return 'query';}\r\n    private pageStart: any;\r\n    private pageSize:number;\r\n    private params:any;\r\n    private more: boolean;\r\n    private startField: Field;\r\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\r\n    returns: ArrFields[];\r\n    isPaged: boolean;\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {returns} = schema;\r\n        //this.returns = returns;\r\n        this.isPaged = returns && (returns as any[]).find(v => v.name === '$page') !== undefined;\r\n    }\r\n\r\n    resetPage(size:number, params:any) {\r\n        this.pageStart = undefined;\r\n        this.pageSize = size;\r\n        this.params = params;\r\n        this.more = false;\r\n        this.list = undefined;\r\n    }\r\n    get hasMore() {return this.more;}\r\n    async loadPage():Promise<void> {\r\n        if (this.pageSize === undefined) {\r\n            throw new Error('call resetPage(size:number, params:any) first');\r\n        }\r\n        let pageStart:any;\r\n        if (this.pageStart !== undefined) {\r\n            switch (this.startField.type) {\r\n                default: pageStart = this.pageStart; break;\r\n                case 'date':\r\n                case 'time':\r\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\r\n            }\r\n        }\r\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\r\n        let data = await this.unpackReturns(res);\r\n        let page = data['$page'] as any[];\r\n        */\r\n        this.list = observable.array([], {deep: false});\r\n        if (page !== undefined) {\r\n            if (page.length > this.pageSize) {\r\n                this.more = true;\r\n                page.pop();\r\n                let ret = this.returns.find(r => r.name === '$page');\r\n                this.startField = ret.fields[0];\r\n                this.pageStart = page[page.length-1][this.startField.name];\r\n            }\r\n            else {\r\n                this.more = false;\r\n            }\r\n            this.list.push(...page);\r\n        }\r\n        //this.loaded = true;\r\n    }\r\n\r\n    protected pageCaller(params: any, showWaiting: boolean = true): QueryPageCaller {\r\n        return new QueryPageCaller(this, params, showWaiting);\r\n    }\r\n\r\n    async page(params:any, pageStart:any, pageSize:number, showWaiting: boolean = true):Promise<any[]> {\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.uqApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\r\n        */\r\n        let p = {pageStart:pageStart, pageSize:pageSize+1, params:params};\r\n        let res = await this.pageCaller(p, showWaiting).request();\r\n        //let data = this.unpackReturns(res);\r\n        //return data.$page;// as any[];\r\n        return res;\r\n    }\r\n    protected queryCaller(params: any, showWaiting: boolean = true): QueryQueryCaller {\r\n        return new QueryQueryCaller(this, params, showWaiting);\r\n    }\r\n    async query(params:any, showWaiting:boolean = true):Promise<any> {\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.uqApi.query(this.name, this.buildParams(params));\r\n        */\r\n        let res = await this.queryCaller(params, showWaiting).request();\r\n        //let data = this.unpackReturns(res);\r\n        //return data;\r\n        return res;\r\n    }\r\n    async table(params:any, showWaiting:boolean = true): Promise<any[]> {\r\n        let ret = await this.query(params, showWaiting);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any, showWaiting:boolean = true):Promise<any> {\r\n        let ret = await this.table(params, showWaiting);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any, showWaiting:boolean = true):Promise<any> {\r\n        let ret = await this.obj(params, showWaiting);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","//import * as React from 'react';\r\nimport { ItemSchema, UiItem } from '../schema';\r\nimport { nav } from '../nav';\r\n//import { Page } from '../page';\r\n//import { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { FieldRule } from '../form/rules';\r\n\r\nexport abstract class ItemEdit {\r\n    protected name: string;\r\n    protected itemSchema: ItemSchema;\r\n    protected uiItem:UiItem;\r\n    protected value: any;\r\n    protected label: string;\r\n\r\n    @observable protected error: string;\r\n    @observable protected isChanged: boolean = false;\r\n    protected newValue: any;\r\n\r\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\r\n        this.itemSchema = itemSchema;\r\n        this.uiItem = uiItem\r\n        this.value = value;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.label = label;\r\n    }\r\n    async start():Promise<any> {\r\n        return await this.internalStart();\r\n    }\r\n\r\n    protected abstract internalStart():Promise<any>;\r\n\r\n    async end():Promise<any> {\r\n        await this.internalEnd()\r\n    }\r\n\r\n    protected async internalEnd():Promise<void> {nav.pop()}\r\n\r\n    protected verifyValue() {\r\n        if (this.uiItem === undefined) return;\r\n        let {rules} = this.uiItem;\r\n        if (rules === undefined) return;\r\n        let nv = this.newValue;\r\n        function verifyRule(rule:FieldRule, value: any):string {\r\n            let error = rule(nv);\r\n            if (error !== undefined) {\r\n                if (typeof error !== 'object')\r\n                    return error;\r\n                else\r\n                    return JSON.stringify(error);\r\n            }\r\n        }\r\n        if (Array.isArray(rules)) {\r\n            for (let rule of rules) {\r\n                let error = verifyRule(rule as FieldRule, nv);\r\n                if (error !== undefined) {\r\n                    this.error = error;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.error = verifyRule(rules as FieldRule, nv);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav } from './nav';\r\n\r\nexport interface ImageProps {\r\n    src: string;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    altImage?: string;\r\n}\r\n\r\nexport function Image(props: ImageProps) {\r\n    let {className, style, src, altImage} = props;\r\n    if (!src) {\r\n        return <div className={classNames(className, 'image-none')} style={style}>\r\n            <i className=\"fa fa-file-o\" />\r\n        </div>;\r\n    }\r\n    if (src.startsWith(':') === true) {\r\n        src = nav.resUrl + src.substr(1);\r\n    }\r\n    return <img src={src} className={className} alt=\"img\"\r\n        style={style}\r\n        onError={evt=>{\r\n            if (altImage) evt.currentTarget.src=altImage;\r\n            else evt.currentTarget.src = 'https://tv.jkchemical.com/imgs/0001.png';\r\n        }} />;\r\n}\r\n","import jwtDecode from 'jwt-decode';\r\n\r\nexport interface Unit {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface Guest {\r\n    id: number;             // id = 0\r\n    guest: number;\r\n    token: string;\r\n}\r\n\r\nexport interface User extends Guest {\r\n    id: number;\r\n    name: string;\r\n    nick?: string;\r\n    icon?: string;\r\n}\r\n\r\nexport function decodeUserToken(token: string): User {\r\n    let ret:any = jwtDecode(token);\r\n    let user: User = {\r\n        id: ret.id,\r\n        name: ret.name,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return user;\r\n}\r\n\r\nexport function decodeGuestToken(token: string): Guest {\r\n    let ret:any = jwtDecode(token);\r\n    let guest: Guest = {\r\n        id: 0,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return guest;\r\n}\r\n","import { env } from '../tool';\r\n\r\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\r\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\r\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\r\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugBuilderHost = 'localhost:3009';\r\ninterface HostValue {\r\n    value: string;\r\n    local: boolean;\r\n}\r\nconst hosts:{[name:string]:HostValue} = {\r\n    centerhost: {\r\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \r\n        local: false\r\n    },\r\n    reshost: {\r\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\r\n        local: false\r\n    },\r\n    uqhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    unitxhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    \"uq-build\": {\r\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \r\n        local: false\r\n    }\r\n}\r\n\r\nconst httpArr = ['https://', 'http://'];\r\nfunction isAbsoluteUrl(url:string):boolean {\r\n    for (let str of httpArr) {\r\n        if (url.startsWith(str) === true) return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction urlFromHost(host:string):string {\r\n    if (isAbsoluteUrl(host) === true) {\r\n        if (host.endsWith('/')) return host;\r\n        return host + '/';\r\n    }\r\n    return `http://${host}/`;\r\n}\r\n\r\nfunction centerUrlFromHost(host:string):string {\r\n    return urlFromHost(host);\r\n}\r\nfunction centerWsFromHost(host:string) {\r\n    let https = 'https://';\r\n    if (host.startsWith(https) === true) {\r\n        host = host.substr(https.length);\r\n        if (host.endsWith('/') === true) host = host.substr(0, host.length-1);\r\n        return 'wss://' + host + '/tv/';\r\n    }\r\n    return `ws://${host}/tv/`\r\n}\r\nexport function resUrlFromHost(host:string) {\r\n    let url = urlFromHost(host);\r\n    return url + 'res/';\r\n}\r\n\r\nconst fetchOptions = {\r\n    method: \"GET\",\r\n    mode: \"no-cors\", // no-cors, cors, *same-origin\r\n    headers: {\r\n        \"Content-Type\": \"text/plain\"\r\n    },\r\n};\r\n\r\nclass Host {\r\n    testing: boolean;\r\n    url: string;\r\n    ws: string;\r\n    resHost: string;\r\n\r\n    async start(testing:boolean) {\r\n        this.testing = testing;\r\n        if (env.isDevelopment === true) {\r\n            await this.tryLocal();\r\n        }\r\n        let host = this.getCenterHost();\r\n        this.url = centerUrlFromHost(host);\r\n        this.ws = centerWsFromHost(host);\r\n        this.resHost = this.getResHost();\r\n    }\r\n\r\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\r\n    private async tryLocal() {\r\n        let promises:PromiseLike<any>[] = [];\r\n        let hostArr:string[] = [];\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            let {value} = hostValue;\r\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\r\n        }\r\n\r\n        for (let host of hostArr) {\r\n            let fetchUrl = this.debugHostUrl(host);\r\n            promises.push(localCheck(fetchUrl));\r\n        }\r\n        let results = await Promise.all(promises);\r\n        let len = hostArr.length;\r\n        for (let i=0; i<len; i++) {\r\n            let local = results[i];\r\n            let host = hostArr[i];\r\n            for (let j in hosts) {\r\n                let hostValue = hosts[j];\r\n                if (hostValue.value === host) {\r\n                    hostValue.local = local;\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        let p = 0;\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            hostValue.local = results[p];\r\n            ++p;\r\n        }\r\n        */\r\n    }\r\n\r\n    private getCenterHost():string {\r\n        let {value, local} = hosts.centerhost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (env.isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return centerHost;\r\n    }\r\n\r\n    private getResHost():string {\r\n        let {value, local} = hosts.reshost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (env.isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return resHost;\r\n    }\r\n\r\n    getUrlOrDebug(url:string, debugHost:string = 'uqhost'):string {\r\n        if (env.isDevelopment === false) return url;\r\n        let host = hosts[debugHost];\r\n        if (host === undefined) return url;\r\n        let {value, local} = host;\r\n        if (local === false) return url;\r\n        return `http://${value}/`;\r\n    }\r\n    getUrlOrTest(db:string, url:string, urlTest:string):string {\r\n        let path:string;\r\n        if (this.testing === true) {\r\n            if (urlTest !== '-') url = urlTest;\r\n            path = 'uq/test/' + db + '/';\r\n        }\r\n        else {\r\n            path = 'uq/prod/' + db + '/';\r\n        }\r\n        url = this.getUrlOrDebug(url);\r\n        return url + path;\r\n    }\r\n\r\n    async localCheck(urlDebug: string):Promise<boolean> {\r\n        return await localCheck(urlDebug);\r\n    }\r\n}\r\n\r\nexport const host:Host = new Host();\r\n\r\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\r\n// 网上找了上面的fetch timeout代码。\r\n// 尽管timeout了，fetch仍然继续，没有cancel\r\n\r\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\r\n//const timeout = 2000;\r\nconst timeout = 200;\r\n\r\nfunction fetchLocalCheck(url:string):Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url, fetchOptions as any)\r\n      .then(v => {\r\n          v.text().then(resolve).catch(reject);\r\n      })\r\n      .catch(reject);\r\n      const e = new Error(\"Connection timed out\");\r\n      env.setTimeout('fetchLocalCheck', reject, timeout, e);\r\n    });\r\n}\r\n\r\nasync function localCheck(url:string):Promise<boolean> {\r\n    try {\r\n        await fetchLocalCheck(url);\r\n        return true;\r\n    }\r\n    catch (err) {\r\n        return false;\r\n    }\r\n}\r\n\r\n/*\r\nexport interface IUqForChannel {\r\n    uq: string;\r\n    uqVersion: number;\r\n}\r\n*/","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Tuid, BoxId } from '../../uq';\r\nimport { PureJSONContent } from '../tools';\r\n\r\nexport class TuidWithUIRes {\r\n    readonly tuid: Tuid;\r\n    readonly ui: any;\r\n    readonly res: any;\r\n    constructor(tuid:Tuid, ui:any, res:any) {\r\n        this.tuid = tuid;\r\n        this.ui = ui;\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class ReactBoxId implements BoxId {\r\n    readonly id: number;\r\n    protected tuidUR: TuidWithUIRes;\r\n    readonly isUndefined:boolean;\r\n    constructor(tuidUR: TuidWithUIRes, id: number) {\r\n        this.tuidUR = tuidUR;\r\n        this.id = id;\r\n        this.isUndefined = (this.tuidUR.tuid === undefined);\r\n    }\r\n\r\n    get obj():any {\r\n        return this.tuidUR.tuid.valueFromId(this.id);\r\n    }\r\n\r\n    render(ui:TvTemplet, x:any):JSX.Element {\r\n        if (this.id === undefined || this.id === null) return;\r\n        let boxName = this.boxName; // this.tuid.name;\r\n        let val = this.obj; // this.tuid.valueFromId(this.id);\r\n        if (this.isUndefined === true) {\r\n            if (ui !== undefined) return ui(val, x);\r\n            return PureJSONContent(val, x);\r\n        }\r\n        switch (typeof val) {\r\n            case 'undefined':\r\n                return <del className=\"text-black-50\">{boxName} undefined</del>;\r\n            case 'number':\r\n                return <del className=\"text-black-50\">{boxName} {this.id}</del>;\r\n        }\r\n        if (ui === undefined) {\r\n            ui = this.tuidUR.ui;\r\n        }\r\n        if (ui !== undefined) {\r\n            if (typeof ui !== 'function') {\r\n                ui = (ui as any).content;\r\n            }\r\n            if (ui !== undefined) {\r\n                let ret = ui(val, this.tuidUR.res);\r\n                if (ret !== undefined) return ret;\r\n                return <del className=\"text-danger\">{boxName} {this.id}</del>;\r\n            }\r\n        }\r\n\r\n        return PureJSONContent(val);\r\n    }\r\n\r\n    get boxName():string {return this.tuidUR.tuid.name}\r\n    // ui(): TvTemplet {return this.tuid.ui}\r\n    // res(): any {return this.tuid.res}\r\n\r\n    async assure(): Promise<void> {\r\n        await this.tuidUR.tuid.assureBox(this.id);\r\n    }\r\n}\r\n\r\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\r\n    let logContent:any;\r\n    let boxId:ReactBoxId = bi as ReactBoxId;\r\n    switch(typeof bi) {\r\n        case 'undefined': logContent = <>boxId undefined</>; break;\r\n        case 'number': logContent = <>id:{bi}</>; break;\r\n        default:\r\n            if (typeof boxId.render !== 'function') {\r\n                if (ui === undefined) {\r\n                    logContent = PureJSONContent(bi, x);\r\n                }\r\n                else {\r\n                    return ui(bi, x);\r\n                }\r\n            }\r\n            break;\r\n    }\r\n    if (logContent !== undefined) {\r\n        return <del className=\"text-danger\">{logContent}</del>;\r\n    }\r\n    return boxId.render(ui, x);\r\n}\r\n\r\nexport type TvTemplet = (values?:any, x?:any) => JSX.Element;\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: TvTemplet,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    if (tuidValue === undefined) {\r\n        if (nullUI === undefined) return <>[undefined]</>;\r\n        return nullUI();\r\n    }\r\n    if (tuidValue === null) {\r\n        if (nullUI === undefined) return <>[null]</>;\r\n        return nullUI();\r\n    }\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else {\r\n                let ret = ui(tuidValue, x);\r\n                if (ret !== undefined) return ret;\r\n                return <>{tuidValue}</>;\r\n            }\r\n        case 'object':\r\n            let divObj = boxIdContent(tuidValue, ui, x);\r\n            if (divObj !== undefined) return divObj;\r\n            return nullUI === undefined? <>id null</>: nullUI();\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n\r\n/*\r\nclass BoxDivId extends BoxId {\r\n    private div: TuidDiv;\r\n    constructor(tuid: Tuid, div: TuidDiv, id: number) {\r\n        super(tuid, id);\r\n        this.div = div;\r\n    }\r\n    get obj():any {\r\n        return this.div.valueFromId(this.id);\r\n    }\r\n    boxName():string {return this.div.name}\r\n    isUndefined(): boolean {return this.div === undefined}\r\n    ui(): TvTemplet {return this.div.ui}\r\n    res(): any {return this.div.res}\r\n\r\n    async assure(): Promise<void> {\r\n        await this.div.assureBox(this.id);\r\n    }\r\n}\r\n*/\r\n","export * from './form';\r\nexport * from './multiStep';","import * as React from 'react';\r\nimport { Page, SearchBox, LMR } from '../../components';\r\nimport { Tuid } from '../../uq';\r\nimport { CLink } from '../link';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\n\r\nexport class VTuidMain extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    protected controller: CTuidMain;\r\n    onNew = () => this.event('new');\r\n    onList = () => this.event('list');\r\n    onSearch = async (key:string) => this.event('list', key);\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected entityRender(link: CLink, index: number): JSX.Element {\r\n        return link.render();\r\n    }\r\n\r\n    protected async entityClick(link: CLink) {\r\n        await link.onClick();\r\n    }\r\n\r\n    protected get view() {\r\n        let {label, isImport} = this.controller;\r\n        let newButton:any;\r\n        if (isImport === false) newButton = <button className=\"btn btn-outline-success ml-2\" onClick={this.onNew}>新增</button>;\r\n        let right = <>\r\n            {newButton}\r\n            <button className=\"btn btn-outline-info ml-2\" onClick={this.onList}>全部</button>\r\n        </>;\r\n        let content = <LMR className='m-3' right={right}>\r\n            <SearchBox className=\"w-100\" size=\"md\"\r\n                onSearch={this.onSearch} \r\n                placeholder={'搜索'+label} />\r\n        </LMR>;\r\n        return () => <Page header={label}>\r\n            {content}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page, FA } from '../../components';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\nimport { Tuid } from '../../uq';\r\n\r\nexport type TypeVTuidEdit = typeof VTuidEdit;\r\n\r\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    private vForm: VForm;\r\n    private id: number;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        if (param !== undefined) {\r\n            this.id = param.id;\r\n        }\r\n        this.openPage(this.editView);\r\n    }\r\n\r\n    protected get editView() {\r\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\r\n            {this.vForm.render('py-3')}\r\n        </Page>;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n        this.event('edit-end');\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.controller.entity.save(this.id, values);\r\n        let {id} = ret;\r\n        if (id < 0) {\r\n            let {unique} = this.controller.entity;\r\n            if (unique !== undefined) {\r\n                for (let u of unique) {\r\n                    this.vForm.setError(u, '不能重复');\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.controller.isCalling) {\r\n            this.returnCall(id);\r\n            this.closePage();\r\n            return;\r\n        }\r\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n\r\n        this.event('item-changed', {id: this.id, values: values});\r\n        return;\r\n    }\r\n\r\n    //protected view = TuidNewPage;\r\n}\r\n/*\r\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\r\n    let {label, id, vmForm} = vm;\r\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\r\n        {vmForm.render('mx-3 my-2')}\r\n    </Page>;\r\n});\r\n*/","import { Page, SearchBox, List } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../uq';\r\nimport { CTuid, TuidUI } from './cTuid';\r\nimport React from 'react';\r\nimport { RowContent } from '../form/viewModel';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\r\n    protected mainRowContent: (row:any) => JSX.Element;\r\n    protected divRowContent: (row:any) => JSX.Element;\r\n\r\n    async open(param?:any): Promise<void> {\r\n        if (param === undefined)\r\n            await this.showMain(param);\r\n        else\r\n            await this.showDiv(param);\r\n    }\r\n\r\n    private async showMain(param:any) {\r\n        this.mainRowContent = this.ui.rowContent || RowContent;\r\n        await this.controller.searchMain(param);\r\n        this.openPage(this.mainView);\r\n    }\r\n\r\n    private async showDiv(ownerValue: any) {\r\n        let {divs} = this.ui;\r\n        if (divs !== undefined) {\r\n            this.divRowContent = divs[this.entity.name].rowContent;\r\n        }\r\n        if (this.divRowContent === undefined) {\r\n            this.divRowContent = RowContent;\r\n        }\r\n        let divItems = await this.controller.getDivItems(ownerValue);\r\n        this.openPage(this.divView, {items: divItems});\r\n    }\r\n\r\n    protected mainView = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header} back=\"close\">\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n\r\n    onSearchMain = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\r\n    clickMainRow = async (item:any) => {\r\n        this.ceasePage();\r\n        if (this.controller.entity.hasDiv === undefined) {\r\n            this.returnCall(item);\r\n            return;\r\n        }\r\n        await this.showDiv(this.entity.getIdFromObj(item));\r\n    }\r\n\r\n    protected divView = (param:any) => {\r\n        return <Page header=\"选择Div\">\r\n            <List\r\n                items={param.items}\r\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\r\n        </Page>;\r\n    }\r\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\r\n    clickDivRow = (item:any) => {\r\n        this.ceasePage();\r\n        this.returnCall(item);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA, Page } from '../../components';\r\nimport { jsonStringify } from '../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../uq';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\n\r\nexport type TypeVTuidView = typeof VTuidView;\r\n\r\nexport class VTuidView extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    vForm: VForm;\r\n    id: number;\r\n\r\n    protected buildForm(param:any) {\r\n        this.vForm = this.createForm(undefined, param);\r\n    }\r\n\r\n    async open(param:any) {\r\n        this.buildForm(param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    render(param:any) {\r\n        this.buildForm(param);\r\n        return this.vForm.render();\r\n    }\r\n\r\n    async loadId(id: number) {\r\n        this.id = id;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.entity.save(this.id, values);\r\n        if (ret) {\r\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\r\n        }\r\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n            {this.vForm.render('py-3')}\r\n    </Page>;\r\n}\r\n","//import React from 'react';\r\nimport { VTuidView } from './vTuidView';\r\n\r\nexport class VTuidInfo  extends VTuidView {\r\n/*\r\n    async open(param?:any) {\r\n        this.open(this.view);\r\n    }\r\n*/\r\n/*\r\n    private view = () => {\r\n        return <Page>\r\n            TuidInfo\r\n        </Page>\r\n    }\r\n*/\r\n}\r\n","import { PageItems } from '../../tool';\r\nimport { Tuid } from '../../uq';\r\n\r\nexport class TuidPageItems<T> extends PageItems<T> {\r\n    private tuid: Tuid;\r\n    constructor(tuid: Tuid) {\r\n        super(true);\r\n        this.tuid = tuid;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.tuid.search(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { SearchBox, List, Page } from '../../components';\r\n//import { jsonStringify } from '../tools';\r\nimport { Tuid } from '../../uq';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\nimport { RowContent } from '../form/viewModel';\r\n\r\nexport abstract class VTuidListBase  extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    protected rowContent: (row:any) => JSX.Element;\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        this.rowContent = this.ui.rowContent || RowContent;\r\n        //if (this.entity.owner !== undefined) \r\n        this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n    private rowKey = (item:any) => {\r\n        let {id} = item;\r\n        return id;\r\n    }\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        /*\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        */\r\n        return <Page header={header}>\r\n            {/*ownerTop*/}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidList extends VTuidListBase {\r\n    protected async onSelected(item:any) {\r\n        if (this.controller.isImport === false)\r\n            this.event('edit', item.id);\r\n        else\r\n            this.event('info', item.id);\r\n    }\r\n}\r\n/*\r\nexport abstract class VTuidDivListBase  extends VPage<CTuidDiv> {\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        //this.PageItems = new TuidPageItems(this.entity);\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => {\r\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\r\n    }\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidDivList extends VTuidDivListBase {\r\n    protected async onSelected(item:any) {\r\n        this.event('edit', item.id);\r\n    }\r\n}\r\n*/","import _ from 'lodash';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { Tuid } from '../../uq';\r\nimport { VTuidMain } from './vTuidMain';\r\nimport { VTuidEdit } from './vTuidEdit';\r\nimport { VTuidSelect } from './vTuidSelect';\r\nimport { CUq } from '../cUq/cUq';\r\n//import { CLink } from '../link';\r\nimport { VTuidInfo } from './vTuidInfo';\r\nimport { TuidPageItems } from './pageItems';\r\nimport { VTuidList } from './vTuidList';\r\nimport { PageItems } from '../../tool';\r\n//import { Controller } from 'ui';\r\n\r\nexport interface TuidUI extends EntityUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    content?: React.StatelessComponent<any>;\r\n    rowContent?: React.StatelessComponent<any>;\r\n    divs?: {\r\n        [div:string]: {\r\n            CTuidSelect?: typeof CTuidSelect;\r\n            content?: React.StatelessComponent<any>;\r\n            rowContent?: React.StatelessComponent<any>;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\r\n    PageItems:PageItems<any>;\r\n\r\n    protected buildPageItems():PageItems<any> {\r\n        return new TuidPageItems(this.entity);\r\n    }\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first(key);\r\n    }\r\n\r\n    async getDivItems(ownerId:number):Promise<any[]> {\r\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport abstract class CTuidBase extends CTuid<Tuid> {\r\n    /*\r\n    constructor(cUq: CUq, entity:Tuid, ui: TuidUI, res:any) {\r\n        super(cUq, entity, ui, res);\r\n    }*/\r\n    \r\n    from():CTuidBase {\r\n        let ret = this; // this.entity.cFrom();\r\n        if (ret === undefined) return this;\r\n        return ret;\r\n    }\r\n\r\n    cUqFrom():CUq {\r\n        return this.cUq; // this.entity.cUqFrom();\r\n    }\r\n    cEditFrom(): CTuidEdit {\r\n        let cUq = this.cUq; // this.entity.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.entity.name);\r\n    }\r\n    cInfoFrom(): CTuidInfo {\r\n        let cUq = this.cUq; // this.entity.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.entity.name);\r\n    }\r\n    cSelectFrom(): CTuidSelect {\r\n        let cUq = this.cUq;// this.entity.cUqFrom();\r\n        return cUq.cTuidSelectFromName(this.entity.name);\r\n    }\r\n\r\n    getLable(tuid:Tuid):string {\r\n        if (tuid === this.entity) return this.label;\r\n        let {name} = tuid;\r\n        let {arrs} = this.res;\r\n        if (arrs !== undefined) {\r\n            let arr = arrs[name];\r\n            if (arr !== undefined) {\r\n                let label = arr.label;\r\n                if (label !== undefined) return label;\r\n            }\r\n        }\r\n        return name;\r\n    }\r\n\r\n    isImport: boolean;\r\n\r\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\r\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\r\n    protected get VTuidList():typeof VTuidList {return VTuidList}\r\n\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n        //let v: TypeVPage<CTuidMain>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': await this.onNew(); break;\r\n            case 'list': await this.onList(); break;\r\n            case 'edit': await this.onEdit(value); return;\r\n            case 'item-changed': this.itemChanged(value); return;\r\n            case 'info': \r\n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\r\n                await cTuidInfo.start(value);\r\n                return;\r\n        }\r\n        //await this.openVPage(v, value);\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        let cTuidEdit = this.ui && this.ui.CTuidEdit;\r\n        if (cTuidEdit === undefined) {\r\n            await this.openVPage(this.VTuidEdit, values);\r\n        }\r\n        else {\r\n            await (new cTuidEdit(this.cUq, this.entity, this.ui, this.res)).start(values);\r\n        }\r\n    }\r\n\r\n    private async onNew() {\r\n        await this.edit(undefined);\r\n    }\r\n\r\n    private async onList() {\r\n        let cTuidList = this.ui && this.ui.CTuidList;\r\n        if (cTuidList === undefined) {\r\n            await this.openVPage(this.VTuidList, undefined);\r\n        }\r\n        else {\r\n            await (new cTuidList(this.cUq, this.entity, this.ui, this.res)).start(undefined);\r\n        }\r\n    }\r\n\r\n    protected async onEdit(id:number) {\r\n        let values:any = undefined;\r\n        if (id !== undefined) {\r\n            values = await this.entity.load(id);\r\n        }\r\n        this.edit(values);\r\n        //await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n\r\n    private itemChanged({id, values}:{id:number, values: any}) {\r\n        if (this.PageItems === undefined) return;\r\n        let items = this.PageItems.items;\r\n        let item = items.find(v => v.id === id);\r\n        if (item !== undefined) {\r\n            _.merge(item, values);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CTuidMain extends CTuidBase {\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n}\r\n\r\nexport class CTuidEdit extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        if (typeof(id) === 'number') {\r\n            await this.onEdit(id);\r\n        }\r\n        else {\r\n            await this.edit(id);\r\n        }\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n}\r\n\r\nexport class CTuidList extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        await this.openVPage(this.VTuidList);\r\n    }\r\n}\r\n\r\nexport class CTuidDiv extends CTuid<Tuid> {\r\n    protected async internalStart():Promise<void> {\r\n        alert('tuid div: ??');\r\n    }\r\n}\r\n\r\nexport class CTuidSelect extends CTuid<Tuid> {\r\n    protected async internalStart(param?: any):Promise<void> {\r\n        await this.openVPage(this.VTuidSelect, param);\r\n    }\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        if (this.PageItems !== undefined) this.PageItems.reset();\r\n        return true;\r\n    }\r\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\r\n    idFromItem(item:any) {\r\n        return item.id;\r\n    }\r\n}\r\n\r\nexport class CTuidInfo extends CTuid<Tuid> {\r\n    protected async internalStart(id: any):Promise<void> {\r\n        let data = await this.entity.load(id)\r\n        await this.openVPage(this.VTuidInfo, data);\r\n    }\r\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\r\n}\r\n","export * from './cTuid';\r\nexport * from './vTuidMain';\r\nexport * from './vTuidEdit';\r\nexport * from './vTuidInfo';\r\nexport * from './vTuidView';\r\nexport * from './vTuidSelect';\r\n","import * as React from 'react';\r\nimport { VPage, Page, FA, nav, LMR, List } from \"../components\";\r\nimport { appInFrame } from '../net';\r\nimport { CAppBase } from \"./CAppBase\";\r\n\r\n/*\r\nexport class VAppMain extends VPage<CMainBase> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    render(param?:any) {\r\n        return this.appContent();\r\n    }\r\n\r\n    protected appPage = () => {\r\n        let {caption} = this.controller;\r\n        return <Page header={caption} logout={async()=>{appInFrame.unit = undefined}}>\r\n            {this.appContent()}\r\n        </Page>;\r\n    }\r\n\r\n    protected appContent = () => {\r\n        let {cUqArr} = this.controller;\r\n        let content:any;\r\n        if (cUqArr.length === 0) {\r\n            content = <div className=\"text-danger\">\r\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <>{content}</>;\r\n    };\r\n}\r\n*/\r\nexport class VUnsupportedUnit extends VPage<CAppBase> {\r\n    async open(predefinedUnit: number) {\r\n        this.openPage(this.page, predefinedUnit);\r\n    }\r\n\r\n    private page = (predefinedUnit: number) => {\r\n        let {user} = nav;\r\n        let userName:string = user? user.name : '[未登录]';\r\n        let {appOwner, appName} = this.controller.uqsMan;\r\n        return <Page header=\"APP无法运行\" logout={true}>\r\n            <div className=\"m-3 text-danger container\">\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">登录用户</div>\r\n                    <div className=\"col-sm text-body\">{userName}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">App</div>\r\n                    <div className=\"col-sm text-body\">{`${appOwner}/${appName}`}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">预设小号</div>\r\n                    <div className=\"col-sm text-body\">{predefinedUnit || <small className=\"\">[无预设小号]</small>}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">\r\n                        可能原因<FA name=\"exclamation-triangle\" />\r\n                    </div>\r\n                    <div className=\"col-sm text-body\">\r\n                        <ul className=\"p-0\">\r\n                            <li>没有小号运行 {appName}</li>\r\n                            <li>用户 <b>{userName}</b> 没有加入任何一个运行{appName}的小号</li>\r\n                            {\r\n                                predefinedUnit && \r\n                                <li>预设小号 <b>{predefinedUnit}</b> 没有运行App {appName}</li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">小号{predefinedUnit}</div>\r\n                    <div className=\"col-sm text-body\">\r\n                        预设小号定义在 public/unit.json 文件中。\r\n                        定义了这个文件的程序，只能由url直接启动。\r\n                        用户第一次访问app之后，会缓存在localStorage里。<br/>\r\n                        如果要删去缓存的预定义Unit，logout然后再login。\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class VUnitSelect extends VPage<CAppBase> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (item: any, index: number):JSX.Element => {\r\n        let {id, nick, name} = item;\r\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\r\n            <div>{nick || name}</div>\r\n        </LMR>;\r\n    }\r\n    private onRowClick = async (item: any) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        await this.controller.start();\r\n    }\r\n\r\n    private page = () => {\r\n        return <Page header=\"选择小号\" logout={true}>\r\n            <List items={this.controller.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>\r\n    }\r\n}\r\n\r\nexport class VErrorsPage extends VPage<CAppBase> {\r\n    async open(errors:string[]) {\r\n        this.openPage(this.page, {errors:errors});\r\n    }\r\n\r\n    private page = (errors:{errors:string[]}) => {\r\n        return <Page header=\"ERROR\">\r\n            <div className=\"m-3\">\r\n                <div>Load Uqs 发生错误：</div>\r\n                {errors.errors.map((r, i) => <div key={i}>{r}</div>)}\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class VStartError extends VPage<CAppBase> {\r\n    async open(error:any) {\r\n        this.openPage(this.page, error);\r\n    }\r\n\r\n    private page = (error:any) => {\r\n        return <Page header=\"App start error!\">\r\n            <pre>\r\n                {typeof error === 'string'? error : error.message}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}","import { Entity } from './entity';\r\nimport { ActionCaller } from './caller';\r\n\r\nexport class Action extends Entity {\r\n    get typeName(): string { return 'action';}\r\n    async submit(data:object) {\r\n        //await this.loadSchema();\r\n        //let text = this.pack(data);\r\n        //return await this.uqApi.action(this.name, {data:text});\r\n        return await new ActionSubmitCaller(this, data).request();\r\n    }\r\n    async submitReturns(data:object):Promise<{[ret:string]:any[]}> {\r\n        /*\r\n        await this.loadSchema();\r\n        let text = this.pack(data);\r\n        let result = await this.uqApi.actionReturns(this.name, {data:text});\r\n        */\r\n       return await new SubmitReturnsCaller(this, data).request();\r\n    }\r\n}\r\n\r\nexport class ActionSubmitCaller extends ActionCaller {\r\n    get path():string {return 'action/' + this.entity.name;}\r\n    buildParams():any {return {data: this.entity.pack(this.params)}}\r\n}\r\n\r\nclass SubmitReturnsCaller extends ActionSubmitCaller {\r\n    get path():string {return 'action/' + this.entity.name + '/returns';}\r\n    xresult(res:any):any {\r\n        let {returns} = this.entity;\r\n        let len = returns.length;\r\n        let ret:{[r:string]:any[]} = {};\r\n        for (let i=0; i<len; i++) {\r\n            let retSchema = returns[i];\r\n            ret[retSchema.name] = res[i];\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VSubmit } from './vSubmit';\r\n\r\nexport abstract class VBand {\r\n    protected label: string;\r\n    protected view = () => <div />;\r\n\r\n    constructor(label:string) {\r\n        this.label = label;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        //text-sm-right\r\n        return <div key={this.key} className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">\r\n                    {this.label}\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                    {this.renderContent()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {}\r\n    get key() {return this.label}\r\n    public getVFields():VField[] {return;}\r\n    public getVArr():VArr {return;}\r\n    public getVSubmit():VSubmit {return;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\r\n    }\r\n}\r\n\r\nexport interface FieldRes {\r\n    label: string;\r\n    placeHolder: string;\r\n    suffix: string;\r\n}\r\nexport class VFieldBand extends VBand {\r\n    protected vField:VField;\r\n    constructor(label:string, vField:VField) {\r\n        super(label);\r\n        this.vField = vField;\r\n    }\r\n\r\n    get key() {return this.vField.name}\r\n    public getVFields():VField[] {return [this.vField];}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return this.vField.render();\r\n        /*\r\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            {this.vField.render()}\r\n        </div>;*/\r\n    }\r\n}\r\n\r\nexport class VArrBand extends VBand {\r\n    protected vArr:VArr;\r\n    constructor(label:string, vArr:VArr) {\r\n        super(label);\r\n        this.vArr = vArr;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\r\n    get key() {return this.vArr.name}\r\n    public getVArr():VArr {return this.vArr;}\r\n\r\n    render():JSX.Element {\r\n        return <React.Fragment key={this.key}>\r\n            {this.vArr && this.vArr.render()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport class VFieldsBand extends VBand {\r\n    protected vFields: VField[];\r\n    constructor(label:string, vFields:VField[]) {\r\n        super(label);\r\n        this.vFields = vFields;\r\n    }\r\n\r\n    get key() {return this.vFields[0].name}\r\n    public getVFields():VField[] {return this.vFields;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            fields\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class VSubmitBand extends VBand {\r\n    protected vSubmit: VSubmit;\r\n    constructor(vSubmit:VSubmit) {\r\n        super(undefined);\r\n        this.vSubmit = vSubmit;\r\n    }\r\n\r\n    get key() {return '$submit'}\r\n\r\n    public getVSubmit():VSubmit {return this.vSubmit;}\r\n\r\n    render():JSX.Element {\r\n        return <div key=\"$submit\" className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <div className=\"offset-sm-2 col-sm-10\">\r\n                    {this.vSubmit.render()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\n//import classNames from 'classnames'\r\nimport { ViewModel } from './viewModel';\r\nimport { VForm } from './vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VSubmit extends ViewModel {\r\n    private vForm: VForm;\r\n    constructor(vForm: VForm) {\r\n        super();\r\n        this.vForm = vForm;\r\n        this.caption = this.vForm.submitCaption;\r\n        this.className = 'btn btn-primary w-25';\r\n    }\r\n    @observable caption: string;\r\n    @observable className: string;\r\n\r\n    private onClickSubmit = async () => {\r\n        this.vForm.submit();\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let {isOk} = this.vForm;\r\n        return <button type=\"button\" \r\n            onClick={this.onClickSubmit}\r\n            className={this.className}\r\n            disabled={isOk === false}>\r\n            {this.caption}\r\n        </button>;\r\n    });\r\n}","\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any):void;\r\n}\r\n\r\nexport class RuleRequired extends Rule {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if (isNaN(value as number) === true) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push('不能为空');\r\n    }\r\n}\r\n\r\nexport class RuleNum extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (isNaN(n) === true) defy.push('必须是数字');\r\n    }\r\n}\r\n\r\nexport class RuleInt extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\r\n            defy.push('必须是整数');\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleMin extends RuleNum {\r\n    constructor(min: number) {\r\n        super();\r\n        this.min = min;\r\n    }\r\n    min: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\r\n    }\r\n}\r\n\r\nexport class RuleMax extends RuleNum {\r\n    constructor(max: number) {\r\n        super();\r\n        this.max = max;\r\n    }\r\n    max: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { computed } from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from '../../../components';\r\nimport { ViewModel } from '../viewModel';\r\nimport { VForm, FormMode } from '../vForm';\r\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\r\nimport { Field } from '../../../uq';\r\nimport { FieldRes } from '../vBand';\r\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\r\n\r\nexport abstract class VField extends ViewModel {\r\n    protected form: VForm;\r\n    protected fieldUI: FieldUI;\r\n    protected fieldRes:FieldRes;\r\n    protected field: Field;\r\n    protected rules: Rule[];\r\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super();\r\n        this.form = form;\r\n        this.field = field;\r\n        this.name = field.name;\r\n        this.fieldUI = fieldUI || {} as any;\r\n        this.fieldRes = fieldRes || {} as any;\r\n        this.init();\r\n    }\r\n\r\n    name: string;\r\n\r\n    protected init() {\r\n        this.buildRules();\r\n    }\r\n\r\n    protected buildRules() {\r\n        this.rules = [];\r\n        let {required} = this.fieldUI;\r\n        if (required === true || (this.field !== undefined && this.field.null === false)) {\r\n            this.rules.push(new RuleRequired());\r\n        }\r\n    }\r\n\r\n    @computed get checkRules(): string[] {\r\n        let defy:string[] = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        return defy;\r\n    }\r\n\r\n    @computed get isOk() {\r\n        if (this.rules.length === 0) return true;\r\n        let defy = this.checkRules;\r\n        return defy.length === 0;\r\n    }\r\n\r\n    @computed get value() { return this.form.values[this.name]; }\r\n    setValue(v:any) {\r\n        this.form.values[this.name]=v; \r\n    }\r\n    get error() { return this.form.errors[this.name]; }\r\n    set error(err:any) { this.form.errors[this.name]=err; }\r\n    protected parse(str:string):any {return str;}\r\n    get readonly():boolean {\r\n        let {mode} = this.form;\r\n        return mode === FormMode.readonly || \r\n            (mode === FormMode.edit && this.fieldUI.editable === false);\r\n    }\r\n}\r\n\r\nexport class VUnknownField extends VField {\r\n    protected view = () => {\r\n        //let {name, type} = this.fieldUI;\r\n        let type='', name = '';\r\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\r\n            placeholder={'unkown control: ' + type + '-' + name} />;\r\n    }\r\n}\r\n\r\nexport abstract class VInputControl extends VField {\r\n    protected fieldUI: FieldInputUI;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected inputType:string;\r\n    protected get maxLength():number {return undefined}\r\n\r\n    protected renderError = (className:string) => {\r\n        let {errors} = this.form;\r\n        let error = errors[this.name];\r\n        if (error === undefined) return;\r\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\r\n    }\r\n\r\n    /*\r\n    get value() {\r\n        return super.value;\r\n    }*/\r\n    setValue(v:any) {\r\n        super.setValue(v); this.setInputValue(); \r\n    }\r\n\r\n    protected ref = (input:HTMLInputElement) => {\r\n        this.input = input;\r\n        this.setInputValue();\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    protected onBlur = () => {\r\n        let defy = this.checkRules;\r\n        if (defy.length > 0) {\r\n            this.error = defy[0];\r\n        }\r\n        this.form.computeFields();\r\n    }\r\n\r\n    protected onChange = (evt: React.ChangeEvent<any>) => {\r\n        let v = this.parse(evt.currentTarget.value);\r\n        if (v === null) {\r\n            return;\r\n        }\r\n        this.setValue(v);\r\n    }\r\n\r\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\r\n    \r\n    protected view = observer(() => {\r\n        let {required} = this.fieldUI;\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = ['form-control', 'form-control-input'];\r\n        let errCN = 'text-danger small mt-1 mx-2';\r\n    \r\n        let redDot;\r\n        let input;\r\n        if (this.readonly === true) {\r\n            input = <input className={classNames(ctrlCN, 'bg-light')}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                readOnly={true}\r\n            />;\r\n        }\r\n        else {\r\n            input = <input className={classNames(ctrlCN)}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                onFocus={this.onFocus}\r\n                onBlur={this.onBlur}\r\n                onChange={this.onChange}\r\n                placeholder={placeHolder}\r\n                readOnly={false}\r\n                maxLength={this.maxLength}\r\n                onKeyPress={this.onKeyPress}\r\n            />;\r\n            if (required === true || this.field.null === false) {\r\n                redDot = <RedMark />;\r\n            }\r\n        }\r\n\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n\r\n        return <>\r\n            {redDot}\r\n            {inputGroup}\r\n            {this.renderError(errCN)}\r\n        </>\r\n    });\r\n}\r\n\r\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\r\n\r\nexport class VStringField extends VInputControl {\r\n    protected fieldUI: FieldStringUI;\r\n    protected inputType:string = 'text';\r\n    protected get maxLength():number {return this.field.size}\r\n}\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport abstract class VNumberControl extends VInputControl {\r\n    protected fieldUI: FieldNumberUI;\r\n    protected extraChars: number[];\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        if (this.fieldUI !== undefined) {\r\n            let {min, max} = this.fieldUI;\r\n            if (min !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n            }\r\n            else {\r\n                this.extraChars.push(KeyCode_Neg);\r\n            }\r\n    \r\n            if (max !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n            }\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'bigint':\r\n            case 'int':\r\n            case 'smallint':\r\n            case 'tinyint':\r\n                this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleNum());\r\n        let {min, max} = this.fieldUI;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n    }\r\n\r\n    inputType:string = 'number';\r\n\r\n    protected parse(text:string):any {\r\n        try {\r\n            if (text.trim().length === 0) return undefined;\r\n            let ret = Number(text);\r\n            return (isNaN(ret) === true)? null : ret;\r\n        }\r\n        catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        if (this.parse(this.input.value) === v) return;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || (ch >= 48 && ch <= 57)) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.input.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.input.value = v;\r\n    }\r\n}\r\n\r\nexport class VIntField extends VNumberControl {\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleInt());\r\n    }\r\n}\r\n\r\nexport class VDecField extends VNumberControl {\r\n}\r\n\r\nexport class VTextField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateTimeField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateField extends VStringField {\r\n\r\n}\r\n","import React from 'react';\r\nimport { VField } from './vField';\r\nimport { Field } from '../../../uq';\r\nimport { VForm } from '../vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { FieldRes } from '../vBand';\r\n\r\nexport class VComputeField extends VField {\r\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\r\n        super(form, field, undefined, fieldRes);\r\n    }\r\n    protected view = observer(() => {\r\n        let value = this.form.values[this.field.name];\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = 'form-control form-control-input bg-light';\r\n        if (value === null) value = '';\r\n        let input = <input className={ctrlCN}\r\n            type=\"text\"\r\n            placeholder={placeHolder}\r\n            readOnly={true}\r\n            value={value}/>\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n        return inputGroup;\r\n        /*\r\n            return <div \r\n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\r\n            {value} &nbsp;\r\n        </div>;\r\n        */\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { IObservableArray } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Page, nav, List, Muted } from '../../components';\r\nimport { ViewModel, TypeContent, JSONContent } from './viewModel';\r\nimport { ArrFields } from '../../uq';\r\nimport { VForm, FieldInputs, FormMode } from './vForm';\r\nimport { FormArr } from '../formUI';\r\n\r\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\r\n\r\nexport class VArr extends ViewModel {\r\n    protected mode: FormMode;\r\n    protected label: any;\r\n    protected header: any;\r\n    protected footer: any;\r\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\r\n    protected onEditRow: ArrEditRow;\r\n    protected ownerForm:VForm;\r\n    protected vForm:VForm;\r\n    protected rowContent:TypeContent;\r\n    protected none: string;\r\n    protected newSubmitCaption: string;\r\n    protected editSubmitCaption: string;\r\n    protected addRow: ()=>Promise<void>;\r\n\r\n    name:string;\r\n    list: IObservableArray<any>;\r\n\r\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\r\n        super();\r\n        this.ownerForm = ownerForm;\r\n        let {name, fields} = arr;\r\n        this.name = name;\r\n        let {ui, res, mode, inputs, values} = ownerForm;\r\n        let arrsRes = res.arrs;\r\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\r\n        let {label, none, newSubmit, editSubmit} = arrRes;\r\n        this.none = none || ownerForm.none;\r\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\r\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\r\n        this.label = label || name;\r\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\r\n        this.rowContent = arrUI.rowContent;// || JSONContent;\r\n        this.mode = mode;\r\n        if (this.onEditRow === undefined) {\r\n            this.vForm = new VForm({\r\n                fields: fields,\r\n                arrs: undefined,\r\n                ui: arrUI,\r\n                res: arrRes,\r\n                inputs: inputs[name] as FieldInputs,\r\n                none: ownerForm.none,\r\n                submitCaption: 'submit',\r\n                arrNewCaption: undefined,\r\n                arrEditCaption: undefined,\r\n                arrTitleNewButton: undefined,\r\n                mode: mode,\r\n            }, \r\n            mode===FormMode.readonly? undefined: this.onSubmit);\r\n        }\r\n        else {\r\n            this.onEditRow = onEditRow;\r\n        }\r\n        this.list = values[name];\r\n    }\r\n\r\n    reset() {\r\n        this.vForm.reset();\r\n        this.list.clear();\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {\r\n        this.addRow = addRow;\r\n    }\r\n\r\n    protected rowPage = () => {\r\n        return <Page header={this.label} back=\"close\">\r\n            {this.vForm.render('py-3')}\r\n        </Page>\r\n    }\r\n    private onSubmit = async () => {\r\n        let {valueBoxs} = this.vForm;\r\n        await this.onRowChanged(valueBoxs);\r\n    }\r\n\r\n    private onRowChanged = async (rowValues:any) => {\r\n        if (this.rowValues === undefined) {\r\n            rowValues.$owner = this.ownerForm.values;\r\n            this.list.push(rowValues);\r\n            if (this.onEditRow === undefined)\r\n                this.vForm.reset();\r\n            else\r\n                await this.onEditRow(undefined, this.onRowChanged);\r\n        }\r\n        else {\r\n            _.merge(this.rowValues, rowValues);\r\n            if (this.onEditRow === undefined) nav.pop();\r\n        }\r\n    }\r\n\r\n    private renderItem = (item:any, index:number) => {\r\n        if (this.rowContent === undefined)\r\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\r\n        return <this.rowContent {...item} />;\r\n    }\r\n    private showRow = async (rowValues:any):Promise<any> => {\r\n        if (this.onEditRow !== undefined) {\r\n            await this.onEditRow(rowValues, this.onRowChanged);\r\n            return;\r\n        }\r\n        this.vForm.reset();\r\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\r\n        nav.push(<this.rowPage />);\r\n    }\r\n    private editRow = async (rowValues:any): Promise<void> => {\r\n        this.rowValues = rowValues;\r\n        let {vSubmit} = this.vForm;\r\n        if (vSubmit !== undefined) {\r\n            vSubmit.caption = this.editSubmitCaption;\r\n            vSubmit.className = 'btn btn-outline-success';\r\n        }\r\n        this.vForm.mode = this.ownerForm.mode;\r\n        await this.showRow(rowValues);\r\n    }\r\n    private internalAddRow = async () => {\r\n        this.rowValues = undefined;\r\n        let {vSubmit} = this.vForm;\r\n        vSubmit.caption = this.newSubmitCaption;\r\n        vSubmit.className = 'btn btn-outline-success';\r\n        this.vForm.reset();\r\n        this.vForm.mode = FormMode.new;\r\n        await this.showRow(undefined);\r\n    }\r\n\r\n    protected view = () => {\r\n        let button;\r\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\r\n            button = <button onClick={this.addRow || this.internalAddRow}\r\n                type=\"button\" \r\n                className=\"btn btn-link p-0\">\r\n                {this.ownerForm.arrTitleNewButton}\r\n            </button>;\r\n        }\r\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\r\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\r\n            {button}\r\n        </div>;\r\n        return <List className=\"pb-3\"\r\n            header={header}\r\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\r\n            items={this.list}\r\n            item={{render: this.renderItem, onClick: this.editRow}} />;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from '../../cUq/reactBoxId';\r\nimport { Field, TuidBox } from '../../../uq';\r\nimport { VField, RedMark } from './vField';\r\nimport { FieldUI } from '../../formUI';\r\nimport { VForm, FieldInput } from '../vForm';\r\nimport { FieldRes } from '../vBand';\r\n\r\nconst buttonStyle:React.CSSProperties = {\r\n    textAlign:'left', \r\n    paddingLeft:'0.75rem', \r\n    paddingRight:'0.75rem', \r\n    overflow: 'hidden'\r\n};\r\n\r\nexport class VTuidField extends VField {\r\n    protected vForm: VForm;\r\n    protected input: FieldInput;\r\n    protected tuid: TuidBox;\r\n\r\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super(vForm, field, fieldUI, fieldRes);\r\n        this.tuid = field._tuid;\r\n        this.vForm = vForm;\r\n        this.input = vForm.inputs[field.name] as FieldInput;\r\n    }\r\n\r\n    onClick = async () => {\r\n        if (this.readonly === true) {\r\n            if (!this.value) return;\r\n            await this.tuid.showInfo(); //this.value.id);\r\n            return;\r\n        }\r\n        let id:number;\r\n        if (this.input !== undefined) {\r\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\r\n        }\r\n        else {\r\n            alert('call undefined');\r\n            id = 0;\r\n        }\r\n        this.setValue(this.tuid.boxId(id));\r\n    }\r\n    protected view = observer(() => {\r\n        let {placeHolder} = this.fieldRes;\r\n        let disabled:boolean = false;\r\n        //let {_ownerField} = this.field;\r\n        let {_tuid} = this.field;\r\n        let {ownerField} = _tuid;\r\n        if (ownerField !== undefined) {\r\n            let {name} = ownerField;\r\n            disabled = this.vForm.getValue(name) === null;\r\n        }\r\n        let content;\r\n        if (this.value === null)\r\n            content = <>{placeHolder || this.input.placeHolder}</>;\r\n        else if (typeof this.value === 'object') {\r\n            content = tv(this.value);\r\n        }\r\n        else {\r\n            let idBox = this.tuid.boxId(this.value);\r\n            content = tv(idBox); // idBox.content();\r\n        }\r\n        if (this.readonly === true)\r\n        {\r\n            return <div \r\n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </div>;\r\n        }\r\n        let {required} = this.fieldUI;\r\n        let redDot = (required === true || this.field.null === false) && <RedMark />;\r\n        return <>\r\n            {redDot}\r\n            <button className=\"form-control btn btn-outline-info\"\r\n                type=\"button\"\r\n                disabled={disabled}\r\n                style={buttonStyle}\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </button>\r\n        </>;\r\n    })\r\n}\r\n","import { VBand, VFieldBand, VArrBand, VSubmitBand, FieldRes } from './vBand';\r\nimport { Field, ArrFields } from '../../uq';\r\nimport { VForm, FormOptions } from './vForm';\r\nimport { FormItems, FieldUI, FormItem } from '../formUI';\r\nimport { VSubmit } from './vSubmit';\r\nimport { VField, buildVField, VComputeField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VTuidField } from './vField/vTuidField';\r\n\r\nexport class BandsBuilder {\r\n    private vForm: VForm;\r\n    private onSubmit: (values:any)=>Promise<void>;\r\n    private fields: Field[];\r\n    private arrs: ArrFields[];\r\n    private formItems: FormItems;\r\n    private layout: string[];\r\n    private res: any;\r\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.vForm = vForm;\r\n        this.onSubmit = onSubmit;\r\n        let {fields, arrs, ui, res} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        if (ui !== undefined) {\r\n            let {items, layout} = ui;\r\n            this.formItems = items;\r\n            this.layout = layout;\r\n        }\r\n        this.res = res;\r\n    }\r\n\r\n    build():VBand[] {\r\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\r\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\r\n    }\r\n\r\n    private resFromName(name:string, res:any):string|FieldRes {\r\n        if (res === undefined) return;\r\n        let {fields} = res;\r\n        if (fields === undefined) return;\r\n        return fields[name] || name;\r\n    }\r\n\r\n    private bandsOnFly():VBand[] {\r\n        let bands:VBand[] = [];\r\n        this.bandsFromFields(bands, this.fields, this.res);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\r\n        }\r\n        if (this.onSubmit !== undefined) {\r\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\r\n        }\r\n        return bands;\r\n    }\r\n\r\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\r\n        if (fields === undefined) return;\r\n        for (let field of fields) bands.push(this.bandFromField(field, res));\r\n    }\r\n\r\n    private bandsFromLayout():VBand[] {\r\n        let bands:VBand[] = [];\r\n        /*\r\n        for (let bandUI of this.bandUIs)  {\r\n            let band = this.bandFromUI(bandUI);\r\n            bands.push(band);\r\n        }\r\n        */\r\n        return bands;\r\n    }\r\n\r\n    /*\r\n    private bandFromUI(bandUI:BandUI):VBand {\r\n        let {band} = bandUI;\r\n        switch (band) {\r\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\r\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\r\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\r\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\r\n        }\r\n    }\r\n    \r\n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\r\n        let {label} = bandUI;\r\n        let vField = this.vFieldFromUI(bandUI);\r\n        return new VFieldBand(label, vField);\r\n    }\r\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\r\n        let {label, name} = bandUI;\r\n        let vArr = this.vArrFromUI(bandUI);\r\n        return new VArrBand(label, vArr);\r\n    }\r\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\r\n        let {label, fieldUIs} = bandUI;\r\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\r\n        return new VFieldsBand(label, vFields);\r\n    }\r\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\r\n        if (this.onSubmit === undefined) return;\r\n        let vSubmit = new VSubmit(this.vForm);\r\n        return new VSubmitBand(vSubmit);\r\n    }\r\n    */\r\n/*\r\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\r\n        let fieldUI:FieldUI = undefined;\r\n        if (formItem !== undefined) {\r\n            if (typeof formItem === 'function') {\r\n                return new VComputeField(this.vForm, field, fieldRes);\r\n            }\r\n        }\r\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\r\n        if (ret !== undefined) return ret;\r\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\r\n    }\r\n*/\r\n    private bandFromField(field:Field, res:any):VBand {\r\n        let {name} = field;\r\n        let fieldRes:FieldRes;\r\n        let rfn = this.resFromName(name, res);\r\n        let label:string;\r\n        if (typeof rfn === 'object') {\r\n            label = rfn.label;\r\n            fieldRes = rfn;\r\n        }\r\n        else {\r\n            label = rfn as string;\r\n            fieldRes = undefined;\r\n        }\r\n        let vField:VField;\r\n        let formItem:FormItem;\r\n        if (this.formItems !== undefined) formItem = this.formItems[name];\r\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\r\n        //let fieldUI:FieldUI = undefined;\r\n        if (typeof formItem === 'function') {\r\n            vField = new VComputeField(this.vForm, field, fieldRes);\r\n        }\r\n        else {\r\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        if (vField === undefined) {\r\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        return new VFieldBand(label || name, vField);\r\n    }\r\n\r\n    private bandFromArr(arr: ArrFields):VBand {\r\n        let {name} = arr;\r\n        //let row = JSONContent;\r\n        //let bands:VBand[] = [];\r\n        //this.bandsFromFields(bands, fields, res);\r\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\r\n        return new VArrBand(name, vArr);\r\n    }\r\n\r\n    /*\r\n    private vFieldFromUI(fieldUI:FieldUI):VField {\r\n        return;\r\n    }\r\n\r\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\r\n        return;\r\n    }\r\n    */\r\n}\r\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField, VDateField } from './vField';\r\nimport { Field } from '../../../uq';\r\nimport { FieldRes } from '../vBand';\r\nimport { VForm } from '../vForm';\r\nimport { FieldUI } from '../../formUI';\r\n\r\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\r\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\r\n    switch (field.type) {\r\n        default: return;\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n            vField = VIntField;\r\n            break;\r\n        case 'id':\r\n            let {_tuid} = field;\r\n            if (_tuid !== undefined) return;\r\n            vField = VIntField;\r\n            break;\r\n        case 'dec':\r\n            vField = VDecField;\r\n            break;\r\n        case 'char':\r\n            vField = VStringField;\r\n            break;\r\n        case 'text':\r\n            vField = VTextField;\r\n            break;\r\n        case 'datetime':\r\n            vField = VDateTimeField;\r\n            break;\r\n        case 'date':\r\n            vField = VDateField;\r\n            break;\r\n    }\r\n    return new vField(form, field, fieldUI, fieldRes);\r\n}\r\n\r\n","import * as React from 'react';\r\n//import * as _ from 'lodash';\r\nimport { observer } from 'mobx-react';\r\nimport { VBand } from './vBand';\r\nimport { BandsBuilder } from './bandsBuilder';\r\nimport { Field, ArrFields } from '../../uq';\r\nimport { computed, observable, IObservableObject } from 'mobx';\r\nimport { VArr } from './vArr';\r\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\r\nimport { VField } from './vField';\r\nimport { VSubmit } from './vSubmit';\r\nimport { IObservableArray } from 'mobx';\r\nimport { FA } from '../../components';\r\n\r\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\r\nexport interface FieldInput {\r\n    select: FieldCall;\r\n    content: React.StatelessComponent<any>;\r\n    placeHolder: string;\r\n}\r\nexport interface FieldInputs {\r\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\r\n}\r\nexport enum FormMode {new, edit, readonly}\r\n\r\nexport interface FormOptions {\r\n    fields: Field[];\r\n    arrs?: ArrFields[];\r\n    ui: FormUIBase;\r\n    res: any;\r\n    inputs: FieldInputs;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n    none: string;\r\n    mode: FormMode;\r\n}\r\n\r\nexport class VForm {\r\n    protected fields: Field[];\r\n    protected arrs: ArrFields[];\r\n    protected bands: VBand[];\r\n    protected bandColl: {[key:string]: VBand};\r\n    protected onSubmit: ()=>Promise<void>;\r\n\r\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\r\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        this.ui = ui;\r\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\r\n        this.res = res;\r\n        this.inputs = inputs;\r\n        this.none = none;\r\n        this.submitCaption = submitCaption;\r\n        this.arrNewCaption = arrNewCaption;\r\n        this.arrEditCaption = arrEditCaption;\r\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\r\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\r\n        else this.mode = mode;\r\n        this.buildFormValues();\r\n        this.buildBands(options, onSubmit);\r\n        this.onSubmit = onSubmit;\r\n    }\r\n\r\n    ui: FormUI;\r\n    res: any;\r\n    values: any;\r\n    errors: any;\r\n    formItems: FormItems;\r\n    mode: FormMode;\r\n    vFields: {[name:string]:VField} = {};\r\n    vArrs: {[name:string]: VArr} = {};\r\n    vSubmit: VSubmit;\r\n    inputs: FieldInputs;\r\n    none: string;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n\r\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.bandColl = {};\r\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\r\n        this.bands = bandsBuilder.build();\r\n        for (let band of this.bands) {\r\n            this.bandColl[band.key] = band;\r\n            let vFields = band.getVFields();\r\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\r\n            let vArr = band.getVArr();\r\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\r\n            let vSubmit = band.getVSubmit();\r\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\r\n        }\r\n    }\r\n\r\n    private onFormSubmit = (event:React.FormEvent<any>) => {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    protected view = observer(({className}:{className:string}) => {\r\n        return <form className={className} onSubmit={this.onFormSubmit}>\r\n            {this.bands.map(v => v.render())}\r\n        </form>;\r\n    });\r\n\r\n    getBand(name:string) {\r\n        return this.bandColl[name];\r\n    }\r\n\r\n    computeFields() {\r\n        if (this.formItems === undefined) return;\r\n        let values = this.values;\r\n        for (let i in this.formItems) {\r\n            let item = this.formItems[i];\r\n            if (typeof item !== 'function') continue;\r\n            values[i] = item.call(this, values);\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.onSubmit === undefined) return;\r\n        await this.onSubmit();\r\n    }\r\n    \r\n    getValues() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name} = f;\r\n            let v = values[name]\r\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\r\n        }\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                let {name, fields, id, order} = arr;\r\n                let list:any[] = ret[name] = [];\r\n                let rows = this.vArrs[name].list;\r\n                for (let row of rows) {\r\n                    let item = {} as any;\r\n                    if (id !== undefined) item[id] = row[id];\r\n                    if (order !== undefined) item[order] = row[order];\r\n                    for (let f of fields) {\r\n                        let {name:fn} = f;\r\n                        let v = row[fn]\r\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\r\n                    }\r\n                    list.push(item);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    get valueBoxs() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name, _tuid} = f;\r\n            let v = values[name]\r\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n        }\r\n        if (this.arrs === undefined) return ret;\r\n        for (let arr of this.arrs) {\r\n            let {name, fields} = arr;\r\n            let list = ret[name] = this.vArrs[name].list.slice();\r\n            for (let row of list) {\r\n                for (let f of fields) {\r\n                    let {name:fn, _tuid} = f;\r\n                    let v = row[fn]\r\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setValues(initValues:any) {\r\n        if (initValues === undefined) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            errors[fn] = undefined;\r\n            let v =  initValues[fn];\r\n            values[fn] = v;\r\n        }\r\n        // 还要设置arrs的values\r\n        for (let i in this.vArrs) {\r\n            let list = initValues[i];\r\n            if (list === undefined) continue;\r\n            let arrList = values[i] as IObservableArray<any>;\r\n            arrList.clear();\r\n            arrList.push(...list);\r\n        }\r\n    }\r\n\r\n    @computed get isOk():boolean {\r\n        for (let i in this.vFields) {\r\n            if (this.vFields[i].isOk === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    reset() {\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\r\n            values[fn] = null;\r\n            errors[fn] = undefined;\r\n        }\r\n        for (let i in this.vFields) {\r\n            let ctrl = this.vFields[i];\r\n            let cn = ctrl.name;\r\n            if (cn === undefined) continue;\r\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\r\n            ctrl.setValue(null);\r\n        }\r\n        for (let i in this.vArrs) {\r\n            let vArr = this.vArrs[i];\r\n            vArr.reset();\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        return this.values[fieldName];\r\n    }\r\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\r\n\r\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\r\n\r\n    private buildFieldValues(fields: Field[]):any {\r\n        let v: {[p:string]: any} = {\r\n            valueFromFieldName: function(propName:string) {\r\n                return this[propName];\r\n            }\r\n        };\r\n        for (let f of fields) {\r\n            let fn = f.name;\r\n            v[fn] = null;\r\n        }\r\n        return v;\r\n    }\r\n    private buildObservableValues():IObservableObject {\r\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                v[arr.name] = observable.array([], {deep:true});\r\n            }\r\n        }\r\n        let ret = observable(v);\r\n        return ret;\r\n    }\r\n    private buildFormValues() {\r\n        this.values = this.buildObservableValues();\r\n        this.errors = observable(this.buildFieldValues(this.fields));\r\n    }\r\n\r\n    render(className:string = \"py-3\"):JSX.Element {\r\n        return <this.view className={className} />\r\n    }\r\n}\r\n","export * from './vForm';\r\n","import { observable } from 'mobx';\r\nimport { isNumber } from 'util';\r\nimport _ from 'lodash';\r\nimport { LocalArr } from '../../tool';\r\nimport { BoxId } from './boxId';\r\nimport { TuidInner, TuidDiv } from './tuid';\r\n\r\nconst maxCacheSize = 1000;\r\n\r\nexport class IdCache {\r\n    private queue: number[] = [];               // 每次使用，都排到队头\r\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\r\n\r\n    protected localArr:LocalArr;\r\n    protected waitingIds: number[] = [];          // 等待loading的\r\n    protected tuidInner: TuidInner;\r\n\r\n    constructor(tuidLocal: TuidInner) {\r\n        this.tuidInner = tuidLocal;\r\n        this.initLocalArr();\r\n    }\r\n\r\n    protected initLocalArr() {\r\n        this.localArr = this.tuidInner.cache.arr(this.tuidInner.name + '.ids');\r\n    }\r\n\r\n    useId(id:number, defer?:boolean) {\r\n        if (id === undefined || id === 0) return;\r\n        if (isNumber(id) === false) return;\r\n        if (this.cache.has(id) === true) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n        this.tuidInner.cacheTuids(defer===true?70:20);\r\n        this.cache.set(id, id);\r\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n\r\n        if (this.queue.length >= maxCacheSize) {\r\n            // 缓冲已满，先去掉最不常用的\r\n            let r = this.queue.shift();\r\n            if (r === id) {\r\n                // 如果移除的，正好是现在用的，则插入\r\n                this.queue.push(r);\r\n                return;\r\n            }\r\n\r\n            //let rKey = String(r);\r\n            if (this.cache.has(r) === true) {\r\n                // 如果移除r已经缓存\r\n                this.cache.delete(r);\r\n            }\r\n            else {\r\n                // 如果移除r还没有缓存\r\n                let index = this.waitingIds.findIndex(v => v === r);\r\n                this.waitingIds.splice(index, 1);\r\n            }\r\n        }\r\n        this.waitingIds.push(id);\r\n        this.queue.push(id);\r\n        return;\r\n    }\r\n\r\n    private moveToHead(id:number) {\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.queue.push(id);\r\n    }\r\n\r\n    getValue(id:number) {\r\n        return this.cache.get(id);\r\n    }\r\n\r\n    remove(id:number) {\r\n        this.cache.delete(id);\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n    }\r\n\r\n    valueFromId(id:number|BoxId):any {\r\n        let _id:number;\r\n        switch (typeof id) {\r\n            case 'object': _id = (id as BoxId).id; break;\r\n            case 'number': _id = id as number; break;\r\n            default: return;\r\n        }\r\n        return this.getValue(_id);\r\n    }\r\n\r\n    resetCache(id:number) {\r\n        this.remove(id);\r\n        this.useId(id);\r\n    }\r\n\r\n    cacheValue(val:any):boolean {\r\n        if (val === undefined) return false;\r\n        let id = this.getIdFromObj(val);\r\n        if (id === undefined) return false;\r\n        let index = this.waitingIds.findIndex(v => v === id);\r\n        if (index>=0) this.waitingIds.splice(index, 1);\r\n        this.cache.set(id, val);\r\n        return true;\r\n    }\r\n    protected getIdFromObj(val:any) {return this.tuidInner.getIdFromObj(val)}\r\n\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let tuidValues = await this.loadIds();\r\n        await this.cacheIdValues(tuidValues);\r\n    }\r\n\r\n    private async cacheIdValues(tuidValues: any[]) {\r\n        if (tuidValues === undefined) return;\r\n        let tuids = this.unpackTuidIds(tuidValues);\r\n        for (let tuidValue of tuids) {\r\n            if (this.cacheValue(tuidValue) === false) continue;\r\n            this.cacheTuidFieldValues(tuidValue);\r\n        }\r\n    }\r\n    async modifyIds(ids:any[]):Promise<void> {\r\n        //let tuidValues:string[] = await this.tuidInner.loadTuidIds(this.divName, ids);\r\n        let tuidValues:string[] = await this.loadTuidIdsOrLocal(ids);\r\n        let localedValues = tuidValues.filter(v => {\r\n            let p = v.indexOf('\\t');\r\n            if (p<0) p = v.length;\r\n            let id = Number(v.substr(0, p));\r\n            let val = this.localArr.getItem(id);\r\n            return (val !== undefined);\r\n        });\r\n        if (localedValues.length === 0) return;\r\n        await this.cacheIdValues(localedValues);\r\n    }\r\n    protected divName:string = undefined;\r\n    protected async loadIds(): Promise<any[]> {\r\n        //let ret = await this.tuidInner.loadTuidIds(this.divName, this.waitingIds);\r\n        let ret = await this.loadTuidIdsOrLocal(this.waitingIds);\r\n        return ret;\r\n    }\r\n    protected unpackTuidIds(values:string[]):any[] {\r\n        return this.tuidInner.unpackTuidIds(values);\r\n    }\r\n    protected cacheTuidFieldValues(tuidValue: any) {\r\n        this.tuidInner.cacheTuidFieldValues(tuidValue);\r\n    }\r\n\r\n    async assureObj(id:number):Promise<any> {\r\n        let val = this.cache.get(id);\r\n        switch (typeof val) {\r\n            case 'object': return;\r\n            case 'number': this.cache.set(id, id); break;\r\n        }\r\n        //let ret = await this.tuidInner.loadTuidIds(this.divName, [id]);\r\n        let ret = await this.loadTuidIdsOrLocal([id]);\r\n        await this.cacheIdValues(ret);\r\n    }\r\n\r\n    private async loadTuidIdsOrLocal(ids:number[]):Promise<string[]> {\r\n        let ret:string[] = [];        \r\n        let netIds:number[] = [];\r\n        for (let id of ids) {\r\n            let value = this.localArr.getItem(id);\r\n            if (value === undefined)\r\n                netIds.push(id);\r\n            else\r\n                ret.push(value);\r\n        }\r\n        let len = netIds.length;\r\n        if (len > 0) {\r\n            let netRet = await this.tuidInner.loadTuidIds(this.divName, netIds);\r\n            for (let i=0; i<len; i++) {\r\n                //有些id可能没有内容，不会返回\r\n                //let id = netIds[i]; \r\n                let row:string = netRet[i];\r\n                if (!row) continue;\r\n                let p = row.indexOf('\\t');\r\n                if (p < 0) p = row.length;\r\n                let id = Number(row.substr(0, p));\r\n                _.remove(netIds, v => v === id);\r\n                ret.push(row);\r\n                this.localArr.setItem(id, row);\r\n            }\r\n            len = netIds.length;\r\n            for (let i=0; i<len; i++) {\r\n                this.localArr.setItem(netIds[i], '');\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport class IdDivCache extends IdCache {\r\n    private div: TuidDiv;\r\n    protected divName:string;\r\n\r\n    constructor(tuidLocal:TuidInner, div: TuidDiv) {\r\n        super(tuidLocal);\r\n        this.div = div;\r\n        this.divName = div.name;\r\n        this.localArr = tuidLocal.cache.arr(tuidLocal.name + '.ids.' + this.divName);\r\n    }\r\n\r\n    protected initLocalArr() {\r\n        // 这个不需要，必须去掉\r\n        // this.localArr = this.tuidInner.cache.arr(this.tuidInner.name + '.ids');\r\n    }\r\n\r\n    protected getIdFromObj(val:any) {return this.div.getIdFromObj(val)}\r\n    protected unpackTuidIds(values:string[]):any[] {\r\n        return this.div.unpackTuidIds(values);\r\n    }\r\n    protected cacheTuidFieldValues(tuidValue: any) {\r\n        this.div.cacheTuidFieldValues(tuidValue);\r\n    }\r\n\r\n    /*\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let tuidValues = await this.loadIds();\r\n        if (tuidValues !== undefined) {\r\n            let tuids = this.tuidLocal.unpackTuidIds(tuidValues);\r\n            for (let tuidValue of tuids) {\r\n                if (this.cacheValue(tuidValue) === false) continue;\r\n                this.tuidLocal.cacheTuidFieldValues(tuidValue);\r\n                this.afterCacheValue(tuidValue);\r\n            }\r\n        }\r\n    }\r\n    */\r\n}\r\n","import _ from 'lodash';\r\nimport { LocalArr } from '../../tool';\r\nimport { Entity } from '../entity';\r\nimport { UqMan, ArrFields, Field, SchemaFrom } from '../uqMan';\r\nimport { EntityCaller } from '../caller';\r\nimport { BoxId } from './boxId';\r\nimport { IdCache, IdDivCache } from './idCache';\r\n\r\nexport interface TuidSaveResult {\r\n    id: number;\r\n    inId: number;\r\n}\r\n\r\nexport abstract class Tuid extends Entity {\r\n    protected noCache: boolean;\r\n    readonly typeName:string = 'tuid';\r\n    protected idName: string;\r\n    cached: boolean;\r\n    unique: string[];\r\n\r\n    /*\r\n    constructor(uq:UqMan, name:string, typeId:number) {\r\n        super(uq, name, typeId)\r\n    }*/\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {id} = schema;\r\n        this.idName = id;\r\n    }\r\n\r\n    buildTuidBox(): TuidBox {\r\n        return new TuidBox(this);\r\n    }\r\n\r\n    getIdFromObj(obj:any):number {return obj[this.idName]}\r\n    stopCache():void {this.noCache = true}\r\n    abstract useId(id:number):void;\r\n    abstract boxId(id:number):BoxId;\r\n    abstract valueFromId(id:number):any;\r\n    abstract async assureBox (id:number): Promise<void>;\r\n    cacheIds() {}\r\n    async modifyIds(ids:any[]) {}\r\n    isImport = false;\r\n    abstract get hasDiv():boolean;// {return this.divs!==undefined}\r\n    abstract div(name:string):TuidDiv;\r\n    abstract async loadMain(id:number|BoxId):Promise<any>;\r\n    abstract async load(id:number|BoxId):Promise<any>;\r\n    abstract async all():Promise<any[]>;\r\n    abstract async save(id:number, props:any):Promise<TuidSaveResult>;\r\n    abstract async search(key:string, pageStart:string|number, pageSize:number):Promise<any>;\r\n    abstract async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any>;\r\n    abstract async loadArr(arr:string, owner:number, id:number):Promise<any>;\r\n    abstract async saveArr(arr:string, owner:number, id:number, props:any):Promise<void>;\r\n    abstract async posArr(arr:string, owner:number, id:number, order:number):Promise<void>;\r\n}\r\n\r\nexport class TuidInner extends Tuid {\r\n    private divs: {[div:string]: TuidDiv};\r\n    protected cacheFields: Field[];\r\n    protected idCache: IdCache;\r\n    protected localArr:LocalArr;\r\n    constructor(uq:UqMan, name:string, typeId:number) {\r\n        super(uq, name, typeId);\r\n        this.idCache = new IdCache(this);\r\n        this.localArr = this.cache.arr(this.name + '.whole');\r\n        if (uq.newVersion === true) this.localArr.removeAll();\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {arrs} = schema;\r\n        if (arrs !== undefined) {\r\n            this.divs = {};\r\n            for (let arr of arrs) {\r\n                let {name} = arr;\r\n                let tuidDiv = new TuidDiv(this.uq, this, name);\r\n                this.divs[name] = tuidDiv;\r\n                tuidDiv.setSchema(arr);\r\n                tuidDiv.buildFieldsTuid();\r\n            }\r\n        }\r\n    }\r\n    \r\n    useId(id:number, defer?:boolean) {\r\n        if (this.noCache === true) return;\r\n        this.idCache.useId(id, defer);\r\n    }\r\n    boxId(id:number):BoxId {\r\n        if (typeof id === 'object') return id;\r\n        this.useId(id);\r\n        let {createBoxId} = this.uq;\r\n        if (!createBoxId) return {id: id} as BoxId;\r\n        return createBoxId(this, id);\r\n    }\r\n    valueFromId(id:number) {return this.idCache.getValue(id)}\r\n    async assureBox (id:number):Promise<void> {\r\n        await this.idCache.assureObj(id);\r\n    }\r\n\r\n    cacheIds() {\r\n        this.idCache.cacheIds();\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) this.divs[i].cacheIds();\r\n    }\r\n    async modifyIds(ids:any[]) {\r\n        await this.idCache.modifyIds(ids);\r\n    }\r\n    cacheTuids(defer:number) {this.uq.cacheTuids(defer)}\r\n    get hasDiv():boolean {return this.divs!==undefined}\r\n    div(name:string):TuidDiv {\r\n        return this.divs && this.divs[name];\r\n    }\r\n    async loadTuidIds(divName:string, ids:number[]):Promise<any[]> {\r\n        let ret:any[] = await new IdsCaller(this, {divName:divName, ids:ids}, false).request();\r\n        if (ret.length > 0) this.cached = true;\r\n        return ret;\r\n    }\r\n    async loadMain(id:number|BoxId):Promise<any> {\r\n        if (typeof id === 'object') id = id.id;\r\n        await this.idCache.assureObj(id);\r\n        return this.idCache.valueFromId(id);\r\n    }\r\n    async load(id:number|BoxId):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        //let cacheValue = this.idCache.valueFromId(id); \r\n        //if (typeof cacheValue === 'object') return cacheValue;\r\n        if (typeof id === 'object') id = id.id;\r\n        let valuesText = this.localArr.getItem(id);\r\n        let values: any;\r\n        if (valuesText) {\r\n            values = JSON.parse(valuesText);\r\n        }\r\n        else {\r\n            values = await new GetCaller(this, id).request();\r\n            if (values !== undefined) {\r\n                this.localArr.setItem(id, JSON.stringify(values));\r\n            }\r\n        }\r\n        if (values === undefined) return;\r\n        for (let f of this.schema.fields) {\r\n            let {tuid} = f;\r\n            if (tuid === undefined) continue;\r\n            let t = this.uq.getTuid(tuid);\r\n            if (t === undefined) continue;\r\n            let n = f.name;\r\n            values[n] = t.boxId(values[n]);\r\n        }\r\n        this.idCache.cacheValue(values);\r\n        this.cacheTuidFieldValues(values);\r\n        return values;\r\n    }\r\n\r\n    cacheTuidFieldValues(values:any) {\r\n        let {fields, arrs} = this.schema;\r\n        this.cacheFieldsInValue(values, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs as ArrFields[]) {\r\n                let {name, fields} = arr;\r\n                let arrValues = values[name];\r\n                if (arrValues === undefined) continue;\r\n                let tuidDiv = this.div(name);\r\n                for (let row of arrValues) {\r\n                    //row._$tuid = tuidDiv;\r\n                    //row.$owner = this.boxId(row.owner);\r\n                    tuidDiv.cacheValue(row);\r\n                    this.cacheFieldsInValue(row, fields);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public buildFieldsTuid() {\r\n        super.buildFieldsTuid();\r\n        let {mainFields} = this.schema;\r\n        if (mainFields === undefined) debugger;\r\n        this.uq.buildFieldTuid(this.cacheFields = mainFields || this.fields);\r\n    }\r\n\r\n    unpackTuidIds(values:string[]):any[] {\r\n        return this.unpackTuidIdsOfFields(values, this.cacheFields);\r\n    }\r\n\r\n    async save(id:number, props:any):Promise<TuidSaveResult> {\r\n        /*\r\n        let {fields} = this.schema;\r\n        let params:any = {$id: id};\r\n        for (let field of fields as Field[]) {\r\n            let {name, tuid, type} = field;\r\n            let val = props[name];\r\n            if (tuid !== undefined) {\r\n                if (typeof val === 'object') {\r\n                    if (val !== null) val = val.id;\r\n                }\r\n            }\r\n            else {\r\n                switch (type) {\r\n                    case 'date':\r\n                    case 'datetime':\r\n                        val = new Date(val).toISOString();\r\n                        val = (val as string).replace('T', ' ');\r\n                        val = (val as string).replace('Z', '');\r\n                        break;\r\n                }\r\n            }\r\n            params[name] = val;\r\n        }\r\n        let ret = await this.uqApi.tuidSave(this.name, params);\r\n        return ret;\r\n        */\r\n        let ret = new SaveCaller(this, {id:id, props:props}).request();\r\n        if (id !== undefined) {\r\n            this.idCache.remove(id);\r\n            this.localArr.removeItem(id);\r\n        }\r\n        return ret;\r\n    }\r\n    async all():Promise<any[]> {\r\n        let ret: any[] = await new AllCaller(this, {}).request();\r\n        return ret;\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any[]> {\r\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        //let api = this.uqApi;\r\n        //let ret = await api.tuidSearch(this.name, undefined, owner, key, pageStart, pageSize);\r\n        let params:any = {arr:undefined, owner:owner, key:key, pageStart:pageStart, pageSize:pageSize};\r\n        let ret = await new SearchCaller(this, params).request();\r\n        let {fields} = this.schema;\r\n        for (let row of ret) {\r\n            this.cacheFieldsInValue(row, fields);\r\n        }\r\n        return ret;\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        //let api = this.uqApi;\r\n        //return await api.tuidArrGet(this.name, arr, owner, id);\r\n        return await new LoadArrCaller(this, {arr:arr, owner:owner, id:id}).request();\r\n    }\r\n    async saveArr(arr:string, owner:number, id:number, props:any) {\r\n        //let params = _.clone(props);\r\n        //params[\"$id\"] = id;\r\n        //return await this.uqApi.tuidArrSave(this.name, arr, owner, params);\r\n        return await new SaveArrCaller(this, {arr:arr, owner:owner, id:id, props:props}).request();\r\n    }\r\n\r\n    async posArr(arr:string, owner:number, id:number, order:number) {\r\n        //return await this.uqApi.tuidArrPos(this.name, arr, owner, id, order);\r\n        return await new ArrPosCaller(this, {arr:arr, owner:owner, id:id, order:order}).request();\r\n    }\r\n}\r\n\r\nabstract class TuidCaller<T> extends EntityCaller<T> {\r\n    protected get entity(): Tuid {return this._entity as Tuid};\r\n}\r\n\r\n// 包含main字段的load id\r\n// 当前为了兼容，先调用的包含所有字段的内容\r\nclass GetCaller extends TuidCaller<number> {\r\n    method = 'GET';\r\n    get path():string {return `tuid/${this.entity.name}/${this.params}`}\r\n}\r\n\r\nclass IdsCaller extends TuidCaller<{divName:string, ids:number[]}> {\r\n    get path():string {\r\n        let {divName} = this.params;\r\n        return `tuidids/${this.entity.name}/${divName !== undefined?divName:'$'}`;\r\n    }\r\n    buildParams():any {return this.params.ids}\r\n    xresult(res:any):any {\r\n        return (res as string).split('\\n');\r\n    }\r\n}\r\n\r\n\r\nclass SaveCaller extends TuidCaller<{id:number, props:any}> {\r\n    get path():string {return `tuid/${this.entity.name}`}\r\n    buildParams():any {\r\n        let {fields, arrs} = this.entity.schema;\r\n        let {id, props} = this.params;\r\n        let params:any = {$id: id};\r\n        this.transParams(params, props, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                let arrName = arr.name;\r\n                let arrParams = [];\r\n                let arrFields = arr.fields;\r\n                let arrValues = props[arrName];\r\n                if (arrValues !== undefined) {\r\n                    for (let arrValue of arrValues) {\r\n                        let row = {};\r\n                        this.transParams(row, arrValue, arrFields);\r\n                        arrParams.push(row);\r\n                    }\r\n                }\r\n                params[arrName] = arrParams;\r\n            }\r\n        }\r\n        return params;\r\n    }\r\n    private transParams(values:any, params:any, fields:Field[]) {\r\n        if (params === undefined) return;\r\n        for (let field of fields) {\r\n            let {name, tuid, type} = field;\r\n            let val = params[name];\r\n            if (tuid !== undefined) {\r\n                if (typeof val === 'object') {\r\n                    if (val !== null) val = val.id;\r\n                }\r\n            }\r\n            else {\r\n                switch (type) {\r\n                    case 'date':\r\n                        val = this.entity.buildDateParam(val); \r\n                        //val = (val as string).replace('T', ' ');\r\n                        //val = (val as string).replace('Z', '');\r\n                        break;\r\n                    case 'datetime':\r\n                        val = this.entity.buildDateTimeParam(val);\r\n                        //val = new Date(val).toISOString();\r\n                        //val = (val as string).replace('T', ' ');\r\n                        //val = (val as string).replace('Z', '');\r\n                        break;\r\n                }\r\n            }\r\n            values[name] = val;\r\n        }\r\n    }\r\n}\r\n\r\nclass SearchCaller extends TuidCaller<{arr:string, owner:number, key:string, pageStart:string|number, pageSize:number}> {\r\n    get path():string {return `tuids/${this.entity.name}`}\r\n}\r\n\r\nclass AllCaller extends TuidCaller<{}> {\r\n    method = 'GET';\r\n    get path():string {return `tuid-all/${this.entity.name}`}\r\n}\r\n\r\nclass LoadArrCaller extends TuidCaller<{arr:string, owner:number, id:number}> {\r\n    method = 'GET';\r\n    get path():string {\r\n        let {arr, owner, id} = this.params;\r\n        return `tuid-arr/${this.entity.name}/${owner}/${arr}/${id}`;\r\n    }\r\n}\r\n\r\nclass SaveArrCaller extends TuidCaller<{arr:string, owner:number, id:number, props:any}> {\r\n    get path():string {\r\n        let {arr, owner} = this.params;\r\n        return `tuid-arr/${this.entity.name}/${owner}/${arr}/`;\r\n    }\r\n    buildParams():any {\r\n        let {id, props} = this.params;\r\n        let params = _.clone(props);\r\n        params['$id'] = id;\r\n        return params;\r\n    }\r\n}\r\n\r\nclass ArrPosCaller extends TuidCaller<{arr:string, owner:number, id:number, order:number}> {\r\n    get path():string {\r\n        let {arr, owner} = this.params;\r\n        return `tuid-arr-pos/${this.entity.name}/${owner}/${arr}/`;\r\n    }\r\n    buildParams():any {\r\n        let {id, order} = this.params;\r\n        return { bid: id, $order: order}\r\n    }\r\n}\r\n\r\nexport class TuidImport extends Tuid {\r\n    private tuidLocal: TuidInner;\r\n\r\n    constructor(uq:UqMan, name:string, typeId:number, from: SchemaFrom) {\r\n        super(uq, name, typeId);\r\n        this.from = from;\r\n    }\r\n\r\n    setFrom(tuidLocal: TuidInner) {this.tuidLocal = tuidLocal}\r\n    \r\n    readonly from: SchemaFrom;\r\n    isImport = true;\r\n\r\n    useId(id:number) {this.tuidLocal.useId(id);}\r\n    boxId(id:number):BoxId {return this.tuidLocal.boxId(id);}\r\n    valueFromId(id:number) {return this.tuidLocal.valueFromId(id)}\r\n    async assureBox(id:number):Promise<void> {\r\n        await this.tuidLocal.assureBox(id);\r\n    }\r\n    get hasDiv():boolean {return this.tuidLocal.hasDiv}\r\n    div(name:string):TuidDiv {return this.tuidLocal.div(name)}\r\n    async loadMain(id:number|BoxId):Promise<any> {\r\n        let ret = await this.tuidLocal.loadMain(id);\r\n        return ret;\r\n    }\r\n    async load(id:number|BoxId):Promise<any> {\r\n        return await this.tuidLocal.load(id);\r\n    }\r\n    async save(id:number, props:any):Promise<TuidSaveResult> {\r\n        return await this.tuidLocal.save(id, props);\r\n    }\r\n    async all():Promise<any[]> {\r\n        return await this.tuidLocal.all();\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        return await this.tuidLocal.search(key, pageStart, pageSize);\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        return await this.tuidLocal.searchArr(owner, key, pageStart, pageSize);\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.tuidLocal.loadArr(arr, owner, id);\r\n    }\r\n    async saveArr(arr:string, owner:number, id:number, props:any):Promise<void> {\r\n        await this.tuidLocal.saveArr(arr, owner, id, props);\r\n    }\r\n    async posArr(arr:string, owner:number, id:number, order:number):Promise<void> {\r\n        await this.tuidLocal.posArr(arr, owner, id, order);\r\n    }\r\n}\r\n\r\n// field._tuid 用这个接口\r\n// Tuid, TuidDiv 实现这个接口\r\nexport class TuidBox {\r\n    tuid: Tuid;\r\n    ownerField:Field = undefined;\r\n    constructor(tuid: Tuid) {\r\n        this.tuid = tuid;\r\n    }\r\n\r\n    boxId(id:number):BoxId {\r\n        return this.tuid.boxId(id);\r\n    }\r\n    getIdFromObj(obj:any):number {\r\n        return this.tuid.getIdFromObj(obj);\r\n    }\r\n    useId(id:number):void {\r\n        return this.tuid.useId(id);\r\n    }\r\n    async showInfo() {\r\n        alert('showInfo not implemented');\r\n    }\r\n}\r\n\r\n\r\nexport class TuidDiv extends TuidInner /* Entity*/ {\r\n    readonly typeName:string = 'div';\r\n    protected cacheFields: Field[];\r\n    protected tuid: TuidInner;\r\n    protected idName: string;\r\n    protected idCache: IdDivCache;\r\n\r\n    //ui: React.StatelessComponent<any>;\r\n    //res: any;\r\n\r\n    constructor(uq: UqMan, tuid: TuidInner, name: string) {\r\n        super(uq, name, 0);\r\n        this.tuid = tuid;\r\n        this.idName = 'id';\r\n        this.idCache = new IdDivCache(tuid, this);\r\n    }\r\n\r\n    get owner() {return this.tuid}\r\n\r\n    /*\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.buildFieldsTuid();\r\n    }*/\r\n\r\n    /*\r\n    setUIRes(ui:any, res:any) {\r\n        this.ui = ui && ui.content;\r\n        this.res = res;\r\n    }\r\n    */\r\n\r\n    buildFieldsTuid() {\r\n        super.buildFieldsTuid();\r\n        let {mainFields} = this.schema;\r\n        if (mainFields === undefined) debugger;\r\n        this.uq.buildFieldTuid(this.cacheFields = mainFields);\r\n    }\r\n\r\n    buildTuidDivBox(ownerField: Field): TuidBoxDiv {\r\n        return new TuidBoxDiv(this.tuid, this, ownerField);\r\n    }\r\n\r\n    getIdFromObj(obj:any):number {return obj[this.idName]}\r\n    cacheValue(value:any):void {\r\n        this.idCache.cacheValue(value);\r\n    }\r\n\r\n    useId(id:number, defer?:boolean):void {\r\n        if (this.noCache === true) return;\r\n        this.idCache.useId(id, defer);\r\n    }\r\n\r\n    /*\r\n    boxId(id:number):BoxId {\r\n        if (typeof id === 'object') return id;\r\n        this.useId(id);\r\n        //return new BoxDivId(this.tuid, this, id);\r\n        return this.tuid.boxDivId(this, id);\r\n    }\r\n    */\r\n    valueFromId(id:number):any {\r\n        return this.idCache.getValue(id)\r\n    }\r\n\r\n    async assureBox(id:number):Promise<void> {\r\n        await this.idCache.assureObj(id);\r\n    }\r\n\r\n    async cacheIds() {\r\n        await this.idCache.cacheIds();\r\n    }\r\n\r\n    cacheTuidFieldValues(values:any) {\r\n        let fields = this.schema.fields;\r\n        this.cacheFieldsInValue(values, fields);\r\n    }\r\n\r\n    unpackTuidIds(values:string[]):any[] {\r\n        return this.unpackTuidIdsOfFields(values, this.cacheFields);\r\n    }\r\n}\r\n\r\nexport class TuidBoxDiv extends TuidBox {\r\n    ownerField: Field;\r\n    private div: TuidDiv;\r\n    constructor(tuid: Tuid, div: TuidDiv, ownerField: Field) {\r\n        super(tuid);\r\n        this.div = div;\r\n        this.ownerField = ownerField;\r\n    }\r\n\r\n    boxId(id:number):BoxId {\r\n        return this.div.boxId(id);\r\n    }\r\n    getIdFromObj(obj:any):number {\r\n        return this.div.getIdFromObj(obj);\r\n    }\r\n    useId(id:number):void {\r\n        return this.div.useId(id);\r\n    }\r\n}\r\n","import _ from 'lodash';\r\n\r\nclass _LocalStorage {\r\n    getItem(key:string) {\r\n        return localStorage.getItem(key)\r\n    }\r\n    setItem(key:string, value:string) {\r\n        localStorage.setItem(key, value);\r\n    }\r\n    removeItem(key:string) {\r\n        localStorage.removeItem(key);\r\n    }\r\n}\r\n\r\nconst __ls = new _LocalStorage(); // new Ls;\r\n\r\nexport class LocalCache {\r\n    private readonly local: Local;\r\n    //private value: T;\r\n    readonly key: string|number;\r\n\r\n    constructor(local:Local, key:string|number) {\r\n        this.local = local;\r\n        this.key = key;\r\n    }\r\n    get():any {\r\n        try {\r\n            // 下面缓冲的内容不能有，可能会被修改，造成circular引用\r\n            //if (this.value !== undefined) return this.value;\r\n            let text = this.local.getItem(this.key);\r\n            if (text === null) return;\r\n            if (text === undefined) return undefined;\r\n            //return this.value = \r\n            return JSON.parse(text);\r\n        }\r\n        catch (err) {\r\n            this.local.removeItem(this.key);\r\n            return;\r\n        }\r\n    }\r\n    set(value:any) {\r\n        //this.value = value;\r\n        let t = JSON.stringify(value);\r\n        this.local.setItem(this.key, t);\r\n        /*\r\n        let text = Flatted.stringify(value, undefined, undefined);\r\n        let objs:object[] = [];\r\n        let circular:any = {};\r\n        let path:string[] = [];\r\n        try {\r\n            if (testCircular(value, objs, circular, path) === true) debugger;\r\n            let t = JSON.stringify(value);\r\n            this.local.setItem(this.key, t);\r\n        }\r\n        catch (e) {\r\n            let s = null;\r\n        }\r\n        */\r\n    }\r\n    remove(local?:Local) {\r\n        if (local === undefined) {\r\n            this.local.removeItem(this.key);\r\n            //this.value = undefined;\r\n        }\r\n        else {\r\n            this.local.removeLocal(local);\r\n        }\r\n    }\r\n    child(key:string|number):LocalCache {\r\n        return this.local.child(key);\r\n    }\r\n    arr(key:string|number):LocalArr {\r\n        return this.local.arr(key);\r\n    }\r\n    map(key:string|number):LocalMap {\r\n        return this.local.map(key);\r\n    }\r\n}\r\n\r\nabstract class Local {\r\n    private readonly caches: {[key:string]:LocalCache};\r\n    private readonly locals: {[key:string]:Local};\r\n    protected readonly name: string;\r\n    constructor(name: string) {\r\n        this.name = name;\r\n        this.caches = {};\r\n        this.locals = {};\r\n    }\r\n\r\n    protected abstract keyForGet(key:string|number):string;\r\n    protected abstract keyForSet(key:string|number):string;\r\n    protected abstract keyForRemove(key:string|number):string;\r\n    abstract removeAll():void;\r\n    getItem(key:string|number):string {\r\n        let k = this.keyForGet(key);\r\n        if (k === undefined) return;\r\n        return __ls.getItem(k);\r\n    }\r\n    setItem(key:string|number, value: string):void {\r\n        let k = this.keyForSet(key);\r\n        __ls.setItem(k, value);\r\n    }\r\n    removeItem(key:string|number):void {\r\n        let k = this.keyForSet(key);\r\n        if (k === undefined) return;\r\n        localStorage.removeItem(k);\r\n    }\r\n    arr(key:string|number):LocalArr {\r\n        let sk = String(key);\r\n        let arr = this.locals[sk] as LocalArr;\r\n        if (arr === undefined) {\r\n            let k = this.keyForSet(key);\r\n            this.locals[sk] = arr = new LocalArr(k);\r\n        }\r\n        return arr;\r\n    }\r\n    map(key:string|number):LocalMap {\r\n        let sk = String(key);\r\n        let map = this.locals[sk] as LocalMap;\r\n        if (map === undefined) {\r\n            let k = this.keyForSet(key);\r\n            this.locals[sk] = map = new LocalMap(k);\r\n        }\r\n        return map;\r\n    }\r\n    removeLocal(local:Local) {\r\n        let sk = local.name;\r\n        let k = this.keyForRemove(sk);\r\n        if (k === undefined) return;\r\n        let arr = this.locals[sk];\r\n        if (arr === undefined) arr = new LocalArr(k);\r\n        else this.locals[sk] = undefined;\r\n        arr.removeAll();\r\n    }\r\n    child(key:string|number):LocalCache {\r\n        let ks = String(key);\r\n        let ret = this.caches[ks];\r\n        if (ret !== undefined) return ret;\r\n        return this.caches[ks] =ret = new LocalCache(this, key);\r\n    }\r\n}\r\n\r\nconst maxArrSize = 500;\r\nexport class LocalArr extends Local {\r\n    private readonly index: number[];\r\n    constructor(name: string) {\r\n        super(name);\r\n        let index = __ls.getItem(this.name);\r\n        this.index = index === null? [] : index.split('\\n').map(v => Number(v));\r\n    }\r\n    private saveIndex() {\r\n        __ls.setItem(this.name, this.index.join('\\n'));\r\n    }\r\n    protected keyForGet(key:number):string {\r\n        let i = _.indexOf(this.index, key);\r\n        if (i < 0) return undefined;\r\n        return `${this.name}.${key}`;\r\n    }\r\n    protected keyForSet(key:number):string {\r\n        let i = _.indexOf(this.index, key);\r\n        if (i<0) {\r\n            this.index.unshift(key);\r\n            if (this.index.length > maxArrSize) this.index.pop();\r\n        }\r\n        else {\r\n            this.index.splice(i, 1);\r\n            this.index.unshift(key)\r\n        }\r\n        this.saveIndex();\r\n        return `${this.name}.${key}`;\r\n    }\r\n    protected keyForRemove(key:number):string {\r\n        let i = _.indexOf(this.index, key);\r\n        if (i<0) return;\r\n        this.index.splice(i, 1);\r\n        this.saveIndex();\r\n        return `${this.name}.${key}`;\r\n    }\r\n    removeAll():void {\r\n        for (let i of this.index) {\r\n            __ls.removeItem(`${this.name}.${i}`);\r\n        }\r\n        __ls.removeItem(this.name);\r\n        this.index.splice(0);\r\n    }\r\n    item(index:number):LocalCache {\r\n        return this.child(index);\r\n    }\r\n}\r\n\r\nexport class LocalMap extends Local {\r\n    private readonly index: {[key:string]:number};\r\n    private max: number;\r\n    constructor(name: string) {\r\n        super(name);\r\n        this.max = 0;\r\n        this.index = {};\r\n        let index = __ls.getItem(this.name);\r\n        if (index !== null) {\r\n            let ls = index.split('\\n');\r\n            ls.forEach(l => {\r\n                let p = l.indexOf('\\t');\r\n                if (p<0) return;\r\n                let key = l.substr(0, p);\r\n                let i = Number(l.substr(p+1));\r\n                if (isNaN(i) === true) return;\r\n                this.index[key] = i;\r\n                if (i>this.max) this.max = i;\r\n            });\r\n        }\r\n    }\r\n    private saveIndex() {\r\n        let ls:string[] = [];\r\n        for (let k in this.index) {\r\n            let v = this.index[k];\r\n            if (v === undefined) continue;\r\n            ls.push(`${k}\\t${v}`);\r\n        }\r\n        __ls.setItem(this.name, ls.join('\\n'));\r\n    }\r\n    protected keyForGet(key:number):string {\r\n        let i = this.index[key];\r\n        if (i === undefined) return undefined;\r\n        return `${this.name}.${i}`;\r\n    }\r\n    protected keyForSet(key:number):string {\r\n        let i = this.index[key];\r\n        if (i === undefined) {\r\n            ++this.max;\r\n            i = this.max;\r\n            this.index[key] = i;\r\n            this.saveIndex();\r\n        }\r\n        return `${this.name}.${i}`;\r\n    }\r\n    protected keyForRemove(key:string|number):string {\r\n        let i = this.index[key];\r\n        if (i===undefined) return;\r\n        this.index[key] = undefined;\r\n        this.saveIndex();\r\n        return `${this.name}.${i}`;\r\n    }\r\n    removeAll():void {\r\n        for (let i in this.index) {\r\n            __ls.removeItem(`${this.name}.${this.index[i]}`);\r\n            this.index[i] = undefined;\r\n        }\r\n        __ls.removeItem(this.name);\r\n        this.max = 0;\r\n    }\r\n    item(key:string):LocalCache {\r\n        return this.child(key);\r\n    }\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport interface KeyValueRes {\r\n    [key:string]: any;\r\n}\r\n\r\nexport interface Res<T extends KeyValueRes> {\r\n    [lang:string]: T | {[district:string]: T};\r\n}\r\n\r\nexport const resOptions:{lang:string, district:string} = {\r\n    lang: undefined,\r\n    district: undefined,\r\n}\r\n\r\nexport function setResOptions(lang:string, district:string) {\r\n    resOptions.lang = lang;\r\n    resOptions.district = district;\r\n}\r\n\r\n(function() {\r\n    let lang: string, district: string;\r\n    let language = (navigator.languages && navigator.languages[0])  // Chrome / Firefox\r\n        || navigator.language; // ||   // All browsers\r\n    //navigator.userLanguage; // IE <= 10\r\n    if (!language) {\r\n        lang = 'zh';\r\n        district = 'CN';\r\n    }\r\n    else {\r\n        let parts = language.split('-');\r\n        lang = parts[0];\r\n        if (parts.length > 1) district = parts[1];\r\n    }\r\n    setResOptions(lang, district);\r\n}());\r\n\r\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\r\n    let {lang, district} = resOptions;\r\n    let ret:T = {} as T;\r\n    if (res === undefined) return ret;\r\n    _.merge(ret, res._);\r\n    let l = res[lang];\r\n    if (l === undefined) return ret;\r\n    _.merge(ret, l._);\r\n    let d = l[district];\r\n    if (d === undefined) return ret;\r\n    _.merge(ret, d);\r\n    let {entity} = ret;\r\n    if (entity !== undefined) {\r\n        for (let i in entity) {\r\n            entity[i.toLowerCase()] = entity[i];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Rule} from '../rule';\r\n\r\nexport abstract class ControlBase {\r\n    protected formView: FormView;\r\n    constructor(formView:FormView) {\r\n        this.formView = formView;\r\n    }\r\n    render():JSX.Element {\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n        </div>;\r\n    }\r\n    protected abstract renderControl():JSX.Element;\r\n    @computed get hasError():boolean {return false;}\r\n    @computed get filled():boolean {return false;}\r\n    clear() {}\r\n    clearErrors() {}\r\n    readValues(values:any):any {}\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    isOk():boolean {this.validate(); return !this.hasError;}\r\n    protected validate() {}\r\n}\r\n\r\nexport abstract class Control extends ControlBase {\r\n    protected field: Field;\r\n    protected face: Face;\r\n    protected props: any;\r\n    protected rules: Rule[];\r\n\r\n    protected element: HTMLElement;\r\n    @observable protected isOK?: boolean;\r\n    @observable protected error: string;\r\n    @observable protected value: any;\r\n\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView);\r\n        this.field = field;\r\n        this.face = face;\r\n        this.init();\r\n        this.setProps();\r\n    }\r\n    protected ref(element: HTMLElement) {\r\n        this.element = element;\r\n    }\r\n    protected init() {\r\n        this.rules = [];\r\n        let r = this.field.rules;\r\n        if (r !== undefined) {\r\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\r\n            else this.rules.push(r as Rule);\r\n        }\r\n    };\r\n    protected setProps():any {\r\n        return this.props = {\r\n            ref: this.ref.bind(this),\r\n            name: this.field.name,\r\n        }\r\n    };\r\n    @computed get hasError():boolean {return this.error !== undefined;}\r\n    @computed get filled():boolean {\r\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\r\n        return ret;\r\n    }\r\n    clearValue() { this.value = undefined; }\r\n    clear() { this.clearErrors(); this.clearValue(); }\r\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\r\n    readValues(values:any):any {\r\n        values[this.field.name] = this.value;\r\n    }\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    protected getValueFromElement():any {return this.value;}\r\n    protected validate() {\r\n        try {\r\n            let v = this.getValueFromElement();\r\n            if (this.rules.length > 0) {\r\n                let isOk:boolean;\r\n                for (let rule of this.rules) {\r\n                    console.log('validate: %s', v);\r\n                    let err = rule(v);\r\n                    console.log('validate: %s err: %s', v, err);\r\n                    if (err === true) {\r\n                        this.error = undefined;\r\n                        isOk = true;\r\n                    }\r\n                    else if (err !== undefined) {\r\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \r\n                        //    this.field.name, JSON.stringify(v), rule, err);\r\n                        this.error = err;\r\n                        this.isOK = false;\r\n                        return;\r\n                    }\r\n                }\r\n                this.isOK = isOk;\r\n            }\r\n            this.value = v;\r\n        }\r\n        catch (e) {\r\n            this.error = e.message;\r\n        }\r\n    }\r\n    render():JSX.Element {\r\n        let n;\r\n        if (this.face !== undefined) {\r\n            let {notes} = this.face;\r\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\r\n        }\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n            {n}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {ControlBase} from './control';\r\n\r\nexport class ButtonsControl extends ControlBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.otherClick = this.otherClick.bind(this);\r\n    }\r\n    private otherClick() {\r\n        let onOther = this.formView.props.onOther;\r\n        if (onOther === undefined) return;\r\n        let values = this.formView.readValues();\r\n        onOther(values);\r\n    }\r\n    renderControl():JSX.Element {\r\n        console.log('buttons.renderControl');\r\n        let nothing = this.formView.nothing;\r\n        let hasError = this.formView.hasError;\r\n        let props = this.formView.props;\r\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\r\n        let {submitButton, otherButton, onOther} = props;\r\n        let btnOther;\r\n        if (otherButton !== undefined) {\r\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\r\n                {otherButton}\r\n            </button>\r\n        }\r\n        return <div className=\"d-flex justify-content-start\">\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\" \r\n                disabled={nothing || hasError}>\r\n                {submitButton || '提交'}\r\n            </button>\r\n            {btnOther}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, Placeholder} from '../face';\r\nimport {Control} from './control';\r\n\r\nconst TxtRequired = '必须填入要求内容';\r\n\r\nexport abstract class CharsControl extends Control {\r\n    protected init() {\r\n        super.init();\r\n        if (this.field.required === true) {\r\n            this.rules.push((v) => {\r\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected element: HTMLInputElement;\r\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onBlur: this.onBlur.bind(this),\r\n            onFocus: this.onFocus.bind(this),\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n        let face = this.face as Placeholder;\r\n        if (face !== undefined) {\r\n            _.assign(this.props, {\r\n                placeholder: face.placeholder,\r\n            });\r\n        }\r\n        return this.props;\r\n    };\r\n    protected parseValue(value?:string):any {return value;}\r\n    private onBlur() {\r\n        //console.log('field %s onBlure', this.field.name);\r\n        this.validate();\r\n    }\r\n    private onChange() {\r\n        console.log('onChange');\r\n        this.validate();\r\n    }\r\n    private onFocus() {\r\n        this.clearErrors();\r\n        //this.error = undefined;\r\n        //this.formView.clearErrors();\r\n    }\r\n    protected className() {\r\n        return classNames({\r\n            \"form-control\": true,\r\n            \"has-success\": this.isOK === true,\r\n            \"is-invalid\": this.error !== undefined,\r\n            \"is-valid\": this.error === undefined && this.isOK === true,\r\n        });\r\n    }\r\n    protected renderInput():JSX.Element {\r\n        return <input className={this.className()} {...this.props} />;\r\n    }\r\n    protected ref(element: HTMLInputElement) {\r\n        super.ref(element);\r\n        if (element) {\r\n            element.value = this.value === undefined? '':this.value;\r\n        }\r\n    }\r\n    protected renderError():JSX.Element {\r\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\r\n        if (this.error === undefined) return null;\r\n        return <div className=\"invalid-feedback\">{this.error}</div>\r\n    }\r\n    clearValue() { super.clearValue(); this.element.value = ''; }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.field.name === fieldName) this.error = error;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) return;\r\n        //this.element.value = v;\r\n        this.value = v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <React.Fragment>\r\n            {this.renderInput()}\r\n            {this.renderError()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\n\r\nexport class StringControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'text',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class PasswordControl extends StringControl {\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'password',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {IntField, DecField, NumberField} from '../field';\r\nimport {CharsControl} from './charsControl';\r\n\r\nconst ErrInvalidNumber = '无效的数字';\r\nconst ErrMin = '最小值为';\r\nconst ErrMax = '最大值为';\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport class NumberControl extends CharsControl {\r\n    protected field: IntField | DecField | NumberField;\r\n    protected value: number;\r\n    protected extraChars: number[];\r\n    \r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        let {min, max} = this.field;\r\n        if (min !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n        }\r\n        else {\r\n            this.extraChars.push(KeyCode_Neg);\r\n        }\r\n\r\n        if (max !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        let n = Number.parseFloat(value);\r\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\r\n        return n;\r\n    }\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            type: 'number',\r\n            step: (this.field as DecField).step,\r\n            onKeyPress: this.onKeyPress.bind(this),\r\n        });\r\n    }\r\n\r\n    onKeyPress(event:KeyboardEvent) {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.element.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.element.value = v;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Control, ControlBase} from './control';\r\nimport {FormView} from '../formView';\r\n\r\nexport class UnknownControl extends Control {\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n            don't know how to create control<br/>\r\n            field: {JSON.stringify(this.field)} must be object <br/>\r\n            face: {JSON.stringify(this.face)} must be object <br/>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class EmptyControl extends ControlBase {\r\n    private element:JSX.Element;\r\n    constructor(formView:FormView, element:JSX.Element) {\r\n        super(formView);\r\n        this.element = element;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.element}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, IdPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickIdControl extends Control {\r\n    protected face: IdPickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    onPicked = (value: any) => {\r\n        this.value = value.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private controlContent():string|JSX.Element {\r\n        let {itemFromId, fromPicked, initCaption} = this.face;\r\n        if (this.value === undefined) {\r\n            return initCaption || '请选择Id';\r\n        }\r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        if (itemFromId !== undefined) {\r\n            if (fromPicked !== undefined) {\r\n                let item = itemFromId(this.value);\r\n                if (item) {\r\n                    let ret = fromPicked(item);\r\n                    if (ret !== undefined) return ret.caption;\r\n                }\r\n            }\r\n        }\r\n        return String(this.value);\r\n    }\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {this.controlContent()}\r\n            </div>;\r\n        }\r\n        return <div className=\"form-control-static \">\r\n            <input.component id={this.value} \r\n                ui={tuid}\r\n                //input={input}\r\n                //entitiesUI={this.formView.props.context} \r\n                //params={this.formView.readValues()}\r\n                //onPicked={this.onPicked}\r\n                />\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, TuidPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickTuidControl extends Control {\r\n    protected face: TuidPickFace;\r\n    // protected value: number;\r\n    @observable private caption: string|JSX.Element;\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.onIdChanged = this.onIdChanged.bind(this);\r\n        //this.onClick = this.onClick.bind(this);\r\n    }\r\n    /*\r\n    private async onClick() {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }*/\r\n    onIdChanged(id: any) {\r\n        this.value = id.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private buildContent():JSX.Element {\r\n        //let {tuid, input} = this.face;\r\n        return <this.face.input.component \r\n            {...this.face}\r\n            id={this.value}\r\n            //ui={this.face.ui}\r\n            //input={input}\r\n            //entitiesUI={this.formView.props.context} \r\n            onFormValues={()=>this.formView.readValues()}\r\n            onIdChanged={this.onIdChanged} />;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static \">\r\n            {this.buildContent()}\r\n        </div>;\r\n    }\r\n}\r\n/*\r\n<button className=\"form-control btn btn-outline-info\"\r\ntype=\"button\"\r\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\r\nonClick={this.onClick}>\r\n{this.buildContent()}\r\n</button>\r\n*/","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, PickFace} from '../face';\r\nimport {Control} from './control';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class PickControl extends Control {\r\n    protected face: PickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    /*\r\n    private controlContent():string|JSX.Element {\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined) {\r\n            return '请选择';\r\n        }\r\n        \r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        return <Content id={this.value} />;\r\n    }*/\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        return <this.view />;\r\n        /*\r\n        let {content:Content} = this.face;\r\n        //if (this.value === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n        //}\r\n        //return <div className=\"form-control-static \">\r\n        //    <Content />\r\n        //</div>;\r\n        */\r\n    }\r\n\r\n    private view = observer(() => {\r\n        let content;\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = '请选择';\r\n        }\r\n        /*\r\n        else if (this.caption !== undefined) {\r\n            content = this.caption;\r\n        }*/\r\n        else {\r\n            content = <Content id={this.value} />;\r\n        } \r\n        return <div\r\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\r\n            onClick={this.onClick}>\r\n            {content}\r\n        </div>\r\n    });\r\n}\r\n","export * from './control';\r\nexport * from './buttonsControl';\r\nexport * from './stringControl';\r\nexport * from './numberControl';\r\n\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Control, ControlBase} from './control';\r\nimport {ButtonsControl} from './buttonsControl';\r\nimport {CheckControl} from './checkControl';\r\nimport {RadioControl} from './radioControl';\r\nimport {TextAreaControl} from './textAreaControl';\r\nimport {SelectControl} from './selectControl';\r\nimport {UnknownControl, EmptyControl} from './unknownControl';\r\nimport {StringControl, PasswordControl} from './stringControl';\r\nimport {NumberControl} from './numberControl';\r\n\r\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\r\nimport { PickIdControl } from './pickIdControl';\r\nimport { PickTuidControl } from './pickTuidControl';\r\nimport { PickControl } from './pickControl';\r\n\r\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\r\n\r\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\r\n    let label = row.label;\r\n    if ((<GroupRow>row).group !== undefined)\r\n        return createGroupControl(form, label, row as GroupRow);\r\n    if ((<FieldRow>row).field !== undefined)\r\n        return createFieldControl(form, label, row as FieldRow);\r\n    return new EmptyControl(form, row.help);\r\n}\r\n\r\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\r\n    \"string\": StringControl,\r\n    \"password\": PasswordControl,\r\n    \"number\": NumberControl,\r\n    \"checkbox\": CheckControl,\r\n    \"radiobox\": RadioControl,\r\n    \"select\": SelectControl,\r\n    \"pick-id\": PickIdControl,\r\n    \"pick-tuid\": PickTuidControl,\r\n    \"textarea\": TextAreaControl,\r\n    \"pick\": PickControl,\r\n};\r\nconst defaultFaces:{[type:string]: Face} = {\r\n    \"string\": {type:'string'},\r\n    \"number\": {type:'number'},\r\n    \"int\": {type:'number'},\r\n    \"dec\": {type:'number'},\r\n    \"bool\": {type:'checkbox'},\r\n}\r\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\r\n    let {field, face} = fieldRow;\r\n    switch (typeof field) {\r\n        case 'string':\r\n            field = {\r\n                name: (field as any) as string,\r\n                type: 'string',\r\n            }\r\n            break;\r\n        case 'object':\r\n            break;\r\n        default:\r\n            return new UnknownControl(form, field, face);\r\n    }\r\n    let fieldType = field.type || 'string';\r\n    if (face === undefined) {\r\n        face = defaultFaces[fieldType];\r\n        if (face === undefined) return new UnknownControl(form, field, face);\r\n    }\r\n    else if (face.type === undefined) {\r\n        let f = defaultFaces[fieldType];\r\n        face.type = f===undefined? 'string' : f.type;\r\n    }\r\n    let control = controls[face.type || fieldType] || UnknownControl;\r\n    return new control(form, field, face);\r\n}\r\n\r\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\r\n    return new UnknownControl(form, groupRow as any, undefined);\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field, BoolField} from '../field';\r\nimport {Face, CheckBoxFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class CheckControl extends Control {    \r\n    protected element: HTMLInputElement;\r\n    protected field: BoolField;\r\n    protected face: CheckBoxFace;\r\n    private trueValue: any;\r\n    private falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        let {trueValue, falseValue} = this.field;\r\n        if (trueValue === undefined) this.trueValue = 1;\r\n        if (falseValue === undefined) this.falseValue = 0;\r\n    }\r\n\r\n    setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n    }\r\n\r\n    clearValue() {\r\n        this.element.checked = this.field.defaultValue === this.trueValue;\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) {\r\n            v = this.field.defaultValue;\r\n        }\r\n        if (v !== undefined) {\r\n            //this.element.checked = v === this.trueValue;\r\n            //this.value = this.getValueFromElement();\r\n        }\r\n    }\r\n\r\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\r\n\r\n    private onChange() {\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <label className=\"form-control\">\r\n                <label className=\"custom-control custom-checkbox mb-0\">\r\n                    <input type='checkbox'\r\n                        name={this.field.name}\r\n                        ref={this.props.ref}\r\n                        onChange={this.props.onChange}\r\n                        className=\"custom-control-input\" />\r\n                    <span className=\"custom-control-indicator\" />\r\n                    <span className=\"custom-control-description\">{this.face.label}</span>\r\n                </label>\r\n            </label>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, RadioFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class RadioControl extends Control {\r\n    protected face: RadioFace;\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <div className=\"form-control\">\r\n            {\r\n                this.face.list.map((item, index) => {\r\n                    let t, v;\r\n                    if (typeof item !== 'object') t = v = item;\r\n                    else {\r\n                        t = item.text;\r\n                        v = item.value;\r\n                    }\r\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\r\n                        <input type='radio'\r\n                            name={this.field.name} \r\n                            className=\"custom-control-input\" />\r\n                        <span className=\"custom-control-indicator\"></span>\r\n                        <span className=\"custom-control-description\">{t}</span>\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, SelectFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class SelectControl extends Control {\r\n    constructor (formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.ref = this.ref.bind(this);\r\n    }\r\n    protected face: SelectFace;\r\n    protected element: HTMLSelectElement;\r\n    protected getValueFromElement():any {\r\n        let {selectedIndex, selectedOptions} = this.element;\r\n        let v:any = selectedOptions[0].value;\r\n        switch (this.field.type) {\r\n            case 'number': v = Number(v); break;\r\n            case 'date': v = new Date(v); break;\r\n            case 'bool': \r\n                if (typeof v === 'string') {\r\n                    v = ((v as string).toLowerCase() === 'true');\r\n                }\r\n                break;\r\n        }\r\n        return v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        let {list} = this.face;\r\n        let def = this.face.default;\r\n        let options: any[] = [];\r\n        if (def === undefined)\r\n            options.push(<option key={-1} value={undefined}>请选择</option>);\r\n        options.push(...list.map((item, index) => {\r\n            let t, v;\r\n            if (typeof item !== 'object') t = v = item;\r\n            else {\r\n                t = item.text;\r\n                v = item.value;\r\n            }\r\n            return <option key={index} value={v}>{t}</option>;\r\n        }));\r\n        return <div className=\"form-control-static\">\r\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\r\n                {options}\r\n            </select>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\nimport {TextAreaFace} from '../face';\r\n\r\nexport class TextAreaControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected face: TextAreaFace;\r\n    private el: HTMLTextAreaElement;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        let {maxLength} = this.field;\r\n        let {rows} = this.face;\r\n        _.assign(p, {\r\n            maxLength: maxLength,\r\n            rows: rows,\r\n        });\r\n        return p;\r\n    };\r\n    protected renderInput():JSX.Element {\r\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\r\n    }\r\n}\r\n","import { LocalMap } from './localDb';\r\n\r\nconst testingTags:string[] = ['/test', '/test/', '-test', '-test/'];\r\nfunction isTesting():boolean {\r\n    let {pathname} = document.location;\r\n    let pn = pathname.toLowerCase();\r\n    for (let item of testingTags) {\r\n        if (pn.endsWith(item) === true) return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const env = (function () {\r\n    let testing = isTesting();\r\n    let localDb = new LocalMap(testing===true? '$$':'$');\r\n    return {\r\n        testing: testing,\r\n        isDevelopment: process.env.NODE_ENV === 'development',\r\n        localDb: localDb,\r\n        setTimeout: (tag:string, callback: (...args: any[]) => void, ms: number, ...args: any[]):NodeJS.Timer => {\r\n            if (tag !== undefined) console.log('setTimeout ' + tag);\r\n            return global.setTimeout(callback, ms, ...args);\r\n        },\r\n        clearTimeout: (handle:NodeJS.Timer):void => {\r\n            global.clearTimeout(handle);\r\n        },\r\n        setInterval: (callback: (...args: any[]) => void, ms: number, ...args: any[]): NodeJS.Timer => {\r\n            return global.setInterval(callback, ms, ...args);\r\n        },\r\n        clearInterval: (handle:NodeJS.Timer):void => {\r\n            global.clearInterval(handle);\r\n        }\r\n    }\r\n}());\r\n","\r\nexport * from './boxId';\r\nexport { Tuid, TuidImport, TuidInner, TuidDiv, TuidBox } from './tuid';\r\nexport { TuidsCache } from './tuidsCache';\r\nexport { tv, ReactBoxId } from './reactBoxId';","import * as React from 'react';\r\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\r\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\r\n\r\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\r\n\r\nexport abstract class RowContainer {\r\n    protected form:FormView;\r\n    protected row: FormRow;\r\n    protected control: ControlBase;\r\n    constructor(form:FormView, row: FormRow) {\r\n        this.form = form;\r\n        this.row = row;\r\n        if ((row as JSX.Element).type === undefined) {\r\n            let cc:CreateControl = (row as LabelFormRow).createControl;\r\n            if (cc === undefined) cc = form.createControl;\r\n            if (cc === undefined) cc = createControl;\r\n            this.control = cc(form, row);\r\n        }\r\n    }\r\n    abstract render(key:string):JSX.Element;\r\n    \r\n    isOk():boolean {\r\n        if (this.control === undefined) return true;\r\n        return this.control.isOk();\r\n    }\r\n\r\n    contains(fieldName:string):boolean {\r\n        let field = (this.row as FieldRow).field;\r\n        if (field !== undefined) return fieldName === field.name;\r\n        let group = (this.row as GroupRow).group;\r\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\r\n        return false;\r\n    }\r\n    get hasError():boolean {return this.control.hasError;}\r\n    get filled():boolean {return this.control.filled;}\r\n    clear() {\r\n        if (this.control !== undefined) this.control.clear();\r\n    }\r\n    clearErrors() {\r\n        if (this.control !== undefined) this.control.clearErrors();\r\n    }\r\n    readValues(values:any):any {\r\n        if (this.control !== undefined) this.control.readValues(values);\r\n    }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.control !== undefined) this.control.setError(fieldName, error);\r\n    }\r\n    setInitValues(values:any) {\r\n        if (this.control !== undefined) this.control.setInitValues(values);\r\n    }\r\n}\r\n\r\nclass ElementRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\r\n    }\r\n    get hasError():boolean {return false;}\r\n    get filled():boolean {return false;}\r\n}\r\n\r\nclass BootStrapRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className='form-group row'>\r\n            <label className='col-sm-2 col-form-label'>\r\n                {(this.row as LabelFormRow).label}\r\n            </label>\r\n            {this.control.render()}\r\n        </div>;\r\n\r\n        //has-success is-valid\r\n    }\r\n}\r\n\r\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new BootStrapRowContainer(form, row);\r\n}\r\n\r\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new ElementRowContainer(form, row);\r\n}\r\n","import * as React from 'react';\r\nimport { BoxId } from './boxId';\r\nimport { Tuid } from './tuid';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst TuidContent = (tuidName:string, values:any, x?:any) => {\r\n    return <>{tuidName}: {stringify(values)}</>;\r\n};\r\n\r\nfunction stringify(values: any): string {\r\n    let s = '{';\r\n    if (values === undefined) return 'undefined';\r\n    for (let i in values) {\r\n        let v = values[i];\r\n        s += i + ': ';\r\n        if (v === undefined) {\r\n            s += 'undefined';\r\n        }\r\n        else if (v === null) {\r\n            s += 'null';\r\n        }\r\n        else {\r\n            switch (typeof v) {\r\n                default:\r\n                    s += v;\r\n                    break;\r\n                case 'function':\r\n                    s += 'function';\r\n                    break;\r\n                case 'object':\r\n                    s += '{obj}';\r\n                    break;\r\n            }\r\n        }\r\n        s += ', ';\r\n    }\r\n    return s + '}';\r\n}\r\n\r\nexport class ReactBoxId implements BoxId {\r\n    readonly id: number;\r\n    protected tuid: Tuid;\r\n    protected ui: (values:any) => JSX.Element;\r\n    readonly isUndefined:boolean;\r\n    constructor(id: number, tuid: Tuid, ui: (values:any) => JSX.Element) {\r\n        this.id = id;\r\n        this.tuid = tuid;\r\n        this.ui = ui;\r\n        this.isUndefined = (this.tuid === undefined);\r\n    }\r\n\r\n    get obj():any {\r\n        return this.tuid.valueFromId(this.id);\r\n    }\r\n\r\n    render(ui:TvTemplet, x:any):JSX.Element {\r\n        if (this.id === undefined || this.id === null) return;\r\n        let boxName = this.boxName; // this.tuid.name;\r\n        let val = this.obj; // this.tuid.valueFromId(this.id);\r\n        if (this.isUndefined === true) {\r\n            if (ui !== undefined) return ui(val, x);\r\n            return TuidContent(boxName, val, x);\r\n        }\r\n        switch (typeof val) {\r\n            case 'undefined':\r\n                return <span className=\"text-black-50\">{boxName} undefined</span>;\r\n            case 'number':\r\n                return <span className=\"text-light\">{boxName} {this.id}</span>;\r\n        }\r\n        if (ui === undefined) {\r\n            ui = this.ui;\r\n        }\r\n        if (ui !== undefined) {\r\n            if (typeof ui !== 'function') {\r\n                ui = (ui as any).content;\r\n            }\r\n            if (ui !== undefined) {\r\n                let ret = ui(val/*, this.tuidUR.res*/);\r\n                if (ret !== undefined) return ret;\r\n                return <span className=\"text-danger\">{boxName} {this.id}</span>;\r\n            }\r\n        }\r\n\r\n        return TuidContent(boxName, val);\r\n    }\r\n\r\n    get boxName():string {return this.tuid.name}\r\n    // ui(): TvTemplet {return this.tuid.ui}\r\n    // res(): any {return this.tuid.res}\r\n\r\n    async assure(): Promise<void> {\r\n        await this.tuid.assureBox(this.id);\r\n    }\r\n}\r\n\r\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\r\n    let logContent:any;\r\n    let boxId:ReactBoxId = bi as ReactBoxId;\r\n    switch(typeof bi) {\r\n        case 'undefined': logContent = <>boxId undefined</>; break;\r\n        case 'number': logContent = <>id:{bi}</>; break;\r\n        default:\r\n            if (typeof boxId.render !== 'function') {\r\n                if (ui === undefined) {\r\n                    logContent = TuidContent(boxId.boxName, bi, x);\r\n                }\r\n                else {\r\n                    return ui(bi, x);\r\n                }\r\n            }\r\n            break;\r\n    }\r\n    if (logContent !== undefined) {\r\n        return <del className=\"text-danger\">{logContent}</del>;\r\n    }\r\n    return boxId.render(ui, x);\r\n}\r\n\r\nexport type TvTemplet = (values?:any, x?:any) => JSX.Element;\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: TvTemplet,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    if (tuidValue === undefined) {\r\n        if (nullUI === undefined) return <>[undefined]</>;\r\n        return nullUI();\r\n    }\r\n    if (tuidValue === null) {\r\n        if (nullUI === undefined) return <>[null]</>;\r\n        return nullUI();\r\n    }\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else {\r\n                let ret = ui(tuidValue, x);\r\n                if (ret !== undefined) return ret;\r\n                return <>{tuidValue}</>;\r\n            }\r\n        case 'object':\r\n            let divObj = boxIdContent(tuidValue, ui, x);\r\n            if (divObj !== undefined) return divObj;\r\n            return nullUI === undefined? <>id null</>: nullUI();\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n","import {HttpChannel} from './httpChannel';\r\nimport { Caller } from './caller';\r\n\r\nexport async function refetchApi(channel:HttpChannel, url:string, options:any, \r\n    resolve:(values:any)=>any, reject:(reason:any)=>void)\r\n{\r\n    await channel.fetch(url, options, false, resolve, reject);\r\n}\r\n\r\nexport abstract class ApiBase {\r\n    protected token: string;\r\n    protected path: string;\r\n    protected showWaiting: boolean;\r\n\r\n    constructor(path: string, showWaiting: boolean) {\r\n        this.path = path || '';\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\r\n\r\n    async xcall(caller:Caller<any>):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.xcall(this.path, caller);\r\n    }\r\n\r\n    public async call(url:string, method:string, body:any):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.callFetch(url, method, body);\r\n    }\r\n\r\n    public async get(path:string, params:any=undefined): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.get(this.path + path, params);\r\n    }\r\n\r\n    public async post(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.post(this.path + path, params);\r\n    }\r\n\r\n    public async put(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.put(this.path + path, params);\r\n    }\r\n\r\n    public async delete(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.delete(this.path + path, params);\r\n    }\r\n}\r\n","import * as React from 'react';\r\n//import _ from 'lodash';\r\nimport {nav} from './nav';\r\n\r\nexport interface PageHeaderProps {\r\n    back?: 'back' | 'close' | 'none';\r\n    center: string | JSX.Element;\r\n    right?: JSX.Element;\r\n    logout?: boolean | (()=>Promise<void>);\r\n    className?: string;\r\n}\r\nexport interface PageHeaderState {\r\n    hasBack: boolean;\r\n}\r\n\r\nexport class PageHeader extends React.Component<PageHeaderProps, PageHeaderState> {\r\n    constructor(props: PageHeaderProps) {\r\n        super(props);\r\n        //this.navChange = this.navChange.bind(this);\r\n        this.state = {\r\n            //hasBack: false,\r\n            hasBack: nav.level > 1\r\n        };\r\n    }\r\n    /*\r\n    navChange() {\r\n        this.setState({\r\n            hasBack: nav.level > 1\r\n        })\r\n    }\r\n    */\r\n    /*\r\n    componentWillMount() {\r\n        this.navChange();\r\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\r\n    }\r\n    */\r\n    componentWillUnmount() {\r\n        //nav.events.remove('change', this.navChangeHandler);\r\n    }\r\n    async back() {\r\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\r\n    }\r\n    openWindow() {\r\n        window.open(document.location.href);\r\n    }\r\n    private logoutClick = () => {\r\n        nav.showLogout(this.logout);\r\n    }\r\n    private logout = async () => {\r\n        let {logout} = this.props;\r\n        if (typeof logout === 'function') {\r\n            await logout(); \r\n        }\r\n        await nav.logout(undefined);\r\n    }\r\n    render() {\r\n        let b = this.state.hasBack || window.self !== window.top;\r\n        let {right, center, logout, className} = this.props;\r\n        let back:any, pop:any, debugLogout:any;\r\n        if (logout !== undefined && window.self === window.top) {\r\n            if ((typeof logout === 'boolean' && logout === true)\r\n                || typeof logout === 'function')\r\n            {\r\n                let {user} = nav;\r\n                if (user !== undefined) {\r\n                    let {nick, name} = user;\r\n                    debugLogout = <div className=\"d-flex align-items-center\">\r\n                        <small className=\"text-light\">{nick || name}</small>\r\n                        {\r\n                            // eslint-disable-next-line\r\n                            <div className=\"ml-2 py-2 px-3 cursor-pointer\"\r\n                                role=\"button\"\r\n                                onClick={this.logoutClick}>\r\n                                <i className=\"fa fa-sign-out fa-lg\" />\r\n                            </div>\r\n                        }\r\n                    </div>;\r\n                }\r\n            }\r\n        }\r\n        if (b) {\r\n            switch (this.props.back) {\r\n                case 'none':\r\n                    back = undefined;\r\n                    break;\r\n                default:\r\n                case 'back':\r\n                    back = <nav onClick={this.back}><i className=\"fa fa-angle-left\" /></nav>;\r\n                    break;\r\n                case 'close':\r\n                    back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>;\r\n                    break;\r\n            }\r\n        }\r\n        if (window.self !== window.top) {\r\n            console.log(document.location.href);\r\n            pop = <header onClick={this.openWindow} />;\r\n        }\r\n        if (back === undefined && typeof center === 'string') {\r\n            center = <div className=\"px-3\">{center}</div>;\r\n        }\r\n        let rightView = (right || debugLogout) && <aside>{right} {debugLogout}</aside>;\r\n        return <header className={className}>\r\n            {pop}\r\n            {back}\r\n            <div>{center}</div>\r\n            {rightView}\r\n        </header>;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { jsonStringify } from '../tools';\r\n\r\nexport const DefaultRow = (values:any) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page, List, FA } from '../../components';\r\nimport { Query } from '../../uq';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuery } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\r\n    protected vForm: VForm;\r\n    private row: React.StatelessComponent;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        let {row, queryRow} = this.ui;\r\n        this.row = queryRow || row || DefaultRow;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let params = this.vForm.getValues();\r\n        if (this.entity.isPaged === true) {\r\n            await this.entity.resetPage(30, params);\r\n            await this.entity.loadPage();\r\n            this.replacePage(this.pageResult);\r\n        }\r\n        else {\r\n            let data = await this.entity.query(params);\r\n            this.replacePage(this.queryResult, data);\r\n        }\r\n    }\r\n\r\n    again = () => {\r\n        this.vForm.reset();\r\n        this.replacePage(this.view);\r\n    }\r\n\r\n    renderExtra() {\r\n        return;\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render('mx-3 my-2')}\r\n        {this.renderExtra()}\r\n    </Page>;\r\n\r\n    protected pageResult = () => {\r\n        let {list} = this.entity;\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <List items={list} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    }\r\n\r\n    protected queryResult = observer((result:any) => {\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { Page, SearchBox, List } from '../../components';\r\nimport { PageItems } from '../../tool';\r\nimport { Query } from '../../uq';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuerySelect } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\r\n    private row: React.StatelessComponent;\r\n\r\n    PageItems:QueryPageItems;\r\n    ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        let {row, selectRow} = this.ui;\r\n        this.row = selectRow || row || DefaultRow;\r\n        //this.entity = this.controller.entity;\r\n        this.PageItems = new QueryPageItems(this.entity);\r\n        await this.onSearch(param);\r\n        this.openPage(this.view);\r\n    }\r\n    onSearch = async (key:string) => {\r\n        await this.PageItems.first(key);\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    private callOnSelected(item:any) {\r\n       this.closePage();\r\n       this.returnCall(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    view = () => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\nexport class QueryPageItems extends PageItems<any> {\r\n    private query: Query;\r\n    constructor(query: Query) {\r\n        super();\r\n        this.query = query;\r\n    }\r\n    protected async load():Promise<any[]> {\r\n        await  this.query.loadSchema();\r\n        let ret:any[];\r\n        if (this.query.isPaged === true)\r\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\r\n        else {\r\n            let data = await this.query.query(this.param);\r\n            //let data = await this.query.unpackReturns(res);\r\n            ret = data[this.query.returns[0].name];\r\n        }\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        if (item === undefined) this.pageStart = 0;\r\n    }\r\n}\r\n","import { StatelessComponent } from 'react';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { Query } from '../../uq';\r\nimport { VQueryMain } from './vQueryMain';\r\nimport { VQuerySelect } from './vQuerySelect';\r\n\r\nexport interface QueryUI extends EntityUI {\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    main?: typeof VQueryMain;\r\n    row?: StatelessComponent;\r\n    queryRow?: StatelessComponent;\r\n    selectRow?: StatelessComponent;\r\n}\r\n\r\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\r\n}\r\n\r\nexport class CQuery extends CQueryBase {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VQueryMain);\r\n    }\r\n\r\n    protected get VQueryMain():typeof VQueryMain {return (this.ui && this.ui.main) || VQueryMain}\r\n}\r\n\r\nexport class CQuerySelect extends CQueryBase {\r\n    protected async internalStart(param?:any) {\r\n        await this.openVPage(this.VQuerySelect, param);\r\n    }\r\n\r\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\r\n}\r\n","export * from './cQuery';\r\nexport * from './vQueryMain';\r\nexport * from './vQuerySelect';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { UiTextItem } from '../schema';\r\nimport { ResUploader } from '../resUploader';\r\nimport { Image } from '../image';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { ItemEdit } from './itemEdit';\r\nimport { env } from '../../tool';\r\n\r\nexport class ImageItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    private resUploader: ResUploader;\r\n    @observable private resId: string;\r\n    @observable private overSize: boolean = false;\r\n\r\n    protected async internalStart():Promise<any> {\r\n        this.resId = this.value;        \r\n        return new Promise<any>((resolve, reject) => {\r\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\r\n        });\r\n    }\r\n\r\n    private upload = async () => {\r\n        if (!this.resUploader) return;\r\n        let ret = await this.resUploader.upload();\r\n        if (ret === null) {\r\n            this.overSize = true;\r\n            env.setTimeout('imageItemEdit upload', () => this.overSize = false, 3000);\r\n            return;\r\n        }\r\n        this.resId = ret;\r\n        this.isChanged = (this.resId !== this.value);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success align-self-center\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.resId)}>保存</button>;\r\n        let overSize:any;\r\n        if (this.overSize === true) {\r\n            overSize = <div className=\"text-danger\">\r\n                <i className=\"fa fa-times-circle\" /> 图片文件大小超过2M，无法上传\r\n            </div>;\r\n        }\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"my-3 px-3 py-3 bg-white\">\r\n                <div>\r\n                    <div>上传图片：</div>\r\n                    <div className=\"my-3\">\r\n                        <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-primary\" onClick={this.upload}>上传</button>\r\n                    </div>\r\n                </div>\r\n                {overSize}\r\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"w-12c h-12c mr-4\"\r\n                        style={{border: '1px dotted gray', padding: '8px'}}>\r\n                        <Image className=\"w-100 h-100\" src={this.resId} />\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"small\">图片预览</div>\r\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import {observable, IObservableArray, computed} from 'mobx';\r\nimport {uid} from './uid';\r\n\r\nexport abstract class PageItems<T> {\r\n    constructor(itemObservable:boolean = false) {\r\n        this._items = observable.array<T>([], {deep:itemObservable});\r\n    }\r\n    private isFirst: boolean = true;\r\n    @observable loading: boolean = false;\r\n    @observable private beforeLoad: boolean = true;\r\n    @observable protected loaded: boolean = false;\r\n    protected _items:IObservableArray<T>;\r\n    @observable allLoaded: boolean = false;\r\n    @computed get items():IObservableArray<T> {\r\n        if (this.beforeLoad === true) return null;\r\n        if (this.loaded === false) return undefined;\r\n        return this._items;\r\n    }\r\n\r\n    @observable topDiv:string;\r\n    @observable bottomDiv:string;\r\n    scrollToTop() {\r\n        this.topDiv = '$$'+uid();\r\n    }\r\n    scrollToBottom() {\r\n        this.bottomDiv = '$$'+uid();\r\n    }\r\n\r\n    protected param: any;\r\n    protected firstSize = 100;\r\n    protected pageStart:any = undefined;\r\n    protected pageSize = 30;\r\n    protected appendPosition:'head'|'tail' = 'tail';\r\n\r\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\r\n    protected abstract setPageStart(item:T):void;\r\n\r\n    reset() {\r\n        this.isFirst = true;\r\n        this.beforeLoad = true;\r\n        this.loaded = false;\r\n        this.param = undefined;\r\n        this.allLoaded = false;\r\n        this._items.clear();\r\n        //this.setPageStart(undefined);\r\n    }\r\n\r\n    append(item:T) {\r\n        if (this.appendPosition === 'tail')\r\n            this._items.unshift(item);\r\n        else\r\n            this._items.push(item);\r\n    }\r\n\r\n    async first(param:any):Promise<void> {\r\n        this.reset();\r\n        this.beforeLoad = false;\r\n        this.param = param;\r\n        await this.more();        \r\n    }\r\n\r\n    protected async onLoad(): Promise<void> {}\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        if (this.loading === true) return;\r\n        this.loading = true;\r\n        await this.onLoad();\r\n        if (this.pageStart === undefined) this.setPageStart(undefined);\r\n        let pageSize = this.pageSize + 1;\r\n        if (this.isFirst === true) {\r\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\r\n        }\r\n        let ret = await this.load(\r\n                this.param, \r\n                this.pageStart,\r\n                pageSize);\r\n        this.loading = false;\r\n        this.loaded = true;\r\n        let len = ret.length;\r\n        if ((this.isFirst===true && len>this.firstSize) ||\r\n            (this.isFirst===false && len>this.pageSize))\r\n        {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len === 0) {\r\n            this._items.clear();\r\n            return;\r\n        }\r\n        this.setPageStart(ret[len-1]);\r\n        if (this.appendPosition === 'tail')\r\n            this._items.push(...ret);\r\n        else\r\n            this._items.unshift(...ret.reverse());\r\n        this.isFirst = false;\r\n    }\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function Loading() {\r\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\r\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\nimport { nav } from './nav';\r\n\r\nexport interface ResUploaderProps {\r\n    className?: string;\r\n    multiple?: boolean;\r\n    maxSize?: number;\r\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport class ResUploader extends React.Component<ResUploaderProps> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    upload = async ():Promise<string> => {\r\n        let {maxSize} = this.props;\r\n        if (maxSize === undefined || maxSize <= 0) \r\n            maxSize = 100000000000;\r\n        else\r\n            maxSize = maxSize * 1024;\r\n        let resUrl = nav.resUrl + 'upload';\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            if (file.size > maxSize) return null;\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(resUrl, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            let json = await res.json();\r\n            return ':' + json.res.id;\r\n        }\r\n        catch (err) {\r\n            console.error('%s %s', resUrl, err);\r\n        }\r\n    }\r\n    render() {\r\n        let {className, multiple, onFilesChange} = this.props;\r\n        return <input \r\n            className={className}\r\n            ref={t=>this.fileInput=t} \r\n            onChange={onFilesChange}\r\n            type='file' name='file' multiple={multiple} />\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { UqApi, UqData, UnitxApi, appInFrame } from '../net';\r\nimport { Tuid, TuidDiv, TuidImport, TuidInner, TuidBox, TuidsCache } from './tuid';\r\nimport { Action } from './action';\r\nimport { Sheet } from './sheet';\r\nimport { Query } from './query';\r\nimport { Book } from './book';\r\nimport { History } from './history';\r\nimport { Map } from './map';\r\nimport { Pending } from './pending';\r\nimport { CreateBoxId, BoxId } from './tuid';\r\n//import { UqCache } from './caches';\r\nimport { LocalMap, LocalCache } from '../tool';\r\nimport { UQsMan } from './uqsMan';\r\nimport { ReactBoxId } from './tuid/reactBoxId';\r\n\r\nexport type FieldType = 'id' | 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text'\r\n    | 'datetime' | 'date' | 'time';\r\n\r\nexport function fieldDefaultValue(type:FieldType) {\r\n    switch (type) {\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n        case 'dec':\r\n            return 0;\r\n        case 'char':\r\n        case 'text':\r\n            return '';\r\n        case 'datetime':\r\n        case 'date':\r\n            return '2000-1-1';\r\n        case 'time':\r\n            return '0:00';\r\n    }\r\n}\r\n\r\nexport interface Field {\r\n    name: string;\r\n    type: FieldType;\r\n    tuid?: string;\r\n    arr?: string;\r\n    null?: boolean;\r\n    size?: number;\r\n    owner?: string;\r\n    _tuid: TuidBox;\r\n}\r\nexport interface ArrFields {\r\n    name: string;\r\n    fields: Field[];\r\n    id?: string;\r\n    order?: string;\r\n}\r\nexport interface FieldMap {\r\n    [name:string]: Field;\r\n}\r\nexport interface SchemaFrom {\r\n    owner:string;\r\n    uq:string;\r\n}\r\nexport interface TuidModify {\r\n    max: number;\r\n    seconds: number;\r\n}\r\n\r\nexport class UqMan {\r\n    private readonly actions: {[name:string]: Action} = {};\r\n    private readonly sheets: {[name:string]: Sheet} = {};\r\n    private readonly queries: {[name:string]: Query} = {};\r\n    private readonly books: {[name:string]: Book} = {};\r\n    private readonly maps: {[name:string]: Map} = {};\r\n    private readonly histories: {[name:string]: History} = {};\r\n    private readonly pendings: {[name:string]: Pending} = {};\r\n    private readonly tuidsCache: TuidsCache;\r\n    private readonly localAccess: LocalCache;\r\n    private readonly tvs:{[entity:string]:(values:any)=>JSX.Element};\r\n    readonly localMap: LocalMap;\r\n    readonly localModifyMax: LocalCache;\r\n    readonly tuids: {[name:string]: Tuid} = {};\r\n    readonly createBoxId: CreateBoxId;\r\n    readonly newVersion: boolean;\r\n    readonly uqOwner: string;\r\n    readonly uqName: string;\r\n    readonly name: string;\r\n    readonly uqApi: UqApi;\r\n    readonly id: number;\r\n\r\n    uqVersion: number;\r\n\r\n    constructor(uqs:UQsMan, uqData: UqData, createBoxId:CreateBoxId, tvs:{[entity:string]:(values:any)=>JSX.Element}) {\r\n        this.createBoxId = createBoxId;\r\n        if (createBoxId === undefined) {\r\n            this.createBoxId = this.createBoxIdFromTVs;\r\n            this.tvs = tvs || {};\r\n        }\r\n        let {id, uqOwner, uqName, access, newVersion: clearTuids} = uqData;\r\n        this.newVersion = clearTuids;\r\n        this.uqOwner = uqOwner;\r\n        this.uqName = uqName;\r\n        this.id = id;\r\n        this.name = uqOwner + '/' + uqName;\r\n        this.uqVersion = 0;\r\n        this.localMap = uqs.localMap.map(this.name);\r\n        this.localModifyMax = this.localMap.child('$modifyMax');\r\n        this.localAccess = this.localMap.child('$access');\r\n        //let hash = document.location.hash;\r\n        let baseUrl = 'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        if (this.name === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            this.uqApi = new UnitxApi(appInFrame.unit);\r\n        }\r\n        else {\r\n            this.uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\r\n        }\r\n        this.tuidsCache = new TuidsCache(this);\r\n    }\r\n\r\n    get entities() {\r\n        return _.merge({}, \r\n            this.actions, this.sheets, this.queries, this.books,\r\n            this.maps, this.histories, this.pendings, this.tuids\r\n        );\r\n    }\r\n\r\n    private createBoxIdFromTVs:CreateBoxId = (tuid:Tuid, id:number):BoxId =>{\r\n        let {name} = tuid;\r\n        /*\r\n        let tuidUR = this.tuidURs[name];\r\n        if (tuidUR === undefined) {\r\n            let {ui, res} = this.getUI(tuid);\r\n            this.tuidURs[name] = tuidUR = new TuidWithUIRes(tuid, ui, res);\r\n        }\r\n        */\r\n        return new ReactBoxId(id, tuid, this.tvs[name]);\r\n    }\r\n\r\n    tuid(name:string):Tuid {return this.tuids[name.toLowerCase()]}\r\n    tuidDiv(name:string, div:string):TuidDiv {\r\n        let tuid = this.tuids[name.toLowerCase()]\r\n        return tuid && tuid.div(div.toLowerCase());\r\n    }\r\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\r\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\r\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\r\n    book(name:string):Book {return this.books[name.toLowerCase()]}\r\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\r\n    history(name:string):History {return this.histories[name.toLowerCase()]}\r\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\r\n\r\n    sheetFromTypeId(typeId:number):Sheet {\r\n        for (let i in this.sheets) {\r\n            let sheet = this.sheets[i];\r\n            if (sheet.typeId === typeId) return sheet;\r\n        }\r\n    }\r\n\r\n    tuidArr: Tuid[] = [];\r\n    actionArr: Action[] = [];\r\n    sheetArr: Sheet[] = [];\r\n    queryArr: Query[] = [];\r\n    bookArr: Book[] = [];\r\n    mapArr: Map[] = [];\r\n    historyArr: History[] = [];\r\n    pendingArr: Pending[] = [];\r\n\r\n    async init() {\r\n        await this.uqApi.init();\r\n    }\r\n\r\n    async loadEntities(): Promise<string> {\r\n        try {\r\n            let accesses = this.localAccess.get();\r\n            if (!accesses) {\r\n                accesses = await this.uqApi.loadAccess();\r\n            }\r\n            if (!accesses) return;\r\n            this.buildEntities(accesses);\r\n            if (this.uqName === 'common') {\r\n                this.pullModify(12);\r\n            }\r\n        }\r\n        catch (err) {\r\n            return err;\r\n        }\r\n    }\r\n    /*\r\n    async loadEntities() {\r\n        let accesses = await this.uqApi.loadEntities();\r\n        this.buildEntities(accesses);\r\n    }\r\n    */\r\n    buildEntities(entities:any) {\r\n        if (entities === undefined) {\r\n            debugger;\r\n        }\r\n        this.localAccess.set(entities);\r\n        let {access, tuids, version} = entities;\r\n        this.uqVersion = version;\r\n        this.buildTuids(tuids);\r\n        this.buildAccess(access);\r\n    }\r\n\r\n    /*\r\n    async checkAccess() {\r\n        return await this.uqApi.checkAccess();\r\n    }\r\n    */\r\n\r\n    async loadEntitySchema(entityName: string): Promise<any> {\r\n        return await this.uqApi.schema(entityName);\r\n    }\r\n\r\n    getTuid(name:string): Tuid {\r\n        return this.tuids[name];\r\n    }\r\n\r\n    private buildTuids(tuids:any) {\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {typeId, from} = schema;\r\n            let tuid = this.newTuid(i, typeId, from);\r\n            tuid.sys = true;\r\n        }\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let tuid = this.getTuid(i);\r\n            tuid.setSchema(schema);\r\n        }\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.buildFieldsTuid();\r\n        }\r\n    }\r\n\r\n    private buildAccess(access:any) {\r\n        for (let a in access) {\r\n            let v = access[a];\r\n            switch (typeof v) {\r\n                case 'string': this.fromType(a, v); break;\r\n                case 'object': this.fromObj(a, v); break;\r\n            }\r\n        }\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.tuidsCache.cacheTuids(defer);\r\n    }\r\n\r\n    newAction(name:string, id:number):Action {\r\n        let action = this.actions[name];\r\n        if (action !== undefined) return action;\r\n        action = this.actions[name] = new Action(this, name, id)\r\n        this.actionArr.push(action);\r\n        return action;\r\n    }\r\n    private newTuid(name:string, id:number, from:SchemaFrom):Tuid {\r\n        let tuid = this.tuids[name];\r\n        if (tuid !== undefined) return tuid;\r\n        if (from !== undefined)\r\n            tuid = new TuidImport(this, name, id, from);\r\n        else\r\n            tuid = new TuidInner(this, name, id);\r\n        this.tuids[name] = tuid;\r\n        this.tuidArr.push(tuid);\r\n        return tuid;\r\n    }\r\n    newQuery(name:string, id:number):Query {\r\n        let query = this.queries[name];\r\n        if (query !== undefined) return query;\r\n        query = this.queries[name] = new Query(this, name, id)\r\n        this.queryArr.push(query);\r\n        return query;\r\n    }\r\n    private newBook(name:string, id:number):Book {\r\n        let book = this.books[name];\r\n        if (book !== undefined) return book;\r\n        book = this.books[name] = new Book(this, name, id);\r\n        this.bookArr.push(book);\r\n        return book;\r\n    }\r\n    private newMap(name:string, id:number):Map {\r\n        let map = this.maps[name];\r\n        if (map !== undefined) return map;\r\n        map = this.maps[name] = new Map(this, name, id)\r\n        this.mapArr.push(map);\r\n        return map;\r\n    }\r\n    private newHistory(name:string, id:number):History {\r\n        let history = this.histories[name];\r\n        if (history !== undefined) return;\r\n        history = this.histories[name] = new History(this, name, id)\r\n        this.historyArr.push(history);\r\n        return history;\r\n    }\r\n    private newPending(name:string, id:number):Pending {\r\n        let pending = this.pendings[name];\r\n        if (pending !== undefined) return;\r\n        pending = this.pendings[name] = new Pending(this, name, id)\r\n        this.pendingArr.push(pending);\r\n        return pending;\r\n    }\r\n    newSheet(name:string, id:number):Sheet {\r\n        let sheet = this.sheets[name];\r\n        if (sheet !== undefined) return sheet;\r\n        sheet = this.sheets[name] = new Sheet(this, name, id);\r\n        this.sheetArr.push(sheet);\r\n        return sheet;\r\n    }\r\n    private fromType(name:string, type:string) {\r\n        let parts = type.split('|');\r\n        type = parts[0];\r\n        let id = Number(parts[1]);\r\n        switch (type) {\r\n            //case 'uq': this.id = id; break;\r\n            case 'tuid':\r\n                // Tuid should not be created here!;\r\n                //let tuid = this.newTuid(name, id);\r\n                //tuid.sys = false;\r\n                break;\r\n            case 'action': this.newAction(name, id); break;\r\n            case 'query': this.newQuery(name, id); break;\r\n            case 'book': this.newBook(name, id); break;\r\n            case 'map': this.newMap(name, id); break;\r\n            case 'history': this.newHistory(name, id); break;\r\n            case 'sheet':this.newSheet(name, id); break;\r\n            case 'pending': this.newPending(name, id); break;\r\n        }\r\n    }\r\n    private fromObj(name:string, obj:any) {\r\n        switch (obj['$']) {\r\n            case 'sheet': this.buildSheet(name, obj); break;\r\n        }\r\n    }\r\n    private buildSheet(name:string, obj:any) {\r\n        let sheet = this.sheets[name];\r\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\r\n        sheet.build(obj);\r\n    }\r\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {tuid} = f;\r\n            if (tuid === undefined) continue;\r\n            let t = this.getTuid(tuid);\r\n            if (t === undefined) continue;\r\n            f._tuid = t.buildTuidBox();\r\n        }\r\n        for (let f of fields) {\r\n            let {owner} = f;\r\n            if (owner === undefined) continue;\r\n            let ownerField = fields.find(v => v.name === owner);\r\n            if (ownerField === undefined) {\r\n                if (mainFields !== undefined) {\r\n                    ownerField = mainFields.find(v => v.name === owner);\r\n                }\r\n                if (ownerField === undefined) {\r\n                    debugger;\r\n                    throw new Error(`owner field ${owner} is undefined`);\r\n                }\r\n            }\r\n            let {arr, tuid} = f;\r\n            let t = this.getTuid(ownerField._tuid.tuid.name);\r\n            if (t === undefined) continue;\r\n            let div = t.div(arr || tuid);\r\n            f._tuid = div && div.buildTuidDivBox(ownerField);\r\n            if (f._tuid === undefined) {\r\n                debugger;\r\n                throw new Error(`owner field ${owner} is not tuid`);\r\n            }\r\n        }\r\n    }\r\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\r\n        if (arrFields === undefined) return;\r\n        for (let af of arrFields) {\r\n            let {fields} = af;\r\n            if (fields === undefined) continue;\r\n            this.buildFieldTuid(fields, mainFields);\r\n        }\r\n    }\r\n\r\n    pullModify(modifyMax:number) {\r\n        this.tuidsCache.pullModify(modifyMax);\r\n    }\r\n}\r\n","import { Entity } from './entity';\r\nimport { PageItems } from '../tool/pageItems';\r\nimport { EntityCaller } from './caller';\r\n\r\nexport interface SheetState {\r\n    name: string;\r\n    actions: SheetAction[];\r\n}\r\n\r\nexport interface SheetAction {\r\n    name: string;\r\n}\r\n\r\nexport interface StateCount {\r\n    state: string;\r\n    count: number;\r\n}\r\n\r\nexport class Sheet extends Entity {\r\n    get typeName(): string { return 'sheet';}\r\n    states: SheetState[];\r\n\r\n    /*\r\n    setStates(states: SheetState[]) {\r\n        for (let state of states) {\r\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\r\n        }\r\n    }*/\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.states = schema.states;\r\n    }\r\n    build(obj:any) {\r\n        this.states = [];\r\n        for (let op of obj.ops) {\r\n            this.states.push({name: op, actions:undefined});\r\n        }\r\n        /*\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }\r\n    /*\r\n    private setStateAccess(s:SheetState, s1:SheetState) {\r\n        if (s === undefined) return;\r\n        for (let action of s1.actions) {\r\n            let acn = action.name;\r\n            let ac = s.actions.find(a=>a.name === acn);\r\n            if (ac === undefined) continue;\r\n            s.actions.push(action);\r\n        }\r\n    }*/\r\n    async save(discription:string, data:any):Promise<any> {\r\n        /*\r\n        await this.loadSchema();\r\n        let {id} = this.uq;\r\n        let text = this.pack(data);\r\n\r\n        let ret = await this.uqApi.sheetSave(this.name, );\r\n        return ret;\r\n        */\r\n        let {id} = this.uq;\r\n        //let text = this.pack(data);\r\n        let params = {app: id, discription: discription, data:data};\r\n        return await new SaveCaller(this, params).request();\r\n        /*\r\n        let {id, state} = ret;\r\n        if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n        */\r\n    }\r\n    async action(id:number, flow:number, state:string, action:string) {\r\n        /*\r\n        await this.loadSchema();\r\n        return await this.uqApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\r\n        */\r\n        return await new ActionCaller(this, {id:id, flow:flow, state:state, action:action}).request();\r\n    }\r\n    private unpack(data:any):any {\r\n        //if (this.schema === undefined) await this.loadSchema();\r\n        let ret = data[0];\r\n        let brief = ret[0];\r\n        let sheetData = this.unpackSheet(brief.data);\r\n        let flows = data[1];\r\n        return {\r\n            brief: brief,\r\n            data: sheetData,\r\n            flows: flows,\r\n        }\r\n    }\r\n    async getSheet(id:number):Promise<any> {\r\n        /*\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.getSheet(this.name, id);\r\n        */\r\n        let ret = await new GetSheetCaller(this, id).request();\r\n        if (ret[0].length === 0) return await this.getArchive(id);\r\n        return this.unpack(ret);\r\n    }\r\n    async getArchive(id:number):Promise<any> {\r\n        /*\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.sheetArchive(this.name, id)\r\n        return this.unpack(ret);\r\n        */\r\n        let ret = await new SheetArchiveCaller(this, id).request();\r\n        return this.unpack(ret);\r\n    }\r\n\r\n    async getArchives(pageStart:number, pageSize:number) {\r\n        /*\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n        */\r\n        let params = {pageStart:pageStart, pageSize:pageSize};\r\n        return await new SheetArchivesCaller(this, params).request();\r\n    }\r\n\r\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        /*\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n        */\r\n        let params = {state:state, pageStart:pageStart, pageSize:pageSize};\r\n        return await new StateSheetsCaller(this, params).request();\r\n    }\r\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\r\n\r\n    async stateSheetCount():Promise<StateCount[]> {\r\n        /*\r\n        await this.loadSchema();\r\n        let ret:StateCount[] = await this.uqApi.stateSheetCount(this.name);\r\n        return this.states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = ret.find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n        */\r\n        return await new StateSheetCountCaller(this, undefined).request();\r\n    }\r\n\r\n    async userSheets(state:string, user:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        let params = {state:state, user:user, pageStart:pageStart, pageSize:pageSize};\r\n        return await new UserSheetsCaller(this, params).request();\r\n    }\r\n\r\n    async mySheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        /*\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.mySheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n        */\r\n        let params = {state:state, pageStart:pageStart, pageSize:pageSize};\r\n        return await new MySheetsCaller(this, params).request();\r\n    }\r\n}\r\n\r\n\r\nabstract class SheetCaller<T> extends EntityCaller<T> {\r\n    protected get entity(): Sheet {return this._entity as Sheet;}\r\n    protected readonly suffix:string;\r\n    get path():string {return `sheet/${this.entity.name}/${this.suffix}`;}\r\n}\r\n\r\nclass SaveCaller extends SheetCaller<{app:number; discription:string; data:any}> {\r\n    get path():string {return `sheet/${this.entity.name}`;}\r\n    buildParams() {\r\n        let {app, discription, data} = this.params;\r\n        return {\r\n            app: app,\r\n            discription: discription,\r\n            data: this.entity.pack(data)\r\n        };\r\n    }\r\n}\r\n\r\nclass ActionCaller extends SheetCaller<{id:number, flow:number, state:string, action:string}> {\r\n    method = 'PUT';\r\n    get path():string {return `sheet/${this.entity.name}`;}\r\n    //buildParams() {return this.entity.buildParams(this.params);}\r\n}\r\n\r\nclass GetSheetCaller extends SheetCaller<number> {\r\n    //protected readonly params: number;  // id\r\n    method = 'GET';\r\n    //private id:number;\r\n    //protected readonly suffix = 'archive';\r\n    buildParams() {}\r\n    get path():string {return `sheet/${this.entity.name}/get/${this.params}`;}\r\n}\r\n\r\nclass SheetArchiveCaller extends SheetCaller<number> {\r\n    protected readonly params: number;  // id\r\n    method = 'GET';\r\n    //protected readonly suffix = 'archive';\r\n    buildParams() {}\r\n    get path():string {return `sheet/${this.entity.name}/archive/${this.params}`;}\r\n}\r\n\r\nclass SheetArchivesCaller extends SheetCaller<{pageStart:number, pageSize:number}> {\r\n    protected readonly suffix = 'archives';\r\n}\r\n\r\nclass StateSheetsCaller extends SheetCaller<{state:string, pageStart:number, pageSize:number}> {\r\n    protected readonly suffix = 'states';\r\n}\r\n\r\nclass StateSheetCountCaller extends SheetCaller<undefined> {\r\n    method = 'GET';\r\n    protected readonly suffix = 'statecount';\r\n    xresult(res:any):any {\r\n        let {states} = this.entity;\r\n        return states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = (res as any[]).find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n    }\r\n}\r\n\r\nclass UserSheetsCaller extends SheetCaller<{state:string, user:number, pageStart:number, pageSize:number}> {\r\n    protected readonly suffix = 'user-sheets';\r\n    xresult(res:any):any {\r\n        return res;\r\n    }\r\n}\r\n\r\nclass MySheetsCaller extends SheetCaller<{state:string, pageStart:number, pageSize:number}> {\r\n    protected readonly suffix = 'my-sheets';\r\n    xresult(res:any):any {\r\n        return res;\r\n    }\r\n}\r\n\r\nexport class PageStateItems<T> extends PageItems<T> {\r\n    private sheet: Sheet;\r\n    constructor(sheet: Sheet) {\r\n        super(true);\r\n        this.sheet = sheet;\r\n        this.pageSize = 10;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import {Query} from './query';\r\nimport { QueryQueryCaller } from './caller';\r\n\r\nexport class Book extends Query {\r\n    get typeName(): string { return 'book';}\r\n    protected queryApiName = 'book';\r\n\r\n    protected queryCaller(params: any): QueryQueryCaller {\r\n        return new BookQueryCaller(this, params);\r\n    }\r\n}\r\n\r\nexport class BookQueryCaller extends QueryQueryCaller {\r\n    //protected get entity(): Query {return this._entity as Query};\r\n    get path():string {return `book/${this.entity.name}`;}\r\n    /*\r\n    xresult(res:any) {\r\n        let data = this.entity.unpackReturns(res);\r\n        return data;\r\n    }\r\n    buildParams() {return this.entity.buildParams(this.params);}\r\n    */\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class History extends Query {\r\n    get typeName(): string { return 'history';}\r\n    protected queryApiName = 'history';\r\n}\r\n","import { Entity } from './entity';\r\nimport { Action, ActionSubmitCaller } from './action';\r\nimport { Query } from './query';\r\nimport { Field } from './uqMan';\r\nimport { EntityCaller, QueryPageCaller, QueryQueryCaller } from './caller';\r\n\r\ninterface MapActions {\r\n    add: Action;\r\n    del: Action;\r\n}\r\ninterface MapQueries {\r\n    all: Query;\r\n    page: Query;\r\n    query: Query;\r\n}\r\n\r\nexport class Map extends Entity {\r\n    get typeName(): string { return 'map';}\r\n    keys: Field[];\r\n    actions: MapActions = {} as any;\r\n    queries: MapQueries = {} as any;\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.schemaFrom = this.schema.from;\r\n        let {actions, queries, keys} = schema;\r\n        this.uq.buildFieldTuid(this.keys = keys);\r\n        //let t = this.schemaStringify();\r\n        for (let i in actions) {\r\n            let actionSchema = actions[i];\r\n            let {name} = actionSchema;\r\n            let action = this.uq.newAction(name, undefined);\r\n            action.setSchema(actionSchema);\r\n            action.buildFieldsTuid();\r\n            (this.actions as any)[i] = action;\r\n        }\r\n        for (let i in queries) {\r\n            let querySchema = queries[i];\r\n            let {name} = querySchema;\r\n            let query = this.uq.newQuery(name, undefined);\r\n            query.setSchema(querySchema);\r\n            query.buildFieldsTuid();\r\n            (this.queries as any)[i] = query;\r\n        }\r\n    }\r\n\r\n    async add(param:any) {\r\n        /*\r\n        await this.loadSchema();\r\n        return await this.actions.add.submit(param);\r\n        */\r\n        let ret = await new AddCaller(this, param).request();\r\n        return ret;\r\n    }\r\n\r\n    async del(param:any) {\r\n        /*\r\n        await this.loadSchema();\r\n        return await this.actions.del.submit(param);\r\n        */\r\n        let ret = await new DelCaller(this, param).request();\r\n        return ret;\r\n    }\r\n\r\n    async all() {\r\n        /*\r\n        await this.loadSchema();\r\n        return await this.queries.all.query({});\r\n        */\r\n        let ret = await new AllCaller(this, undefined).request();\r\n        return ret;\r\n    }\r\n\r\n    async page(param:any, pageStart:any, pageSize: number) {\r\n        /*\r\n        await this.loadSchema();\r\n        return await this.queries.page.page(param, pageStart, pageSize);\r\n        */\r\n        let ret = await new PageCaller(this, {pageStart:pageStart, pageSize:pageSize, param:param}).request();\r\n        return ret;\r\n    }\r\n\r\n    async query(param:any) {\r\n        /*\r\n        await this.loadSchema();\r\n        return await this.queries.query.query(param);\r\n        */\r\n       let qc = new QueryCaller(this, param);\r\n       let ret = await qc.request();\r\n       return ret;\r\n   }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n\r\nabstract class MapCaller extends EntityCaller<any> {\r\n    protected get entity(): Map {return this._entity as Map;}\r\n    get path():string {return undefined;}\r\n\r\n    protected abstract getCaller(param: any):EntityCaller<any>;\r\n\r\n    protected async innerCall(): Promise<any> {\r\n        let caller = this.getCaller(this.params);\r\n        let res = await this.entity.uqApi.xcall(caller);\r\n        let ret = caller.xresult(res.res);\r\n        return {res: ret};\r\n    }\r\n\r\n    buildParams() {\r\n        let p = super.buildParams();\r\n        return p;\r\n    }\r\n}\r\n\r\nclass AddCaller extends MapCaller {\r\n    protected getCaller(param:any):EntityCaller<any> {\r\n        return new MapAddCaller(this.entity, this.entity.actions.add, param);\r\n    }\r\n}\r\n\r\nclass DelCaller extends MapCaller {\r\n    protected getCaller(param:any):EntityCaller<any> {\r\n        return new MapDelCaller(this.entity, this.entity.actions.add, param);\r\n    }\r\n}\r\n\r\nclass AllCaller extends MapCaller {\r\n    protected getCaller(param:any):EntityCaller<any> {\r\n        return new MapAllCaller(this.entity, this.entity.queries.all, param);\r\n    }\r\n}\r\n\r\nclass PageCaller extends MapCaller {\r\n    protected getCaller(param:any):EntityCaller<any> {\r\n        return new MapPageCaller(this.entity, this.entity.queries.page, param);\r\n    }\r\n}\r\n\r\nclass QueryCaller extends MapCaller {\r\n    protected getCaller(param:any):EntityCaller<any> {\r\n        return new MapQueryCaller(this.entity, this.entity.queries.query, param);\r\n    }\r\n}\r\n\r\nclass MapAddCaller extends ActionSubmitCaller {\r\n    private map: Map;\r\n    constructor(map:Map, action:Action, params:any) {\r\n        super(action, params);\r\n        this.map = map;\r\n    }\r\n\r\n    get path():string {return `map/${this.map.name}/add`}\r\n    get headers(): {[header:string]: string} {return undefined;}\r\n    /*\r\n        let {ver, uq} = this.map;\r\n        let {uqVersion} = uq;\r\n        return {\r\n            uq: `${uqVersion}`,\r\n            en: `${ver}`,\r\n        }\r\n    }*/\r\n}\r\n\r\nclass MapDelCaller extends ActionSubmitCaller {\r\n    private map: Map;\r\n    constructor(map:Map, action:Action, params:any) {\r\n        super(action, params);\r\n        this.map = map;\r\n    }\r\n\r\n    get path():string {return `map/${this.map.name}/del`}\r\n    get headers(): {[header:string]: string} {return undefined}\r\n    /*\r\n        let {ver, uq} = this.map;\r\n        let {uqVersion} = uq;\r\n        return {\r\n            uq: `${uqVersion}`,\r\n            en: `${ver}`,\r\n        }\r\n    }*/\r\n}\r\n\r\nclass MapAllCaller extends QueryPageCaller {\r\n    private map: Map;\r\n    constructor(map:Map, query:Query, params:any) {\r\n        super(query, params);\r\n        this.map = map;\r\n    }\r\n\r\n    get path():string {return `map/${this.map.name}/all`}\r\n    get headers(): {[header:string]: string} {return undefined}\r\n    /*\r\n        let {ver, uq} = this.map;\r\n        let {uqVersion} = uq;\r\n        return {\r\n            uq: `${uqVersion}`,\r\n            en: `${ver}`,\r\n        }\r\n    }*/\r\n}\r\n\r\n\r\nclass MapPageCaller extends QueryPageCaller {\r\n    private map: Map;\r\n    constructor(map:Map, query:Query, params:any) {\r\n        super(query, params);\r\n        this.map = map;\r\n    }\r\n\r\n    get path():string {return `map/${this.map.name}/page`}\r\n    get headers(): {[header:string]: string} {return undefined}\r\n    /*\r\n        let {ver, uq} = this.map;\r\n        let {uqVersion} = uq;\r\n        return {\r\n            uq: `${uqVersion}`,\r\n            en: `${ver}`,\r\n        }\r\n    }*/\r\n}\r\n\r\nclass MapQueryCaller extends QueryQueryCaller {\r\n    private map: Map;\r\n    constructor(map:Map, query:Query, params:any) {\r\n        super(query, params);\r\n        this.map = map;\r\n    }\r\n\r\n    get path():string {return `map/${this.map.name}/query`}\r\n    get headers(): {[header:string]: string} {return undefined}\r\n    /*\r\n        let {ver, uq} = this.map;\r\n        let {uqVersion} = uq;\r\n        return {\r\n            uq: `${uqVersion}`,\r\n            en: `${ver}`,\r\n        }\r\n    }*/\r\n}","import {Query} from './query';\r\n\r\nexport class Pending extends Query {\r\n    get typeName(): string { return 'pending';}\r\n    protected queryApiName = 'pending';\r\n}\r\n","import React from 'react';\r\nimport { FA } from '../components';\r\n\r\nfunction icon(className:string, name:string) {\r\n    return <FA className={className} name={name} fixWidth={true} />;\r\n}\r\n\r\nexport const entityIcons:{[type:string]:JSX.Element} = {\r\n    tuid: icon('text-info', 'list-alt'),\r\n    action: icon('text-info', 'hand-o-right'),\r\n    map: icon('text-muted', 'list-ul'),\r\n    book: icon('text-muted', 'book'),\r\n    query: icon('text-warning', 'search'),\r\n    history: icon('text-info', 'hand-o-right'),\r\n    pending: icon('text-info', 'forward'),\r\n    sheet: icon('text-primary', 'wpforms'),\r\n};\r\n","import { Controller } from '../components';\r\nimport { CUq } from './cUq';\r\n\r\nexport abstract class ControllerUq extends Controller {\r\n    constructor(cUq: CUq, res:any) {\r\n        super(res);\r\n        this.cUq = cUq;\r\n    }\r\n    cUq: CUq;\r\n}\r\n","export * from './rule';\r\nexport * from './field';\r\nexport * from './face';\r\nexport * from './rowContainer';\r\nexport * from './formView';\r\nexport * from './TonvaForm';\r\nexport {ControlBase} from './control';\r\n","import * as React from 'react';\r\nimport {FormEvent} from 'react';\r\nimport {computed} from 'mobx';\r\nimport {uid} from 'tonva';\r\nimport {Rule} from './rule';\r\nimport {Field} from './field';\r\nimport {Face} from './face';\r\nimport {CreateControl, ButtonsControl} from './control';\r\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\r\n\r\nexport interface FieldView {\r\n    field: Field;\r\n    face?: Face;\r\n}\r\n\r\nexport interface LabeledRow {\r\n    label?: string;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    help?: JSX.Element;\r\n}\r\n\r\nexport interface FieldRow extends LabeledRow, FieldView {\r\n}\r\n\r\nexport interface GroupRow extends LabeledRow {\r\n    group: FieldView[];\r\n}\r\n\r\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\r\nexport type FormRow = LabelFormRow|JSX.Element;\r\n\r\nexport interface SubmitResult {\r\n    success: boolean;\r\n    message?: string\r\n    result?: any;\r\n}\r\n\r\nexport interface FormProps {\r\n    formRows: FormRow[];\r\n    //context?: any;              // form context，比如，可以是EntitiesUI\r\n    rules?: Rule | Rule[];\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n    otherButton?: string|JSX.Element;\r\n    onOther?: (values:any) => void;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport class FormView {\r\n    uid:string;\r\n    private rows: RowContainer[] = [];\r\n    private buttonsRow: RowContainer;\r\n    props: FormProps;\r\n    createControl?: CreateControl;\r\n    constructor(props:FormProps) {\r\n        this.uid = uid();\r\n        this.props = props;\r\n        this.buildRows(props);\r\n        this.createControl = props.createControl;\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\r\n        console.log(ret);\r\n        return this.rows.some(row => row.hasError);\r\n    }\r\n    @computed get nothing():boolean {\r\n        let ret = this.rows.every(row => !row.filled);\r\n        return ret;\r\n    }\r\n\r\n    readValues():any {\r\n        let values = {} as any;\r\n        for (let row of this.rows) {\r\n            row.readValues(values);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    clear() {\r\n        for (let row of this.rows) {\r\n            row.clear();\r\n        }\r\n    }\r\n\r\n    clearErrors() {\r\n        for (let row of this.rows) {\r\n            row.clearErrors();\r\n        }\r\n    }\r\n\r\n    setError(fieldName:string, error:string) {\r\n        for (let row of this.rows) {\r\n            row.setError(fieldName, error);\r\n        }\r\n    }\r\n\r\n    setInitValues(initValues:any) {\r\n        if (initValues === undefined) return;\r\n        for (let row of this.rows) {\r\n            row.setInitValues(initValues);\r\n        }\r\n    }\r\n\r\n    private buildRows(props:FormProps) {\r\n        let {formRows, createRow} = props;\r\n        if (formRows !== undefined) {\r\n            for (let row of formRows) {\r\n                this.rows.push(this.buildRow(row, createRow));\r\n            }\r\n            if (this.props.readOnly !== true) {\r\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\r\n            }\r\n        }\r\n        else {\r\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\r\n        }\r\n    }\r\n\r\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\r\n        let createRow:CreateRow;\r\n        let type = (formRow as JSX.Element).type;\r\n        if (type !== undefined) {\r\n            createRow = elementCreateRow;\r\n        }\r\n        else {\r\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\r\n            if (createRow === undefined) {\r\n                createRow = formRowCreator;\r\n                if (createRow === undefined) createRow = bootstrapCreateRow;\r\n            }\r\n        }\r\n        let row = createRow(this, formRow);\r\n        return row;\r\n    }\r\n\r\n    private createButtons(form:FormView, row: FormRow) {\r\n        return new ButtonsControl(form);\r\n    }\r\n\r\n    private isOk():boolean {\r\n        let isOk = true;\r\n        for (let row of this.rows) {\r\n            if (!row.isOk()) isOk = false;\r\n        }\r\n        return isOk;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        return <form onSubmit={this.onSubmit}>\r\n            {this.rows.map((row,index) => row.render(this.uid + index))}\r\n            {this.buttons()}\r\n        </form>;\r\n    }\r\n\r\n    buttons():JSX.Element {\r\n        if (this.buttonsRow === undefined) return;\r\n        return this.buttonsRow.render(this.uid + this.rows.length);\r\n    }\r\n    \r\n    async onSubmit(event:FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (!this.isOk()) return;\r\n        let values = this.readValues();\r\n        await this.props.onSubmit(values);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page, List, Muted, LMR } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uq';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open() {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    newClick = () => this.event('new');\r\n    schemaClick = () => this.event('schema'); \r\n    archivesClick = () => this.event('archives');\r\n    sheetStateClick = (state:any) => this.event('state', state);\r\n\r\n    renderState = (item:any, index:number) => {\r\n        let {state, count} = item;\r\n        if (count === 0) return null;\r\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\r\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let list = this.controller.statesCount.filter(row=>row.count);\r\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\r\n        let templet:any;\r\n        if (this.isDev === true) {\r\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\r\n        }\r\n        return <Page header={this.label}>\r\n            <LMR\r\n                className=\"mx-3 my-2\"\r\n                right={right}>\r\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\r\n                {templet}\r\n            </LMR>\r\n            <List className=\"my-2\"\r\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\r\n                none=\"[ 无 ]\"\r\n                items={list}\r\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../components';\r\nimport { Sheet } from '../../uq';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\r\n    vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        let valuesWithBox = this.vForm.values;\r\n        //let ret = \r\n        await this.controller.onSave(values, valuesWithBox);\r\n        /*\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.controller.showSaved(ret);\r\n        */\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import * as React from 'react';\r\nimport {List, Muted, LMR, EasyDate, FA} from '../../components';\r\nimport { Sheet } from '../../uq';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nconst leftFlowStyle = {width: '8rem'};\r\n\r\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected vForm: VForm;\r\n    protected sheetData: SheetData;\r\n    //data: any;\r\n    //state: string;\r\n    //flows:any[];\r\n\r\n    flowRow = (item:any, index:number):JSX.Element => {\r\n        let {date, state, action} = item;\r\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\r\n        let to;\r\n        switch (state) {\r\n            case '$': break;\r\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\r\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\r\n        }\r\n        /*\r\n        return <div className=\"row\">\r\n            <div className=\"col-sm\"></div>\r\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\r\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\r\n        </div>;\r\n        */\r\n        return <LMR \r\n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\r\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\r\n            <div className=\"p-2\">{to}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    protected sheetView = () => {\r\n        let {brief, flows} = this.sheetData;\r\n        let removed;\r\n        if (brief.state === '-')\r\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\r\n        return <div>\r\n            {removed}\r\n            {this.vForm.render()}\r\n    \r\n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\r\n                items={flows}\r\n                item={{render:this.flowRow}}/>\r\n        </div>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../components';\r\nimport { FormMode } from '../form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\r\n    protected sheetData: SheetData;\r\n    async open(param: SheetData) {\r\n        this.sheetData = param;\r\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        await this.controller.saveSheet(values, this.vForm.values);\r\n        this.closePage();\r\n        this.returnCall(this.vForm.values);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { FA, Page } from '../../components';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetAction extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        let {id, flow, state} = this.sheetData.brief;\r\n        await this.controller.action(id, flow, state, action.name);\r\n        this.ceasePage();\r\n        this.openPage(this.acted);\r\n        //alert(jsonStringify(res));\r\n        //await this.backPage();\r\n    }\r\n\r\n    deleteClick = async () => {\r\n        alert('单据作废：程序正在设计中');\r\n    }\r\n\r\n    editClick = async () => {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.controller.editSheet(this.sheetData);\r\n        this.vForm.setValues(values);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        let {states} = this.entity;\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons, startButtons;\r\n        if (s === undefined) {\r\n            let text:string, cn:string;\r\n            switch (state) {\r\n                default:\r\n                    text = '不认识的单据状态\\'' + state + '\\'';\r\n                    cn = 'text-info';\r\n                    break;\r\n                case '-': \r\n                    text = '已作废';\r\n                    cn = 'text-danger';\r\n                    break;\r\n                case '#':\r\n                    text = '已归档';\r\n                    cn = 'text-success';\r\n                    break;\r\n            }\r\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\r\n        }\r\n        else {\r\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \r\n                <button\r\n                    key={index}\r\n                    className=\"btn btn-primary mr-2\"\r\n                    onClick={()=>this.actionClick(v)}\r\n                >\r\n                    {this.controller.getActionLabel(state, v.name)}\r\n                </button>)}\r\n            </div>;\r\n            if (state === '$') {\r\n                startButtons = <div>\r\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\r\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\r\n                </div>\r\n            }\r\n        };\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    {actionButtons}\r\n                    {startButtons}\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        let {discription} = this.sheetData.brief;\r\n        return <Page header=\"已处理\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"p-3\">{discription}</div>\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uq';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open(param?:any) {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label + \"模板\"}>\r\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\r\n    </Page>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Page, List, LMR, EasyDate, Muted } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uq';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\r\n    list: any[];\r\n\r\n    async open() {\r\n        this.list = await this.entity.getArchives(undefined, 10);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    archiveClick = async (brief:any) => {\r\n        if (brief.processing===1) return;\r\n        this.event('archived', brief);\r\n    }\r\n    archiveRow = (row:any, index:number) => {\r\n        let {date} = row;\r\n        let left = <>\r\n            {row.processing===1? '... ' : ''}\r\n            {row.no} &nbsp; {row.discription}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\r\n    }\r\n\r\n    protected view = () => {\r\n        return <Page header={'已归档' + this.label}>\r\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page, List, Muted, LMR, EasyDate } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uq';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected row: (values:any) => JSX.Element;\r\n    stateName: string;\r\n    stateLabel: string;\r\n\r\n    async open(item:any) {\r\n        this.row = this.ui.listRow || this.rowContent;\r\n        this.stateName = item.state;\r\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\r\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\r\n        await this.controller.pageStateItems.first(this.stateName);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    rowClick = async (brief:any) => {\r\n        if (brief.processing===1) {\r\n            this.event('processing', brief.id);\r\n            return;\r\n        }\r\n        this.event('action', brief.id);\r\n    }\r\n\r\n    private onScrollBottom = () => {\r\n        console.log('onScrollBottom');\r\n        this.controller.pageStateItems.more();\r\n    }\r\n\r\n    protected rowContent = (row:any):JSX.Element => {\r\n        let {no, discription, date, processing} = row;\r\n        let left = <>            \r\n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\r\n    }\r\n\r\n    private renderRow = (row:any, index:number) => <this.row {...row} />\r\n\r\n    protected view = () => {\r\n        //let sheets = this.controller.stateSheets;\r\n        let {pageStateItems} = this.controller;\r\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\r\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../components';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport interface SheetStateFlows {\r\n    flows: any;\r\n    data: any;\r\n}\r\nexport class VArchived extends VSheetView {\r\n    //protected controller: CSheet;\r\n    //brief: any;\r\n\r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        /*\r\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\r\n        this.brief = brief;\r\n        this.data = data;\r\n        this.flows = flows;\r\n        */\r\n        this.vForm = this.createForm(undefined, this.sheetData.data);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {brief} = this.sheetData;\r\n        return <Page header={this.label + '-' + brief.no}>\r\n            <this.sheetView />\r\n        </Page>;\r\n    };\r\n}\r\n","import { Sheet } from '../../uq';\r\nimport { SheetUI, CSheet } from './cSheet';\r\nimport { VEntity } from '../CVEntity';\r\n\r\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\r\n}\r\n","import * as React from 'react';\r\nimport { Page, FA } from '../../components';\r\nimport { VSheet } from './vSheet';\r\n\r\nexport class VSheetSaved extends VSheet {\r\n    private brief: any;\r\n    async open(brief?:any) {\r\n        this.brief = brief;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private restart = async () => {\r\n        this.ceasePage();\r\n        await this.event('new');\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        this.ceasePage();\r\n        let {id, flow, state} = this.brief;\r\n        await this.controller.action(id, flow, state, action.name);\r\n        this.openPage(this.acted);\r\n    }\r\n\r\n    private buttons = <>\r\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\r\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n    </>;\r\n\r\n    private view = () => {\r\n        let {states} = this.entity;\r\n        const state = '$';\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons = <>{s.actions.map((v,index) => \r\n            <button\r\n                key={index}\r\n                className=\"btn btn-primary mr-3\"\r\n                onClick={()=>this.actionClick(v)}\r\n            >\r\n                {this.controller.getActionLabel(state, v.name)}\r\n            </button>)}\r\n        </>;\r\n        return <Page header=\"已保存\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\r\n                <div className=\"p-3\">\r\n                    {actionButtons}\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        return <Page>\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Page } from '../../components';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetProcessing extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    正在处理中...\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import { IObservableArray, observable } from 'mobx';\r\nimport { postWsToTop } from '../../net';\r\nimport { TypeVPage } from '../../components';\r\nimport { PageItems } from '../../tool';\r\nimport { Sheet, StateCount } from '../../uq';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { VSheetMain } from './vMain';\r\nimport { VSheetNew } from './vNew';\r\nimport { VSheetEdit } from './vEdit';\r\nimport { VSheetAction } from './vSheetAction';\r\nimport { VSheetSchema } from './vSchema';\r\nimport { VArchives } from './vArchives';\r\nimport { VSheetList } from './vList';\r\nimport { VArchived } from './vArchived';\r\nimport { VSheetSaved } from './vSaved';\r\nimport { VSheetProcessing } from './vSheetProcessing';\r\n\r\nexport interface SheetActionUI {\r\n    label: string;\r\n}\r\n\r\nexport interface StateUI {\r\n    label: string;\r\n    actions: {[name:string]: SheetActionUI}\r\n}\r\n\r\nexport interface SheetUI extends EntityUI {\r\n    CSheet?: typeof CSheet;\r\n    states?: {[name:string]: StateUI};\r\n    main?: TypeVPage<CSheet>;\r\n    sheetNew?: TypeVPage<CSheet>;\r\n    sheetSaved?: TypeVPage<CSheet>;\r\n    sheetEdit?: TypeVPage<CSheet>;\r\n    sheetAction?: TypeVPage<CSheet>;\r\n    listRow?: (row:any) => JSX.Element;\r\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\r\n}\r\n\r\nexport interface SheetData {\r\n    brief: any;\r\n    data: any;\r\n    flows: any[];\r\n}\r\n\r\nexport class CSheet extends CEntity<Sheet, SheetUI> {\r\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\r\n    curState:string;\r\n    pageStateItems: PageItems<any>;\r\n\r\n    protected async internalStart() {\r\n        await this.loadStateSheetCount();\r\n        this.pageStateItems = this.entity.createPageStateItems();\r\n        await this.openVPage(this.VSheetMain);\r\n    }\r\n\r\n    protected async onMessage(msg: any):Promise<void> {\r\n        let {type, body, from, to} = msg;\r\n        if (type === 'sheet') this.onSheet(from, to, body);\r\n    }\r\n    private onSheet(from:number, to:number[], sheetData:any) {\r\n        let me = this.user.id;\r\n        let {id, preState, state} = sheetData;\r\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\r\n        if (from === me) {\r\n            this.sheetActPreState(id, preState);\r\n        }\r\n        if (to.find(v=>v===me) !== undefined) {\r\n            this.sheetActState(id, state, sheetData);\r\n        }\r\n    }\r\n    private sheetActPreState(id:number, preState:string) {\r\n        this.changeStateCount(preState, -1);\r\n        if (this.curState === undefined || this.curState !== preState) return;\r\n        /*\r\n        let index = this.stateSheets.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.stateSheets.splice(index, 1);\r\n        }*/\r\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.pageStateItems.items.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private sheetActState(id:number, state:string, msg:any) {\r\n        this.changeStateCount(state, 1);\r\n        if (this.curState === undefined || this.curState !== state) return;\r\n        /*\r\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\r\n            this.stateSheets.push(msg);\r\n        }\r\n        */\r\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\r\n            this.pageStateItems.items.push(msg);\r\n        }\r\n    }\r\n\r\n    private changeStateCount(state:string, delta:number) {\r\n        if (state === undefined) return;\r\n        let index = this.statesCount.findIndex(v => v.state === state);\r\n        console.log({$:'changeState', state: state, delta: delta, index: index});\r\n        if (index < 0) return;\r\n        let stateCount = this.statesCount[index];\r\n        stateCount.count += delta;\r\n        if (stateCount.count < 0) stateCount.count = 0;\r\n    }\r\n\r\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\r\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\r\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\r\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\r\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\r\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\r\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\r\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\r\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\r\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\r\n    protected async onEvent(type:string, value:any) {\r\n        let c: TypeVPage<CSheet>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': c = this.VSheetNew; break;\r\n            case 'schema': c = this.VSheetSchema; break;\r\n            case 'archives': c = this.VArchives; break;\r\n            case 'state':\r\n                this.curState = value.state;\r\n                c = this.VSheetList;\r\n                break;\r\n            case 'archived':\r\n                await this.showArchived(value); return;\r\n            case 'action':\r\n                await this.showAction(value); return;\r\n            case 'processing':\r\n                await this.showProcessing(value); return;\r\n        }\r\n        await this.openVPage(c, value);\r\n    }\r\n\r\n    async startSheet(sheetId:number) {\r\n        if (await this.beforeStart() === false) return;\r\n        await this.onEvent('action', sheetId);\r\n    }\r\n\r\n    async showAction(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        postWsToTop({\r\n            body: {\r\n                $type: 'msg',\r\n                action: '$sheet',\r\n                msg: {\r\n                    id: sheetId,\r\n                    uq: this.cUq.uq.id,\r\n                    state: sheetData.brief.state\r\n                }\r\n            }\r\n        });\r\n        await this.openVPage(this.VSheetAction, sheetData);\r\n    }\r\n\r\n    async showProcessing(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        await this.openVPage(this.VSheetProcessing, sheetData);\r\n    }\r\n\r\n    async editSheet(sheetData:SheetData):Promise<any> {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.vCall(this.VSheetEdit, sheetData);\r\n        return values;\r\n    }\r\n\r\n    async showArchived(inBrief:any) {\r\n        let sheetData = await this.getArchived(inBrief.id);\r\n        await this.openVPage(this.VArchived, sheetData);\r\n    }\r\n\r\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\r\n        //let values = this.vForm.getValues();\r\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\r\n        let ret = await this.saveSheet(values, valuesWithBox);\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.showSaved(ret);\r\n    }\r\n\r\n    async showSaved(sheetData:any) {\r\n        await this.openVPage(this.VSheetSaved, sheetData);\r\n    }\r\n\r\n    private getStateUI(stateName:string) {\r\n        let {states} = this.res;\r\n        if (states === undefined) return;\r\n        return states[stateName];\r\n    }\r\n    getStateLabel(stateName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        let ret = (state && state.label) || stateName;\r\n        switch (ret) {\r\n            default: return ret;\r\n            case '$': return '新单';\r\n        }\r\n    }\r\n    getActionLabel(stateName:string, actionName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        if (state === undefined) return actionName;\r\n        let actions = state.actions;\r\n        if (actions === undefined) return actionName;\r\n        let action = actions[actionName];\r\n        return (action && action.label) || actionName;\r\n    }\r\n\r\n    private async loadStateSheetCount():Promise<void> {\r\n        this.statesCount.clear();\r\n        let statesCount = await this.entity.stateSheetCount();\r\n        this.statesCount.splice(0, 0, ...statesCount);\r\n    }\r\n\r\n    async getSheetData(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getSheet(sheetId);\r\n    }\r\n\r\n    async getArchived(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getArchive(sheetId);\r\n    }\r\n\r\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\r\n        let {sheetTitle} = this.ui;\r\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\r\n        let ret = await this.entity.save(disc, values);\r\n        //let {id, state} = ret;\r\n        //if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n    }\r\n\r\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\r\n        return await this.entity.action(id, flow, state, actionName);\r\n    }\r\n}\r\n","export * from './cSheet';\r\nexport * from './vSheet';\r\nexport * from './vMain';\r\nexport * from './vNew';\r\nexport * from './vEdit';\r\nexport * from './vList';\r\nexport * from './vSheetAction';\r\nexport * from './vSchema';\r\nexport * from './vArchived';\r\nexport * from './vSheetView';\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../../css/va-badge.css';\r\n\r\nexport interface BadgeProps {\r\n    className?: string;\r\n    badge?: string|number;\r\n    size?: 'xs' | 'sm' | 'lg';\r\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\r\n    badgeAlign?: 'left'|'center'|'right';\r\n    badgeVertical?: 'top'|'middle'|'bottom';\r\n}\r\n\r\n@observer\r\nexport class Badge extends React.Component<BadgeProps> {\r\n    render() {\r\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\r\n        let cn = classNames(\r\n            className,\r\n            'va-badge',\r\n            size && 'va-badge-'+size,\r\n            'va-badge-' + (color||'secondary'),\r\n            badgeAlign && 'va-badg-'+badgeAlign,\r\n            badgeVertical && 'va-badg-'+badgeVertical,\r\n        );\r\n        let b;\r\n        if (badge) b = <b>{badge}</b>;\r\n        return <div className={cn}>\r\n            {children}\r\n            {b}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../../css/va-lmr.css';\r\n\r\nexport interface LMRProps {\r\n    className?: string | string[];\r\n    left?: string|JSX.Element;\r\n    right?: string|JSX.Element;\r\n    onClick?: ()=>void;\r\n}\r\n\r\n@observer\r\nexport class LMR extends React.Component<LMRProps> {\r\n    render() {\r\n        let {className, left, children, right, onClick} = this.props;\r\n        let l, r;\r\n        if (left !== undefined) l = <header>{left}</header>;\r\n        if (right !== undefined) r = <footer>{right}</footer>;\r\n        let cursor;\r\n        if (onClick !== undefined) cursor = 'cursor-pointer';\r\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\r\n            {l}\r\n            <div>{children}</div>\r\n            {r}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport interface FAProps {\r\n    name: string;\r\n    className?: string;\r\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\r\n    spin?: boolean;\r\n    fixWidth?: boolean;\r\n    border?: boolean;\r\n    pull?: 'left'|'right';\r\n    pulse?: boolean;\r\n    rotate?: 90|180|270;\r\n    flip?: 'horizontal'|'vertical';\r\n    inverse?: boolean;\r\n}\r\n\r\nexport class FA extends React.Component<FAProps> {\r\n    render() {\r\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\r\n        let cn = classNames(className, 'fa',\r\n            name && ('fa-' + name),\r\n            size && 'fa-'+size,\r\n            fixWidth && 'fa-fw',\r\n            border && 'fa-border',\r\n            pull && 'fa-pull-' + pull,\r\n            spin && 'fa-spin',\r\n            pulse && 'fa-pulse',\r\n            rotate && 'fa-rotate-' + rotate,\r\n            flip && 'fa-flip-' + flip,\r\n            inverse && 'fa-inverse',\r\n        );\r\n        return <i className={cn} />\r\n    }\r\n}\r\n\r\nexport interface StackedFAProps {\r\n    className?: string;\r\n    size?: 'lg',\r\n}\r\nexport class StackedFA extends React.Component<StackedFAProps> {\r\n    render() {\r\n        let {className, size, children} = this.props;\r\n        let cn = classNames(\r\n            'fa-stack',\r\n            className,\r\n            size && 'fa-' + size);\r\n        return <span className={cn}>\r\n            {children}\r\n        </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport const Muted = (props:any) => \r\n<small className={classNames('text-muted', props.className)} style={props.style}>\r\n    {props.children}\r\n</small>;\r\n","export * from './Badge';\r\nexport * from './LMR';\r\nexport * from './FA';\r\nexport * from './IconText';\r\nexport * from './Muted';\r\n","import * as React from 'react';\r\nimport { Book } from '../../uq';\r\nimport { Page } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CBook, BookUI } from './cBook';\r\n\r\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        Book\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { Book } from '../../uq';\r\nimport { VBookMain } from './vBookMain';\r\n\r\nexport interface BookUI extends EntityUI {\r\n    CBook?: typeof CBook;\r\n    main: typeof VBookMain,\r\n}\r\n\r\nexport class CBook extends CEntity<Book, BookUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VBookMain);\r\n    }\r\n\r\n    protected get VBookMain():typeof VBookMain {return VBookMain}\r\n}\r\n","import React from 'react';\r\nimport { View, List, Muted } from '../../components';\r\nimport { Entity } from '../../uq';\r\nimport { CLink } from '../link';\r\nimport { CUq } from './cUq';\r\n\r\nexport class VUq extends View<CUq> {\r\n    protected isSysVisible = false;\r\n    protected tuidLinks: CLink[];\r\n    protected mapLinks: CLink[];\r\n    protected sheetLinks: CLink[];\r\n    protected actionLinks: CLink[];\r\n    protected queryLinks: CLink[];\r\n    protected bookLinks: CLink[];\r\n    protected historyLinks: CLink[];\r\n    protected pendingLinks: CLink[];\r\n\r\n    constructor(cUq: CUq) {\r\n        super(cUq);\r\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.uq;\r\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\r\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\r\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\r\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\r\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\r\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\r\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\r\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\r\n    }\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n    render(param?:any) {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {res, uq, error} = this.controller;\r\n        let linkItem = {\r\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \r\n            onClick: undefined as any, \r\n        };\r\n        let lists = [\r\n            {\r\n                header: res.tuid || 'TUID',\r\n                items: this.tuidLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.map || 'MAP',\r\n                items: this.mapLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.sheet || 'SHEET',\r\n                items: this.sheetLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.action || 'ACTION',\r\n                items: this.actionLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.query || 'QUERY',\r\n                items: this.queryLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.book || 'BOOK',\r\n                items: this.bookLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.history || 'HISTORY',\r\n                items: this.historyLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.pending || 'PENDING',\r\n                items: this.pendingLinks\r\n            }\r\n        ];\r\n        let content;\r\n        if (error !== undefined) {\r\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\r\n        }\r\n        else {\r\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\r\n                key={index}\r\n                className={cn}\r\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\r\n                items={items}\r\n                item={linkItem} />\r\n            );\r\n        }\r\n        return <>\r\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\r\n            {content}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\n//import _ from 'lodash';\r\nimport { Controller, resLang } from '../../components';\r\nimport { UqData } from '../../net';\r\nimport { PureJSONContent } from '../tools';\r\nimport { UqMan, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending, TuidDiv, CreateBoxId, BoxId } from '../../uq';\r\nimport { CLink } from '../link';\r\nimport { CBook, BookUI } from '../book';\r\nimport { CSheet, SheetUI } from '../sheet';\r\nimport { ActionUI, CAction } from '../action';\r\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\r\nimport { CTuidMain, TuidUI, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\r\nimport { MapUI, CMap } from '../map';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { VUq } from './vUq';\r\nimport { CHistory, HistoryUI } from '../history';\r\nimport { CPending, PendingUI } from '../pending';\r\nimport { CApp } from '../app';\r\nimport { TuidWithUIRes, ReactBoxId } from './reactBoxId';\r\n\r\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\r\n\r\nexport interface UqUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    CMap?: typeof CMap;\r\n    CAction?: typeof CAction;\r\n    CSheet?: typeof CSheet;\r\n    CBook?: typeof CBook;\r\n    CHistory?: typeof CHistory;\r\n    CPending?: typeof CPending;\r\n    tuid?: {[name:string]: TuidUI};\r\n    sheet?: {[name:string]: SheetUI};\r\n    action?: {[name:string]: ActionUI};\r\n    map?: {[name:string]: MapUI};\r\n    query?: {[name:string]: QueryUI};\r\n    book?: {[name:string]: BookUI};    \r\n    history?: {[name:string]: HistoryUI};\r\n    pending?: {[name:string]: PendingUI};\r\n    res?: any;\r\n}\r\n\r\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\r\n    if (entities === undefined) return;\r\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\r\n}\r\n\r\nexport class CUq extends Controller /* implements Uq*/ {\r\n    private ui:any;\r\n    private tuidURs: {[name:string]: TuidWithUIRes} = {};\r\n    private CTuidMain: typeof CTuidMain;\r\n    private CTuidEdit: typeof CTuidEdit;\r\n    private CTuidList: typeof CTuidList;\r\n    private CTuidSelect: typeof CTuidSelect;\r\n    private CTuidInfo: typeof CTuidInfo;\r\n    private CQuery: typeof CQuery;\r\n    private CQuerySelect: typeof CQuerySelect;\r\n    private CMap: typeof CMap;\r\n    private CAction: typeof CAction;\r\n    private CSheet: typeof CSheet;\r\n    private CBook: typeof CBook;\r\n    private CHistory: typeof CHistory;\r\n    private CPending: typeof CPending;\r\n\r\n    //constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\r\n    constructor(cApp:CApp, uqData:UqData, ui:UqUI) {\r\n        super(resLang(ui.res));\r\n        this.cApp = cApp;\r\n        //this.id = uqId;\r\n        // 每一个ui都转换成小写的key的版本\r\n        lowerPropertyName(ui.tuid);\r\n        lowerPropertyName(ui.sheet);\r\n        lowerPropertyName(ui.map);\r\n        lowerPropertyName(ui.query);\r\n        lowerPropertyName(ui.action);\r\n        lowerPropertyName(ui.book);\r\n        lowerPropertyName(ui.history);\r\n        lowerPropertyName(ui.pending);\r\n        this.ui = ui;\r\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\r\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\r\n        this.CTuidList = ui.CTuidList || CTuidList;\r\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\r\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\r\n        this.CQuery = ui.CQuery || CQuery;\r\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\r\n        this.CMap = ui.CMap || CMap;\r\n        this.CAction = ui.CAction || CAction;\r\n        this.CSheet = ui.CSheet || CSheet;\r\n        this.CBook = ui.CBook || CBook;\r\n        this.CHistory = ui.CHistory || CHistory;\r\n        this.CPending = ui.CPending || CPending;\r\n\r\n        this.uq = new UqMan(cApp.uqs, uqData, this.createBoxId, undefined);\r\n    }\r\n\r\n    protected async internalStart() {\r\n    }\r\n\r\n    cApp:CApp;\r\n    res: any;\r\n    uq: UqMan;\r\n    error: string;\r\n    \r\n    private createBoxId:CreateBoxId = (tuid:Tuid, id:number):BoxId =>{\r\n        let {name} = tuid;\r\n        let tuidUR = this.tuidURs[name];\r\n        if (tuidUR === undefined) {\r\n            let {ui, res} = this.getUI(tuid);\r\n            this.tuidURs[name] = tuidUR = new TuidWithUIRes(tuid, ui, res);\r\n        }\r\n        return new ReactBoxId(tuidUR, id);\r\n    }\r\n\r\n    async init():Promise<void> {\r\n        return await this.uq.init();\r\n    }\r\n\r\n    async loadEntities():Promise<string> {\r\n        try {\r\n            await this.uq.loadEntities();\r\n        }\r\n        catch (err) {\r\n            return err;\r\n        }\r\n    }\r\n\r\n    async getQuerySearch(name:string):Promise<Query> {\r\n        let query = this.uq.query(name);\r\n        if (query === undefined) \r\n            alert(`QUERY ${name} 没有定义!`);\r\n        else {\r\n            await query.loadSchema();\r\n            let {returns} = query;\r\n            if (returns.length > 1) {\r\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\r\n            }\r\n        }\r\n        return query;\r\n    }\r\n    getTuidPlaceHolder(tuid:Tuid) {\r\n        let {tuidPlaceHolder, entity} = this.res;\r\n        let {name} = tuid;\r\n        //let type:string;\r\n        if (entity !== undefined) {\r\n            let en = entity[name];\r\n            if (en !== undefined) {\r\n                //type = en.label;\r\n            }\r\n        }\r\n        return (tuidPlaceHolder || 'Select');\r\n    }\r\n    getNone() {\r\n        let {none} = this.res;\r\n        return none || 'none';\r\n    }\r\n    protected isSysVisible = false;\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n\r\n    async navSheet(sheetTypeId:number, sheetId:number) {\r\n        let sheet = this.uq.sheetFromTypeId(sheetTypeId);\r\n        if (sheet === undefined) {\r\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\r\n            return;\r\n        }\r\n        let cSheet = this.cSheet(sheet);\r\n        await cSheet.startSheet(sheetId);\r\n    }\r\n\r\n    sheet(entityName:string) {return this.uq.sheet(entityName);}\r\n    action(entityName:string) {return this.uq.action(entityName);}\r\n    query(entityName:string) {return this.uq.query(entityName);}\r\n    book(entityName:string) {return this.uq.book(entityName);}\r\n    map(entityName:string) {return this.uq.map(entityName);}\r\n    history(entityName:string) {return this.uq.history(entityName);}\r\n    pending(entityName:string) {return this.uq.pending(entityName);}\r\n    tuid(entityName:string) {return this.uq.tuid(entityName)}\r\n    tuidDiv(entityName:string, divName:string) {\r\n        return this.uq.tuidDiv(entityName, divName);\r\n    }\r\n\r\n    cSheetFromName(entityName:string):CSheet {\r\n        let entity = this.uq.sheet(entityName);\r\n        if (entity !== undefined) return this.cSheet(entity);\r\n    }\r\n    cActionFromName(entityName:string) {\r\n        let entity = this.uq.action(entityName);\r\n        if (entity !== undefined) return this.cAction(entity);\r\n    }\r\n    cQueryFromName(entityName:string) {\r\n        let entity = this.uq.query(entityName);\r\n        if (entity !== undefined) return this.cQuery(entity);\r\n    }\r\n    cBookFromName(entityName:string) {\r\n        let entity = this.uq.book(entityName);\r\n        if (entity !== undefined) return this.cBook(entity);\r\n    }\r\n    cMapFromName(entityName:string) {\r\n        let entity = this.uq.map(entityName);\r\n        if (entity !== undefined) return this.cMap(entity);\r\n    }\r\n    cHistoryFromName(entityName:string) {\r\n        let entity = this.uq.history(entityName);\r\n        if (entity !== undefined) return this.cHistory(entity);\r\n    }\r\n    cPendingFromName(entityName:string) {\r\n        let entity = this.uq.pending(entityName);\r\n        if (entity !== undefined) return this.cPending(entity);\r\n    }\r\n    cTuidMainFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidMain(entity);\r\n    }\r\n    cTuidEditFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidEdit(entity);\r\n    }\r\n    cTuidInfoFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidInfo(entity);\r\n    }\r\n\r\n    cTuidSelectFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidSelect(entity);\r\n    }\r\n\r\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\r\n        switch (entityType) {\r\n            case 'sheet':\r\n                let sheet = this.uq.sheet(entityName);\r\n                if (sheet === undefined) return;\r\n                return this.cSheet(sheet);\r\n            case 'action':\r\n                let action = this.uq.action(entityName);\r\n                if (action === undefined) return;\r\n                return this.cAction(action);\r\n            case 'tuid':\r\n                let tuid = this.uq.tuid(entityName);\r\n                if (tuid === undefined) return;\r\n                return this.cTuidMain(tuid);\r\n            case 'query':\r\n                let query = this.uq.query(entityName);\r\n                if (query === undefined) return;\r\n                return this.cQuery(query);\r\n            case 'book':\r\n                let book = this.uq.book(entityName);\r\n                if (book === undefined) return;\r\n                return this.cBook(book);\r\n            case 'map':\r\n                let map = this.uq.map(entityName);\r\n                if (map === undefined) return;\r\n                return this.cMap(map);\r\n            case 'history':\r\n                let history = this.uq.history(entityName);\r\n                if (history === undefined) return;\r\n                return this.cHistory(history);\r\n            case 'pending':\r\n                let pending = this.uq.pending(entityName);\r\n                if (pending === undefined) return;\r\n                return this.cPending(pending);\r\n        }\r\n    }\r\n\r\n    linkFromName(entityType:EntityType, entityName:string) {\r\n        return this.link(this.cFromName(entityType, entityName));\r\n    }\r\n\r\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\r\n        let ui:any, res:any;\r\n        let {name, typeName} = t;\r\n        if (this.ui !== undefined) {\r\n            if (typeName === 'div') {\r\n                let tuidDiv:TuidDiv = t as unknown as TuidDiv;\r\n                let ownerTuid = tuidDiv.owner;\r\n                let tUIs = this.ui[ownerTuid.typeName] as TuidUI;\r\n                if (tUIs) {\r\n                    let tUI = (tUIs as any)[ownerTuid.name];\r\n                    if (tUI) {\r\n                        let divs = tUI.divs;\r\n                        if (divs) {\r\n                            ui = divs[name];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                let tUI = this.ui[typeName];\r\n                if (tUI !== undefined) {\r\n                    ui = tUI[name];\r\n                }\r\n            }\r\n        }\r\n        let {entity} = this.res;\r\n        if (entity !== undefined) {\r\n            res = entity[name];\r\n        }\r\n        return {ui: ui || {}, res: res || {} };\r\n    }\r\n\r\n    link(cEntity:CEntity<Entity, EntityUI>) {\r\n        return new CLink(cEntity);\r\n    }\r\n\r\n    get tuidLinks() {\r\n        return this.uq.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\r\n    }\r\n    cTuidMain(tuid:Tuid):CTuidMain {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new ((ui && ui.CTuidMain) || this.CTuidMain)(this, tuid, ui, res);\r\n    }\r\n    cTuidEdit(tuid:Tuid):CTuidEdit {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new ((ui && ui.CTuidEdit) || this.CTuidEdit)(this, tuid, ui, res);\r\n    }\r\n    cTuidList(tuid:Tuid):CTuidList {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new ((ui && ui.CTuidList) || this.CTuidList)(this, tuid, ui, res);\r\n    }\r\n    cTuidSelect(tuid:Tuid):CTuidSelect {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new ((ui && ui.CTuidSelect) || this.CTuidSelect)(this, tuid, ui, res);\r\n    }\r\n    cTuidInfo(tuid:Tuid):CTuidInfo {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new ((ui && ui.CTuidInfo) || this.CTuidInfo)(this, tuid, ui, res);\r\n    }\r\n\r\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\r\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\r\n        //if (sheetUI !== undefined) ui = sheetUI;\r\n        //if (sheetRes !== undefined) res = sheetRes;\r\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\r\n        return new ((ui && ui.CSheet) || this.CSheet)(this, sheet, ui, res);\r\n    }\r\n    get sheetLinks() { \r\n        return this.uq.sheetArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cSheet(v))\r\n        });\r\n    }\r\n\r\n    cAction(action:Action):CAction {\r\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\r\n        return new ((ui && ui.CAction) || this.CAction)(this, action, ui, res);\r\n    }\r\n    get actionLinks() { \r\n        return this.uq.actionArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cAction(v))\r\n        });\r\n    }\r\n\r\n    cQuery(query:Query):CQuery {\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new ((ui && ui.CQuery) || this.CQuery)(this, query, ui, res);\r\n    }\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        let query = this.uq.query(queryName);\r\n        if (query === undefined) return;\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new ((ui && ui.CQuerySelect) || this.CQuerySelect)(this, query, ui, res);\r\n    }\r\n    get queryLinks() {\r\n        return this.uq.queryArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cQuery(v))\r\n        });\r\n    }\r\n    \r\n    cBook(book:Book):CBook {\r\n        let {ui, res} = this.getUI<Book, BookUI>(book);\r\n        return new ((ui && ui.CBook) || this.CBook)(this, book, ui, res);\r\n    }\r\n    get bookLinks() { \r\n        return this.uq.bookArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cBook(v))\r\n        });\r\n    }\r\n    \r\n    cHistory(history:History):CHistory {\r\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\r\n        return new ((ui && ui.CHistory) || this.CHistory)(this, history, ui, res);\r\n    }\r\n    get historyLinks() { \r\n        return this.uq.historyArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cHistory(v))\r\n        });\r\n    }\r\n    \r\n    cPending(pending:Pending):CPending {\r\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\r\n        return new ((ui && ui.CPending) || this.CPending)(this, pending, ui, res);\r\n    }\r\n    get pendingLinks() { \r\n        return this.uq.pendingArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cPending(v))\r\n        });\r\n    }\r\n    \r\n    cMap(map:Map):CMap {\r\n        let {ui, res} = this.getUI<Map, MapUI>(map);\r\n        return new ((ui && ui.CMap) || this.CMap)(this, map, ui, res);\r\n    }\r\n    get mapLinks() { \r\n        return this.uq.mapArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cMap(v));\r\n        });\r\n    }\r\n\r\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\r\n        let {ui} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return (ui && ui.content) || PureJSONContent;\r\n    }\r\n\r\n    getTuidDivContent(tuidDiv:TuidDiv): React.StatelessComponent<any> {\r\n        let {owner} = tuidDiv;\r\n        let {ui} = this.getUI<Tuid, TuidUI>(owner);\r\n        return (ui && ui.divs && ui.divs[tuidDiv.name].content) || PureJSONContent;\r\n    }\r\n\r\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\r\n        let c = this.cTuidInfo(tuid);\r\n        await c.start(id);\r\n    }\r\n\r\n    async showTuidDiv(tuid:TuidDiv, id:number):Promise<void> {\r\n        let {owner} = tuid;\r\n        let c = this.cTuidInfo(owner);\r\n        await c.start(id);\r\n    }\r\n\r\n    protected get VUq():typeof VUq {return VUq}\r\n\r\n    render() {\r\n        let v = new (this.VUq)(this);\r\n        return v.render();\r\n    }\r\n}\r\n\r\n","export * from './cUq';\r\nexport * from './vUq';\r\n//export * from './reactBoxId';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport className from 'classnames';\r\nimport { Page, List, LMR, FA } from '../../components';\r\nimport { PureJSONContent } from '../tools';\r\nimport { Map } from '../../uq';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CMap, MapItem, MapUI } from './cMap';\r\nimport { tv } from '../cUq/reactBoxId';\r\n\r\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\r\n    private isFrom: boolean;\r\n\r\n    async open(param?:any) {\r\n        this.isFrom = this.controller.isFrom;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    itemRender = (item:MapItem, index:number) => {\r\n        return <this.ItemRow item={item} />;\r\n    }\r\n\r\n    private ItemRow = observer(({item}: {item:MapItem}) => {\r\n        let {box, children, isLeaf, keyIndex, values} = item;\r\n        let keyUI = this.controller.keyUIs[keyIndex];\r\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\r\n        let add:any, remove:any;\r\n        if (this.isFrom === false) {\r\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\r\n                <FA name=\"plus\" />\r\n            </button>;\r\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\r\n                <FA className=\"text-info\" name=\"trash\" />\r\n            </button>;\r\n        }\r\n        let right:any;\r\n        if (isLeaf === false) {\r\n            if (keyIndex === 0)\r\n                right = add;\r\n            else\r\n                right = <>{remove} &nbsp; {add}</>;\r\n        }\r\n        else if (keyIndex > 0) {\r\n            right = remove;\r\n        }\r\n        let content:any, border:any, valuesView:any;\r\n        if (isLeaf === true) {\r\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\r\n            if (values) {\r\n                //valuesView = null; // 现在不显示values content了\r\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\r\n            }\r\n        }\r\n        else {\r\n            border = 'border-bottom';\r\n            let none = keyNone && keyNone(this.x);\r\n            content = <List \r\n                className=\"ml-4\" \r\n                items={children} \r\n                item={{onClick:undefined, render:this.itemRender}}\r\n                none={none} />\r\n        }\r\n        let left = <div className=\"py-1 pr-3\">{tv(box, keyContent, this.x)}</div>;\r\n        return <div className=\"d-flex flex-column\">\r\n            <LMR className={className('px-3', 'py-2', border)}\r\n                left={left}\r\n                right={right}\r\n            >\r\n                <div className=\"py-1\">{valuesView}</div>\r\n            </LMR>\r\n            {content}\r\n        </div>;\r\n    });\r\n\r\n    protected get view() { return () => <Page header={this.label}>\r\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\r\n        </Page>\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { VEntity } from '../CVEntity';\r\nimport { MapUI, CMap } from './cMap';\r\nimport { Map } from '../../uq';\r\nimport { Page } from '../../components';\r\nimport { VForm } from '../form';\r\n\r\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\r\n    private vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onValuesSubmit);\r\n        this.openPageElement(<this.view />);\r\n    }\r\n\r\n    private onValuesSubmit = async () => {\r\n        this.ceasePage();\r\n        let values = this.vForm.getValues();\r\n        this.returnCall(values);\r\n    }\r\n\r\n    private view = () => {\r\n        return <Page>\r\n            {this.vForm.render()}\r\n        </Page>\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { Map, Tuid, BoxId, Field, fieldDefaultValue } from '../../uq';\r\nimport { PureJSONContent } from '../tools';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { VMapMain } from './vMain';\r\nimport { VInputValues } from './inputValues';\r\n\r\nexport interface MapKey {\r\n    content: (values:any, x?:any) => JSX.Element;\r\n    valuesContent?: (values:any, x?:any) => JSX.Element;\r\n    none?: (x:any)=>string;\r\n}\r\n\r\nexport interface MapUI extends EntityUI {\r\n    CMap?: typeof CMap;\r\n    keys?: MapKey[],\r\n}\r\n\r\nexport class MapItem {\r\n    parent: MapItem;\r\n    tuid: Tuid;\r\n    box: BoxId;\r\n    isLeaf: boolean;\r\n    keyIndex:number;\r\n    children: MapItem[] = observable.array([], {deep: true});\r\n    values: any;\r\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\r\n        this.parent = parent;\r\n        this.tuid = tuid;\r\n        this.box = box;\r\n        this.keyIndex = keyIndex;\r\n        this.isLeaf = false;\r\n    }\r\n}\r\n\r\n/*eslint no-template-curly-in-string: 0*/\r\nexport class CMap extends CEntity<Map, MapUI> {\r\n    isFrom: boolean;\r\n    items:MapItem[];\r\n    keyFields: Field[];\r\n    keyUIs: MapKey[];\r\n\r\n    protected async internalStart() {\r\n        let {keys, schemaFrom} = this.entity;\r\n        this.isFrom = schemaFrom !== undefined;\r\n        let q = this.entity.queries.all;\r\n        let result = await q.query({});\r\n        //let data = await this.entity.unpackReturns(res);\r\n        let ret = result.ret;\r\n        let keysLen = keys.length;\r\n        this.keyUIs = _.clone(this.ui.keys || []);\r\n        this.keyFields = [];\r\n        let retFields = q.returns[0].fields;\r\n        for (let i=0; i<keysLen; i++) {\r\n            this.keyFields.push(retFields[i]);\r\n            if (i >= this.keyUIs.length) {\r\n                this.keyUIs.push({\r\n                    content: PureJSONContent,\r\n                });\r\n            }\r\n        }\r\n        this.items = observable([]);\r\n        let item:MapItem = undefined;\r\n        for (let r of ret) {\r\n            let newItem = this.addItem(item, r);\r\n            if (newItem !== undefined) {\r\n                this.items.push(newItem);\r\n                item = newItem;\r\n            }\r\n        }\r\n\r\n        await this.openVPage(this.VMapMain);\r\n    }\r\n\r\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\r\n        let item = new MapItem(parent, tuid, box, keyIndex);\r\n        if (keyIndex === this.keyFields.length - 1) {\r\n            item.isLeaf = true;\r\n            item.values = values;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    addItem(item:MapItem, row:any):MapItem {\r\n        let ret:MapItem = undefined;\r\n        let keysLen = this.keyFields.length;\r\n        let p = item;\r\n        for (let i=0;i<keysLen;i++) {\r\n            let key = this.keyFields[i];\r\n            let {name} = key;\r\n            let tuidBox = key._tuid;\r\n            let val:BoxId = row[name];\r\n            if (val === undefined) break;\r\n            let {id} = val;\r\n            if (i === 0) {\r\n                if (id === 0) continue;\r\n                if (p === undefined || p.box.id !== id) {\r\n                    ret = p = this.createItem(undefined, tuidBox.tuid, val, i, row);\r\n                }\r\n                continue;\r\n            }\r\n            let {children} = p;\r\n            let len = children.length;\r\n            if (len > 0) {\r\n                let n = children[len-1];\r\n                if (n.box.id === id) {\r\n                    p = n;\r\n                    continue;\r\n                }\r\n            }\r\n            if (id > 0) {\r\n                children.push(p = this.createItem(p, tuidBox.tuid, val, i, row));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async searchOnKey(keyField:Field, param:any):Promise<number> {\r\n        let {_tuid} = keyField;\r\n        let {tuid, ownerField} = _tuid;\r\n        let cTuidSelect = this.cUq.cTuidSelect(tuid);\r\n        let callParam = param;\r\n        if (ownerField !== undefined) {\r\n            callParam = param[ownerField.name];\r\n            if (typeof callParam === 'object') {\r\n                callParam = callParam.id;\r\n            }\r\n        }\r\n        let ret = await cTuidSelect.call(callParam);\r\n        return _tuid.getIdFromObj(ret);\r\n    }\r\n\r\n    addClick = async(item:MapItem) => {\r\n        let {keyIndex, children} = item;\r\n        let keysLen = this.keyFields.length;\r\n        let keysLast = keysLen-1;\r\n        let idx = keyIndex + 1;\r\n        if (idx >= keysLen) return;\r\n        let keyField = this.keyFields[idx];\r\n        let kn = keyField.name;\r\n        let tuid = keyField._tuid;\r\n        let searchParam = {} as any;\r\n        let data = {} as any;\r\n        for (let p=item;p!==undefined;p=p.parent) {\r\n            let {keyIndex:ki, box} = p;\r\n            let kn = this.keyFields[ki].name;\r\n            //searchParam[kn] = data['_' + kn] = box.id;\r\n            searchParam[kn] = data[kn] = box.id;\r\n        }\r\n\r\n        let id = await this.searchOnKey(keyField, searchParam);\r\n        if (id === undefined || id <= 0) return;\r\n        tuid.useId(id);\r\n        let idBox = tuid.boxId(id);\r\n        let arr1 = {} as any;\r\n        let values:any = {};\r\n        if (keyIndex+1===keysLast) {\r\n            tuid.useId(id);\r\n            //values[kn] = arr1['_' + kn] = idBox;\r\n            values[kn] = arr1[kn] = idBox;\r\n            if (this.entity.fields.length > 0) {\r\n                let ret = await this.vCall(VInputValues, data);\r\n                for (let i in ret) {\r\n                    //values[i] = arr1['_' + i] = ret[i];\r\n                    values[i] = arr1[i] = ret[i];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //values[kn] = data['_' + kn] = idBox;\r\n            values[kn] = data[kn] = idBox;\r\n            for (let i=idx+1;i<keysLast;i++) {\r\n                //data['_' + this.keyFields[i].name] = 0;\r\n                data[this.keyFields[i].name] = 0;\r\n            }\r\n            // 填map的key field 0 值\r\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\r\n            arr1[this.keyFields[keysLast].name] = 0;\r\n            let {fields} = this.entity;\r\n            for (let f of fields) {\r\n                let {type, null:nullable} = f;\r\n                if (!(nullable === true)) {\r\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\r\n                    arr1[f.name] = fieldDefaultValue(type);\r\n                }\r\n            }\r\n        }\r\n        data.arr1 = [arr1];\r\n        await this.entity.actions.add.submit(data);\r\n        let rowIndex = children.findIndex(v => v.box.id === id);\r\n        if (rowIndex < 0) {\r\n            children.push(this.createItem(item, tuid.tuid, idBox, idx, values));\r\n        }\r\n        else {\r\n            let {fields} = this.entity;\r\n            if (fields !== undefined && fields.length > 0) {\r\n                let row = children[rowIndex];\r\n                children.splice(rowIndex, 1);\r\n                row.values = values;\r\n                /*\r\n                for (let f of fields) {\r\n                    let {name:fn} = f;\r\n                    row.values[fn] = values[fn];\r\n                }*/\r\n                children.splice(rowIndex, 0, row);\r\n            }\r\n        }\r\n        this.removeCeased();\r\n    }\r\n\r\n    removeClick = async(item:MapItem) => {\r\n        let keyField = this.keyFields[item.keyIndex];\r\n        let tuid = keyField._tuid;\r\n        let cTuidMain = this.cUq.cTuidMain(tuid.tuid);\r\n        let label = cTuidMain.getLable(tuid.tuid);\r\n        let confirmDelete:_.TemplateExecutor = \r\n            this.res.confirmDelete \r\n            || _.template('do you really want to remove ${label}?');\r\n        if (window.confirm(confirmDelete({label:label})) === false) return;\r\n        let map:Map = this.entity;\r\n        let data = {} as any;\r\n        let arr1:any[] = data['arr1'] = [];\r\n        let v0 = {} as any;\r\n        arr1.push(v0);\r\n        for (let p=item; p!==undefined;p=p.parent) {\r\n            let ki=p.keyIndex;\r\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\r\n            v0[this.keyFields[ki].name] = p.box.id;\r\n        }\r\n        let len = this.keyFields.length;\r\n        for (let i=item.keyIndex+1; i<len; i++) {\r\n            let k = this.keyFields[i];\r\n            //v0['_'+k.name] = -1;\r\n            v0[k.name] = -1;\r\n        }\r\n        await map.actions.del.submit(data);\r\n        let children = item.parent.children;\r\n        let index = children.findIndex(v => v === item);\r\n        if (index >= 0) children.splice(index, 1);\r\n    }\r\n\r\n    protected get VMapMain():typeof VMapMain {return VMapMain}\r\n}\r\n","export * from './cMap';\r\nexport * from './vMain';\r\n","import {CenterApiBase} from '../net';\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","import * as React from 'react';\r\nimport { VPage, Page, FA, nav, LMR, List } from \"../../components\";\r\nimport { appInFrame } from '../../net';\r\nimport { CApp } from \"./CApp\";\r\n\r\nexport class VAppMain extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    render(param?:any) {\r\n        return this.appContent();\r\n    }\r\n\r\n    protected appPage = () => {\r\n        let {caption} = this.controller;\r\n        return <Page header={caption} logout={async()=>{appInFrame.unit = undefined}}>\r\n            {this.appContent()}\r\n        </Page>;\r\n    }\r\n\r\n    protected appContent = () => {\r\n        let {cUqArr} = this.controller;\r\n        let content:any;\r\n        if (cUqArr.length === 0) {\r\n            content = <div className=\"text-danger\">\r\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <>{content}</>;\r\n    };\r\n}\r\n\r\nexport class VUnsupportedUnit extends VPage<CApp> {\r\n    async open(predefinedUnit: number) {\r\n        this.openPage(this.page, predefinedUnit);\r\n    }\r\n\r\n    private page = (predefinedUnit: number) => {\r\n        let {user} = nav;\r\n        let userName:string = user? user.name : '[未登录]';\r\n        let {appOwner, appName} = this.controller.uqs;\r\n        return <Page header=\"APP无法运行\" logout={true}>\r\n            <div className=\"m-3 text-danger container\">\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">登录用户</div>\r\n                    <div className=\"col-sm text-body\">{userName}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">App</div>\r\n                    <div className=\"col-sm text-body\">{`${appOwner}/${appName}`}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">预设小号</div>\r\n                    <div className=\"col-sm text-body\">{predefinedUnit || <small className=\"\">[无预设小号]</small>}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">\r\n                        可能原因<FA name=\"exclamation-triangle\" />\r\n                    </div>\r\n                    <div className=\"col-sm text-body\">\r\n                        <ul className=\"p-0\">\r\n                            <li>没有小号运行 {appName}</li>\r\n                            <li>用户 <b>{userName}</b> 没有加入任何一个运行{appName}的小号</li>\r\n                            {\r\n                                predefinedUnit && \r\n                                <li>预设小号 <b>{predefinedUnit}</b> 没有运行App {appName}</li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">小号{predefinedUnit}</div>\r\n                    <div className=\"col-sm text-body\">\r\n                        预设小号定义在 public/unit.json 文件中。\r\n                        定义了这个文件的程序，只能由url直接启动。\r\n                        用户第一次访问app之后，会缓存在localStorage里。<br/>\r\n                        如果要删去缓存的预定义Unit，logout然后再login。\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class VUnitSelect extends VPage<CApp> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (item: any, index: number):JSX.Element => {\r\n        let {id, nick, name} = item;\r\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\r\n            <div>{nick || name}</div>\r\n        </LMR>;\r\n    }\r\n    private onRowClick = async (item: any) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        await this.controller.start();\r\n    }\r\n\r\n    private page = () => {\r\n        return <Page header=\"选择小号\" logout={true}>\r\n            <List items={this.controller.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>\r\n    }\r\n}\r\n/*\r\nexport class VErrorsPage extends VPage<CApp> {\r\n    async open(errors:string[]) {\r\n        this.openPage(this.page, errors);\r\n    }\r\n\r\n    private page = (errors:string[]) => {\r\n        return <Page header=\"ERROR\">\r\n            <div className=\"m-3\">\r\n                <div>Load Uqs 发生错误：</div>\r\n                {errors.map((r, i) => <div key={i}>{r}</div>)}\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class VAppStartError extends VPage<CApp> {\r\n    async open(error:any) {\r\n        this.openPage(this.page, error);\r\n    }\r\n\r\n    private page = (error:any) => {\r\n        return <Page header=\"App start error!\">\r\n            <pre>\r\n                {typeof error === 'string'? error : error.message}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}\r\n*/","//import _ from 'lodash';\r\nimport { nav, Controller, TypeVPage, resLang, NavSettings} from '../../components';\r\nimport { loadAppUqs, appInFrame, getExHash, UqData} from '../../net';\r\nimport { CUq, UqUI } from '../cUq';\r\nimport { centerApi } from '../centerApi';\r\nimport { UQsMan } from '../../uq';\r\nimport { VUnsupportedUnit, VAppMain, VUnitSelect } from './vApp';\r\nimport { VErrorsPage, VStartError } from '../../app/vMain';\r\n\r\nexport interface RoleAppUI {\r\n    CApp?: typeof CApp;\r\n    CUq?: typeof CUq;\r\n    main?: TypeVPage<CApp>;\r\n    uqs: {[uq:string]: UqUI | (()=>Promise<UqUI>)};\r\n    res?: any;\r\n}\r\n\r\nexport interface AppUI extends RoleAppUI, NavSettings {\r\n    appName: string;        // 格式: owner/appName\r\n    version: string;        // 版本变化，缓存的uqs才会重载\r\n    roles?: {[role:string]: RoleAppUI | (()=>Promise<RoleAppUI>)};\r\n}\r\n\r\nexport class CApp extends Controller {\r\n    private readonly cUqCollection: {[uq:string]: CUq} = {};\r\n    private readonly cImportUqs: {[uq:string]: CUq} = {};\r\n    protected ui:AppUI;\r\n    readonly name: string;\r\n    readonly version: string;\r\n    readonly uqs: UQsMan;\r\n    readonly caption: string; // = 'View Model 版的 Uq App';\r\n    appUnits:any[];\r\n\r\n    constructor(ui:AppUI) {\r\n        super(resLang(ui && ui.res));\r\n        nav.setSettings(ui);\r\n        this.name = ui.appName;\r\n        this.version = ui.version;\r\n        if (this.name === undefined) {\r\n            throw new Error('appName like \"owner/app\" must be defined in UI');\r\n        }\r\n        this.uqs = new UQsMan(this.name, undefined);\r\n        if (ui.uqs === undefined) ui.uqs = {};\r\n        this.ui = ui;\r\n        this.caption = this.res.caption || 'Tonva';\r\n    }\r\n    \r\n    getImportUq(uqOwner:string, uqName:string):CUq {\r\n        let uq = uqOwner + '/' + uqName;\r\n        let cUq = this.cImportUqs[uq];\r\n        if (cUq !== undefined) return cUq;\r\n        //let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n        //let uqId = -1; // unknown\r\n        this.cImportUqs[uq] = cUq = this.getCUq(uq);\r\n        return cUq;\r\n    }\r\n\r\n    protected newCUq(uqData: UqData, uqUI: UqUI) {\r\n        let cUq = new (this.ui.CUq || CUq)(this, uqData, uqUI);\r\n        Object.setPrototypeOf(cUq.x, this.x);\r\n        return cUq;\r\n    }\r\n\r\n    get cUqArr():CUq[] {\r\n        let ret:CUq[] = [];\r\n        for (let i in this.cUqCollection) {\r\n            ret.push(this.cUqCollection[i]);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getCUq(uq:string):CUq {\r\n        return this.cUqCollection[uq];\r\n    }\r\n\r\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\r\n    protected async beforeStart():Promise<boolean> {\r\n        try {\r\n            let retErrors = await this.load();\r\n            //let app = await loadAppUqs(this.appOwner, this.appName);\r\n            // if (isDevelopment === true) {\r\n            // 这段代码原本打算只是在程序员调试方式下使用，实际上，也可以开放给普通用户，production方式下\r\n            let {predefinedUnit} = appInFrame;\r\n            //let {id} = app;\r\n            //this.id = id;\r\n            let {user} = nav;\r\n            if (user !== undefined && user.id > 0) {\r\n                this.appUnits = await centerApi.userAppUnits(this.uqs.id);\r\n                switch (this.appUnits.length) {\r\n                    case 0:\r\n                        this.showUnsupport(predefinedUnit);\r\n                        return false;\r\n                    case 1:\r\n                        let appUnit = this.appUnits[0].id;\r\n                        if (appUnit === undefined || appUnit < 0 || \r\n                            (predefinedUnit !== undefined && appUnit !== predefinedUnit))\r\n                        {\r\n                            this.showUnsupport(predefinedUnit);\r\n                            return false;\r\n                        }\r\n                        appInFrame.unit = appUnit;\r\n                        break;\r\n                    default:\r\n                        if (predefinedUnit>0 && this.appUnits.find(v => v.id===predefinedUnit) !== undefined) {\r\n                            appInFrame.unit = predefinedUnit;\r\n                            break;\r\n                        }\r\n                        //nav.push(<this.selectUnitPage />)\r\n                        this.openVPage(VUnitSelect);\r\n                        return false;\r\n                }\r\n            }\r\n            if (retErrors !== undefined) {\r\n                this.openVPage(VErrorsPage, retErrors);\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            this.openVPage(VStartError, err);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private async load(): Promise<string[]> {\r\n        let {appOwner, appName} = this.uqs;\r\n        let {localData} = this.uqs;\r\n        let uqAppData = localData.get();\r\n        if (!uqAppData || uqAppData.version !== this.version) {\r\n            uqAppData = await loadAppUqs(appOwner, appName);\r\n            uqAppData.version = this.version;\r\n            localData.set(uqAppData);\r\n            for (let uq of uqAppData.uqs) uq.newVersion = true;\r\n        }\r\n        let {id, uqs} = uqAppData;\r\n        this.uqs.id = id;\r\n\r\n        let retErrors:string[] = [];\r\n\r\n        let promiseInits: PromiseLike<void>[] = [];\r\n        let promises: PromiseLike<string>[] = [];\r\n        for (let uqData of uqs) {\r\n            let {uqOwner, uqName} = uqData;\r\n            let uqFullName = uqOwner + '/' + uqName;\r\n            let uqUI = this.ui.uqs[uqFullName] as UqUI || {};\r\n            let cUq = this.newCUq(uqData, uqUI);\r\n            this.cUqCollection[uqFullName] = cUq;\r\n            this.uqs.addUq(cUq.uq);\r\n            promiseInits.push(cUq.init());\r\n        }\r\n        await Promise.all(promiseInits);\r\n\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            promises.push(cUq.loadEntities());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) {\r\n            retErrors.push(...this.uqs.setTuidImportsLocal());\r\n            if (retErrors.length === 0) {\r\n                return;\r\n            }\r\n        }\r\n        return retErrors;\r\n    }\r\n\r\n    protected async internalStart(param:any) {\r\n        if (param !== true) {\r\n            this.clearPrevPages();\r\n        }\r\n        await this.showMainPage();\r\n    }\r\n\r\n    /*\r\n    render(): JSX.Element {\r\n        return this.renderView(this.VAppMain);\r\n    }*/\r\n\r\n    // 如果是独立app，删去显示app之前的页面。\r\n    // 如果非独立app，则不删\r\n    protected clearPrevPages() {\r\n        nav.clear();\r\n    }\r\n\r\n    private showUnsupport(predefinedUnit: number) {\r\n        this.clearPrevPages();\r\n        this.openVPage(VUnsupportedUnit, predefinedUnit);\r\n    }\r\n\r\n    private async showMainPage() {\r\n        // #tv-RwPBwMef-23-sheet-api-108\r\n        let exHash = getExHash();\r\n        if (exHash !== undefined) {\r\n            let parts = exHash.split('-');\r\n            if (parts.length > 3) {\r\n                let action = parts[3];\r\n                // sheet_debug 表示centerUrl是debug方式的\r\n                if (action === 'sheet' || action === 'sheet_debug') {\r\n                    let uqId = Number(parts[4]);\r\n                    let sheetTypeId = Number(parts[5]);\r\n                    let sheetId = Number(parts[6]);\r\n                    let cUq = this.getCUqFromId(uqId);\r\n                    if (cUq === undefined) {\r\n                        alert('unknown uqId: ' + uqId);\r\n                        return;\r\n                    }\r\n                    this.clearPrevPages();\r\n                    await cUq.navSheet(sheetTypeId, sheetId);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.openVPage(this.VAppMain);\r\n    }\r\n\r\n    private getCUqFromId(uqId:number): CUq {\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            if (cUq.uq.id === uqId) return cUq;\r\n        }\r\n        return;\r\n    }\r\n}\r\n","export * from './CApp';\r\n","import * as React from 'react';\r\nimport { Page } from '../../components';\r\nimport { jsonStringify } from '../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CAction, ActionUI } from './cAction';\r\nimport { Action } from '../../uq';\r\n\r\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\r\n    protected vForm: VForm;\r\n    protected returns: any;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.mainPage);\r\n    }\r\n\r\n    private onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        this.returns = await this.controller.submit(values);\r\n        this.closePage();\r\n        this.openPage(this.resultPage);\r\n    }\r\n\r\n    protected mainPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label}>\r\n            {this.vForm.render('mx-3 my-2')}\r\n        </Page>;\r\n    }\r\n\r\n    protected resultPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label} back=\"close\">\r\n            完成！\r\n            <pre>\r\n                {jsonStringify(this.returns)}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { Action } from '../../uq';\r\nimport { VActionMain } from './vActionMain';\r\n\r\nexport interface ActionUI extends EntityUI {\r\n    CAction?: typeof CAction;\r\n    //main: typeof VActionMain,\r\n}\r\n\r\nexport class CAction extends CEntity<Action, ActionUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VActionMain);\r\n    }\r\n\r\n    protected get VActionMain():typeof VActionMain {return VActionMain}\r\n\r\n    async submit(values:any) {\r\n        return this.entity.submit(values);\r\n    }\r\n\r\n    async submitReturns(values:any) {\r\n        return this.entity.submitReturns(values);\r\n    }\r\n}\r\n","export * from './cAction';\r\nexport * from './vActionMain';\r\n","import * as React from 'react';\r\nimport { History } from '../../uq';\r\nimport { Page } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CHistory, HistoryUI } from './cHistory';\r\n\r\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        History\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { History } from '../../uq';\r\nimport { VHistoryMain } from './vHistoryMain';\r\n\r\nexport interface HistoryUI extends EntityUI {\r\n    CHistory?: typeof CHistory;\r\n    main: typeof VHistoryMain,\r\n}\r\n\r\nexport class CHistory extends CEntity<History, HistoryUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VHistoryMain);\r\n    }\r\n\r\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\r\n}\r\n","export * from './cHistory';\r\nexport * from './vHistoryMain';\r\n","import * as React from 'react';\r\nimport { Pending } from '../../uq';\r\nimport { Page } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CPending, PendingUI } from './cPending';\r\n\r\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        pending\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { Pending } from '../../uq';\r\nimport { VPendingMain } from './vPendingMain';\r\n\r\nexport interface PendingUI extends EntityUI {\r\n    CPending?: typeof CPending;\r\n    main: typeof VPendingMain,\r\n}\r\n\r\nexport class CPending extends CEntity<Pending, PendingUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VPendingMain);\r\n    }\r\n\r\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\r\n}\r\n","export * from './cPending';\r\nexport * from './vPendingMain';\r\n","import * as React from 'react';\r\n//import _ from 'lodash';\r\nimport {nav} from './nav';\r\nimport {Page} from './page';\r\nimport { User, env } from '../tool';\r\n\r\nexport abstract class Controller {\r\n    readonly res: any;\r\n    readonly x: any;\r\n    icon: string|JSX.Element;\r\n    label:string;\r\n    readonly isDev:boolean = env.isDevelopment;\r\n    get user():User {return nav.user}\r\n    get isLogined():boolean {\r\n        let {user} = nav;\r\n        if (user === undefined) return false;\r\n        return user.id > 0;\r\n    }\r\n    constructor(res:any) {\r\n        this.res = res || {};\r\n        this.x = this.res.x || {};\r\n    }\r\n\r\n    private receiveHandlerId:number;\r\n    private disposer:()=>void;\r\n\r\n    private dispose() {\r\n        // message listener的清理\r\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\r\n        this.onDispose();\r\n    }\r\n\r\n    protected onDispose() {\r\n    }\r\n\r\n    protected async openVPage<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp((this as any) as C)).open(param);\r\n    }\r\n\r\n    protected renderView<C extends Controller>(view: new (controller: C)=>View<C>, param?:any) {\r\n        return (new view((this as any) as C)).render(param);\r\n    }\r\n\r\n    async event(type:string, value:any) {\r\n        await this.onEvent(type, value);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n    }\r\n\r\n    protected msg(text:string) {\r\n        alert(text);\r\n    }\r\n    protected errorPage(header:string, err:any) {\r\n        this.openPage(<Page header=\"App error!\">\r\n            <pre>\r\n                {typeof err === 'string'? err : err.message}\r\n            </pre>\r\n        </Page>);\r\n    }\r\n\r\n    protected onMessage(message:any):Promise<void> {\r\n        return;\r\n    }\r\n\r\n    private onMessageReceive = async (message:any):Promise<void> => {\r\n        await this.onMessage(message);\r\n    }\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        /*\r\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n        console.log('return true');\r\n        */\r\n        return true;\r\n    }\r\n    protected registerReceiveHandler() {\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n    }\r\n\r\n    protected abstract internalStart(param?:any, ...params:any[]):Promise<void>;\r\n    async start(param?:any, ...params:any[]):Promise<void> {\r\n        this.disposer = this.dispose.bind(this);\r\n        this.registerReceiveHandler();\r\n        let ret = await this.beforeStart();\r\n        if (ret === false) return;\r\n        await this.internalStart(param, ...params);\r\n    }\r\n\r\n    get isCalling():boolean {return this._resolve_$ !== undefined}\r\n\r\n    private _resolve_$:((value:any) => void)[];\r\n    async call<T>(param?:any, ...params:any[]):Promise<T> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<T> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await this.start(param, ...params);\r\n        });\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await (new vp(this as any)).open(param);\r\n        });\r\n    }\r\n\r\n    returnCall(value:any) {\r\n        if (this._resolve_$ === undefined) return;\r\n        let resolve = this._resolve_$.pop();\r\n        if (resolve === undefined) {\r\n            alert('the Controller call already returned, or not called');\r\n            return;\r\n        }\r\n        resolve(value);\r\n    }\r\n\r\n    openPage(page:JSX.Element) {\r\n        nav.push(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    replacePage(page:JSX.Element) {\r\n        nav.replace(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    backPage() {\r\n        nav.back();\r\n    }\r\n\r\n    closePage(level?:number) {\r\n        nav.pop(level);\r\n    }\r\n\r\n    ceasePage(level?:number) {\r\n        nav.ceaseTop(level);\r\n    }\r\n\r\n    removeCeased() {\r\n        nav.removeCeased();\r\n    }\r\n\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        nav.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\n\r\nexport abstract class View<C extends Controller> {\r\n    protected controller: C;\r\n    protected readonly res: any;\r\n    protected readonly x: any;\r\n\r\n    constructor(controller: C) {\r\n        this.controller = controller;\r\n        this.res = controller.res;\r\n        this.x = controller.x;\r\n    }\r\n\r\n    protected get isDev() {return  env.isDevelopment}\r\n\r\n    abstract render(param?:any): JSX.Element;\r\n\r\n    protected renderVm(vm: new (controller: C)=>View<C>, param?:any) {\r\n        return (new vm(this.controller)).render(param);\r\n    }\r\n\r\n    protected async openVPage(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp(this.controller)).open(param);\r\n    }\r\n\r\n    protected async event(type:string, value?:any) {\r\n        /*\r\n        if (this._resolve_$_ !== undefined) {\r\n            await this._resolve_$_({type:type, value:value});\r\n            return;\r\n        }*/\r\n        await this.controller.event(type, value);\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        return await this.controller.vCall(vp, param);\r\n    }\r\n\r\n    protected returnCall(value:any) {\r\n        this.controller.returnCall(value);\r\n    }\r\n\r\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.openPage(React.createElement(view, param));\r\n    }\r\n\r\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.replacePage(React.createElement(view, param));\r\n    }\r\n\r\n    protected openPageElement(page: JSX.Element) {\r\n        this.controller.openPage(page);\r\n    }\r\n\r\n    protected replacePageElement(page: JSX.Element) {\r\n        this.controller.replacePage(page);\r\n    }\r\n\r\n    protected backPage() {\r\n        this.controller.backPage();\r\n    }\r\n\r\n    protected closePage(level?:number) {\r\n        this.controller.closePage(level);\r\n    }\r\n\r\n    protected ceasePage(level?:number) {\r\n        this.controller.ceasePage(level);\r\n    }\r\n\r\n    protected removeCeased() {\r\n        this.controller.removeCeased();\r\n    }\r\n\r\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.controller.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\nexport abstract class VPage<C extends Controller> extends View<C> {\r\n    abstract open(param?:any):Promise<void>;\r\n\r\n    render(param?:any):JSX.Element {return null;}\r\n}\r\n\r\nexport type TypeVPage<C extends Controller> = new (controller: C)=>VPage<C>;\r\n\r\n","export * from './schema';\r\nexport * from './uiSchema';\r\nexport * from './toUiSelectItems';","\r\nexport const mobileRegex = /^[0-9]*$/;\r\nexport const emailRegex = /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\r\n// /^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/\r\n\r\nexport const EmailFieldRule = (value:any): string|string[] => {\r\n    if (emailRegex.test(value as string) === false) return '电子邮件格式错误';\r\n}\r\n\r\nexport const MobileFieldRule = (value:any): string|string[] => {\r\n    if (emailRegex.test(value as string) === false) return '手机格式错误';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport interface DropdownAction {\r\n    icon?: string;\r\n    caption?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface DropdownActionsProps {\r\n    icon?: string;\r\n    actions: DropdownAction[];\r\n    isRight?: boolean;\r\n}\r\n\r\nexport interface DropdownActionsState {\r\n    dropdownOpen: boolean;\r\n}\r\n\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    private menu: HTMLDivElement;\r\n    private button: HTMLElement;\r\n    constructor(props:DropdownActionsProps) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('click', this.handleDocumentClick);\r\n        document.addEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleDocumentClick);\r\n        document.removeEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    private handleDocumentClick = (evt:any) => {\r\n        if (this.state.dropdownOpen === false) return;\r\n        if (this.button && this.button.contains(evt.target)) return;\r\n        if (!this.menu) return;\r\n        //if (!this.menu.contains(evt.target)) \r\n        this.toggle();\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        let {dropdownOpen} = this.state;\r\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\r\n        return <div className=\"dropdown\">\r\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={dropdownOpen}\r\n                onClick={this.toggle}>\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </button>\r\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\r\n                {\r\n                    actions.map((v,index) => {\r\n                        let {icon, caption, action} = v;\r\n                        if (icon === undefined && caption === undefined) \r\n                            return <div className=\"dropdown-divider\" />;\r\n                        let i:any;\r\n                        if (hasIcon === true) {\r\n                            if (icon !== undefined) icon = 'fa-' + icon;\r\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                        }\r\n                        if (action === undefined) \r\n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                        // eslint-disable-next-line\r\n                        return <a className=\"dropdown-item\" key={index} href=\"#/\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n/*\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right={isRight}>\r\n                {actions.map((v,index) => {\r\n                    let {icon, caption, action} = v;\r\n                    if (icon === undefined && caption === undefined) \r\n                        return <div className=\"dropdown-divider\" />;\r\n                    let i;\r\n                    if (hasIcon === true) {\r\n                        if (icon !== undefined) icon = 'fa-' + icon;\r\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                    }\r\n                    if (action === undefined) \r\n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\r\n                })}\r\n            </DropdownMenu>\r\n        </UncontrolledButtonDropdown>\r\n    }\r\n}\r\n*/","import * as React from 'react';\r\n\r\nexport interface EasyDateProps {\r\n    date: Date | number;\r\n}\r\n\r\nfunction renderDate(vDate:Date|number, withTime:boolean) {\r\n    if (!vDate) return null;\r\n    let date: Date;\r\n    switch (typeof vDate) {\r\n        default: date = vDate as Date; break;\r\n        case 'string': date = new Date(vDate); break;\r\n        case 'number': date = new Date((vDate as number)*1000); break;\r\n    }\r\n\r\n    let now = new Date();\r\n    let tick:number, nDate:number, _date:number, month:number, year:number, hm:string, nowYear:number;\r\n    let d = date;\r\n    tick = now.getTime() - d.getTime();\r\n    let hour=d.getHours(), minute=d.getMinutes();\r\n    nDate=now.getDate();\r\n    _date=d.getDate();\r\n    month=d.getMonth()+1;\r\n    year=d.getFullYear();\r\n    nowYear = now.getFullYear();\r\n    hm = withTime === true? ' ' + hour + ((minute<10?':0':':') + minute) : '';\r\n\r\n    if (tick < -24*3600*1000) {\r\n        if (year === nowYear)\r\n            return month+'月'+_date+'日' + hm;\r\n        else\r\n            return year+'年'+month+'月'+_date+'日' + hm;\r\n    }\r\n    if (tick < 24*3600*1000) {\r\n        return _date!==nDate? \r\n            (tick < 0? '明天 ' : '昨天 ') + hm \r\n            : withTime===true? hm : '今天';\r\n    }\r\n    if (year === nowYear) {\r\n        return month+'月'+_date+'日';\r\n    }\r\n    return year+'年'+month+'月'+_date+'日';\r\n}\r\n\r\n\r\nexport class EasyDate extends React.Component<EasyDateProps> {\r\n    render() {\r\n        return renderDate(this.props.date, false);\r\n    }\r\n}\r\n\r\nexport class EasyTime extends React.Component<EasyDateProps> {\r\n    render() {\r\n        return renderDate(this.props.date, true);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Image } from '.';\r\n\r\nexport interface MediaProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    discription?: string | JSX.Element;\r\n    px?: number;\r\n    py?: number;\r\n}\r\n\r\nexport class Media extends React.Component<MediaProps> {\r\n    render() {\r\n        let {icon, main, discription, px, py} = this.props;\r\n        let disp:any;\r\n        if (typeof discription === 'string')\r\n            disp = <div>{discription}</div>;\r\n        else\r\n            disp = discription;\r\n        let cn = classNames(\r\n            'media', \r\n            px===undefined? 'px-0':'px-'+px, \r\n            py===undefined? 'py-2':'py-'+py);\r\n        return <div className={cn}>\r\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\r\n            <div className=\"media-body\">\r\n                <h5 className=\"mt-0\">{main}</h5>\r\n                {disp}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\n\r\nexport interface SearchBoxProps {\r\n    className?: string;\r\n    label?: string;\r\n    initKey?: string;\r\n    placeholder?: string;\r\n    buttonText?: string;\r\n    maxLength?: number;\r\n    size?: 'sm' | 'md' | 'lg';\r\n    inputClassName?: string;\r\n    onSearch: (key:string)=>Promise<void>;\r\n    onFocus?: ()=>void;\r\n    allowEmptySearch?: boolean;\r\n}\r\n\r\n/*\r\nexport interface SearchBoxState {\r\n    disabled: boolean;\r\n}*/\r\n\r\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\r\n    private input: HTMLInputElement;\r\n    private key: string = null;\r\n    @observable private disabled: boolean;\r\n\r\n    private onChange = (evt: React.ChangeEvent<any>) => {\r\n        this.key = evt.target.value;\r\n        if (this.key !== undefined) {\r\n            this.key = this.key.trim();\r\n            if (this.key === '') this.key = undefined;\r\n        }\r\n        if (this.props.allowEmptySearch !== true) {\r\n            this.disabled = !this.key;\r\n        }\r\n    }\r\n    private onSubmit = async (evt: React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n        if (this.key === null) this.key = this.props.initKey || '';\r\n        if (this.props.allowEmptySearch !== true) {\r\n            if (!this.key) return;\r\n            if (this.input) this.input.disabled = true;\r\n        }\r\n        await this.props.onSearch(this.key);\r\n        if (this.input) this.input.disabled = false;\r\n    }\r\n    clear() {\r\n        if (this.input) this.input.value = '';\r\n    }\r\n    render() {\r\n        let {className, inputClassName, onFocus,\r\n            label, placeholder, buttonText, maxLength, size} = this.props;\r\n        let inputSize:string;\r\n        switch (size) {\r\n            default:\r\n            case 'sm': inputSize = 'input-group-sm'; break;\r\n            case 'md': inputSize = 'input-group-md'; break;\r\n            case 'lg': inputSize = 'input-group-lg'; break;\r\n        }\r\n        let lab:any;\r\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\r\n        return <form className={className} onSubmit={this.onSubmit} >\r\n            <div className={classNames(\"input-group\", inputSize)}>\r\n                {lab}\r\n                <input ref={v=>this.input=v} onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"key\"\r\n                    onFocus={onFocus}\r\n                    className={classNames('form-control', inputClassName || 'border-primary')}\r\n                    placeholder={placeholder}\r\n                    defaultValue={this.props.initKey}\r\n                    maxLength={maxLength} />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        disabled={this.disabled}>\r\n                        <i className='fa fa-search' />\r\n                        <i className=\"fa\"/>\r\n                        {buttonText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n","import { UqMan, TuidModify } from '../uqMan';\r\nimport { Tuid } from \"./tuid\";\r\nimport { env } from '../../tool';\r\n\r\ninterface Modify {\r\n    id: number;\r\n    entity: string;\r\n    key: string;\r\n}\r\n\r\nexport class TuidsCache {\r\n    private readonly uq: UqMan;\r\n    //private readonly uqApi: UqApi;\r\n    //private readonly tuids: {[name:string]: Tuid};\r\n    private modifyMax: TuidModify;\r\n    private cacheTimer: any;\r\n    constructor(uq: UqMan) {\r\n        this.uq = uq;\r\n        //this.uqApi = uq.uqApi;\r\n        //this.tuids = uq.tuids;\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.clearCacheTimer();\r\n        this.cacheTimer = env.setTimeout('TuidsCache.cacheTuids', this.loadIds, defer);\r\n    }\r\n    private clearCacheTimer() {\r\n        if (this.cacheTimer === undefined) return;\r\n        env.clearTimeout(this.cacheTimer);\r\n        this.cacheTimer = undefined;\r\n    }\r\n    private loadIds = () => {\r\n        this.clearCacheTimer();\r\n        let {tuids} = this.uq;\r\n        for (let i in tuids) {\r\n            let tuid = tuids[i];\r\n            tuid.cacheIds();\r\n        }\r\n    }\r\n    \r\n    pullModify(modifyMax:number) {\r\n        if (modifyMax === undefined) return;\r\n        let now = Math.floor(Date.now() / 1000);\r\n        if (this.modifyMax === undefined) {\r\n            this.modifyMax = this.uq.localModifyMax.get();\r\n            if (this.modifyMax === undefined) {\r\n                this.modifyMax = {\r\n                    max: modifyMax,\r\n                    seconds: now,\r\n                };\r\n                this.uq.localModifyMax.set(this.modifyMax);\r\n            }\r\n        }\r\n        let {max, seconds} = this.modifyMax;\r\n        let lockGap = 3600;\r\n        if (now - seconds < lockGap) return;\r\n        if (modifyMax <= max) return;\r\n        let tuidCached:string[] = [];\r\n        let {tuids} = this.uq;\r\n        for (let i in tuids) {\r\n            //if (tuids[i].cached === true) \r\n            tuidCached.push(i);\r\n        }\r\n        if (tuidCached.length === 0) return;\r\n        this.modifyMax.seconds = now;\r\n        this.innerPullModify(tuidCached.join('\\t'));\r\n    }\r\n\r\n    private async innerPullModify(tuidLists:string):Promise<void> {\r\n        let {uqApi, tuids} = this.uq;\r\n        let {max} = this.modifyMax;\r\n        let ret:{queue:Modify[], queueMax:number} = await uqApi.queueModify(max, 30, tuidLists);\r\n        let group:{[entity:string]: {tuid:Tuid; ids: string[]}} = {};\r\n        let modifyMax:number = 0;\r\n        for (let modify of ret.queue) {\r\n            let {id, entity, key} = modify;\r\n            let tuid = tuids[entity];\r\n            if (tuid === undefined) continue;\r\n            let item = group[entity];\r\n            if (item === undefined) {\r\n                item = group[entity] = {tuid: tuid, ids:[]};\r\n            }\r\n            item.ids.push(key);\r\n            if (id > modifyMax) modifyMax = id;\r\n        }\r\n        for (let i in group) {\r\n            let {tuid, ids} = group[i];\r\n            await tuid.modifyIds(ids);\r\n        }\r\n        let now = Math.floor(Date.now() / 1000);\r\n        this.modifyMax = {\r\n            max: modifyMax,\r\n            seconds: now,\r\n        }\r\n        this.uq.localModifyMax.set(this.modifyMax);\r\n    }\r\n}\r\n","import { LocalMap, LocalCache, env } from '../tool';\r\nimport { UqData } from '../net';\r\nimport { UqMan } from './uqMan';\r\nimport { TuidImport, TuidInner } from './tuid';\r\n\r\nexport interface TVs {\r\n    [uqName:string]: {\r\n        [tuidName: string]: (values: any) => JSX.Element;\r\n    }\r\n}\r\n\r\nexport class UQsMan {\r\n    private collection: {[uqName: string]: UqMan};\r\n    private readonly tvs: TVs;\r\n\r\n    readonly name: string;\r\n    readonly appOwner: string;\r\n    readonly appName: string;\r\n    readonly localMap: LocalMap;\r\n    readonly localData: LocalCache;\r\n    id: number;\r\n\r\n    constructor(tonvaAppName:string, tvs:TVs) {\r\n        this.tvs = tvs || {};\r\n        this.buildTVs();\r\n        this.collection = {};\r\n        let parts = tonvaAppName.split('/');\r\n        if (parts.length !== 2) {\r\n            throw new Error('tonvaApp name must be / separated, owner/app');\r\n        }\r\n        this.appOwner = parts[0];\r\n        this.appName = parts[1];\r\n        this.localMap = env.localDb.map(tonvaAppName);\r\n        this.localData = this.localMap.child('uqData');\r\n    }\r\n\r\n    // to be removed in the future\r\n    addUq(uq: UqMan) {\r\n        this.collection[uq.name] = uq;\r\n    }\r\n\r\n    private buildTVs() {\r\n        for (let i in this.tvs) {\r\n            let uqTVs = this.tvs[i];\r\n            if (uqTVs === undefined) continue;\r\n            let l = i.toLowerCase();\r\n            if (l === i) continue;\r\n            this.tvs[l] = uqTVs;\r\n            for (let j in uqTVs) {\r\n                let en = uqTVs[j];\r\n                if (en === undefined) continue;\r\n                let lj = j.toLowerCase();\r\n                if (lj === j) continue;\r\n                uqTVs[lj] = en;\r\n            }\r\n        }\r\n    }\r\n\r\n    async init(uqsData:UqData[]):Promise<void> {\r\n        let promiseInits: PromiseLike<void>[] = [];\r\n        for (let uqData of uqsData) {\r\n            let {uqOwner, uqName} = uqData;\r\n            let uqFullName = uqOwner + '/' + uqName;\r\n            //let uqUI = this.ui.uqs[uqFullName] as UqUI || {};\r\n            //let cUq = this.newCUq(uqData, uqUI);\r\n            //this.cUqCollection[uqFullName] = cUq;\r\n            //this.uqs.addUq(cUq.uq);\r\n            let uq = new UqMan(this, uqData, undefined, this.tvs[uqFullName] || this.tvs[uqName]);\r\n            this.collection[uqFullName] = uq;\r\n            let lower = uqFullName.toLowerCase();\r\n            if (lower !== uqFullName) {\r\n                this.collection[lower] = uq;\r\n            }\r\n            promiseInits.push(uq.init());\r\n        }\r\n        await Promise.all(promiseInits);\r\n    }\r\n\r\n    async load(): Promise<string[]> {\r\n        let retErrors:string[] = [];\r\n        let promises: PromiseLike<string>[] = [];\r\n        for (let i in this.collection) {\r\n            let uq = this.collection[i];\r\n            promises.push(uq.loadEntities());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        return retErrors;\r\n    }\r\n\r\n    buildUQs(): any {\r\n        let uqs:any = {};\r\n        for (let i in this.collection) {\r\n            let uqMan = this.collection[i];\r\n            //let n = uqMan.name;\r\n            let uqName = uqMan.uqName;\r\n            let l = uqName.toLowerCase();\r\n            let entities = uqMan.entities;\r\n            let keys = Object.keys(entities);\r\n            for (let key of keys) {\r\n                let entity = entities[key];\r\n                let {name, sName} = entity;\r\n                if (name !== sName) entities[sName] = entity;\r\n            }\r\n            uqs[i] = entities;\r\n            uqs[uqName] = entities;\r\n            if (l !== uqName) uqs[l] = entities;\r\n        }\r\n        return uqs;\r\n    }\r\n\r\n    setTuidImportsLocal():string[] {\r\n        let ret:string[] = [];\r\n        for (let i in this.collection) {\r\n            let uq = this.collection[i];\r\n            for (let tuid of uq.tuidArr) {\r\n                if (tuid.isImport === true) {\r\n                    let error = this.setInner(tuid as TuidImport);\r\n                    if (error) ret.push(error);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private setInner(tuidImport: TuidImport):string {\r\n        let {from} = tuidImport;\r\n        let fromName = from.owner + '/' + from.uq;\r\n        let uq = this.collection[fromName];\r\n        if (uq === undefined) {\r\n            //debugger;\r\n            return `setInner(tuidImport: TuidImport): uq ${fromName} is not loaded`;\r\n        }\r\n        let iName = tuidImport.name\r\n        let tuid = uq.tuid(iName);\r\n        if (tuid === undefined) {\r\n            //debugger;\r\n            return `setInner(tuidImport: TuidImport): uq ${fromName} has no Tuid ${iName}`;\r\n        }\r\n        if (tuid.isImport === true) {\r\n            //debugger;\r\n            return `setInner(tuidImport: TuidImport): uq ${fromName} Tuid ${iName} is import`;\r\n        }\r\n        tuidImport.setFrom(tuid as TuidInner);\r\n    }\r\n}\r\n","export * from './app';\r\nexport * from './startApp';\r\nexport * from './cUq';\r\nexport * from './action';\r\nexport * from './tuid';\r\nexport * from './sheet';\r\nexport * from './query';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './form/viewModel';\r\nexport * from './form';\r\nexport * from './formUI';\r\nexport * from './ControllerUq';\r\nexport * from './CVEntity';\r\nexport * from './link';\r\nexport * from './icons';\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {FormView, FormProps} from './formView';\r\n\r\nexport function tonvaDebug() {\r\n    let a = 0;\r\n}\r\n\r\nexport interface TonvaFormProps extends FormProps {\r\n    className?: string;\r\n    initValues?: any;\r\n}\r\n\r\n@observer \r\nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\r\n    formView: FormView;\r\n    constructor(props:TonvaFormProps) {\r\n        super(props);\r\n        this.formView = new FormView(this.props);\r\n    }\r\n    componentWillMount() {\r\n        this.formView.setInitValues(this.props.initValues);\r\n    }\r\n    debug() {\r\n        let s = null;\r\n    }\r\n    render() {\r\n        let {className, children, initValues} = this.props;\r\n        return <div className={className}>\r\n            {\r\n                children === undefined? \r\n                    this.formView.render() : \r\n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport className from 'classnames';\r\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\r\n\r\nexport interface Step {\r\n    formRows: FormRow[];\r\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\r\n    ex?: any;                                   // 每一步额外的参数\r\n}\r\n\r\nexport interface MultiStepProps {\r\n    className?: string;\r\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    steps: {[name:string]: Step};\r\n    first: string;         // 第一步的名字\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n}\r\n\r\nexport interface StepView {\r\n    stepName: string;\r\n    step: Step;\r\n    props: FormProps;\r\n    //view: JSX.Element;\r\n}\r\nexport interface MultiStepState {\r\n    //num: number;\r\n    //step: Step;\r\n    //formView: FormView;\r\n    topView: StepView;\r\n    stepViews: StepView[];\r\n}\r\n\r\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\r\n    private values: any = {};\r\n    private stepViews: StepView[] = [];\r\n    private topView: StepView;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topView: undefined,\r\n            stepViews: [],\r\n        }\r\n        this.onPrev = this.onPrev.bind(this);\r\n        this.onNext = this.onNext.bind(this);\r\n    }\r\n    \r\n    private setStep(stepName: string) {\r\n        let step = this.props.steps[stepName];\r\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\r\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\r\n        let otherButton, onOther;\r\n        if (this.stepViews.length > 0) {\r\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\r\n            onOther = this.onPrev;\r\n        }\r\n        let {header, footer} = this.props;\r\n        let btnContent = step.next === undefined?\r\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\r\n            {suffix: 'arrow-right', text: '下一步'}\r\n        let formProps = {\r\n            formRows: step.formRows,\r\n            submitButton: <ButtonConten {...btnContent} />,\r\n            onSubmit: this.onNext,\r\n            otherButton: otherButton,\r\n            onOther: onOther,\r\n        };\r\n        let num = this.stepViews.length + 1;\r\n        this.topView = {\r\n            stepName: stepName,\r\n            step: step,\r\n            props: formProps,\r\n        };\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        this.setStep(this.props.first);\r\n    }\r\n    private onPrev(values:any) {\r\n        _.assign(this.values, values);\r\n        this.topView = this.stepViews.pop();\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    private onNext(values:any): Promise<SubmitResult|undefined> {\r\n        _.assign(this.values, values);\r\n        //let {num, step} = this.state;\r\n        let {next} = this.topView.step;\r\n        if (next === undefined) {\r\n            return this.props.onSubmit(this.values)\r\n        }\r\n        let nextStepName:string;\r\n        if (typeof next === 'string') {\r\n            nextStepName = next;\r\n        }\r\n        else {\r\n            nextStepName = next(this.values);\r\n        }\r\n        this.setStep(nextStepName);\r\n    }\r\n    render() {\r\n        let {className, header, footer} = this.props;\r\n        let {topView, stepViews} = this.state;\r\n        let {stepName, step} = topView;\r\n        let hidden = {visibility: 'hidden'};\r\n        let num = stepViews.length + 1;\r\n        return <div className={className}>\r\n            <div>\r\n                {header && header(step, num)}\r\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\r\n                {footer && footer(step, num)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\r\n    let {prefix, text, suffix} = props;\r\n    let pIcon, sIcon;\r\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\r\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\r\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\r\n}\r\n    \r\n","import _ from 'lodash';\r\nimport { Context } from '../context';\r\nimport { FormRes } from '../formRes';\r\n\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any):void;\r\n}\r\n\r\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\r\nexport type FieldRule = (value:any) => string[] | string;\r\n\r\nexport class RuleCustom extends Rule {\r\n    private func: FieldRule;\r\n    constructor(func: FieldRule) {\r\n        super();\r\n        this.func = func;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        let ret = this.func(value);\r\n        if (ret === undefined) return;\r\n        switch (typeof ret) {\r\n            case 'undefined': return;\r\n            case 'string': defy.push(ret as string); return;\r\n            default: defy.push(...ret); return;\r\n        }        \r\n    }\r\n}\r\n\r\nexport abstract class RulePredefined extends Rule {\r\n    protected res: FormRes;\r\n    constructor(res: FormRes) {\r\n        super();\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class RuleRequired extends RulePredefined {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if (isNaN(value as number) === false) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push(this.res.required);\r\n    }\r\n}\r\n\r\nexport class RuleNum extends RulePredefined {\r\n    private minMsg: _.TemplateExecutor;\r\n    private maxMsg: _.TemplateExecutor;\r\n    protected min: number;\r\n    protected max: number\r\n    constructor(res: FormRes, min?: number, max?: number) {\r\n        super(res);\r\n        this.minMsg = _.template(res.min);\r\n        this.maxMsg = _.template(res.max);\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (isNaN(n) === true) {\r\n            defy.push(this.res.number);\r\n        }\r\n        else {\r\n            this.checkMore(defy, n);\r\n        }\r\n    }\r\n\r\n    protected checkMore(defy:string[], value: number) {\r\n        if (this.min !== undefined && Number(value) < this.min) {\r\n            defy.push(this.minMsg({min:this.min}));\r\n        }\r\n        if (this.max !== undefined && Number(value) > this.max) {\r\n            defy.push(this.maxMsg({max:this.max}));\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleInt extends RuleNum {\r\n    protected checkMore(defy:string[], n: number) {\r\n        super.checkMore(defy, n);\r\n        if (Number.isInteger(n) === false) {\r\n            defy.push(this.res.integer);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { ItemSchema } from '../../schema';\r\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\r\nimport { computed, observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Widget {\r\n    name: string;\r\n    protected context: Context;\r\n    protected fieldProps:FieldProps;\r\n    protected children: React.ReactNode;\r\n    protected _itemSchema: ItemSchema;\r\n    protected _ui: UiItem;\r\n    protected defaultValue: any;\r\n    protected value: any;\r\n    protected rules: Rule[];\r\n    @observable errors: string[] = [];\r\n    @observable protected contextErrors: string[] = [];\r\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\r\n    protected readOnly:boolean;\r\n    protected disabled:boolean;\r\n    @observable visible:boolean;\r\n\r\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\r\n        this.context = context;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this._itemSchema = itemSchema;\r\n        this.fieldProps = fieldProps;\r\n        this.children = children;\r\n        this._ui = context.getUiItem(name);\r\n        if (this.ui === undefined) {\r\n            this.readOnly = false;\r\n            this.disabled = false;\r\n            this.visible = true;\r\n        }\r\n        else {\r\n            let {readOnly, disabled, visible} = this.ui;\r\n            this.readOnly = (readOnly === true);\r\n            this.disabled = (disabled === true);\r\n            this.visible = !(visible === false);            \r\n        }\r\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\r\n        this.init();\r\n    }\r\n\r\n    protected get itemSchema(): ItemSchema {return this._itemSchema};\r\n    protected get ui(): UiItem {return this._ui};\r\n\r\n    protected init() {\r\n        this.rules = [];\r\n        if (this.itemSchema.required === true) {\r\n            this.rules.push(new RuleRequired(this.context.form.res));\r\n        }\r\n        this.buildRules();\r\n        if (this.ui === undefined) return;\r\n        let {rules} = this.ui;\r\n        if (rules === undefined) return;\r\n        if (Array.isArray(rules) === false) {\r\n            this.rules.push(new RuleCustom(rules as FieldRule));\r\n            return;\r\n        }\r\n        for (let rule of rules as FieldRule[]) {\r\n            this.rules.push(new RuleCustom(rule));\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n    }\r\n\r\n    checkRules() {\r\n        let defy:string[] = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        if (defy.length === 0) {\r\n            this.context.removeErrorWidget(this);\r\n        }\r\n        else {\r\n            this.context.addErrorWidget(this);\r\n            this.errors.push(...defy);\r\n        }\r\n    }\r\n\r\n    @computed get isOk() {\r\n        return this.errors.length ===0;\r\n    }\r\n\r\n    setError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.errors.push(err);\r\n        else this.errors.push(...err);\r\n    }\r\n\r\n    setContextError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.contextErrors.push(err);\r\n        else this.contextErrors.push(...err);\r\n    }\r\n\r\n    clearError() {\r\n        this.errors.splice(0);\r\n    }\r\n\r\n    clearContextError() {\r\n        this.contextErrors.splice(0);\r\n    }\r\n\r\n    protected parse(value:any):any {return value}\r\n\r\n    protected setElementValue(value:any) {}\r\n    protected setDataValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        this.context.initData[this.name] = this.value = this.parse(value);\r\n    }\r\n\r\n    setValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        //this.setDataValue(value);\r\n        //this.setElementValue(value);\r\n        this.changeValue(value, false);\r\n    }\r\n\r\n    getValue() {\r\n        return this.context.getValue(this.name);\r\n    }\r\n\r\n    getReadOnly():boolean {return this.readOnly}\r\n    getDisabled():boolean {return this.disabled}\r\n    getVisible():boolean {return this.visible}\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}\r\n    setVisible(value:boolean) {this.visible = value}\r\n\r\n    private isChanging: boolean;\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n\r\n    protected changeValue(newValue: any, fromElement: boolean) {\r\n        let prev = this.value;\r\n        let onChanging: ChangingHandler;\r\n        let onChanged: ChangedHandler;\r\n        if (this.ui !== undefined) {\r\n            onChanging = this.ui.onChanging;\r\n            onChanged = this.ui.onChanged;\r\n        }\r\n        let allowChange = true;\r\n        if (onChanging !== undefined) {\r\n            this.isChanging = true;\r\n            allowChange = onChanging(this.context, this.value, prev);\r\n            this.isChanging = false;\r\n        }\r\n        if (allowChange === true) {\r\n            this.setDataValue(newValue);\r\n            if (fromElement !== true) this.setElementValue(newValue);\r\n            if (onChanged !== undefined) {\r\n                this.isChanging = true;\r\n                onChanged(this.context, this.value, prev);\r\n                this.isChanging = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get className():string {\r\n        let fieldClass:string;\r\n        if (this.context.inNode === false) fieldClass = 'form-control';\r\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\r\n    }\r\n\r\n    protected abstract render():JSX.Element;\r\n\r\n    protected renderBody():JSX.Element {\r\n        let elDiscription;\r\n        if (this.hasError === false && this.ui) {\r\n            let {discription, discriptionClassName} = this.ui;\r\n            if (discriptionClassName === undefined) discriptionClassName = 'small text-muted';\r\n            elDiscription = <span className={discriptionClassName}>\r\n                {discription}\r\n            </span>;\r\n        }\r\n        return <>\r\n            {this.render()}\r\n            {elDiscription}\r\n        </>;\r\n    }\r\n\r\n    container = observer(():JSX.Element => {\r\n        if (this.visible === false) return null;\r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        let label:any = this.label;\r\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\r\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\r\n        }\r\n        return form.FieldContainer(label, this.renderBody());\r\n    })\r\n\r\n    protected get label():string {\r\n        let label:any;\r\n        if (this.ui === undefined) {\r\n            label = this.name;\r\n        }\r\n        else {\r\n            let uiLabel = this.ui.label;\r\n            if (uiLabel === null) label = null;\r\n            else label = uiLabel || this.name;\r\n        }\r\n        return label;\r\n    }\r\n\r\n    protected renderTemplet():JSX.Element | undefined {\r\n        if (this.children !== undefined) {\r\n            return <>{this.children}</>;\r\n        }\r\n        if (this.ui === undefined) return undefined;\r\n        let {Templet} = this.ui;\r\n        if (typeof Templet === 'function') return Templet(this.value);\r\n        return Templet;\r\n    }\r\n\r\n    protected renderErrors() {\r\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\r\n        if (errorList.length === 0) return null;\r\n        let {inNode} = this.context;\r\n        let tag = inNode === true? 'span' : 'div';\r\n        return errorList.map(err => React.createElement(tag, \r\n            {\r\n                key: err, \r\n                className: 'text-danger d-inline-block my-2 ml-3'\r\n            },\r\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\r\n        ));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextItem, StringSchema } from '../../schema';\r\n\r\nexport class TextWidget extends Widget {\r\n    protected inputType = 'text';\r\n    protected get ui(): UiTextItem {return this._ui as UiTextItem};\r\n    protected input: HTMLInputElement;\r\n\r\n    protected setElementValue(value:any) {\r\n        if (this.input === null) return;\r\n        this.input.value = value;\r\n    }\r\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\r\n    protected onKeyDown = async (evt:React.KeyboardEvent<HTMLInputElement>) => {\r\n        this.internalOnKeyDown(evt);\r\n        if (evt.keyCode !== 13) return;\r\n        let {onEnter} = this.context.form.props;\r\n        if (onEnter === undefined) return;\r\n\r\n        this.changeValue(evt.currentTarget.value, true);\r\n\r\n        //this.checkRules();\r\n        //this.context.checkContextRules();\r\n        this.input.blur();\r\n\r\n        let ret = await onEnter(this.name, this.context);\r\n        if (ret !== undefined) {\r\n            this.context.setError(this.name, ret);\r\n        }\r\n    }\r\n\r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n    }\r\n\r\n    protected onBlur(evt: React.FocusEvent<any>) {\r\n        this.onInputChange(evt);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n    }\r\n    protected onFocus(evt: React.FocusEvent<any>) {\r\n        this.clearError();\r\n        this.context.removeErrorWidget(this);\r\n        this.context.clearErrors();\r\n    }\r\n    protected onChange(evt: React.ChangeEvent<any>) {\r\n    }\r\n\r\n    setReadOnly(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.readOnly = this.readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.disabled = this.disabled = value;\r\n    }\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn:any = {\r\n            //'form-control': true,\r\n        };\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, cn)}\r\n            type={this.inputType}\r\n            defaultValue={this.value}\r\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\r\n            placeholder={this.placeholder}\r\n            readOnly={this.readOnly}\r\n            disabled={this.disabled}\r\n            onKeyDown = {this.onKeyDown}\r\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\r\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\r\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","//import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\nimport { RuleNum, RuleInt } from '../rules';\r\nimport { NumBaseSchema } from '../../schema';\r\n\r\nexport class NumberWidget extends TextWidget {\r\n    protected inputType = 'number';\r\n    protected get itemSchema(): NumBaseSchema {return this._itemSchema as NumBaseSchema};\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        let res = this.context.form.res;\r\n        let {min, max} = this.itemSchema;\r\n        this.rules.push(\r\n            this.itemSchema.type === 'integer'?\r\n                new RuleNum(res, min, max) :\r\n                new RuleInt(res, min, max)\r\n        );\r\n        /*\r\n        if (this.itemSchema.type === 'integer') {\r\n            this.rules.push(new RuleInt);\r\n        }\r\n        let {min, max} = this.itemSchema;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n        */\r\n    }\r\n\r\n    protected parse(value:any):any {\r\n        if (value === undefined || value === null) return;\r\n        return Number(value);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { NumberWidget } from './numberWidget';\r\n\r\nexport class UpdownWidget extends NumberWidget {\r\n    protected inputType = 'number';\r\n\r\n    protected isValidKey(key:number):boolean {\r\n        return key===46 || key===8 || key===37 || key===39\r\n            || (key>=48 && key<=57)\r\n            || (key>=96 && key<=105)\r\n            || key===109 || key===189;\r\n    }\r\n    \r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n        let key = evt.keyCode;\r\n        window.event.returnValue = this.isValidKey(key);\r\n    }\r\n}\r\n","//import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class DateWidget extends TextWidget {\r\n    protected inputType = 'date';\r\n}\r\n\r\nexport class DateTimeWidget extends TextWidget {\r\n    protected inputType = 'datetime';\r\n}\r\n\r\nexport class TimeWidget extends TextWidget {\r\n    protected inputType = 'time';\r\n}\r\n\r\nexport class MonthWidget extends TextWidget {\r\n    protected inputType = 'month';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiCheckItem } from '../../schema';\r\n\r\nexport class CheckBoxWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected get ui(): UiCheckItem {return this._ui as UiCheckItem};\r\n    protected trueValue: any;\r\n    protected falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        if (this.ui !== undefined) {\r\n            let {trueValue, falseValue} = this.ui;\r\n            if (trueValue === undefined) this.trueValue = true;\r\n            else this.trueValue = trueValue;\r\n            if (falseValue === undefined) this.falseValue = false;\r\n            else this.falseValue = falseValue;\r\n        }\r\n        else {\r\n            this.trueValue = true;\r\n            this.falseValue = false;\r\n        }\r\n    }\r\n    protected setElementValue(value:any) {\r\n        this.input.checked = value === this.trueValue;\r\n    }\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\r\n    }\r\n\r\n    protected onClick = () => {\r\n        this.context.clearErrors();\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames(this.className, 'form-check-inline p-0');\r\n        let input = <input\r\n            ref={(input)=>this.input = input}\r\n            className={'align-self-center'}\r\n            type=\"checkbox\"\r\n            defaultChecked={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            onClick={this.onClick} />;\r\n        if (this.context.inNode === true) {\r\n            return <label className={cn}>\r\n                {input} {(this.ui&&this.ui.label) || this.name}\r\n            </label>\r\n        }\r\n        else {\r\n            return <div className={cn}>\r\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\r\n            </div>;\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { Widget } from './widget';\r\nimport { UiSelect } from '../../schema';\r\n\r\nexport class SelectWidget extends Widget {\r\n    protected select: HTMLSelectElement;\r\n    protected get ui(): UiSelect {return this._ui as UiSelect};\r\n    @observable protected readOnly: boolean;\r\n\r\n    protected setElementValue(value:any) {this.select.value = value}\r\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setDataValue(evt.target.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\r\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        if (this.readOnly === true) {\r\n            let option = this.ui.list.find(v => v.value === this.value);\r\n            let title = (option === undefined)? '(???)' : option.title;\r\n            return <span className=\"form-control w-min-6c\">{title}</span>;\r\n        }\r\n        return <select\r\n            ref={(select)=>this.select = select}\r\n            className={classNames(this.className, 'form-control')}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}>\r\n            {this.ui.list.map((v,index) => {\r\n                let {title, value} = v;\r\n                let cn:string;\r\n                //if (value === undefined || value === null) cn = 'text-light small';\r\n                //else cn = 'text-danger';\r\n                return <option className={cn} key={index} value={value}>{title || value}</option>\r\n            })}\r\n        </select>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n//import { TextWidget } from './textWidget';\r\nimport { Widget } from './widget';\r\nimport { UiRadio } from '../../schema';\r\nimport { RowContext } from '../context';\r\n\r\n\r\nconst radioStyle:React.CSSProperties = {height: 'auto'};\r\n\r\nexport class RadioWidget extends Widget {\r\n    protected inputs: {[index:number]: HTMLInputElement} = {};\r\n    protected get ui(): UiRadio {return this._ui as UiRadio};\r\n\r\n    protected setElementValue(value:any) {\r\n        for (let i in this.inputs) {\r\n            let input = this.inputs[i];\r\n            input.checked = value === input.value;\r\n        }\r\n    }\r\n    setReadOnly(value:boolean) {\r\n        this.readOnly = value;\r\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        this.disabled = value;\r\n        for (let i in this.inputs) this.inputs[i].disabled = value\r\n    }\r\n\r\n    /*\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n    */\r\n\r\n    render() {\r\n        let {defaultValue, list} = this.ui;\r\n        let {isRow} = this.context;\r\n        let rowKey:number;\r\n        if (isRow === true) {\r\n            rowKey = (this.context as RowContext).rowKey;\r\n        }\r\n        let cn = classNames(this.className, 'py-0');\r\n        return <span className={cn} style={radioStyle}>\r\n                {list.map((v,index) => {\r\n                    let {value, title} = v;\r\n                    let name = this.name;\r\n                    if (rowKey !== undefined) name += '-' + rowKey;\r\n                    return <label key={index} className=\"form-radio-inline\">\r\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\r\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value}\r\n                            onChange={this.onInputChange} />\r\n                        {title || value}\r\n                    </label>;\r\n                    //</span>\r\n                })}\r\n            </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiIdItem, TempletType } from '../../schema';\r\nimport { observable } from 'mobx';\r\n\r\nexport class IdWidget extends Widget {\r\n    protected get ui(): UiIdItem {return this._ui as UiIdItem};\r\n    @observable protected value:number;\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}    \r\n\r\n    protected onClick = async () => {\r\n        let pickId = this.ui && this.ui.pickId;\r\n        if (pickId === undefined) {\r\n            alert('no pickId defined!');\r\n            return;\r\n        }\r\n        let id = await pickId(this.context, this.name, this.value);        \r\n        this.setDataValue(id);\r\n        this.clearError();\r\n        this.clearContextError();\r\n        this.checkRules();\r\n    }\r\n\r\n    render() {\r\n        let placeholder:string|JSX.Element, Templet: TempletType;\r\n        if (this.ui !== undefined) {\r\n            placeholder = this.ui.placeholder;\r\n            Templet = this.ui.Templet;\r\n        }\r\n        let cn:any = {\r\n            'form-control': true,\r\n            'required-item': this.itemSchema.required === true,\r\n            'cursor-pointer': true,\r\n            'is-invalid': this.hasError,\r\n        };\r\n        let content;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = placeholder || 'placeholder';\r\n            cn['text-muted'] = true;\r\n        }\r\n        else if (Templet === undefined) {\r\n            content = <>{this.value}</>;\r\n        }\r\n        else if (typeof Templet === 'function') {\r\n            content = Templet(this.value);\r\n        }\r\n        else {\r\n            content = Templet;\r\n        }\r\n        return <>\r\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DataType } from '../../schema';\r\nimport { UiType } from '../../schema';\r\n\r\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\r\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\r\n};\r\n","import * as React from 'react';\r\nimport { UiButton, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { Widget } from './widget';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class ButtonWidget extends Widget {\r\n    protected get ui(): UiButton {return this._ui as UiButton};\r\n\r\n    protected onClick = async () => {\r\n        this.clearError();\r\n        this.clearContextError();\r\n        let {name, type} = this.itemSchema;\r\n        if (type === 'submit') {\r\n            await this.context.submit(name);\r\n        }\r\n        /*\r\n        let {onButtonClick} = this.context.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${name} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(name, this.context);\r\n        if (ret === undefined) return;\r\n        this.context.setError(name, ret);\r\n        */\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let {name, type} = this.itemSchema;\r\n        let Templet:TempletType, cn:string, caption:string;\r\n        if (this.ui !== undefined) {\r\n            let {widget:widgetType} = this.ui;\r\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\r\n            Templet = this.ui.Templet;\r\n            cn = this.ui.className;\r\n            caption = this.ui.label;\r\n        }\r\n        let {form, hasError} = this.context;\r\n        let context = this.context;\r\n        let disabled = type==='submit' && hasError;\r\n        let content:any;\r\n        if (this.children !== undefined) content = this.children;\r\n        else if (typeof Templet === 'function') content = Templet();\r\n        else if (Templet !== undefined) content = Templet;\r\n        else content = caption; \r\n        let button = <button \r\n            className={cn} \r\n            type=\"button\"\r\n            disabled={disabled}\r\n            onClick={this.onClick}>\r\n            {content || name}\r\n        </button>;\r\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\r\n        return <div className={form.ButtonClass}>\r\n            <div>{this.renderErrors()}</div>\r\n            {button}\r\n        </div>;\r\n    });\r\n    \r\n    protected get label():string {return null}\r\n\r\n    render() {\r\n        return <this.observerRender />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Form } from './form';\r\nimport { UiSchema, UiArr, UiItem } from '../schema';\r\nimport { ArrSchema, ItemSchema } from '../schema';\r\nimport { Widget } from './widgets/widget';\r\n//import { ArrRow } from './arrRow';\r\nimport { observable, computed } from 'mobx';\r\nimport { ContextRule } from './rules';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Context {\r\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\r\n    readonly form: Form;\r\n    readonly uiSchema: UiSchema;\r\n    readonly initData: any;\r\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\r\n    readonly widgets: {[name:string]: Widget} = {};\r\n    readonly rules: ContextRule[];\r\n    readonly isRow: boolean;\r\n    @observable errors: string[] = [];\r\n    @observable errorWidgets:Widget[] = [];\r\n\r\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\r\n        this.form = form;\r\n        this.uiSchema = uiSchema;\r\n        this.initData = data;\r\n        this.inNode = inNode;\r\n        this.isRow = isRow;\r\n        if (uiSchema !== undefined) {\r\n            let {rules} = uiSchema;\r\n            if (rules !== undefined) {\r\n                this.rules = [];\r\n                if (Array.isArray(rules) === false)\r\n                    this.rules.push(rules as ContextRule);\r\n                else\r\n                    this.rules.push(...rules as ContextRule[]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getArrRowContexts(arrName: string) {\r\n        if (this.subContexts === undefined) this.subContexts = {};\r\n        let arrRowContexts = this.subContexts[arrName];\r\n        if (arrRowContexts === undefined) this.subContexts[arrName] = arrRowContexts = {};\r\n        return arrRowContexts;\r\n    }\r\n\r\n    abstract get data():any;\r\n    abstract getItemSchema(itemName:string):ItemSchema;\r\n    abstract getUiItem(itemName:string):UiItem;\r\n    get arrName():string {return undefined}\r\n    getValue(itemName:string):any {return this.initData[itemName]}\r\n    setValue(itemName:string, value:any) {\r\n        this.initData[itemName] = value;\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setValue(value);\r\n    }\r\n    getDisabled(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) return widget.getDisabled();\r\n        return undefined;\r\n    }\r\n    setDisabled(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setDisabled(value);\r\n    }\r\n    getReadOnly(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getReadOnly();\r\n        return undefined;\r\n    }\r\n    setReadOnly(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setReadOnly(value);\r\n    }\r\n    getVisible(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getVisible();\r\n        return undefined;\r\n    }\r\n    setVisible(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setVisible(value);\r\n    }\r\n\r\n    async submit(buttonName: string) {\r\n        this.checkRules()\r\n        if (this.hasError === true) {\r\n            let err = '';\r\n            for (let ew of this.errorWidgets) {\r\n                err += ew.name + ':\\n' + ew.errors.join('\\n');\r\n            }\r\n            console.error(err);\r\n            return;\r\n        }\r\n        let {onButtonClick} = this.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${buttonName} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this);\r\n        if (ret === undefined) return;\r\n        this.setError(buttonName, ret);\r\n\r\n    }\r\n\r\n    checkFieldRules() {\r\n        for (let i in this.widgets) {\r\n            this.widgets[i].checkRules();\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                arrRowContexts[j].checkFieldRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    checkContextRules() {\r\n        this.clearErrors();\r\n        if (this.rules === undefined) return;\r\n        for (let rule of this.rules) {\r\n            let ret = rule(this);\r\n            if (ret === undefined) continue;\r\n            if (Array.isArray(ret) === true) {\r\n                this.errors.push(...ret as string[]);\r\n            }\r\n            else if (typeof ret === 'string') {\r\n                this.errors.push(ret as string);\r\n            }\r\n            else {\r\n                for (let i in ret as object) this.setError(i, (ret as any)[i]);\r\n            }\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                let rowContext = arrRowContexts[j];\r\n                rowContext.clearErrors();\r\n                rowContext.checkContextRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    setError(itemName:string, error:string) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget === undefined) return;\r\n        widget.setContextError(error);\r\n        this.addErrorWidget(widget);\r\n    }\r\n\r\n    clearContextErrors() {\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearContextError();\r\n        }\r\n    }\r\n\r\n    clearWidgetsErrors() {\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearError();\r\n        }\r\n    }\r\n\r\n    checkRules() {\r\n        this.clearErrors();\r\n        this.clearWidgetsErrors();\r\n        this.checkFieldRules();\r\n        if (this.hasError === true) return;\r\n        this.checkContextRules();\r\n    }\r\n\r\n    addErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos < 0) this.errorWidgets.push(widget);\r\n    }\r\n    removeErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\r\n    }\r\n\r\n    protected checkHasError():boolean {\r\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\r\n        if (ret === true) return true;\r\n        if (this.subContexts === undefined) return false;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                if (arrRowContexts[j].hasError === true) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        return this.checkHasError();\r\n    };\r\n\r\n    clearErrors() {\r\n        this.errors.splice(0);\r\n        this.errorWidgets.splice(0);\r\n        this.clearContextErrors();\r\n    }\r\n\r\n    renderErrors = observer((): JSX.Element => {\r\n        let {errors} = this;\r\n        if (errors.length === 0) return null;\r\n        return <>\r\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\r\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\r\n            </span>)}\r\n        </>\r\n    });\r\n}\r\n\r\nlet rowKeySeed:number = 1;\r\nexport class RowContext extends Context {\r\n    readonly parentContext: Context;\r\n    readonly arrSchema: ArrSchema;\r\n    readonly uiSchema: UiArr;\r\n    //readonly row: ArrRow;\r\n    readonly rowKey: number;\r\n    readonly data: any;\r\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\r\n        let uiArr:UiArr;\r\n        let {uiSchema} = parentContext;\r\n        if (uiSchema !== undefined) {\r\n            let {items} = uiSchema;\r\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\r\n        }\r\n        super(parentContext.form, uiArr, data, inNode, true);\r\n        this.parentContext = parentContext;\r\n        this.arrSchema = arrSchema;\r\n        this.rowKey = rowKeySeed++;\r\n        this.data = data;\r\n    }\r\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        if (this.uiSchema === undefined) return undefined;\r\n        let {items} = this.uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n    get arrName():string {return this.arrSchema.name}\r\n    clearErrors() {\r\n        super.clearErrors();\r\n        this.parentContext.clearErrors();\r\n    }\r\n\r\n    get parentData():any {return this.parentContext.data;}\r\n}\r\n\r\nexport class FormContext extends Context {\r\n    constructor(form:Form, inNode:boolean) {\r\n        super(form, form.uiSchema, form.data, inNode, false);\r\n    }\r\n    get data():any {return this.form.data}\r\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        let {uiSchema} = this.form;\r\n        if (uiSchema === undefined) return undefined;\r\n        let {items} = uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName];\r\n    }\r\n}\r\n\r\nexport const ContextContainer = React.createContext<Context>({} as any);\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\n//import { ArrRow } from '../arrRow';\r\nimport { Context, RowContext, ContextContainer } from '../context';\r\nimport { ArrSchema } from '../../schema';\r\nimport { UiArr, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { factory } from './factory';\r\n\r\nexport const ArrComponent = observer((\r\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \r\n{\r\n    let {name, arr} = arrSchema;\r\n    let data = parentContext.initData[name] as any[];\r\n    let {form} = parentContext;\r\n    let arrRowContexts = parentContext.getArrRowContexts(name);\r\n    let ui = parentContext.getUiItem(name) as UiArr;\r\n    let arrLabel = name;\r\n    let Templet:TempletType;\r\n    let selectable:boolean, deletable:boolean, restorable:boolean;\r\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\r\n    if (uiSchema !== undefined) {\r\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\r\n        if (selectable !== true) selectable = formSelectable;\r\n        if (deletable !== true) deletable = formDeletable;\r\n        if (restorable !== true) restorable = formRestorable;\r\n    }\r\n    if (ui !== undefined) {\r\n        let {widget:widgetType, label, \r\n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\r\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\r\n        } = ui;\r\n        if (arrSelectable !== undefined) selectable = arrSelectable;\r\n        if (arrDeletable !== undefined) deletable = arrDeletable;\r\n        if (arrRestorable !== undefined) restorable = arrRestorable;\r\n        if (ac !== undefined) ArrContainer = ac;\r\n        if (rc !== undefined) RowContainer = rc;\r\n        if (rs !== undefined) RowSeperator = rs;\r\n        Templet = ui.Templet;\r\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\r\n        arrLabel = label || arrLabel;\r\n    }\r\n    let first = true;\r\n    return ArrContainer(arrLabel, <>\r\n        {data.map((row:any, index) => {\r\n            let rowContext: RowContext;\r\n            let rowContent: JSX.Element;\r\n            let sep = undefined;\r\n            if (first === false) sep = RowSeperator;\r\n            else first = false;\r\n            if (children !== undefined) {\r\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                rowContent = <>{children}</>;\r\n            }\r\n            else {\r\n                let typeofTemplet = typeof Templet;\r\n                if (typeofTemplet === 'function') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\r\n                }\r\n                else if (typeofTemplet === 'object') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = Templet as JSX.Element;\r\n                }\r\n                else {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\r\n                    rowContent = <>{\r\n                        arr.map((v, index) => {\r\n                            return <React.Fragment key={v.name}>\r\n                                {factory(rowContext, v, undefined)}\r\n                            </React.Fragment>\r\n                        })}\r\n                    </>;\r\n                }\r\n            }\r\n            let {rowKey} = rowContext;\r\n            arrRowContexts[rowKey] = rowContext;\r\n\r\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\r\n            if (selectable === true) {\r\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\r\n                    let {checked} = (evt.target as HTMLInputElement);\r\n                    row.$isSelected = checked;\r\n                    let {$source} = row;\r\n                    if ($source !== undefined) $source.$isSelected = checked;\r\n                    rowContext.clearErrors();\r\n                }\r\n                selectCheck = <div className=\"form-row-checkbox\">\r\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\r\n                </div>;\r\n            }\r\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\r\n            if (deletable === true) {\r\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\r\n                let onDelClick = () => {\r\n                    if (restorable === true) {\r\n                        row.$isDeleted = !isDeleted;\r\n                        let {$source} = row;\r\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\r\n                    }\r\n                    else {\r\n                        let p = data.indexOf(row);\r\n                        if (p>=0) data.splice(p, 1);\r\n                    }\r\n                    rowContext.clearErrors();\r\n                }\r\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\r\n                    <i className={classNames('fa', icon, 'fa-fw')} />\r\n                </div>;\r\n            }\r\n            let editContainer = selectable===true || deletable===true?\r\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\r\n                    {selectCheck}\r\n                    <div className={selectable===true && deletable===true? \"form-row-content\":\"form-row-content-1\"}>{content}</div>\r\n                    {deleteIcon}\r\n                </div></fieldset>\r\n                :\r\n                (content:any) => content;\r\n\r\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\r\n                {sep}\r\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\r\n            </ContextContainer.Provider>;\r\n        })}\r\n    </>);\r\n});\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiImageItem } from '../../schema';\r\nimport { Image } from '../../image';\r\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class ImageWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected get ui(): UiImageItem {return this._ui as UiImageItem};\r\n    @observable private imageSrc: string;\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.imageSrc = this.value;\r\n    }\r\n\r\n    protected onClick = async () => {\r\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\r\n        let ret = await edit.start();\r\n        if (ret !== null) {\r\n            this.setValue(ret);\r\n            this.imageSrc = ret;\r\n        }\r\n        await edit.end();\r\n    }\r\n\r\n    render() {\r\n        return <this.observerRender />;\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let cn = [\r\n            'bg-white p-1 d-flex justify-content-center',\r\n        ];\r\n        let onClick: any;\r\n        if (!this.readOnly && !this.disabled) {\r\n            cn.push('cursor-pointer');\r\n            onClick = this.onClick;\r\n        }\r\n        return <div className={classNames(cn)} onClick={onClick}>\r\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\r\n        </div>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { ArrSchema, DataType, ItemSchema } from '../../schema';\r\nimport { TypeWidget, UiCustom } from '../../schema';\r\nimport { TextWidget } from './textWidget';\r\nimport { TextAreaWidget } from './textareaWidget';\r\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nimport { UpdownWidget } from './updownWidget';\r\nimport { NumberWidget } from './numberWidget';\r\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nimport { CheckBoxWidget } from './checkBoxWidget';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { SelectWidget } from './selectWidget';\r\nimport { RadioWidget } from './radioWidget';\r\nimport { RangeWidget } from './rangeWidget';\r\nimport { IdWidget } from './idWidget';\r\nimport { ButtonWidget } from './buttonWidget';\r\nimport { ArrComponent } from './arrComponent';\r\nimport { ImageWidget } from './imageWidget';\r\n\r\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\r\n    id: {\r\n        dataTypes: ['id'],\r\n        widget: IdWidget,\r\n    },\r\n    text: {\r\n        dataTypes: ['integer', 'number', 'string'],\r\n        widget: TextWidget\r\n    },\r\n    textarea: {\r\n        dataTypes: ['string'],\r\n        widget: TextAreaWidget\r\n    },\r\n    password: {\r\n        dataTypes: ['string'],\r\n        widget: PasswordWidget\r\n    },\r\n    date: {\r\n        dataTypes: ['date'],\r\n        widget: DateWidget\r\n    },\r\n    datetime: {\r\n        dataTypes: ['date'],\r\n        widget: DateTimeWidget\r\n    },\r\n    time: {\r\n        dataTypes: ['date'],\r\n        widget: TimeWidget\r\n    },\r\n    month: {\r\n        dataTypes: ['date'],\r\n        widget: MonthWidget\r\n    },\r\n    select: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: SelectWidget\r\n    },\r\n    url: {\r\n        dataTypes: ['string'],\r\n        widget: UrlWidget\r\n    },\r\n    email: {\r\n        dataTypes: ['string'],\r\n        widget: EmailWidget\r\n    },\r\n    number: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: NumberWidget\r\n    },\r\n    updown: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: UpdownWidget\r\n    },\r\n    color: {\r\n\r\n    },\r\n    checkbox: {\r\n        dataTypes: ['boolean', 'integer', 'number'],\r\n        widget: CheckBoxWidget\r\n    },\r\n    image: {\r\n        dataTypes: ['string'],\r\n        widget: ImageWidget,\r\n    },\r\n    checkboxes: {\r\n\r\n    },\r\n    radio: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: RadioWidget\r\n    },\r\n    range: {\r\n        dataTypes: ['integer'],\r\n        widget: RangeWidget,\r\n    },\r\n    button: {\r\n        dataTypes: ['button', 'submit'],\r\n        widget: ButtonWidget,\r\n    }\r\n}\r\n\r\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\r\n    if (context === undefined) {\r\n        debugger;\r\n        return null;\r\n    }\r\n    if (itemSchema === undefined) return undefined;\r\n    let {name, type} = itemSchema;\r\n    switch (type) {\r\n    case 'arr':\r\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\r\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\r\n    default:\r\n        break;\r\n    }\r\n\r\n    let typeWidget: TypeWidget;\r\n    let ui = context.getUiItem(name);\r\n    function getTypeWidget(t:DataType): TypeWidget {\r\n        switch(t) {\r\n        default: return TextWidget; \r\n        case 'id': return IdWidget;\r\n        case 'integer': return UpdownWidget;\r\n        case 'number': return NumberWidget; \r\n        case 'string': return TextWidget; \r\n        case 'date': return DateWidget; \r\n        case 'boolean': return CheckBoxWidget; \r\n        case 'button':\r\n        case 'submit': return ButtonWidget;\r\n        }\r\n    }\r\n    if (ui === undefined) { \r\n        typeWidget = getTypeWidget(type);\r\n    }\r\n    else {\r\n        let {widget:widgetType} = ui;\r\n        switch (widgetType) {\r\n        default:\r\n            if (widgetType !== undefined) {\r\n                let widgetFactory = widgetsFactory[widgetType];\r\n                typeWidget = widgetFactory.widget;\r\n            }\r\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\r\n            break;\r\n        case 'custom':\r\n            typeWidget = (ui as UiCustom).WidgetClass;\r\n            break;\r\n        case 'group':\r\n            return <span>impletment group</span>;\r\n        }\r\n        //label = uiLabel || name;\r\n    }\r\n    \r\n    let {widgets} = context;\r\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\r\n    widgets[name] = widget;\r\n\r\n    return <widget.container />;\r\n    /*\r\n    if (isRow === false) {\r\n        let WidgetElement = observer(() => widget.container());\r\n        return <WidgetElement />;\r\n    }\r\n    else {\r\n        let widgetElement = widget.container();\r\n        return widgetElement;\r\n    }\r\n    */\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextAreaItem } from '../../schema';\r\nimport { StringSchema } from '../../schema';\r\n\r\nexport class TextAreaWidget extends Widget {\r\n    protected get itemSchema(): StringSchema {return this._itemSchema as StringSchema};\r\n    protected input: HTMLTextAreaElement;\r\n    protected get ui(): UiTextAreaItem {return this._ui as UiTextAreaItem};\r\n\r\n    protected setElementValue(value:any) {this.input.value = value}\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn:any = {};\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <>\r\n            <textarea ref={(input) => this.input=input} \r\n                className={classNames(this.className, cn)}\r\n                rows={this.ui && this.ui.rows}\r\n                maxLength={this.itemSchema.maxLength}\r\n                defaultValue={this.defaultValue} onChange={this.onInputChange} />\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","//import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class PasswordWidget extends TextWidget {\r\n    protected inputType = 'password';\r\n}\r\n\r\nexport class UrlWidget extends TextWidget {\r\n    protected inputType = 'url';\r\n}\r\n\r\nexport class EmailWidget extends TextWidget {\r\n    protected inputType = 'email';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiRange } from '../../schema';\r\nimport { Widget } from './widget';\r\n\r\nexport class RangeWidget extends Widget {\r\n    protected inputType = 'range';\r\n    protected input: HTMLInputElement;\r\n    protected get ui(): UiRange {return this._ui as UiRange};\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let {min, max, step} = this.ui;\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\r\n            type={this.inputType}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            max={max}\r\n            min={min}\r\n            step={step}\r\n            />\r\n        </>;\r\n    }\r\n}\r\n","//import _ from 'lodash';\r\nimport { KeyValueRes, Res } from '../res';\r\n\r\nexport interface FormRes extends KeyValueRes {\r\n    required: string;\r\n    number: string;\r\n    integer: string;\r\n    min: string;\r\n    max: string;\r\n}\r\n\r\n/*eslint no-template-curly-in-string: 0*/\r\nexport const formRes:Res<FormRes> = {\r\n    _: {\r\n        required: 'required',\r\n        number: 'not valid number',\r\n        integer: 'not valid integer',\r\n        min: 'min value is ${min}',\r\n        max: 'max value is ${max}',\r\n    },\r\n    zh: {\r\n        _: {\r\n            required: '必须填',\r\n            number: '需要数字',\r\n            integer: '需要整数',\r\n            min: '不能小于${min}',\r\n            max: '不能大于${max}',\r\n        }\r\n    },\r\n}\r\n","import * as React from 'react';\r\nimport {observable, IReactionDisposer, autorun} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\r\nimport { UiSchema, TempletType } from '../schema';\r\nimport { factory } from './widgets';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { ContextContainer, FormContext, Context } from './context';\r\nimport { FormRes, formRes } from './formRes';\r\nimport { resLang } from '../res';\r\n\r\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\r\nexport type InputEnter = (name:string, context: Context) => Promise<any>;\r\n\r\nexport interface FormProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    uiSchema?: UiSchema;\r\n    formData?: any;\r\n    onButtonClick?: FormButtonClick;\r\n    onEnter?: InputEnter;\r\n    fieldLabelSize?: number;            // col-sm-2 for label\r\n    requiredFlag?: boolean;             // default=true\r\n    beforeShow?: (formContext:FormContext) => void;\r\n    res?: FormRes;\r\n\r\n    Container?: (content:JSX.Element) => JSX.Element;\r\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\r\n    FieldClass?: string;\r\n    ButtonClass?: string;\r\n}\r\n\r\nexport class Form extends React.Component<FormProps> {\r\n    readonly schema: Schema;\r\n    readonly itemSchemas: {[name:string]: ItemSchema};\r\n    readonly uiSchema: UiSchema;\r\n    readonly res?: FormRes;\r\n    protected formContext: FormContext;\r\n    //private content: any;\r\n    //private formData: any;\r\n    private disposer: IReactionDisposer;\r\n    //@observable \r\n    readonly data:any;\r\n\r\n    readonly Container: (content:JSX.Element) => JSX.Element;\r\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    readonly FieldClass: string;\r\n    readonly ButtonClass: string;\r\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\r\n    //readonly RowSeperator: JSX.Element;\r\n\r\n    constructor(props:FormProps) {\r\n        super(props);\r\n        let {schema, uiSchema, \r\n            Container, FieldContainer, FieldClass, \r\n            ButtonClass, res,\r\n        } = props;\r\n        this.Container = Container || this.DefaultContainer;\r\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\r\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\r\n        this.res = res || this.DefaultRes;\r\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\r\n\r\n        this.schema = schema;\r\n        this.itemSchemas = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.itemSchemas[itemSchema.name] = itemSchema;\r\n        }\r\n        this.uiSchema = uiSchema;\r\n\r\n        //this.formData = formData;\r\n        this.disposer = autorun(this.watch);\r\n        this.data = {};\r\n        // this.initRender();\r\n    }\r\n\r\n    private renderContent():any {\r\n        this.initData(this.props.formData);\r\n        let {children} = this.props;\r\n        if (children !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return <>{children}</>;\r\n        }\r\n\r\n        let Templet: TempletType;\r\n        if (this.uiSchema !== undefined) {\r\n            Templet = this.uiSchema.Templet;\r\n        }\r\n        if (Templet !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return typeof(Templet) === 'function'? Templet(this.data) : Templet;\r\n        }\r\n\r\n        this.formContext = new FormContext(this, false);\r\n        return <>{this.schema.map((v, index) => {\r\n            return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\r\n        })}</>;\r\n    }\r\n\r\n    private initData(formData: any) {\r\n        if (formData === undefined) formData = {};\r\n        if (this.uiSchema !== undefined) {\r\n            let {items} = this.uiSchema;\r\n            if (items !== undefined) {\r\n                for (let i in items) {\r\n                    let ui = items[i];\r\n                    let dv = ui.defaultValue;\r\n                    if (dv !== undefined) {\r\n                        if (formData[i] === undefined) {\r\n                            formData[i] = dv;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let itemSchema of this.schema) {\r\n            this.initDataItem(itemSchema, this.data, formData);\r\n        }\r\n    }\r\n\r\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\r\n        let {name, type} = itemSchema;\r\n        if (type === 'button') return;\r\n        if (type !== 'arr') {\r\n            data[name] = formData[name];\r\n            return;\r\n        }\r\n\r\n        let arrItem:ArrSchema = itemSchema as ArrSchema;\r\n        let {arr:arrItems} = arrItem;\r\n        if (arrItems === undefined) return;\r\n        let arrDict:any = arrItem.itemSchemas = {};\r\n        for (let item of arrItems) {\r\n            arrDict[item.name] = item;\r\n        }\r\n        let val:any[] = formData[name];\r\n        if (val === undefined) val = [];\r\n        else if (Array.isArray(val) === false) val = [val];\r\n        let arr:any[] = [];\r\n        for (let row of val) {\r\n            let {$isSelected, $isDeleted} = row;\r\n            let r = {\r\n                $source: row,\r\n                $isSelected: $isSelected,\r\n                $isDeleted: $isDeleted,\r\n            };\r\n            for (let item of arrItems) {\r\n                this.initDataItem(item, r, row);\r\n                /*\r\n                let {name:nm} = item;\r\n                let v = row[nm];\r\n                if (v === undefined) v = null;\r\n                r[nm] = v;\r\n                */\r\n            }\r\n            arr.push(r);\r\n        }\r\n        // 如果没有observable，行删除标志点击不管用\r\n        // 不知道这里为什么要去掉observable。有可能会有别的问题\r\n        data[name] = observable(arr);\r\n        //data[name] = arr;\r\n        return;\r\n    }\r\n\r\n    private watch = () => {\r\n        let {formData} = this.props;\r\n        if (formData === undefined) return;\r\n        //this.initData(formData);\r\n        this.calcSelectOrDelete();\r\n    }\r\n    private calcSelectOrDelete() {\r\n        for (let itemSchema of this.schema) {\r\n            this.arrItemOperated(itemSchema);\r\n        }\r\n    }\r\n\r\n    private arrItemOperated(itemSchema: ItemSchema) {\r\n        let {name, type} = itemSchema;\r\n        if (type !== 'arr') return;\r\n        if (this.data === undefined) return;\r\n        let formArrVal = this.data[name];\r\n        if (formArrVal === undefined) return;\r\n        let {arr: arrItems} = itemSchema as ArrSchema;\r\n        for (let row of formArrVal) {\r\n            let {$source} = row;\r\n            if ($source === undefined) continue;\r\n            let {$isSelected, $isDeleted} = $source;\r\n            row.$isSelected = $isSelected;\r\n            row.$isDeleted = $isDeleted;\r\n            //console.log($isSelected, $isDeleted);\r\n            for (let item of arrItems) {\r\n                this.arrItemOperated(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {beforeShow} = this.props;\r\n        if (beforeShow !== undefined) beforeShow(this.formContext);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.disposer !== undefined) this.disposer();\r\n    }\r\n\r\n    render() {\r\n        let content = this.renderContent();\r\n        return <ContextContainer.Provider value={this.formContext}>\r\n            <this.formContext.renderErrors />\r\n            {this.Container(content)}\r\n        </ContextContainer.Provider>;\r\n    }\r\n\r\n    async buttonClick(buttonName:string) {\r\n        this.formContext.checkRules()\r\n        if (this.formContext.hasError === true) return;\r\n\r\n        let {onButtonClick} = this.formContext.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this.formContext);\r\n        if (ret === undefined) return;\r\n        this.formContext.setError(buttonName, ret);\r\n    }\r\n\r\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\r\n        return <form className={classNames(this.props.className)} onSubmit={e=>e.preventDefault()}>\r\n            {content}\r\n        </form>;\r\n    }\r\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\r\n        let {fieldLabelSize} = this.props;\r\n\r\n        if (fieldLabelSize > 0) {\r\n            let labelView:any;\r\n            if (label === null) {\r\n                fieldLabelSize = 0;\r\n            }\r\n            else {\r\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\r\n            }\r\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\r\n            return <div className=\"form-group row\">\r\n                {labelView}\r\n                <div className={fieldCol}>{content}</div>\r\n            </div>;\r\n        }\r\n        return <div className=\"form-group\">\r\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\r\n            {content}\r\n        </div>;\r\n    }\r\n    protected DefaultFieldClass:string = undefined;\r\n    protected DefaultButtonClass = 'text-center py-2';\r\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\r\n\r\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\r\n        return <div>\r\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\r\n            {content}\r\n        </div>;\r\n    }\r\n    RowContainer = (content:JSX.Element): JSX.Element => {\r\n        let cn = classNames({\r\n            'py-3': true\r\n        });\r\n        return <div className={cn}>{content}</div>\r\n    }\r\n    RowSeperator = <div className=\"border border-gray border-top\" />;\r\n}\r\n","import * as React from 'react';\r\nimport { factory } from './widgets';\r\nimport { ContextContainer, Context } from './context';\r\n\r\nexport interface FieldProps {\r\n    name: string;\r\n}\r\n\r\nexport class FormField extends React.Component<FieldProps> {\r\n    static contextType = ContextContainer;\r\n    render() {\r\n        let {name, children } = this.props;\r\n        let context:Context = this.context;\r\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\r\n        let itemSchema = context.getItemSchema(name);\r\n        let content = factory(context, itemSchema, children, this.props);\r\n        if (content === undefined) {\r\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\r\n        }\r\n        return content;\r\n    }\r\n}\r\n","export {Form} from './form';\r\nexport {FormField} from './field';\r\nexport {Context, RowContext} from './context';\r\nexport * from './widgets';\r\n","import * as React from 'react';\r\nimport { UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class StringItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.newValue = evt.target.value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue !== preValue);\r\n    }\r\n\r\n    private onBlur = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.verifyValue();\r\n    }\r\n\r\n    private onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success align-self-center\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>{\r\n                this.verifyValue();\r\n                if (this.error === undefined) resolve(this.newValue);\r\n            }}>保存</button>;\r\n        return <Page header={this.label} right={right}>\r\n            <div className=\"m-3\">\r\n                <input type=\"text\" \r\n                    onChange={this.onChange}\r\n                    onBlur={this.onBlur}\r\n                    onFocus={this.onFocus}\r\n                    className=\"form-control\" \r\n                    defaultValue={this.value} />\r\n                {\r\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\r\n                }\r\n                {this.error && <div className=\"text-danger\">{this.error}</div>}\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { ItemSchema, UiRadio } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class RadioItemEdit extends ItemEdit {\r\n    protected uiItem: UiRadio;\r\n\r\n    constructor(itemSchema: ItemSchema, uiItem:UiRadio, label:string, value: any) {\r\n        super(itemSchema, uiItem, label, value);\r\n        if (this.value === undefined) {\r\n            this.value = uiItem.defaultValue;\r\n        }\r\n    }\r\n\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (value: any) => {\r\n        this.newValue = value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue !== preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let {name} = this.itemSchema;\r\n        let {list} = this.uiItem;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success align-self-center\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>{\r\n                this.verifyValue();\r\n                if (this.error === undefined) resolve(this.newValue);\r\n            }}>保存</button>;\r\n        let content = list?\r\n            list.map((v, index:number) => {\r\n                let {title, value} = v;\r\n                return <label key={index} className=\"px-3 py-2 cursor-pointer\">\r\n                    <input name={name} type=\"radio\" value={value} \r\n                        onClick={()=>this.onChange(value)} \r\n                        defaultChecked={value === this.value} /> {title || value} &nbsp;\r\n                </label>;\r\n            })\r\n            :\r\n            <>no list defined</>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">{content}</div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { UiSelect } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class SelectItemEdit extends ItemEdit {\r\n    protected uiItem: UiSelect;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (value:any) => {\r\n        this.newValue = value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue !== preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let {list} = this.uiItem;\r\n        let content = list?\r\n            list.map((v, index:number) => {\r\n                let {title, value} = v;\r\n                return <div key={index} className=\"px-3 py-2 cursor-pointer bg-white mb-1\" onClick={()=>{this.onChange(value); resolve(this.newValue)}}>\r\n                    {title || value}\r\n                </div>;\r\n            })\r\n            :\r\n            <>no list defined</>;\r\n        return <Page header={'更改' + this.label}>\r\n            <div className=\"my-3\">\r\n                {content}\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { UiIdItem } from '../schema';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class IdItemEdit extends ItemEdit {\r\n    protected uiItem: UiIdItem;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>(async (resolve, reject) => {\r\n            //let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            //nav.push(element,reject);\r\n\r\n            let {pickId} = this.uiItem;\r\n            if (pickId === undefined) {\r\n                alert('IdItemEdit.pickId = undefined');\r\n                return;\r\n            }\r\n            let boxId = await pickId(undefined, undefined, this.value);\r\n            //if (typeof id === 'object') {\r\n            //    id = (id as any).id;\r\n            //}\r\n            this.onChange(boxId.id);\r\n            resolve(boxId);\r\n            //this.newValue = id;\r\n        });\r\n    }\r\n\r\n    protected async internalEnd():Promise<void> {}\r\n\r\n    private onChange = (value:any) => {\r\n        this.newValue = value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue !== preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        /*\r\n        let {resolve, reject} = props;\r\n        let {list} = this.uiItem;\r\n        let content = list?\r\n            list.map((v, index:number) => {\r\n                let {title, value} = v;\r\n                return <div key={index} className=\"px-3 py-2 cursor-pointer bg-white mb-1\" onClick={()=>{this.onChange(value); resolve(this.newValue)}}>\r\n                    {title || value}\r\n                </div>;\r\n            })\r\n            :\r\n            <>no list defined</>;\r\n        return <Page header={'更改' + this.label}>\r\n            <div className=\"my-3\">\r\n                {content}\r\n            </div>\r\n        </Page>;\r\n        */\r\n        return <Page header={'更改' + this.label}>\r\n            ddd\r\n        </Page>\r\n    })\r\n}\r\n","import * as React from 'react';\r\n//import _ from 'lodash';\r\nimport { observer } from 'mobx-react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiSelectBase, UiRadio } from '../schema';\r\nimport { ItemEdit } from './itemEdit';\r\nimport { StringItemEdit } from './stringItemEdit';\r\nimport { ImageItemEdit } from './imageItemEdit';\r\nimport { Image } from '../image';\r\nimport { RadioItemEdit } from './radioItemEdit';\r\nimport { SelectItemEdit } from './selectItemEdit';\r\nimport { IdItemEdit } from './idItemEdit';\r\n\r\nexport interface EditProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    data: any;\r\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\r\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\r\n    stopEdit?: boolean;\r\n    uiSchema?: UiSchema;\r\n    sepClassName?: string;\r\n    topBorderClassName?: string;\r\n    bottomBorderClassName?: string;\r\n    rowContainerClassName?: string;\r\n}\r\n\r\n@observer\r\nexport class Edit extends React.Component<EditProps> {\r\n    private defaultSepClassName = 'border-top edit-sep-light-gray';\r\n    private defaultRowContainerClassName = 'd-flex px-3 py-2 bg-white align-items-center';\r\n    private topBorder:JSX.Element;\r\n    private bottomBorder:JSX.Element;\r\n    private rowContainerClassName?: string;\r\n    private sep:JSX.Element;\r\n    private uiSchema: {[name:string]: UiItem};\r\n\r\n    constructor(props: EditProps) {\r\n        super(props);\r\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema, stopEdit} = props;\r\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\r\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\r\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\r\n        if (stopEdit !== true) this.rowContainerClassName += ' cursor-pointer';\r\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\r\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\r\n    }\r\n\r\n    render() {\r\n        let elItems:JSX.Element[] = [];\r\n        let {schema} = this.props;\r\n        let len = schema.length;\r\n\r\n        elItems.push(this.topBorder);\r\n        for (let i=0; i<len; i++) {\r\n            let itemSchema = schema[i];\r\n            if (i>0) elItems.push(this.sep);\r\n            let value = this.props.data[itemSchema.name];\r\n            elItems.push(this.renderRow(itemSchema, value));\r\n        }\r\n        elItems.push(this.bottomBorder);\r\n\r\n        return <div>\r\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\r\n        </div>;\r\n    }\r\n\r\n    private renderRow = (itemSchema: ItemSchema, value:any):JSX.Element => {\r\n        let {name, type, required} = itemSchema;\r\n        let divValue:any;\r\n        let uiItem = this.uiSchema[name];\r\n        let label:string;\r\n        if (uiItem === undefined) {\r\n            label = name;\r\n        }\r\n        else {\r\n            label = uiItem.label;\r\n            let templet = uiItem.Templet;\r\n            if (templet !== undefined) {\r\n                if (typeof templet === 'function')\r\n                    divValue = <b>{templet(value)}</b>;\r\n                else\r\n                    divValue = <b>{templet}</b>;\r\n            }\r\n            else if (value !== undefined) {\r\n                switch (uiItem.widget) {\r\n                    case 'radio':\r\n                    case 'select':\r\n                        let {list} = uiItem as UiSelectBase;\r\n                        divValue = <b>{list.find(v => v.value === value).title}</b>;\r\n                        break;\r\n                    case 'id':\r\n                        divValue = <b>no templet for {name}={value}</b>\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        //let value:any = this.props.data[name];\r\n        /*\r\n        if (uiItem !== undefined && value) {\r\n            switch (uiItem.widget) {\r\n                case 'radio':\r\n                case 'select':\r\n                    let {list} = uiItem as UiSelectBase;\r\n                    divValue = <b>{list.find(v => v.value === value).title}</b>;\r\n                    break;\r\n                case 'id':\r\n                    divValue = <b>no templet for {name}={value}</b>\r\n                    break;\r\n            }\r\n        }\r\n        */\r\n        if (divValue === undefined) {\r\n            switch (type) {\r\n                default:\r\n                    divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\r\n                    break;\r\n                case 'image':\r\n                    divValue = <Image className=\"w-4c h-4c\" src={value} />;\r\n                    break;\r\n            }\r\n        }\r\n        let requireFlag = required===true && <span className=\"text-danger\">*</span>;\r\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\r\n            <div className=\"w-6c\">{label} {requireFlag}</div>\r\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\r\n            {this.props.stopEdit!==true && <div className=\"w-2c text-right\"><i className=\"fa fa-angle-right\" /></div>}\r\n        </div>;\r\n    };\r\n\r\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\r\n        let {onItemChanged, onItemClick, stopEdit} = this.props;\r\n        if (stopEdit === true) return;\r\n        let changeValue:any;\r\n        if (onItemClick !== undefined) {\r\n            await onItemClick(itemSchema, uiItem, value);\r\n            return;\r\n        }\r\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\r\n        if (itemEdit === undefined) {\r\n            alert('undefined: let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);');\r\n            return;\r\n        }\r\n        try {\r\n            changeValue = await itemEdit.start();\r\n            if (changeValue !== value) {\r\n                if (onItemChanged === undefined) {\r\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\r\n                    this.props.data[itemSchema.name] = changeValue;\r\n                }\r\n                else {\r\n                    await onItemChanged(itemSchema, changeValue, value);\r\n                }\r\n            }\r\n            await itemEdit.end();\r\n        }\r\n        catch (err) {\r\n            // 如果直接back，会触发reject，就到这里了\r\n            console.log('no value changed');\r\n        }\r\n    }\r\n}\r\n\r\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\r\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\r\n    if (uiItem !== undefined) {\r\n        switch (uiItem.widget) {\r\n            default: break;\r\n            case 'id': itemEdit = IdItemEdit; break;\r\n            case 'text': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n            case 'select': itemEdit = SelectItemEdit; break;\r\n            case 'radio': \r\n                return new RadioItemEdit(itemSchema, uiItem as UiRadio, label, value);\r\n        }\r\n    }\r\n    if (itemEdit === undefined) {\r\n        switch (itemSchema.type) {\r\n            case 'string': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) return;\r\n    return new itemEdit(itemSchema, uiItem, label, value);\r\n}\r\n","export * from './edit';\r\n","import {CenterApiBase} from '../net';\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","import * as React from 'react';\r\nimport { IObservableArray, computed } from 'mobx';\r\nimport { PageItems } from '../../tool/pageItems';\r\nimport {List} from './index';\r\n\r\nexport abstract class ListBase {\r\n    protected list: List;\r\n    constructor(list: List) {\r\n        this.list = list;\r\n    }\r\n    get isPaged():boolean {\r\n        let items = this.list.props.items;\r\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\r\n    }\r\n    get items():any[]|IObservableArray<any> {\r\n        let items = this.list.props.items;\r\n        if (items === null) return null;\r\n        if (items === undefined) return undefined;\r\n        if (Array.isArray(items) === true)\r\n            return items as IObservableArray<any>;\r\n        else\r\n            return (items as PageItems<any>).items;\r\n    }\r\n    @computed get loading():boolean {\r\n        let items = this.list.props.items;\r\n        if (items === null) return false;\r\n        if (items === undefined) return true;\r\n        let pageItems = items as PageItems<any>;\r\n        if (pageItems.items === undefined) return false;\r\n        return pageItems.loading;\r\n    }\r\n    get selectedItems():any[] { return undefined; }\r\n    //updateProps(nextProps:any) {}\r\n    dispose() {};\r\n    abstract render: (item:any, index:number) => JSX.Element;\r\n    protected renderContent(item:any, index:number) {\r\n        let {render} = this.list.props.item;\r\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n        return render(item, index);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {ListBase} from './base';\r\n\r\nexport class Clickable extends ListBase {\r\n    render = (item:any, index:number):JSX.Element => {\r\n        let {className, key, onClick} = this.list.props.item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick && onClick(item)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { ListBase } from './base';\r\nimport { uid } from '../../tool/uid';\r\n\r\nexport class Static extends ListBase {\r\n    render = (item:any, index:number):JSX.Element => {\r\n        let {className, key} = this.list.props.item;\r\n        if (typeof item === 'string') {\r\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\r\n            return <li key={uid()} className={cn}>{item}</li>;\r\n        }\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, IObservableArray, autorun, IReactionDisposer} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport {uid} from '../../tool/uid';\r\nimport { PageItems } from '../../tool/pageItems';\r\nimport { List } from './index';\r\n\r\nexport interface SelectableItem {\r\n    selected: boolean;\r\n    item: any;\r\n    labelId: string;\r\n}\r\n\r\nexport class Selectable extends ListBase {\r\n    @observable private _items: SelectableItem[];\r\n    //private _selectedItems: any[];\r\n    private input: HTMLInputElement;\r\n    private disposer: IReactionDisposer;\r\n\r\n    constructor(list: List) {\r\n        super(list);\r\n        this.disposer = autorun(this.buildItems);\r\n        //this.buildItems();\r\n    }\r\n    dispose() {this.disposer()};\r\n    private buildItems = () => {\r\n        console.log('buildItems in selectable.tsx');\r\n        let {items, selectedItems, compare} = this.list.props;\r\n        let itemsArray:any[] | IObservableArray<any>;\r\n        if (items === undefined) {\r\n            this._items = undefined;\r\n            return;\r\n        }\r\n        if (items === null) {\r\n            this._items = null;\r\n            return;\r\n        }\r\n        if (Array.isArray(items) === true) {\r\n            itemsArray = items as any;\r\n        }\r\n        else {\r\n            itemsArray = (items as PageItems<any>).items;\r\n        }\r\n        //let items = this.items;\r\n        //this._selectedItems = selectedItems;\r\n\r\n        let comp: ((item:any, selectItem:any)=>boolean);\r\n        if (compare === undefined) {\r\n            comp = (item:any, selectItem:any) => item === selectItem;\r\n        }\r\n        else {\r\n            comp = compare;\r\n        }\r\n        let retItems = itemsArray.map(v => {\r\n            //let isObserved = isObservable(v);\r\n            //let obj = isObserved === true? toJS(v) : v;\r\n            //let obj = v;\r\n            let selected = selectedItems === undefined?\r\n                false\r\n                : selectedItems.find(si => comp(v, si)) !== undefined;\r\n            return {\r\n                selected: selected, \r\n                item: v, \r\n                labelId:uid()\r\n            };\r\n        });\r\n        this._items = retItems;\r\n    }\r\n\r\n    get items() {\r\n        //if (this._items === undefined) \r\n        //this.buildItems();\r\n        return this._items;\r\n    }\r\n    selectAll() {\r\n        if (this._items) this._items.forEach(v => v.selected = true);\r\n    }\r\n    unselectAll() {\r\n        if (this._items) this._items.forEach(v => v.selected = false);\r\n    }\r\n    /*\r\n    updateProps(nextProps:any) {\r\n        if (nextProps.selectedItems === this._selectedItems) return;\r\n        this.buildItems();\r\n    }\r\n    */\r\n    private onSelect(item:SelectableItem, selected:boolean) {\r\n        item.selected = selected;\r\n        let anySelected = this._items.some(v => v.selected);\r\n        this.list.props.item.onSelect(item.item, selected, anySelected);\r\n    }\r\n    \r\n    get selectedItems():any[] {\r\n        return this._items.filter(v => v.selected === true).map(v => v.item);\r\n    }\r\n    /*\r\n    set selectedItems(value: any[]) {\r\n        if (value === undefined) return;\r\n        if (this._items === undefined) return;\r\n        let sLen = this._items.length;\r\n        let list = value.slice();\r\n        for (let n=0; n<sLen; n++) {\r\n            let sItem = this._items[n];\r\n            let len = list.length;\r\n            if (len === 0) break;\r\n            let item = sItem.item;\r\n            for (let i=0; i<len; i++) {\r\n                let v = list[i];\r\n                if (item === v) {\r\n                    sItem.selected = true;\r\n                    value.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    */\r\n    //w-100 mb-0 pl-3\r\n    //m-0 w-100\r\n    render = (item:SelectableItem, index:number):JSX.Element => {\r\n        let {className, key} = this.list.props.item;\r\n        let {labelId, selected, item:obItem} = item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            <div className=\"d-flex align-items-center px-3\">\r\n                <input ref={input=>{\r\n                        if (!input) return;\r\n                        this.input = input; input.checked = selected;\r\n                    }}\r\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\r\n                    defaultChecked={selected}\r\n                    onChange={(e)=>{\r\n                        this.onSelect(item, e.target.checked)} \r\n                    }/>\r\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\r\n                    {this.renderContent(obItem, index)}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    }\r\n}\r\n/*\r\n<label>\r\n<label className=\"custom-control custom-checkbox\">\r\n    <input type='checkbox' className=\"custom-control-input\"\r\n        //checked={selected}\r\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\r\n    <span className=\"custom-control-indicator\" />\r\n</label>\r\n{this.renderContent(item.item, index)}\r\n</label>\r\n*/\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {PageItems} from '../../tool/pageItems';\r\nimport {ListBase} from './base';\r\nimport {Clickable} from './clickable';\r\nimport {Static} from './static';\r\nimport {Selectable} from './selectable';\r\nimport '../../css/va-list.css';\r\nimport { IObservableArray } from 'mobx';\r\n\r\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\r\n\r\nexport interface ListProps {\r\n    className?: string|string[];\r\n    items: any[] | IObservableArray<any> | PageItems<any>;\r\n    item: {\r\n        className?: string|string[];\r\n        render?: (item:any, index:number) => JSX.Element;\r\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\r\n        onClick?: (item:any)=>void;\r\n        key?: (item:any)=>string|number;\r\n    };\r\n    compare?:(item:any, selectItem:any)=>boolean;\r\n    selectedItems?:any[];\r\n    header?: StaticRow;\r\n    footer?: StaticRow;\r\n    before?: StaticRow;\r\n    loading?: StaticRow;\r\n    none?: StaticRow;\r\n}\r\n\r\n@observer\r\nexport class List extends React.Component<ListProps> {\r\n    private listBase: ListBase;\r\n    private selectable: Selectable;\r\n    constructor(props:ListProps) {\r\n        super(props);\r\n        this.buildBase();\r\n    }\r\n    _$scroll = (direct: 'top'|'bottom') => {\r\n        console.log('############### items scroll to ' + direct);\r\n    }\r\n    private buildBase() {\r\n        let {item} = this.props;\r\n        let {onClick, onSelect} = item;\r\n        if (onSelect !== undefined)\r\n            this.selectable = this.listBase = new Selectable(this);\r\n        else if (onClick !== undefined)\r\n            this.listBase = new Clickable(this);\r\n        else\r\n            this.listBase = new Static(this);\r\n    }\r\n    /*\r\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\r\n        //this.listBase.updateProps(nextProps);\r\n    }\r\n    */\r\n    componentWillUnmount() {\r\n        this.listBase.dispose();\r\n    }\r\n    selectAll() {\r\n        if (this.selectable) this.selectable.selectAll();\r\n    }\r\n    unselectAll() {\r\n        if (this.selectable) this.selectable.unselectAll();\r\n    }\r\n    get selectedItems():any[] {\r\n        return this.listBase.selectedItems;\r\n    }\r\n    render() {\r\n        let {className, header, footer, before, loading, none} = this.props;\r\n        if (before === undefined) before = '-';\r\n        if (loading === undefined) loading = () => <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />;\r\n        if (none === undefined) none = 'none';\r\n        //this.listBase.selectedItems = selectedItems;\r\n        let {items, loading:isLoading} = this.listBase;\r\n        function staticRow(row:StaticRow, type:string) {\r\n            if (!row) return;\r\n            switch (typeof row) {\r\n                default:\r\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\r\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\r\n                case 'object': return <li>{row}</li>\r\n            } \r\n        }\r\n        let content:any, waitingMore:any;\r\n        if (items === null)\r\n            content = staticRow(before, 'before');\r\n        else if (items === undefined)\r\n            content = staticRow(loading, 'loading');\r\n        else if (items.length === 0)\r\n            content = staticRow(none, 'none');\r\n        else {\r\n            content = items.map((item, index) => {\r\n                return this.listBase.render(item, index);\r\n            });\r\n        }\r\n        if (isLoading === true && items) {\r\n            waitingMore = staticRow(loading, 'loading');\r\n        }\r\n        return <ul className={classNames('va-list', className)}>\r\n            {staticRow(header, 'header')}\r\n            {content}\r\n            {waitingMore}\r\n            {staticRow(footer, 'footer')}\r\n        </ul>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport className from 'classnames';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\r\n\r\nexport abstract class PropRow {\r\n    setValues(values: any) {}\r\n    abstract render(key:string): any;\r\n}\r\n\r\nexport class PropBorder extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div key={'_b_' + key} className=\"\">\r\n            <div className=\"w-100\">\r\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class PropGap extends PropRow {\r\n    private param: string;\r\n    constructor(param?: string) {\r\n        super();\r\n        this.param = param;\r\n    }\r\n    render(key:string): JSX.Element {\r\n        let w: string;\r\n        switch (this.param) {\r\n            default: w = 'py-2'; break;\r\n            case '=': w = 'py-1'; break;\r\n            case '-': w = 'pb-1'; break;\r\n        }\r\n        let cn = className(w);\r\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\r\n    }\r\n}\r\n\r\nconst valueAlignStart = 'justify-content-start';\r\nconst valueAlignCenter = 'justify-content-center';\r\nconst valueAlignEnd = 'justify-content-end';\r\nexport abstract class LabeledPropRow extends PropRow {\r\n    protected gridProps: PropGridProps;\r\n    protected _prop: LabeledProp;\r\n    protected get prop():LabeledProp {return this._prop}\r\n    protected content: any;\r\n    protected col: string;\r\n    //protected values: any;\r\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\r\n        super();\r\n        this.gridProps = gridProps;\r\n        this._prop = prop;\r\n        this.col = gridProps.labelFixLeft === true? 'col' : 'col-sm';\r\n        //this.values = values;\r\n    }\r\n    render(key:string):any {\r\n        let {onClick, bk} = this.prop;\r\n        let cn = className({\r\n            \"cursor-pointer\": onClick !== undefined,\r\n            \"bg-white\": bk === undefined, \r\n            \"row\": true\r\n        });\r\n        return <div key={key} className={cn} onClick={onClick}>\r\n            {this.renderLabel()}\r\n            {this.renderProp()}\r\n        </div>;\r\n    }\r\n    protected renderLabel():any {\r\n        let {label} = this.prop;\r\n        if (label === undefined) return null;\r\n        return <label className={this.col + '-3 col-form-label'}>\r\n            {label}\r\n        </label>;\r\n    }\r\n    protected renderProp():any {\r\n        let {label} = this.prop;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string = this.col + (label===undefined? '-12':'-9');\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n    protected renderPropBody():any {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.renderPropContent()}\r\n        </div>;\r\n    }\r\n    protected renderPropContent():any {\r\n        return this.content;\r\n    }\r\n}\r\n\r\nexport class StringPropRow extends LabeledPropRow {\r\n    protected get prop(): StringProp {return this._prop as StringProp;}\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class NumberPropRow extends LabeledPropRow {\r\n    protected get prop(): NumberProp {return this._prop as NumberProp;}\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class ListPropRow extends LabeledPropRow {\r\n    protected get prop(): ListProp {return this._prop as ListProp;}\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else {\r\n            let list = this.prop.list;\r\n            if (typeof list === 'string') this.content = values[list];\r\n            else this.content = undefined;\r\n        }\r\n    }\r\n    protected renderPropBody() {\r\n        let {list, row} = this.prop;\r\n        let items:any[] = typeof list === 'string'? this.content : list;\r\n        if (items === undefined) return <div/>;\r\n        // new row(item)\r\n        return <div className=\"w-100\">\r\n            {\r\n                items.map((item, index) => <React.Fragment key={index}>\r\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\r\n                    {React.createElement(row, item)}\r\n                </React.Fragment>)\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ComponentPropRow extends LabeledPropRow {\r\n    protected get prop(): ComponentProp {return this._prop as ComponentProp;}\r\n    protected renderPropBody() {\r\n        let {component} = this.prop;\r\n        return component;\r\n    }\r\n    protected renderProp():any {\r\n        let {label, full} = this.prop;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string;\r\n        if (full !== true)\r\n            col = this.col + (label===undefined? '-12':'-9');\r\n        else\r\n            col = 'w-100';\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n}\r\n","import { PropGridProps } from './PropGrid';\r\nimport {\r\n    PropRow, PropBorder, PropGap, \r\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow\r\n} from './row';\r\n\r\nexport interface Format {\r\n\r\n}\r\n\r\nexport interface PropBase {\r\n    onClick?: () => void;\r\n}\r\n\r\nexport interface LabeledProp extends PropBase {\r\n    label?: string;\r\n    bk?: string;\r\n    vAlign?: 'top' | 'bottom' | 'center' | 'stretch';\r\n}\r\n\r\nexport interface StringProp extends LabeledProp {\r\n    type: 'string';\r\n    name: string;\r\n}\r\n\r\nexport interface NumberProp extends LabeledProp {\r\n    type: 'number';\r\n    name: string;\r\n}\r\n\r\nexport interface FormatProp extends LabeledProp {\r\n    type: 'format';\r\n    format: Format;\r\n}\r\n\r\nexport interface ListProp extends LabeledProp {\r\n    type: 'list';\r\n    list: string | any[];  // string 表示名字，否则就是值\r\n    row: new (props: any) => React.Component;\r\n}\r\n\r\nexport interface ComponentProp extends LabeledProp {\r\n    type: 'component';\r\n    full?: boolean;\r\n    component: any; //JSX.Element;\r\n}\r\n\r\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\r\n\r\nexport class PropView {\r\n    private gridProps: PropGridProps\r\n    private props: Prop[];\r\n    //private values:any;\r\n    private rows: PropRow[];\r\n\r\n    constructor(gridProps: PropGridProps, props: Prop[]) {\r\n        this.gridProps = gridProps;\r\n        this.props = props;\r\n        //this.values = values;\r\n        this.buildRows();\r\n    }\r\n\r\n    private buildRows() {\r\n        this.rows = [];\r\n        let isGap: boolean = true;\r\n        for (let prop of this.props) {\r\n            if (typeof prop === 'string') {\r\n                this.rows.push(new PropGap(prop));\r\n                isGap = true;\r\n            }\r\n            else {\r\n                if (!isGap) this.rows.push(new PropBorder());\r\n                let row;\r\n                switch (prop.type) {\r\n                    default: continue;\r\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\r\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\r\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\r\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\r\n                }\r\n                this.rows.push(row);\r\n                isGap = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    setValues(values: any) {\r\n        for (let r of this.rows) r.setValues(values);\r\n    }\r\n\r\n    render() {\r\n        return this.rows.map((row, index) => row.render(String(index)));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, PropView} from './propView';\r\n\r\nexport interface PropGridProps {\r\n    className?: string;\r\n    rows: Prop[];\r\n    values: any;\r\n    alignValue?: 'left'|'center'|'right';\r\n    labelFixLeft?: boolean;\r\n}\r\n\r\n@observer\r\nexport class PropGrid extends React.Component<PropGridProps> {\r\n    render() {\r\n        let {className, rows, values} = this.props;\r\n        let propView = new PropView(this.props, rows);\r\n        propView.setValues(values);\r\n        let cn = classNames('container-fluid', className);\r\n        return <div className={cn}>\r\n            {propView.render()}\r\n        </div>;\r\n    }\r\n}\r\n","export * from './propView';\r\nexport * from './row';\r\nexport * from './PropGrid';\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Page, ItemSchema, UiSchema, StringSchema, UiTextItem, Edit, ImageSchema, nav, UiImageItem } from '../components';\r\nimport { userApi } from '../net';\r\n\r\nexport class EditMeInfo extends React.Component {\r\n    private schema:ItemSchema[] = [\r\n        {name:'nick', type:'string'} as StringSchema,\r\n        {name:'icon', type:'image'} as ImageSchema\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'头像'} as UiImageItem,\r\n        }\r\n    }\r\n    @observable private data:any;\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {nick, icon} = nav.user;\r\n        this.data = {\r\n            nick: nick,\r\n            icon: icon,\r\n        }\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        await userApi.userSetProp(name, newValue);\r\n        this.data[name] = newValue;\r\n        nav.user.name = newValue;\r\n        nav.saveLocalUser();\r\n    }\r\n\r\n    render() {\r\n        return <Page header=\"个人信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={this.data}\r\n                onItemChanged={this.onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport { IObservableValue } from 'mobx/lib/internal';\r\nimport '../../css/va-tab.css';\r\n\r\nexport type TabCaption = (selected:boolean) => JSX.Element;\r\n\r\nexport interface TabProp {\r\n    name: string;\r\n    caption: TabCaption;\r\n    content: () => JSX.Element;\r\n    notify?: IObservableValue<number>;\r\n    load?: () => Promise<void>;\r\n    onShown?: () => Promise<void>;\r\n}\r\n\r\nexport interface TabsProps {\r\n    tabs: TabProp[];\r\n    tabPosition?: 'top' | 'bottom';\r\n    size?: 'sm' | 'lg' | 'md';\r\n    tabBg?: string;\r\n    contentBg?: string;\r\n    sep?: string;\r\n    selected?: string;\r\n    borderColor?: string;\r\n    borderWidth?: string;\r\n}\r\n\r\nclass Tab {\r\n    name: string;\r\n    @observable selected: boolean;\r\n    caption: TabCaption;\r\n    contentBuilder: ()=>JSX.Element;\r\n    notify: IObservableValue<number>;\r\n    load?: () => Promise<void>;\r\n    onShown?: () => Promise<void>;\r\n\r\n    private _content: JSX.Element;\r\n    \r\n    get content(): JSX.Element {\r\n        if (this.selected !== true) return this._content;\r\n        if (this._content !== undefined) return this._content;\r\n        return this._content = this.contentBuilder();\r\n    }\r\n\r\n    async shown() {\r\n        if (this.onShown !== undefined) {\r\n            await this.onShown();\r\n        }\r\n        if (this._content !== undefined) return;\r\n        if (this.load !== undefined) {\r\n            await this.load();\r\n        }\r\n    }\r\n}\r\n\r\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \r\n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\r\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\r\n    <small>{label}</small>\r\n</div>;\r\n\r\n@observer export class Tabs extends React.Component<TabsProps> {\r\n    private size: string;\r\n    private tabBg: string;\r\n    private contentBg: string;\r\n    private sep: string;\r\n    @observable private selectedTab: Tab;\r\n    @observable private tabs: Tab[];\r\n\r\n    constructor(props: TabsProps) {\r\n        super(props);\r\n        let {size, tabs, tabBg: tabBack, contentBg: contentBack, sep, selected} = this.props;\r\n        this.size = size || 'md';\r\n        this.tabs = tabs.map(v => {\r\n            let tab = new Tab();\r\n            let {name, caption, content, notify, load, onShown} = v;\r\n            tab.name = name;\r\n            tab.selected = false;\r\n            tab.caption = caption;\r\n            tab.contentBuilder = content;\r\n            tab.notify = notify;\r\n            tab.load = load;\r\n            tab.onShown = onShown;\r\n            return tab;\r\n        });\r\n        this.tabBg = tabBack || 'bg-light';\r\n        this.contentBg = contentBack;\r\n        this.sep = sep || 'border-top border-gray';\r\n        if (selected !== undefined) {\r\n            this.selectedTab = this.tabs.find(v => v.name === selected);\r\n        }\r\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\r\n        this.selectedTab.selected = true;\r\n    }\r\n    /*\r\n    async componentWillMount() {\r\n        if (this.tabs === undefined) return;\r\n        if (this.tabs.length === 0) return;\r\n        let tab = this.tabs[0];\r\n        await tab.start();\r\n    }\r\n    */\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        if (this.tabs.length === 0) return;\r\n        let tab = this.tabs[0];\r\n        await tab.shown();\r\n    }\r\n\r\n    private tabClick = async (tab:Tab) => {\r\n        await tab.shown();\r\n        this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    showTab(tabName: string) {\r\n        let tab = this.tabs.find(v => v.name === tabName);\r\n        if (tab === undefined) return;\r\n        if (this.selectedTab !== undefined) this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames('tab', 'tab-' + this.size);\r\n        let content = <div className={classNames(this.contentBg, 'tab-content')}>\r\n            {this.tabs.map((v,index) => {\r\n                let style:React.CSSProperties={\r\n                    display: v.selected===true? undefined : 'none'};\r\n                return <div key={index} style={style}>{v.content}</div>;\r\n            })}\r\n        </div>;        \r\n\r\n        let {tabPosition, borderColor} = this.props;\r\n        let bsCur:React.CSSProperties, bsTab:React.CSSProperties\r\n        if (borderColor) {\r\n            bsCur = {\r\n                borderColor: borderColor,\r\n                borderStyle: 'solid',\r\n                borderTopWidth: 1,\r\n                borderLeftWidth: 1,\r\n                borderRightWidth: 1,\r\n                borderBottomWidth: 1,\r\n            }\r\n            bsTab = {\r\n                borderColor: borderColor,\r\n                borderStyle: 'solid',\r\n                borderTopWidth: 1,\r\n                borderBottomWidth: 1,\r\n                borderLeftWidth: 0,\r\n                borderRightWidth: 0,\r\n            }\r\n            if (tabPosition === 'top') {\r\n                bsCur.borderBottomWidth = 0;\r\n                bsCur.borderTopLeftRadius = 10;\r\n                bsCur.borderTopRightRadius = 10;\r\n                bsTab.borderTopWidth = 0;\r\n            }\r\n            else {\r\n                bsCur.borderTopWidth = 0;\r\n                bsCur.borderBottomLeftRadius = 10;\r\n                bsCur.borderBottomRightRadius = 10;\r\n                bsTab.borderBottomWidth = 0;\r\n            }\r\n        }\r\n\r\n        let tabs = <div className={classNames(this.tabBg, this.sep, 'tab-tabs')}>\r\n            {this.tabs.map((v,index) => {\r\n                let {selected, caption, notify} = v;\r\n                let notifyCircle:any;\r\n                if (notify !== undefined) {\r\n                    let num = notify.get();\r\n                    if (num !== undefined) {\r\n                        if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\r\n                        else if (num < 0) notifyCircle = <u className=\"dot\" />;\r\n                    }\r\n                }\r\n                return <div key={index} className=\"\" onClick={()=>this.tabClick(v)} style={selected===true? bsCur:bsTab}>\r\n                    <div className=\"align-self-center\">\r\n                        {notifyCircle}\r\n                        {caption(selected)}\r\n                    </div>\r\n                </div>\r\n            })}\r\n        </div>;\r\n\r\n        return <div className={cn}>\r\n            {\r\n                tabPosition === 'top'? \r\n                    <>{tabs}{content}</> :\r\n                    <>{content}{tabs}</>\r\n            }\r\n        </div>\r\n    }\r\n};\r\n","import {User, appInFrame, CenterApiBase} from 'tonva';\r\nimport { string } from 'prop-types';\r\n\r\nclass MainApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n    async stickies():Promise<any[]> {\r\n        return await this.get('sticky/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async ties():Promise<any[]> {\r\n        return await this.get('tie/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async apps(unit:number):Promise<any> {\r\n        return await this.get('tie/apps', {unit:unit});\r\n    }\r\n\r\n    async appApi(unit:number, app:number, apiName:string) {\r\n        return await this.get('tie/app-api', {unit:unit, app:app, apiName:apiName});\r\n    }\r\n\r\n    async userId(name:string):Promise<number> {\r\n        return await this.get('tie/user-id', {name:name});\r\n    }\r\n\r\n    async userAdminUnits():Promise<any[]> {\r\n        return await this.get('tie/user-admin-units', {});\r\n    }\r\n\r\n    async sendMessage(toUser:number, type:string, content:any) {\r\n        let {unit} = appInFrame;\r\n        let adminApp = 0;\r\n        return await this.post('tie/send-message', {\r\n            type: type, \r\n            fromUnit: unit, \r\n            fromApp: adminApp,\r\n            toUser: toUser, \r\n            content: content, \r\n        });\r\n    }\r\n\r\n    async unit(unit:number):Promise<any> {\r\n        return await this.get('unit/', {unit:unit});\r\n    }\r\n\r\n    async unitMemberCount(unit:number):Promise<number> {\r\n        return await this.get('unit/member-count', {unit:unit});\r\n    }\r\n\r\n    async unitAdmins(unit:number):Promise<any[]> {\r\n        return await this.get('unit/admins', {unit:unit});\r\n    }\r\n\r\n    async unitSetAdmin(fellow:number, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/set-admin', {fellow:fellow, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitAddAdmin(user:string, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/add-admin', {user:user, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitApps(unit:number):Promise<any[]> {\r\n        return await this.get('unit/apps', {unit:unit});\r\n    }\r\n\r\n    async unitAddApp(unit:number, app:number):Promise<number> {\r\n        let ret = await this.post('unit/add-app', {unit:unit, app:app});\r\n        return ret;\r\n    }\r\n\r\n    async unitDeleteApp(unit:number, app:number, deleted:number):Promise<void> {\r\n        await this.post('unit/delete-app', {unit:unit, app:app, deleted:deleted});\r\n    }\r\n\r\n    async unitChangeProp(unit:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-prop', {unit:unit, prop:prop, value:value});\r\n    }\r\n\r\n    async searchApp(unit:number, key:string, pageStart:any, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/search-app', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n\r\n    async unitRoles(unit:number):Promise<any[]> {\r\n        return await this.get('unit/roles', {unit:unit});\r\n    }\r\n\r\n    async unitAddRole(unit:number, name:string, discription:string):Promise<number> {\r\n        return await this.post('unit/add-role', {unit:unit, name:name, discription:discription});\r\n    }\r\n\r\n    async unitRoleChangeProp(unit:number, role:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-role-prop', {unit:unit, role:role, prop:prop, value:value});\r\n    }\r\n\r\n    async unitRoleApps(unit:number, role:number):Promise<any[]> {\r\n        return await this.get('unit/role-apps', {unit:unit, role:role});\r\n    }\r\n\r\n    async unitRoleSetApps(unit:number, role:number, apps:number[]):Promise<void> {\r\n        await this.post('unit/role-set-apps', {unit:unit, role:role, apps:apps});\r\n    }\r\n\r\n    async unitMembers(unit:number, role:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/members', {unit:unit, role:role, key, pageStart, pageSize});\r\n    }\r\n\r\n    async unitAssignMember(unit:number, member:number, assigned:string):Promise<void> {\r\n        await this.post('unit/assign-member', {unit:unit, member:member, assigned:assigned});\r\n    }\r\n\r\n    async unitMemberRoles(unit:number, member:number):Promise<any[]> {\r\n        return await this.get('unit/member-roles', {unit:unit, member:member});\r\n    }\r\n\r\n    async unitSetMemberRoles(unit:number, member:number, roles:number[]):Promise<void> {\r\n        await this.post('unit/member-set-roles', {unit:unit, member:member, roles:roles});\r\n    }\r\n\r\n    async unitUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/app-users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneAppUsers(unit:number, app:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-app-users', {unit: unit, app:app, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneUserApps(unit:number, user:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-user-apps', {unit: unit, user:user, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppEditUsers(unit:number, app:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/app-edit-users', {unit: unit, app:app, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitUserEditApps(unit:number, user:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/user-edit-apps', {unit: unit, user:user, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async bindAppUser(unit:number, app:number, user:number, bind:number):Promise<void> {\r\n        await this.post('unit/bind-app-user', {unit: unit, app:app, user:user, bind:bind});\r\n    }\r\n\r\n    async userFromKey(key:string):Promise<any> {\r\n        return await this.get('tie/user-from-key', {key:key});\r\n    }\r\n    async unitAddUser(unit:number, user:number) {\r\n        await this.post('unit/add-user', {unit:unit, user:user});\r\n    }\r\n}\r\n\r\nexport const mainApi = new MainApi('tv/', undefined);\r\n","import {CenterApiBase} from 'tonva';\r\n\r\nclass DevApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n    async uqBuilderUrl():Promise<any> {\r\n        let ret = await this.get('uq-builder-url', undefined);\r\n        return ret;\r\n    }    \r\n    async counts(unit:number):Promise<any> {\r\n        return await this.get('counts', {unit:unit});\r\n    }\r\n    async app(id:number):Promise<any> {\r\n        return await this.get('app', {id:id});\r\n    }\r\n    async uq(id:number):Promise<any> {\r\n        return await this.get('uq', {id:id});\r\n    }\r\n    async server(id:number):Promise<any> {\r\n        return await this.get('server', {id:id});\r\n    }\r\n    async apps(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('apps', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async buses(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('buses', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async servers(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('servers', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async services(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('services', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async saveApp(values:any):Promise<number> {\r\n        return await this.post('app-save', values);\r\n    }\r\n    async saveUq(values:any):Promise<number> {\r\n        return await this.post('uq-save', values);\r\n    }\r\n    async saveBus(values:any):Promise<number> {\r\n        return await this.post('bus-save', values);\r\n    }\r\n    async saveServer(values:any):Promise<number> {\r\n        return await this.post('server-save', values);\r\n    }\r\n    async saveService(values:any):Promise<number> {\r\n        return await this.post('service-save', values);\r\n    }\r\n    async delApp(unit:number,id:number):Promise<void> {\r\n        return await this.post('app-del', {unit:unit, id:id});\r\n    }\r\n    async delUq(unit:number,id:number):Promise<void> {\r\n        return await this.post('uq-del', {unit:unit, id:id});\r\n    }\r\n    async delBus(unit:number,id:number):Promise<void> {\r\n        return await this.post('bus-del', {unit:unit, id:id});\r\n    }\r\n    async delServer(unit:number,id:number):Promise<void> {\r\n        return await this.post('server-del', {unit:unit, id:id});\r\n    }\r\n    async delUqdb(unit:number,id:number):Promise<void> {\r\n        return await this.post('uqdb-del', {unit:unit, id:id});\r\n    }\r\n    async delService(unit:number,id:number):Promise<void> {\r\n        return await this.post('service-del', {unit:unit, id:id});\r\n    }\r\n    async loadAppUqs(app:number):Promise<any[]> {\r\n        return await this.get('app-uqs', {app: app});\r\n    }\r\n    async appBindUq(unit:number,app:number,uqs:{id:number, access:string[]}[]):Promise<void> {\r\n        let uqsText:string;\r\n        if (uqs !== undefined) {\r\n            uqsText = uqs.map(v => String(v.id)+'|'+v.access.join(',')).join(';');\r\n        }\r\n        await this.post('app-bind-uq', {unit:unit, app:app, uqs:uqsText});\r\n    }\r\n    async searchUq(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uq-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async getMyUqs(unit:number):Promise<any[]> {\r\n        return await this.get('my-uqs', {unit:unit});\r\n    }\r\n    async searchApp(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('app-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchServer(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('server-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchUqdb(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uqdb-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async loadUqServices(unit:number, uq:number):Promise<any[]> {\r\n        return await this.get('uq-services', {unit:unit, uq:uq});\r\n    }\r\n    async changeServiceProp(unit:number, service:number, prop:string, value:any):Promise<number> {\r\n        return await this.post('service-change-prop', {unit:unit, service:service, prop:prop, value:value});\r\n    }\r\n    async uqGetEntities(unit:number, uq:number):Promise<any[][]> {\r\n        return await this.get('uq-get-entities', {unit:unit, uq:uq});\r\n    }\r\n    async adminDevAdd(param: {unit:number, type:string, dev:number, devUser:number}):Promise<void> {\r\n        await this.post('admin-dev-add', param);\r\n    }\r\n    async adminDevDel(param: {unit:number, type:string, dev:number, devUser:number}):Promise<void> {\r\n        await this.post('admin-dev-del', param);\r\n    }\r\n}\r\n\r\nexport const devApi = new DevApi('tv/dev/', undefined);\r\n","import {observable} from 'mobx';\r\nimport {UnitAdmin} from '../model';\r\nimport {mainApi} from '../api';\r\nimport {Store} from './index';\r\n\r\nexport class Admins {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n    }\r\n\r\n    @observable cur: UnitAdmin = undefined;\r\n    @observable owners: UnitAdmin[] = undefined;\r\n    @observable admins: UnitAdmin[] = undefined;\r\n    @observable fellows: UnitAdmin[] = undefined;\r\n    \r\n    async load(): Promise<void> {\r\n        let unit = this.store.unit;\r\n        if (unit === undefined) return;\r\n        if (unit.id === undefined) return;\r\n        if (this.admins !== undefined) return;\r\n        let all = await mainApi.unitAdmins(unit.id);\r\n        let owners:UnitAdmin[] = [];\r\n        let admins:UnitAdmin[] = [];\r\n        let fellows:UnitAdmin[] = [];\r\n        all.forEach(ua => {\r\n            let {isOwner, isAdmin} = ua;\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                fellows.push(ua);\r\n            else {\r\n                if (isOwner === 1) owners.push(ua);\r\n                if (isAdmin === 1) admins.push(ua);\r\n            }\r\n        });\r\n        this.owners = owners;\r\n        this.admins = admins;\r\n        this.fellows = fellows;\r\n    }\r\n\r\n    private removeCur(arr: UnitAdmin[]) {\r\n        let index = arr.findIndex(v => v.id===this.cur.id);\r\n        if (index >=0) arr.splice(index, 1);\r\n    }\r\n\r\n    async unitSetAdmin(isOwner:number, isAdmin:number) {\r\n        let cur = this.cur;\r\n        cur.isOwner = isOwner;\r\n        cur.isAdmin = isAdmin;\r\n        let fellowId = cur.id, unitId = this.store.unit.id;\r\n        await mainApi.unitSetAdmin(fellowId, unitId, isOwner, isAdmin);\r\n        this.removeCur(this.owners);\r\n        this.removeCur(this.admins);\r\n        this.removeCur(this.fellows);\r\n        if (isOwner === 0 && isAdmin === 0)\r\n            this.fellows.unshift(cur);\r\n        else {\r\n            if (isOwner === 1) this.owners.unshift(cur);\r\n            if (isAdmin === 1) this.admins.unshift(cur);\r\n        }\r\n    }\r\n\r\n    async addNew(user:string, isOwner:number, isAdmin:number):Promise<UnitAdmin> {\r\n        let admin = await mainApi.unitAddAdmin(user, this.store.unit.id, isOwner, isAdmin);\r\n        if (admin !== undefined) {\r\n            let cur = this.cur = admin;\r\n            this.removeCur(this.owners);\r\n            this.removeCur(this.admins);\r\n            this.removeCur(this.fellows);\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                this.fellows.unshift(cur);\r\n            else {\r\n                if (isOwner === 1) this.owners.unshift(cur);\r\n                if (isAdmin === 1) this.admins.unshift(cur);\r\n            }\r\n        }\r\n        return admin;\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {devApi} from '../api';\r\nimport {DevModel, Unit} from '../model';\r\nimport {Store} from './index';\r\n\r\ninterface Counts {\r\n    uq: number;\r\n    app: number;\r\n    bus: number;\r\n    server: number;\r\n    service: number;\r\n    //uqdb: number;\r\n}\r\n\r\nexport abstract class ObjItems<T extends DevModel.ObjBase> {\r\n    protected store:Store;\r\n    protected dev:Dev;\r\n    constructor(store:Store, dev:Dev) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    @observable cur: T = undefined;\r\n\r\n    async load():Promise<void> {\r\n         let ret = await this._load();\r\n         this.items = ret;\r\n    }\r\n    protected abstract _load():Promise<T[]>;\r\n    async saveCur(item:T):Promise<boolean> {\r\n        let values:any = {};\r\n        if (this.cur !== undefined) {\r\n            _.assign(values, this.cur, item);\r\n        }\r\n        else {\r\n            _.assign(values, item);\r\n        }\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (this.cur === undefined) {\r\n            if (id === 0) return false;\r\n            values.id = id;\r\n            if (this.items !== undefined) this.items.unshift(values);\r\n            this._inc();\r\n            this.cur = observable(values);\r\n        }\r\n        else {\r\n            _.assign(this.cur, values);\r\n        }\r\n        return true;\r\n    }\r\n    async check(item:T):Promise<boolean> {\r\n        return true;\r\n    }\r\n    async save(item:T):Promise<T> {\r\n        let values:any = {};\r\n        _.assign(values, item);\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (id === 0) return;\r\n        values.id = id;\r\n        return values;\r\n    }\r\n    protected abstract _save(item:T):Promise<number>;\r\n    async del():Promise<void> {\r\n        let c = this.cur;\r\n        if (c === undefined) return;\r\n        let id = c.id;\r\n        await this._del(c);\r\n        if (this.items === undefined) return;\r\n        let index = this.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.items.splice(index, 1);\r\n            this._dec();\r\n        }\r\n    }\r\n    protected abstract _del(item:T):Promise<void>;\r\n    protected abstract _inc();\r\n    protected abstract _dec();\r\n}\r\n\r\nclass Apps extends ObjItems<DevModel.App> {\r\n    @observable uqs: DevModel.UQ[] = undefined;\r\n    @observable searchedUqs: DevModel.UQ[] = undefined;\r\n    //@observable service: DevModel.Service = null;\r\n    protected async _load() {\r\n        return await devApi.apps(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.App):Promise<number> {\r\n        return await devApi.saveApp(item);\r\n    }\r\n    protected async _del(item:DevModel.App):Promise<void> {\r\n        await devApi.delApp(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.app++; }\r\n    protected _dec() { this.dev.counts.app--; }\r\n\r\n    public async loadCurUqs() {\r\n        let ret = await devApi.loadAppUqs(this.cur.id);\r\n        this.uqs = ret;\r\n    }\r\n    public async searchUq(key:string) {\r\n        this.searchedUqs = await devApi.searchUq(this.store.unit.id, key, 0, searchPageSize);\r\n    }\r\n    public async appBindUq(uqs:{id:number, access:string[]}[], bind:boolean) {\r\n        let allUqs:{id:number, access:string[]}[] = this.uqs.map(v => {\r\n            let {id, access} = v;\r\n            return {id: id, access: [access]};\r\n        });\r\n        for (let uq of uqs) {\r\n            let index = allUqs.findIndex(v => v.id === uq.id);\r\n            if (bind === true) {\r\n                if (index < 0) allUqs.unshift(uq);\r\n            }\r\n            else {\r\n                allUqs.splice(index, 1);\r\n            }\r\n        }\r\n        await devApi.appBindUq(this.store.unit.id, this.cur.id, allUqs);\r\n        for (let uq of uqs) {\r\n            let index = this.uqs.findIndex(a => a.id === uq.id);\r\n            if (index>=0) this.uqs.splice(index, 1);\r\n            if (bind === true) {\r\n                if (this.searchedUqs !== undefined) {\r\n                    let find = this.searchedUqs.find(a => a.id === uq.id);\r\n                    if (find !== undefined) this.uqs.unshift(find);\r\n                }\r\n            }\r\n            else {\r\n                // 已经删除，不需要处理\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Uqs extends ObjItems<DevModel.UQ> {\r\n    protected async _load() {\r\n        let ret = await devApi.uqs(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.UQ):Promise<number> {\r\n        //let {access} = item;\r\n        //if (!access) access = \"*';\r\n        //let parts = access.split(',').map(v => v.trim()).filter(v => v!=='');\r\n        //item.access = parts.join(',');\r\n        return await devApi.saveUq(item);\r\n    }\r\n    protected async _del(item:DevModel.UQ):Promise<void> {\r\n        await devApi.delUq(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uq++; }\r\n    protected _dec() { this.dev.counts.uq--; }\r\n}\r\n\r\nclass Buses extends ObjItems<DevModel.Bus> {\r\n    protected async _load() {\r\n        let ret = await devApi.buses(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.Bus):Promise<number> {\r\n        return await devApi.saveBus(item);\r\n    }\r\n    protected async _del(item:DevModel.Bus):Promise<void> {\r\n        await devApi.delBus(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.bus++; }\r\n    protected _dec() { this.dev.counts.bus--; }\r\n    async check(item:DevModel.Bus):Promise<boolean> {\r\n        let {schema} = item;\r\n        try {\r\n            let bus = JSON.parse(schema);\r\n            for (let i in bus) {\r\n                let face = bus[i];\r\n                if (face === null || face === undefined) {\r\n                    alert(`face ${i} is null，请设置内容`);\r\n                    return false;\r\n                }\r\n                switch (typeof face) {\r\n                    case 'function':\r\n                        alert(`face ${i} is function，不接受function`);\r\n                        return false;\r\n                    //case 'bigint':\r\n                    case 'boolean':\r\n                    case 'number':\r\n                    case 'string':\r\n                        alert(`face ${i} 应该是数组或者对象`);\r\n                        return false;\r\n                }\r\n                if (Array.isArray(face) === true) {\r\n                    if (checkBusFace(face, bus) === false) return false;\r\n                }\r\n                else {\r\n                    if (checkBusQuery(face, bus) === false) return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            alert(err.message);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nconst paramTypes = ['id', 'number', 'string'];\r\nconst busTypes = [...paramTypes, 'array'];\r\nfunction refNameOk(faceName:string, bus:any):boolean {\r\n    let face = bus[faceName];\r\n    if (face === undefined) {\r\n        alert(`face ${faceName} not defined`);\r\n        return false;\r\n    }\r\n    if (Array.isArray(face) === false) {\r\n        alert(`face ${faceName} is referenced, bus is not array`);\r\n        return false;\r\n    }\r\n    return refArrayOk(face as any[], bus);\r\n}\r\n\r\nfunction refArrayOk(items:any[], bus:any):boolean {\r\n    for (let item of items) {\r\n        let {type} = item;\r\n        if (['id', 'string', 'number', 'array'].indexOf(type) < 0) {\r\n            alert(`type ${type} out of ['id', 'string', 'number', 'array']`);\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction checkBusFace(face: any[], bus:any):boolean {\r\n    if (!face || typeof face !== 'object') {\r\n        alert('only object');\r\n        return false;\r\n    }\r\n    for (let field of face) {\r\n        let {type} = field;\r\n        if (type === undefined) {\r\n            alert('type not defined');\r\n            return false;\r\n        }\r\n        else if (type === 'array') {\r\n            let {fields} = field;\r\n            if (refNameOk(fields, bus) === false) {\r\n                return false;\r\n            }\r\n        }\r\n        if (busTypes.indexOf(type) < 0) {\r\n            if (type === 'date') {\r\n                alert('不再支持数据类型date，请用number unixtime作为媒介')\r\n            }\r\n            else {\r\n                alert(`不支持数据类型 ${type}`);\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction checkBusQuery(face: any, bus:any):boolean {\r\n    for (let i in face) {\r\n        let item = face[i];\r\n        switch (i) {\r\n            default:\r\n                alert(i + ': not allowed in bus query.');\r\n                return false;\r\n            case 'param':\r\n                if (checkBusQueryParam(item, bus) === false) return false;\r\n                break;\r\n            case 'returns':\r\n                let returns = item;\r\n                if (typeof item === 'string') {\r\n                    returns = bus[item];\r\n                    if (returns === undefined) {\r\n                        alert(item + ' is not defined');\r\n                        return false;\r\n                    }\r\n                }\r\n                if (checkBusFace(returns, bus) === false) return false;\r\n                break;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction checkBusQueryParam(param: any, bus:any):boolean {\r\n    if (param === null || param === undefined) return;\r\n    switch (typeof param) {\r\n        case 'string':\r\n            return refNameOk(param, bus);\r\n        default:\r\n            if (Array.isArray(param)) {\r\n                return refArrayOk(param, bus);\r\n            }\r\n            break;\r\n    }\r\n    alert('param of a query can only be string or array');\r\n    return false;\r\n}\r\n\r\nclass Servers extends ObjItems<DevModel.Server> {\r\n    protected async _load() {\r\n        return await devApi.servers(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Server):Promise<number> {\r\n        return await devApi.saveServer(item);\r\n    }\r\n    protected async _del(item:DevModel.Server):Promise<void> {\r\n        await devApi.delServer(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.server++; }\r\n    protected _dec() { this.dev.counts.server--; }\r\n}\r\nclass Services extends ObjItems<DevModel.Service> {\r\n    protected async _load() {\r\n        return await devApi.services(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Service):Promise<number> {\r\n        return await devApi.saveService(item);\r\n    }\r\n    protected async _del(item:DevModel.Service):Promise<void> {\r\n        await devApi.delService(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.service++; }\r\n    protected _dec() { this.dev.counts.service--; }\r\n    async changeProp(prop:string, value:any):Promise<number> {\r\n        let ret = await devApi.changeServiceProp(this.store.unit.id, this.cur.id, prop, value);\r\n        switch (prop) {\r\n            case 'url': this.cur.url = value; break;\r\n            case 'urlTest': this.cur.urlTest = value; break;\r\n            case 'server': this.cur.server = value; break;\r\n            case 'db': this.cur.db = value; break;\r\n            //case 'db_type': this.cur.db_type = value; break;\r\n            //case 'connection': this.cur.connection = value; break;\r\n        }\r\n        return ret;\r\n    }\r\n    async loadUqServices(uq:number):Promise<void> {\r\n        let ret = await devApi.loadUqServices(this.store.unit.id, uq);\r\n        this.items = ret[0];\r\n    }\r\n}\r\n\r\nconst searchPageSize = 50;\r\ntype Search = (unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\nclass SearchItems<T extends DevModel.ObjBase> {\r\n    private store:Store;\r\n    private dev:Dev;\r\n    private search:(unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\n\r\n    constructor(store:Store, dev:Dev, search:Search) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n        this.search = search;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    allLoaded: boolean = false;\r\n    private key: string;\r\n    private pageStart = 0;\r\n\r\n    async first(key:string) {\r\n        this.key = key;\r\n        this.items = undefined;\r\n        this.allLoaded = false;\r\n        this.pageStart = 0;\r\n        await this.more();\r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        let ret = await this.search(this.store.unit.id, this.key, this.pageStart, searchPageSize);\r\n        let len = ret.length;\r\n        if (len > searchPageSize) {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len > 0) {\r\n            this.pageStart = ret[len-1].id;\r\n            if (this.items === undefined)\r\n                this.items = ret;\r\n            else\r\n                this.items.push(...ret);\r\n        }\r\n        else {\r\n            this.items = [];\r\n        }\r\n    }\r\n}\r\n\r\nexport class Dev {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n        this.apps = new Apps(store, this);\r\n        this.uqs = new Uqs(store, this);\r\n        this.buses = new Buses(store, this);\r\n        this.servers = new Servers(store, this);\r\n        //this.uqdbs = new Uqdbs(store, this);\r\n        this.services = new Services(store, this);\r\n        this.searchApp = new SearchItems<DevModel.App>(store, this, devApi.searchApp.bind(devApi));\r\n        this.searchUq = new SearchItems<DevModel.UQ>(store, this, devApi.searchUq.bind(devApi));\r\n        this.searchServer = new SearchItems<DevModel.Server>(store, this, devApi.searchServer.bind(devApi));\r\n    }\r\n\r\n    @observable counts:Counts = undefined;\r\n    apps:Apps = undefined;\r\n    uqs:Uqs = undefined;\r\n    buses:Buses = undefined;\r\n    servers:Servers = undefined;\r\n    //uqdbs:Uqdbs = undefined;\r\n    services:Services = undefined;\r\n\r\n    searchApp:SearchItems<DevModel.App> = undefined;\r\n    searchUq:SearchItems<DevModel.UQ> = undefined;\r\n    searchServer:SearchItems<DevModel.Server> = undefined;\r\n    //searchUqdb:SearchItems<DevModel.Uqdb> = undefined;\r\n    \r\n    async loadCounts(): Promise<void> {\r\n        let {unit} = this.store;\r\n        this.counts = await devApi.counts(unit.id);\r\n    }\r\n}\r\n","import {CacheIds} from 'tonva';\r\nimport {Id, Unit, DevModel} from '../model';\r\nimport {mainApi, devApi} from '../api';\r\n\r\nexport class CacheUnits extends CacheIds<Unit> {\r\n    protected async _loadIds(ids:number[]):Promise<Unit[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<Unit> {\r\n        return await mainApi.unit(id);\r\n    }\r\n}\r\n\r\nexport class CacheUqs extends CacheIds<DevModel.UQ> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.UQ[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.UQ> {\r\n        return await devApi.uq(id);\r\n    }\r\n}\r\n\r\nexport class CacheApps extends CacheIds<DevModel.App> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.App[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.App> {\r\n        return await devApi.app(id);\r\n    }\r\n}\r\n\r\nexport class CacheServers extends CacheIds<DevModel.Server> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.Server[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.Server> {\r\n        return await devApi.server(id);\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {appInFrame, host} from 'tonva';\r\nimport {mainApi, devApi} from '../api';\r\nimport {Unit, UnitApps, App, Api, UnitAdmin, UnitApp, Role, RoleMember} from '../model';\r\nimport {Admins} from './admins';\r\nimport {Dev} from './dev';\r\nimport {CacheUnits, CacheUqs, CacheApps, CacheServers} from './cacheIds';\r\n\r\nexport class Store {\r\n    private get unitId():number {return appInFrame.unit;};\r\n    admins:Admins;\r\n    dev:Dev;\r\n    cacheUnits: CacheUnits;\r\n    cacheUqs: CacheUqs;\r\n    cacheApps: CacheApps;\r\n    cacheServers: CacheServers;\r\n    uqServer: string;\r\n\r\n    @observable unit: Unit;\r\n    @observable memberCount: number;\r\n    @observable apps: UnitApp[];\r\n    @observable role:Role;\r\n    @observable roles: Role[];\r\n    @observable roleApps: UnitApp[];\r\n    @observable roleMember: RoleMember;\r\n    @observable roleMembers: RoleMember[];\r\n    @observable memberRoles: Role[];\r\n\r\n    init() {\r\n        this.unit = undefined;\r\n        this.admins = new Admins(this);\r\n        this.dev = new Dev(this);\r\n        this.cacheUnits = new CacheUnits();\r\n        this.cacheUqs = new CacheUqs();\r\n        this.cacheApps = new CacheApps();\r\n        this.cacheServers = new CacheServers();\r\n    }\r\n\r\n    logout() {\r\n        //meInFrame.app = undefined;\r\n        appInFrame.hash = undefined;\r\n        //let unitId = process.env.REACT_APP_DEBUG_UNITID;\r\n        //if (unitId !== undefined)\r\n        //    meInFrame.unit = Number(unitId);\r\n        appInFrame.unit = undefined;\r\n        this.init();\r\n        this.memberCount = undefined;\r\n        this.apps = undefined;\r\n        this.role = undefined;\r\n        this.roles = undefined;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRole(role:Role) {\r\n        if (this.role === role) return;\r\n        this.role = role;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRoleUser(user:RoleMember) {\r\n        if (this.roleMember === user) return;\r\n        this.roleMember = user;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    async unitChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitChangeProp(this.unit.id, prop, value);\r\n        this.unit[prop] = value;\r\n    }\r\n\r\n    async loadApps(): Promise<void> {\r\n        if (this.apps !== undefined) return;\r\n        this.apps = await mainApi.unitApps(this.unitId);\r\n    }\r\n\r\n    async loadUnit(): Promise<void> {\r\n        if (this.unitId === undefined) return;\r\n        let ret = await mainApi.unit(this.unitId);\r\n        this.unit = ret;\r\n        console.log(\"loadUnit unit=%s\", ret);\r\n        this.memberCount = await mainApi.unitMemberCount(this.unitId);\r\n        let uqServer = await devApi.uqBuilderUrl();\r\n        let {url} = uqServer;\r\n        this.uqServer = host.getUrlOrDebug(url, 'uq-build');\r\n        console.log(\"uq-build: %s\", JSON.stringify(this.uqServer));\r\n    }\r\n\r\n    async stopUnitApp(appId:number): Promise<void> {\r\n        await mainApi.unitDeleteApp(this.unit.id, appId, 1);\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 0;\r\n    }\r\n\r\n    async restoreUnitApp(appId:number): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, appId);\r\n        if (ret <= 0) return ret;\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 1;\r\n        return 1;\r\n    }\r\n\r\n    async addUnitApp(app:UnitApp): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, app.id);\r\n        if (ret <= 0) return ret;\r\n        this.apps.push(app);\r\n        return 1;\r\n    }\r\n\r\n    async loadRoles(): Promise<void> {\r\n        if (this.roles !== undefined) return;\r\n        let ret = await mainApi.unitRoles(this.unit.id);\r\n        ret.forEach(v => {\r\n            switch (v.id) {\r\n                case 1: \r\n                    v.name= '访客';\r\n                    v.discription = '可以获取开放信息';\r\n                    break;\r\n                case 2: \r\n                    v.name= '普通';\r\n                    v.discription = '能访问最基本的功能';\r\n                    break;\r\n            }\r\n        });\r\n        this.roles = ret;\r\n    }\r\n\r\n    async unitAddRole(name:string, discription:string): Promise<number> {\r\n        let id = await mainApi.unitAddRole(this.unit.id, name, discription);\r\n        if (id > 0) {\r\n            this.roles.push({\r\n                id: id,\r\n                name: name,\r\n                discription: discription,\r\n                count: undefined,\r\n            });\r\n        }\r\n        return id;\r\n    }\r\n\r\n    async roleChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitRoleChangeProp(this.unit.id, this.role.id, prop, value);\r\n        this.role[prop] = value;\r\n    }\r\n\r\n    async loadRoleApps():Promise<void> {\r\n        let ret = await mainApi.unitRoleApps(this.unit.id, this.role.id);\r\n        this.roleApps = ret.map(v => {\r\n            return this.apps.find(app=>app.id === v.id);\r\n        });\r\n    }\r\n\r\n    async setRoleApps(apps:UnitApp[]) {\r\n        await mainApi.unitRoleSetApps(this.unit.id, this.role.id, apps.map(v=>v.id));\r\n        this.roleApps = apps;\r\n    }\r\n\r\n    async loadMembers():Promise<void> {\r\n        let ret = await mainApi.unitMembers(this.unit.id, this.role === undefined? 0:this.role.id, undefined, 0, 100);\r\n        this.roleMembers = ret;\r\n    }\r\n\r\n    async unitAssignMember(assigned:string):Promise<void> {\r\n        await mainApi.unitAssignMember(this.unit.id, this.roleMember.id, assigned);\r\n        this.roleMember.assigned = assigned;\r\n    }\r\n\r\n    async loadMemberRoles():Promise<void> {\r\n        let ret = await mainApi.unitMemberRoles(this.unit.id, this.roleMember.id);\r\n        let roles:Role[] = ret.map(v => {\r\n            let rId = v.id;\r\n            let role = this.roles.find(r => r.id === rId);\r\n            return _.clone(role);\r\n        });\r\n        this.memberRoles = roles;\r\n    }\r\n\r\n    async setMemberRoles(memberRoles:Role[]) {\r\n        await mainApi.unitSetMemberRoles(this.unit.id, this.roleMember.id, memberRoles.map(v=>v.id));\r\n        this.roles.forEach(role => {\r\n            let rId = role.id;\r\n            let org = this.memberRoles.find(v => v.id === rId);\r\n            let cur = memberRoles.find(v => v.id === rId);\r\n            if (org !== undefined) {\r\n                if (cur !== undefined) return;\r\n                role.count--;\r\n                return;\r\n            }\r\n            if (cur === undefined) return;\r\n            role.count++;\r\n        });\r\n        this.memberRoles = memberRoles;\r\n    }\r\n};\r\n\r\nexport const store = new Store();\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Context, Form, Schema, UiSchema, UiTextItem} from 'tonva';\r\nimport {store} from '../store';\r\n\r\n@observer\r\nexport default class NewFellowPage extends React.Component<{isOwner:boolean, isAdmin:boolean}> {\r\n    //private form: TonvaForm;\r\n    private schema: Schema = [\r\n        {name:'user', type:'string', required:true},\r\n        {name:'submit', type:'submit'}\r\n    ]\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            user: {widget:'text', maxLength: 100, placeholder: '用户名', label: '管理员'} as UiTextItem,\r\n            submit: {widget:'button', label: '添加', className: 'btn btn-primary'}\r\n        }\r\n    }\r\n    /*\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '用户名',\r\n            field: {\r\n                type: 'string',\r\n                name: 'user',\r\n                required: true,\r\n                maxLength: 100,\r\n            },\r\n            face: {\r\n                type: 'string',\r\n                placeholder: '用户名',\r\n            }\r\n        },\r\n    ];\r\n    private schema:FormSchema = new FormSchema({\r\n        fields: [\r\n            {\r\n                type: 'string',\r\n                name: 'user',\r\n                placeholder: '用户名',\r\n                label: '邀请成员',\r\n                rules: ['required', 'maxlength:100']\r\n            },\r\n        ],\r\n        onSumit: this.onSendInvitation,\r\n        submitText: '邀请'\r\n    });\r\n    */\r\n    private onSendInvitation = async (name:string, context:Context): Promise<string> => {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let user = context.form.data['user'];\r\n        let ret = await store.admins.addNew(user, isOwner?1:0, isAdmin?1:0);\r\n        if (ret !== undefined) {\r\n            nav.pop();\r\n            return;\r\n        }\r\n        return user + '没有关注小号';\r\n        /*\r\n        let msg = {a: 1, b: 'ddd'};\r\n        let toName = values['user'];\r\n        let userId = await mainApi.userId(toName);\r\n        if (userId === 0) {\r\n            this.form.formView.setError('user', '\\'' + toName +  '\\' 不存在');\r\n            return;\r\n        }\r\n        await mainApi.sendMessage(userId, 'unit-follow-invite', msg);\r\n        nav.replace(<Page header='完成' back=\"close\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>邀请成员</CardTitle>\r\n                    <CardText>已发送给{toName}，请等待确认。</CardText>\r\n                    <Button color='primary' onClick={()=>nav.back()}>完成</Button>\r\n                </CardBody>\r\n            </Card>\r\n        </Page>);\r\n        */\r\n    }\r\n    render() {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let caption = isOwner? \"高管\" : \"管理员\";\r\n        return <Page header={'新增' + caption}>\r\n            <div className=\"container\">\r\n                <div className='my-4 text-info'>\r\n                    只有关注本小号的用户，才能成为{caption}\r\n                </div>\r\n                <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSendInvitation}/>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n// <ValidForm formSchema={this.schema} />\r\n//<TonvaForm ref={f=>this.form=f} formRows={this.formRows} onSubmit={this.onSendInvitation} />\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Schema, UiSchema, ItemSchema, UiCheckItem, UiButton, ButtonSchema, Form, Context, Image} from 'tonva';\r\nimport {store} from '../store';\r\nimport { UnitAdmin } from '../model/index';\r\n//import {mainApi} from '../api';\r\n//, ValidForm, FormSchema, FormFields, Field\r\n\r\n@observer\r\nexport default class EditAdmin extends React.Component {\r\n    private onSubmit = async (name:string, context:Context) => {\r\n        let {isOwner, isAdmin} = context.form.data;\r\n        await store.admins.unitSetAdmin(isOwner, isAdmin);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit} = store;\r\n        let {isRoot, isOwner, isAdmin} = unit;\r\n        let unitAdmin = store.admins.cur;\r\n        let owner:ItemSchema = {name: 'isOwner', type: 'boolean'};\r\n        let admin:ItemSchema = {name: 'isAdmin', type: 'boolean'};\r\n        let submit:ButtonSchema = {name: 'submit', type: 'submit'};\r\n        let schema:ItemSchema[];\r\n        if (isRoot === 1) schema = [owner, admin, submit];\r\n        else if (isOwner === 1) schema = [admin, submit];\r\n        let data = {\r\n            isOwner: unitAdmin.isOwner,\r\n            isAdmin: unitAdmin.isAdmin,\r\n        };\r\n\r\n        let uiSchema = {\r\n            items: {\r\n                'isOwner': {widget: 'checkbox', label: '高管', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'isAdmin': {widget: 'checkbox', label: '管理员', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'submit': {widget: 'button', label: '提交', className: 'btn btn-primary'} as UiButton,\r\n            }\r\n        };\r\n\r\n        return <Page header='权限'>\r\n            <div className=\"px-3\">\r\n                <Fellow {...store.admins.cur} />\r\n                <Form schema={schema} uiSchema={uiSchema} formData={data} onButtonClick={this.onSubmit} />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nconst Fellow = (props:UnitAdmin) => {\r\n    let {name, nick, icon} = props;\r\n    //<img className='w-75' src={icon || process.env.REACT_APP_DEFAULT_ICON} />\r\n    return <div>\r\n        <div className='d-flex my-4'>\r\n            <Image className=\"w-3c h-3c mr-3\" src={icon} />\r\n            <div className=\"\">\r\n                <h4 className='text-dark'>{name}</h4>\r\n                {nick && <h6><small className='text-secondary'>{nick}</small></h6>}\r\n            </div>\r\n        </div>\r\n        <hr className='mb-4' />\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Image} from 'tonva';\r\nimport {UnitApps, UnitAdmin} from '../model';\r\nimport {store} from '../store';\r\nimport NewFellow from './NewFellow';\r\nimport EditAdmin from './EditAdmin';\r\nimport {LMR, Badge, List} from 'tonva';\r\n\r\n@observer\r\nexport default class AdministorsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.admins.load();\r\n    }\r\n\r\n    onNewFellow() {\r\n        //nav.push(<NewFellow />);\r\n    }\r\n    onItemClick(ua:UnitAdmin) {\r\n        store.admins.cur = ua;\r\n        nav.push(<EditAdmin />);\r\n    }\r\n    private row = ({icon, name, nick}:UnitAdmin) => {\r\n        let content = nick?\r\n            <><b>{nick}</b> &nbsp; <small className=\"text-muted\">{name}</small></>\r\n            :\r\n            <b>{name}</b>;\r\n        let left = <Image className=\"w-2-5c h-2-5c\" src={icon} />; \r\n        return <LMR className=\"py-2 px-3 align-items-stretch\" left={left}>\r\n            <div className=\"px-3\">{content}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    private onNewOwner = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, true, false);\r\n    }\r\n\r\n    private onNewAdmin = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, false, true);\r\n    }\r\n\r\n    private newAdmin(evt: React.MouseEvent<HTMLAnchorElement>, isOwner:boolean, isAdmin:boolean) {\r\n        evt.preventDefault();\r\n        nav.push(<NewFellow isOwner={isOwner} isAdmin={isAdmin} />);\r\n    } \r\n    render() {\r\n        //let n = nav;\r\n        //let me = n.local.user.get().id;\r\n        let {unit} = store;\r\n        if (unit === undefined) return;\r\n        let {owners, admins, fellows} = store.admins;\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.onNewFellow}>新增成员</button>;\r\n\r\n        let showOwners = false, showAdmins = false;\r\n        let ownersView, adminsView, fellowsView;\r\n        if (unit.isRoot === 1) {\r\n            showOwners = true;\r\n            showAdmins = true;\r\n        }\r\n        if (unit.isOwner === 1) showAdmins = true;\r\n        if (showOwners === true) {\r\n            let header = <LMR \r\n                className=\"px-3 py-1 small\"\r\n                left=\"高管\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewOwner}>新增</a>} />;\r\n            ownersView = <List \r\n                className=\"my-4\"\r\n                header={header} items={owners}\r\n                none=\"[无]\"\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        if (showAdmins === true) {\r\n            let header = <LMR \r\n                className=\"px-3 py-1 small\"\r\n                left=\"管理员\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewAdmin}>新增</a>} />;\r\n            adminsView = <List \r\n                className='my-4' \r\n                header={header} items={admins} \r\n                none='[无]'\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        return <Page header=\"管理员\" right={right}>\r\n            {ownersView}\r\n            {adminsView}\r\n            <div className=\"my-4 p-3\">\r\n                <div className=\"ml-2 mb-2\">说明</div>\r\n                <div className=\"\">\r\n                    <ul className=\"pl-2\">\r\n                        <li className=\"card-text\">管理组包括主人、高管、管理员</li>\r\n                        <li className=\"card-text\">小号主人可以增减高管</li>\r\n                        <li className=\"card-text\">高管可以增减管理员</li>\r\n                        <li className=\"card-text\">管理员可以管理小号，程序的开发，以及用户</li>\r\n                        <li className=\"card-text\">开发号高管可以增减编辑APP，UQ，Server，Service</li>\r\n                        <li className=\"card-text\">开发号管理员可以编译指定UQ，BUS</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {EasyDate, EasyTime} from 'tonva';\r\n\r\nexport interface IdDatesProps {\r\n    date_init: Date;\r\n    date_update: Date;\r\n}\r\n\r\nexport class IdDates extends React.Component<IdDatesProps> {\r\n    render() {\r\n        let {date_init, date_update} = this.props;\r\n        return <small className=\"text-muted\">\r\n            最新: <EasyTime date={date_update}/>\r\n            <i className=\"fa fa-fw\" />\r\n            创建: <EasyDate date={date_init}/>\r\n        </small>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport function span(\r\n    isLink:boolean,\r\n    className:string, \r\n    onClick:(evt:React.MouseEventHandler<HTMLElement>)=>void,\r\n    content:any): JSX.Element\r\n{\r\n    let tag:string;\r\n    let props:any;\r\n    if (isLink === true) {\r\n        tag = 'a';\r\n        props = {\r\n            className: classNames(className, 'cursor-pointer'),\r\n            onClick: onClick,\r\n            href: '#',\r\n        }\r\n    }\r\n    else {\r\n        tag = 'span';\r\n        props = {\r\n            className: className,\r\n        }\r\n    }\r\n    return React.createElement(tag, props, content);\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {store} from '../store';\r\nimport {span} from './span';\r\n\r\nexport interface UnitLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UnitSpan extends React.Component<UnitLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UnitInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let content;\r\n        let {name, nick, discription} = unit;\r\n        let disc = discription && '- ' + discription;\r\n        if (nick) {\r\n            content = <>{nick} &nbsp; <small className=\"text-muted\">{name} {disc}</small></>;\r\n        }\r\n        else if (name) {\r\n            content = <>{name} &nbsp; <small className=\"text-muted\">{disc}</small></>;\r\n        }\r\n        else {\r\n            content = id;\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nexport class UnitName extends React.Component<UnitLinkProps> {\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let {name} = unit;\r\n        return <>{name}</>;\r\n    }\r\n}\r\n\r\nclass UnitInfo extends React.Component<UnitLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let unit = store.cacheUnits.get(this.props.id);\r\n        let {name, nick, icon, discription} = unit;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={discription} />},\r\n            '',\r\n        ];\r\n        return <Page header={'小号 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","export const appIcon = process.env.REACT_APP_ICON;\r\nexport const appItemIcon = process.env.REACT_APP_ITEM_ICON;\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {appIcon, appItemIcon} from 'consts';\r\nimport {store} from 'store';\r\nimport {IdDates} from './idDates';\r\nimport {span} from './span';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface UqLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UqSpan extends React.Component<UqLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UqInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, className, isLink} = this.props;\r\n        let api = store.cacheUqs.get(id);\r\n        let content;\r\n        if (api === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, discription} = api;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nclass UqInfo extends React.Component<UqLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let uq = store.cacheUqs.get(this.props.id);\r\n        let {name, discription, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n        ];\r\n        return <Page header={'UQ - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {store} from '../store';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface AppSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class AppSpan extends React.Component<AppSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheApps.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<AppInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let app = store.cacheApps.get(id);\r\n        let content;\r\n        if (app === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, icon, discription} = app;\r\n            let isPublic = app.public;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n\r\n@observer\r\nclass AppInfo extends React.Component<AppSpanProps> {\r\n    private rows:Prop[];\r\n    @observable private apis:ListProp = {\r\n        label: '关联API', type: 'list', list: undefined, row: AppRow\r\n    };\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    async componentDidMount() {\r\n        this.apis.list = await devApi.loadAppUqs(this.props.id);\r\n    }\r\n    render() {\r\n        let app = store.cacheApps.get(this.props.id);\r\n        let {unit, name, discription, icon, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            this.apis,\r\n        ];\r\n        return <Page header={'APP - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass AppRow extends React.Component<any> {\r\n    render() {\r\n        let {name, discription} = this.props;\r\n        let disp;\r\n        if (discription) disp = <div className=\"small text-muted\">{discription}</div>;\r\n        return <div className='form-control-plaintext'>\r\n            <div>{name}</div>\r\n            {disp}\r\n        </div>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {store} from '../store';\r\nimport {DevModel} from '../model';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface ServerSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class ServerSpan extends React.Component<ServerSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheServers.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<ServerInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let server = store.cacheServers.get(id);\r\n        let content;\r\n        if (server === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {cloud, ip, discription} = server;\r\n            if (discription !== undefined) {\r\n                content = <React.Fragment>{discription} &nbsp; <small className=\"text-muted\">{ip}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\nclass ServerInfo extends React.Component<ServerSpanProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let server = store.cacheServers.get(this.props.id);\r\n        let {discription, cloud, ip, unit, date_init, date_update} = server;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={ip} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <Page header={'服务器 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva';\r\n\r\ninterface StringValueEditProps {\r\n    title: string;\r\n    onChanged:(value:any, orgValue:any)=>Promise<string|void>;\r\n    value?: any;\r\n    buttonText?: string;\r\n    info?: string;\r\n}\r\ninterface StringValueEditState {\r\n    disabled: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport class StringValueEdit extends React.Component<StringValueEditProps, StringValueEditState> {\r\n    //private input:HTMLInputElement;\r\n    protected value: string;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: true,\r\n        };\r\n    }\r\n    /*\r\n    private ref = (input:HTMLInputElement) => {\r\n        if (!input) return;\r\n        input.value = this.props.value || '';\r\n        this.input = input;\r\n    }*/\r\n    private onChange = (evt:React.FormEvent<HTMLInputElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        });\r\n        \r\n    }\r\n    protected onSubmit = async () => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        let v = this.value; // this.input.value.trim();\r\n        let onChanged = this.props.onChanged;\r\n        if (onChanged !== undefined) {\r\n            let ret = await onChanged(v, org);\r\n            if (typeof ret === 'string') {\r\n                this.setState({error: ret});\r\n                return;\r\n            }\r\n            nav.pop();\r\n        }\r\n    }\r\n    protected renderControl() {\r\n        return <input className=\"form-control w-100\" type=\"text\"\r\n            // ref={this.ref}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onChange} />\r\n    }\r\n    render() {\r\n        let {title, onChanged, buttonText, info, value} = this.props;\r\n        let {disabled, error} = this.state;\r\n        let right = <button\r\n            className=\"btn btn-success btn-sm\"\r\n            disabled={disabled}\r\n            onClick={this.onSubmit}\r\n        >\r\n            {buttonText||'保存'}\r\n        </button>;\r\n        let errorDiv;\r\n        if (error !== undefined) errorDiv = <div className='text-danger'>{error}</div>;\r\n        return <Page header={title} right={right}>\r\n            <div className=\"my-4 mx-3\">\r\n                {this.renderControl()}\r\n                {errorDiv}\r\n                <small className=\"d-block mt-2 text-muted\">{info}</small>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class TextValueEdit extends StringValueEdit {\r\n    /*\r\n    private textArea:HTMLTextAreaElement;\r\n    private refTextArea = (textArea:HTMLTextAreaElement) => {\r\n        if (!textArea) return;\r\n        textArea.value = this.props.value || '';\r\n        this.textArea = textArea;\r\n    }\r\n    */\r\n    private onTextAreaChange = (evt:React.FormEvent<HTMLTextAreaElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        })\r\n    }\r\n    protected renderControl() {\r\n        return <textarea className=\"form-control w-100\" rows={8}\r\n            // ref={this.refTextArea}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onTextAreaChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, Page } from 'tonva';\r\nimport { SearchBox, List } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport interface IdPickPageProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n    idFromItem: (item:any) => number;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\n\r\n@observer\r\nexport class IdPickPage extends React.Component<IdPickPageProps> {\r\n    @observable private items:any[];\r\n\r\n    async componentDidMount() {\r\n        let {candidateItems, params} = this.props;\r\n        this.items = Array.isArray(candidateItems)? \r\n            candidateItems \r\n            : await candidateItems(params, '');\r\n    }\r\n    private itemClick = (item:any):Promise<void> => {\r\n        let {resolve, idFromItem} = this.props;\r\n        resolve(idFromItem(item));\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private onSearch = async (key: string):Promise<void> => {\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.items = ret;\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid, FA} from 'tonva';\r\nimport {nav, Page, PageItems} from 'tonva';\r\nimport {IdDates, UnitSpan} from '../tools';\r\nimport {UnitApp, DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport { devApi } from 'api';\r\n\r\n@observer\r\nexport class Info extends React.Component<{app:UnitApp, appActed?:(appId:number, inUnit:number)=>void}> {\r\n    @observable private uqAccesses: any[];\r\n    async componentWillMount() {\r\n        this.uqAccesses = await devApi.loadAppUqs(this.props.app.id);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:any, index:number):JSX.Element => {\r\n        let {name, owner, unit, discription} = uqAccess;\r\n        return <LMR className=\"py-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            {owner} / {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private act = async () => {\r\n        let {app, appActed} = this.props;\r\n        let {id, unit, inUnit} = app;\r\n        let newInUnit:number = 1;\r\n        if (inUnit === 0) {\r\n            let ret = await store.restoreUnitApp(id);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        else if (inUnit === 1) {\r\n            await store.stopUnitApp(id);\r\n            newInUnit = 0;\r\n        }\r\n        else {\r\n            let newApp:UnitApp = _.clone(app);\r\n            newApp.id = id;\r\n            newApp.inUnit = 1;\r\n            let ret = await store.addUnitApp(newApp);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        if (appActed !== undefined) {\r\n            appActed(id, newInUnit);\r\n        }\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, icon, inUnit, date_init, date_update} = this.props.app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let faName:string, text:string, color:string;\r\n        if (inUnit === 1) {\r\n            faName = 'ban';\r\n            text = '停用APP';\r\n            color = 'btn-danger';\r\n        }\r\n        else if (inUnit === 0) {\r\n            faName = 'refresh';\r\n            text = '恢复APP';\r\n            color = 'btn-success';\r\n        }\r\n        else {\r\n            faName = 'plus';\r\n            text = '启用APP';\r\n            color = 'btn-primary';\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '关联UQ', \r\n                component: <List className=\"w-100\" items={this.uqAccesses} item={{render: this.renderUqRow}} />\r\n            },\r\n            '',\r\n            '',\r\n            {\r\n                type: 'component', \r\n                bk: '', \r\n                component: <button className={classNames('btn', 'w-100', color)} onClick={this.act}>\r\n                    <FA name={faName} size=\"lg\" /> {text}\r\n                </button>\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IObservableArray} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid} from 'tonva';\r\nimport {nav, Page, PageItems, Image} from 'tonva';\r\nimport {mainApi} from '../api';\r\nimport {store} from '../store';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\nclass PageApps extends PageItems<UnitApp> {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super();\r\n        this.unitId = unitId;\r\n    }\r\n    protected async load():Promise<UnitApp[]> {\r\n        return await mainApi.searchApp(this.unitId, this.param, this.pageStart, this.pageSize);\r\n    }\r\n    protected setPageStart(item:UnitApp) {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}\r\n\r\n@observer\r\nexport class NewApp extends React.Component {\r\n    private apps: PageApps;\r\n    constructor(props) {\r\n        super(props);\r\n        this.apps = new PageApps(store.unit.id);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.apps.first(key);\r\n    }\r\n    private appClick = (app:UnitApp) => {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} appActed={this.appActed}/>\r\n        </Page>);\r\n    }\r\n    private appActed = (appId:number, inUnit:number) => {\r\n        let apps = this.apps.items as IObservableArray<UnitApp>; //.replace .find(v => v.id === appId);\r\n        let app = apps.find(v => v.id === appId);\r\n        app.inUnit = inUnit;\r\n        apps.replace([app]);\r\n    }\r\n    private renderApp(app:UnitApp):JSX.Element {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let right;\r\n        if (inUnit === 1)\r\n            right = <small>已启用</small>;\r\n        else if (inUnit === 0)\r\n            right = <small>已停用</small>;\r\n        return <LMR className=\"px-3 py-2\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    render() {\r\n        let items = this.apps.items;\r\n        let center = <SearchBox onSearch={this.onSearch} \r\n            className=\"w-100 mx-1\" \r\n            placeholder=\"搜索App\" \r\n            maxLength={100} />;\r\n        return <Page header={center}>\r\n            <List\r\n                items={items}\r\n                item={{onClick:this.appClick, render:this.renderApp}}\r\n                before=\"搜索App名字\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, FA, LMR, Badge} from 'tonva';\r\nimport {nav, Page, Image} from 'tonva';\r\nimport {store} from '../store';\r\nimport {NewApp} from './new';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\n@observer\r\nexport default class AppsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n    }\r\n    private itemRender(app:UnitApp, index:number) {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let ban;\r\n        if (inUnit === 0)\r\n            ban = <FA className=\"text-danger\" name='ban' />;\r\n        return <LMR className=\"px-3 py-1\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={ban}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private appClick(app:UnitApp) {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} />\r\n        </Page>);\r\n    }\r\n    private newItem() {\r\n        nav.push(<NewApp {...this.props} />);\r\n    }\r\n    render() {\r\n        let right = <button \r\n            className='btn btn-secondary btn-sm' \r\n            onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"启停App\" right={right}>\r\n            <List items={store.apps} item={{render: this.itemRender, onClick: this.appClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {TonvaForm, SubmitResult, FormRow} from 'tonva-form';\r\nimport {nav, Page, ItemSchema, StringSchema, UiSchema, Form, Context} from 'tonva';\r\nimport {store} from '../store';\r\n\r\nexport class NewRole extends React.Component {\r\n    /*\r\n    private form:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n    ];*/\r\n    private schema: ItemSchema[] = [\r\n        {name: 'name', type: 'string', maxLength: 5, required: true} as StringSchema,\r\n        {name: 'discription', type: 'string', maxLength: 250},\r\n        {name: 'submit', type: 'button'},\r\n    ];\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'},\r\n            discription: {widget: 'textarea', label: '描述'},\r\n            submit: {widget:'button', label: '提交'}\r\n        }\r\n    }\r\n    private onSubmit = async (buttonName:string, context: Context):Promise<SubmitResult> => {\r\n        //let {name, discription} = values;\r\n        let {name, discription} = this.context.formData;\r\n        let id = await store.unitAddRole(name, discription);\r\n        if (id <= 0) {\r\n            this.context.setError('name', '角色名 ' + name + ' 已经存在');\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    render() {\r\n        return <Page header=\"新建角色\">\r\n            <Form className=\"m-3\" \r\n                schema={this.schema} uiSchema={this.uiSchema} \r\n                formData={{}}\r\n                onButtonClick={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n    /*\r\n    <TonvaForm className=\"m-3\" ref={tf => this.form = tf} \r\n    formRows={this.formRows} \r\n    onSubmit={this.onSubmit} />\r\n    */\r\n}\r\n","import * as React from 'react';\r\nimport {List, LMR} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\n\r\ninterface Props {\r\n    role: Role;\r\n}\r\ninterface State {\r\n    apps: UnitApp[]\r\n}\r\nexport class RoleApps extends React.Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {apps:undefined};\r\n    }\r\n    async componentDidMount() {\r\n        let ret = await mainApi.unitRoleApps(store.unit.id, this.props.role.id);\r\n        this.setState({\r\n            apps: ret,\r\n        });\r\n    }\r\n    private renderRoleApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    render() {\r\n        let {role} = this.props;\r\n        return <Page header={role.name + ' - 可用APP'}>\r\n            <List\r\n                items={this.state.apps}\r\n                item={{render: this.renderRoleApp}}\r\n                none=\"没有APP\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Media, Muted, PropGrid, Prop} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {StringValueEdit} from '../tools';\r\nimport {RoleApps} from './roleApps';\r\n\r\n@observer\r\nexport class MemberPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    async onAssigned(value:any, orgValue:any):Promise<void> {\r\n        await store.unitAssignMember(value);\r\n    }\r\n    private renderMemberRole = (role:Role) => {\r\n        let {name, discription} = role;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={name}\r\n                right={<Muted>{discription}</Muted>} />\r\n    }\r\n    private roleClick(role:Role) {\r\n        nav.push(<RoleApps role={role} />);\r\n    }\r\n    private setRole = () => {\r\n        nav.push(<SetRole />);\r\n    }\r\n    render() {\r\n        let roleUser = store.roleMember;\r\n        let {nick, name, assigned, icon} = roleUser;\r\n        let disp = <div>\r\n            <div><Muted>唯一名: </Muted> &nbsp; {name}</div>\r\n            <div><Muted>昵称: </Muted> &nbsp; {nick||<Muted>[无]</Muted>}</div>\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component',\r\n                component: <Media icon={icon||appIcon} main={roleUser.assigned||nick||name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                label: '备注名',\r\n                type: 'string',\r\n                name: 'assigned',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改备注名\"\r\n                    value={roleUser.assigned}\r\n                    onChanged={this.onAssigned} \r\n                    info=\"加一个备注，便于甄别用户\" />),\r\n            },\r\n            '',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.setRole}>修改角色</button>;\r\n        return <Page header=\"用户详情\" right={right}>\r\n            <PropGrid rows={rows} values={roleUser} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 所属角色</small></div>\r\n            <List\r\n                items={store.memberRoles} \r\n                item={{render: this.renderMemberRole, onClick: this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass SetRole extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    private renderRole(role:Role, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={role.name}\r\n                right={<small className=\"text-muted\">{role.discription}</small>} />\r\n    }\r\n    private roleSelect(role:Role, isSelected: boolean, anySelected: boolean) {\r\n    }\r\n    private async submit() {\r\n        await store.setMemberRoles(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let roles = store.roles;\r\n        let memberRoles = store.memberRoles;\r\n        return <Page header=\"修改角色\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={roles}\r\n                selectedItems={memberRoles}\r\n                compare={(role:Role, selectRole:Role)=>role.id === selectRole.id}\r\n                item={{render: this.renderRole, onSelect: this.roleSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, Badge, FA, Muted, SearchBox} from 'tonva';\r\nimport {nav, Page, Image} from 'tonva';\r\nimport {Role, RoleMember} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\nimport {MemberPage} from './memberPage';\r\n\r\n@observer\r\nexport class MembersPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadMembers();\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    private onSearch() {\r\n        let role = store.role;\r\n        let roleId = role === undefined? 0:role.id;\r\n        nav.push(<MemberSearch roleId={roleId} />);\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-sm\" onClick={this.onSearch}><FA name=\"search\" /></button>;\r\n        return <Page header=\"用户\" right={right}>\r\n            <List items={store.roleMembers} item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\nconst MemberRow = (member:RoleMember) => {\r\n    let {nick, name, assigned, icon} = member;\r\n    let content;\r\n    if (assigned)\r\n        content = <><div><b>{assigned}</b> <Muted>{nick}</Muted></div><Muted>{name}</Muted></>;\r\n    else if (nick)\r\n        content = <><div><b>{nick}</b></div><Muted>{name}</Muted></>;\r\n    else\r\n        content = <div><b>{name}</b></div>;\r\n    return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n        left={<Badge size=\"sm\"><Image src={icon} /></Badge>}>\r\n        <div className=\"px-3\">{content}</div>\r\n    </LMR>;\r\n};\r\n\r\ninterface SearchProps {\r\n    roleId: number;\r\n}\r\ninterface SearchState {\r\n    members: RoleMember[];\r\n}\r\nexport class MemberSearch extends React.Component<SearchProps, SearchState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.state = {\r\n            members: null,\r\n        }\r\n    }\r\n    private async onSearch(key:string) {\r\n        let ret = await mainApi.unitMembers(store.unit.id, this.props.roleId, key, 0, 100);\r\n        this.setState({members: ret});\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            maxLength={100}\r\n            placeholder=\"搜索用户\" />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.state.members}\r\n                item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, Media, LMR, FA, PropGrid, Prop} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {StringValueEdit} from '../tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {MembersPage} from './membersPage';\r\n\r\n@observer\r\nexport class RolePage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private editRole() {\r\n        nav.push(<EditRole />);\r\n    }\r\n    private renderRoleApp = (app:UnitApp, index:number) => {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private roleAppClick = (app:UnitApp) => {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private addRoleApp() {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private members() {\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let {name, discription, count} = store.role;\r\n        let onMembersClick, membersLeft, membersRight;\r\n        if (count===undefined || count===null || count===0) {\r\n            membersLeft = <small className=\"text-muted\">无用户</small>;\r\n        }\r\n        else {\r\n            membersLeft = `共有 ${count} 用户`;\r\n            membersRight = <div><FA name=\"angle-right\" /></div>;\r\n            onMembersClick = this.members;\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={undefined} main={name} discription={discription} />,\r\n                onClick: this.editRole,\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\" left={membersLeft} right={membersRight} />,\r\n                onClick: onMembersClick,\r\n            },\r\n            '=',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={()=>this.addRoleApp()}><FA name=\"plus\" /> APP</button>;\r\n        return <Page header=\"角色\" right={right}>\r\n            <PropGrid rows={rows} values={{}} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 可用APP列表</small></div>\r\n            <List\r\n                items={store.roleApps} \r\n                item={{render: this.renderRoleApp, onClick:this.roleAppClick}}\r\n                none={<small className=\"text-muted px-3 py-1\">没有APP, 点击右上角按钮选择APP</small>} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass EditRole extends React.Component {\r\n    async onNameChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('name', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('discription', value);\r\n    }\r\n    render() {\r\n        let role = store.role;\r\n        let {id} = role;\r\n        let isSysRole = id === 1 || id === 2;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                label: '名称', \r\n                type: 'string',\r\n                name: 'name', \r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改名称\"\r\n                    value={role.name}\r\n                    onChanged={this.onNameChanged} \r\n                    info=\"好的名字便于理解\" />)\r\n            },\r\n            {\r\n                label: '描述',\r\n                type: 'string',\r\n                name: 'discription',\r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改描述\"\r\n                    value={role.discription}\r\n                    onChanged={this.onDiscriptionChanged} \r\n                    info=\"对角色做一个说明\" />)\r\n            },\r\n        ];\r\n        return <Page header=\"修改角色信息\">\r\n            <PropGrid rows={rows} values={role} alignValue=\"right\" />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass RoleApps extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private renderApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-1 px-2 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private appSelect(app:UnitApp, isSelected: boolean, anySelected: boolean) {\r\n\r\n    }\r\n    private async submit() {\r\n        await store.setRoleApps(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let apps = store.apps;\r\n        let roleApps = store.roleApps;\r\n        return <Page header=\"选择APP\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={apps}\r\n                selectedItems={roleApps}\r\n                item={{render: this.renderApp, onSelect: this.appSelect}} />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Muted} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {NewRole} from './newRole';\r\nimport {RolePage} from './rolePage';\r\nimport {MembersPage} from './membersPage';\r\n\r\nconst midClassName = classNames('d-flex', 'h-100', 'align-items-center', 'px-5', 'small', 'text-muted');\r\n\r\n@observer\r\nexport class Members extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n    }\r\n    private renderRole = (role:Role, index:number) => {\r\n        let {name, discription, count} = role;\r\n        return <LMR\r\n            className=\"px-3 py-2\" \r\n            left={name}\r\n            right={String(count || '')}>\r\n            <div className={midClassName}>\r\n                {discription}\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private roleClick = (role:Role) => {\r\n        store.setRole(role);\r\n        nav.push(<RolePage />)\r\n    }\r\n    private newRole = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        evt.preventDefault();\r\n        nav.push(<NewRole />);\r\n    }\r\n    private allUsersClick = () => {\r\n        store.setRole(undefined);\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let right = <a className=\"small\" href='#' onClick={this.newRole}>新增</a>;\r\n        let header = <LMR className=\"px-3 small bg-light\" left=\"角色\" right={right} />;\r\n        return <Page header=\"用户角色\">\r\n            <LMR\r\n                className=\"my-3 px-3 py-2 bg-white\" \r\n                left={'用户'}\r\n                right={String(store.memberCount)}\r\n                onClick={this.allUsersClick}>\r\n                <div className={midClassName}>\r\n                    设置用户角色\r\n                </div>\r\n            </LMR>\r\n            <List\r\n                header={header}\r\n                items={store.roles}\r\n                none=\"[无]\"\r\n                item={{render:this.renderRole, onClick:this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { AppController } from '.';\r\nimport { VPage, nav, Page, ItemSchema, UiSchema, StringSchema, BoolSchema, \r\n    UiTextItem, UiTextAreaItem, UiCheckItem, Form, \r\n    ButtonSchema, Context, ImageSchema, UiImageItem, IdSchema, UiIdItem } from 'tonva';\r\nimport { createIdPick, IdPickProps } from 'createIdPick';\r\nimport { DevModel } from 'model';\r\nimport { store } from 'store';\r\nimport { IdPickPage, ServerSpan } from '../../tools';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst schema:ItemSchema[] = [\r\n    {name: 'name', type: 'string', maxLength: 100, required: true} as StringSchema,\r\n    {name: 'caption', type: 'string', maxLength: 100} as StringSchema,\r\n    {name: 'discription', type: 'string', maxLength: 250} as StringSchema,\r\n    {name: 'url', type: 'string', maxLength: 200} as StringSchema,\r\n    {name: 'public', type: 'boolean'} as BoolSchema,\r\n    {name: 'server', type: 'id'} as IdSchema,\r\n    {name: 'icon', type: 'image'} as ImageSchema,\r\n    {name: 'submit', type: 'submit'} as ButtonSchema,\r\n];\r\n\r\nexport abstract class EditBasePage extends VPage<AppController> {\r\n    private candidateItems = async (params:any, key:string):Promise<any[]> => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    }\r\n\r\n    private moreCandidates = async ():Promise<void> => {\r\n        await store.dev.searchServer.more();\r\n    }\r\n\r\n    private renderRow = (item:DevModel.Server, index:number): JSX.Element => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    }\r\n\r\n    private pickServerId = (context:Context, name:string, value:number): Promise<number> => {\r\n        return new Promise<number>((resolve, reject) => {\r\n            nav.push(<IdPickPage \r\n                caption=\"选择服务器\" \r\n                searchPlaceHolder=\"搜索服务器\"\r\n                candidateItems={this.candidateItems}\r\n                moreCandidates={this.moreCandidates}\r\n                row={this.renderRow}\r\n                idFromItem={(item:DevModel.Server) => item.id}\r\n                resolve={resolve} params={undefined} />, \r\n                ()=> {\r\n                    reject();\r\n                });\r\n        });\r\n    }\r\n\r\n    private renderServerInput = (itemId:number): JSX.Element => {\r\n        return <ServerSpan id={itemId} />;\r\n    };\r\n\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'} as UiTextItem,\r\n            caption: {widget: 'text', label: '标题'} as UiTextItem,\r\n            discription: {widget: 'textarea', label: '描述', rows: 5} as UiTextAreaItem,\r\n            url: {widget: 'text', label: 'URL', placeholder: 'http(s)://APP地址'} as UiTextItem,\r\n            'public': {widget: 'checkbox', label: '公开', } as UiCheckItem,\r\n            server: {widget: 'id', label: '服务器', pickId: this.pickServerId, Templet: this.renderServerInput} as UiIdItem,\r\n            icon: {widget: 'image', label: '标志图'} as UiImageItem,\r\n            submit: {widget: 'button', label: '提交', className: 'btn btn-primary'}\r\n        }\r\n    }\r\n    \r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onButtonClick = async (name:string, context: Context) => {\r\n        let {data} = context;\r\n        let app:DevModel.App = _.clone(this.controller.app) || {} as any;\r\n        _.merge(app, data);\r\n        await this.controller.saveApp(app);\r\n        nav.pop();\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form = observer(() => {\r\n        return <Form fieldLabelSize={2}\r\n            className=\"m-3\" \r\n            schema={schema} \r\n            uiSchema={this.uiSchema}\r\n            formData={this.initValues}\r\n            onButtonClick={this.onButtonClick} />\r\n    });\r\n    abstract get initValues():any;\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    get initValues():any {return this.controller.app}\r\n    protected page = () => {\r\n        let {app} = this.controller;\r\n        let {name} = app;\r\n        return <Page header={'修改APP - ' + name} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    get initValues():any {return {}}\r\n    protected page = () => {\r\n        return <Page header={'新建APP'} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, Image } from 'tonva';\r\nimport { AppController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class AppsPage extends VPage<AppController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {appList, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"App\" right={right}>\r\n            <List items={appList} item={{render: this.appRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private appRow = (item:DevModel.App):JSX.Element => {\r\n        let {name, caption, discription, icon, url, urlDebug} = item;\r\n        let left = <Badge size=\"sm\"><Image src={icon} /></Badge>;\r\n        let right = <div className=\"text-muted small text-right\">\r\n            {url || '-'}<br/>\r\n            {urlDebug}\r\n        </div>;\r\n        let spanCaption = caption?\r\n            <>{name}: <b>{caption}</b></> :\r\n            <b>{name}</b>;\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={left} right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{spanCaption}</div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { List, LMR, SearchBox } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { UnitSpan } from 'tools';\r\nimport { store } from 'store';\r\nimport { nav, Page, VPage } from 'tonva';\r\nimport { AppController } from '.';\r\n\r\nexport class SearchUqPage extends VPage<AppController> {\r\n    @observable private uqs: DevModel.UQ[];\r\n\r\n    async open() {\r\n        this.uqs = await this.controller.getMyUqs();\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.uqs = await this.controller.searchUq(key, pageStart, pageSize);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch}\r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={this.uqs} item={{render: this.row, onClick: this.controller.onUq}} />\r\n        </Page>;\r\n    });\r\n\r\n    private row = (uq: DevModel.UQ) => {\r\n        let {owner, name, discription} = uq;\r\n        return <LMR className=\"py-2 px-3\" right={discription}>\r\n            <div>{owner} / {name}</div>\r\n        </LMR>;\r\n    };\r\n}\r\n\r\n@observer\r\nexport class AppUqs extends React.Component {\r\n    @observable anySelected: boolean = false;\r\n    private list:List;\r\n    private onSelect = (item: DevModel.UQ, isSelected:boolean, anySelected:boolean) => {\r\n        this.anySelected = anySelected;\r\n    }\r\n    private row = (item: DevModel.UQ) => {\r\n        let {name, unit, discription} = item;\r\n        return <LMR className=\"p-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            <UnitSpan id={unit} />/{name}\r\n        </LMR>;\r\n    }\r\n    private removeBind = () => {\r\n        if (this.list === null) return;\r\n        let {selectedItems} = this.list;\r\n        if (selectedItems === undefined) return;\r\n        if (selectedItems.length === 0) return;\r\n        store.dev.apps.appBindUq(\r\n            selectedItems.map(v => {\r\n                return {id:v.id, access:['*']}\r\n            }), \r\n            false);\r\n    }\r\n    render() {\r\n        let btnProps = this.anySelected?\r\n            {color:'danger', onClick:this.removeBind, icon:'trash', text:'取消'}:\r\n            {color:'primary', onClick:()=>nav.push(<Uqs/>), icon:'plus', text:'新增'};\r\n        let btn = (p)=><button \r\n            className={classNames('btn', 'btn-outline-'+p.color, 'btn-sm')} \r\n            onClick={p.onClick}>\r\n            <i className={\"fa fa-\" + p.icon} /> {p.text}关联\r\n        </button>;\r\n        let listHeader = <div className=\"va-row py-1 justify-content-center\">{btn(btnProps)}</div>;\r\n        return <Page header=\"关联UQ\">\r\n            <List ref={list=>this.list=list} header={listHeader}\r\n                items={store.dev.apps.uqs}\r\n                item={{render: this.row, onSelect: this.onSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass Uqs extends React.Component {\r\n    onSearch = async (key:string) => {\r\n        await store.dev.apps.searchUq(key);\r\n    }\r\n    onBind(uq: DevModel.UQ, bind: boolean) {\r\n        store.dev.apps.appBindUq([{id:uq.id, access:['*']}], bind);\r\n    }\r\n    row = (uq: DevModel.UQ) => {\r\n        let isConnected = store.dev.apps.uqs.find(a => a.id === uq.id) !== undefined;\r\n        let cn = ['btn', 'btn-sm'];\r\n        let btnContent:any, onClick:any;\r\n        if (isConnected) {\r\n            cn.push('btn-success');\r\n            onClick = ()=>this.onBind(uq, false);\r\n            btnContent = \"已关联\";\r\n        }\r\n        else {\r\n            cn.push('btn-primary');\r\n            onClick = ()=>this.onBind(uq, true);\r\n            btnContent = <span><i className=\"fa fa-check\"/> 关联</span>;\r\n        }\r\n        return <div className=\"d-flex justify-content-start py-1 px-3\">\r\n            <div className=\"align-self-center\">{uq.name + ' - ' + uq.discription}</div>\r\n            <footer className=\"ml-auto\"><button className={classNames(cn)} onClick={onClick}>{btnContent}</button></footer>\r\n        </div>\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={store.dev.apps.searchedUqs} item={{render: this.row}} loading={null} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { AppController, UqAccess } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan, UnitName } from 'tools';\r\nimport { Prop, Media, PropGrid, ListProp, DropdownActions, List, LMR } from 'tonva';\r\nimport { EditPage } from './editPage';\r\nimport { AppUqs, SearchUqPage } from './appUqs';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class AppPage extends VPage<AppController> {\r\n    async open() {\r\n        //this.uqs.list = this.controller.uqs;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.controller.deleteApp();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let {app} = this.controller;\r\n        let {unit, name, caption, discription, icon, server, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            // {icon: 'cogs', caption:'设置关联UQ', action: ()=>nav.push(<AppUqs />)},\r\n            {caption:'修改App', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n\r\n        let right = <DropdownActions actions={menuItems} />;\r\n        let spanCaption = caption?\r\n            <>{name}: <b>{caption}</b></> :\r\n            <b>{name}</b>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={spanCaption} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n            /*\r\n            {\r\n                type: 'component', \r\n                label: 'Service',\r\n                vAlign: 'stretch',\r\n                component: <ServiceRow />,\r\n            },*/\r\n            {\r\n                label: 'URL',\r\n                name: 'url',\r\n                type: 'string',                \r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            '',\r\n            //this.uqs,\r\n        ];\r\n        let btnAddUq = <button className=\"btn btn-outline-primary btn-sm\" onClick={()=>this.openVPage(SearchUqPage)}>\r\n            增加关联\r\n        </button>;\r\n        return <Page header={'App - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={app} />\r\n            <LMR className=\"mx-3 mt-3 mb-1\" right={btnAddUq}>\r\n                关联UQ\r\n            </LMR>\r\n            <List items={this.controller.uqAccesses} item={{render:this.renderUqRow, onClick:this.uqClick}} />\r\n        </Page>\r\n    })\r\n\r\n    private uqClick = (uqAccess:UqAccess) => {\r\n        this.controller.onUq(uqAccess.uq);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:UqAccess, index:number):JSX.Element => {\r\n        let {uq, bind_access: access} = uqAccess;\r\n        let {name, discription, unit} = uq;\r\n        let disp: any;\r\n        let elAccess: any;\r\n        if (access && access.length > 0) {\r\n            elAccess = <> + {access.join(', ')} </>;\r\n        }\r\n        if (discription) disp = <div className=\"small text-muted\"> &nbsp; {discription}</div>;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={disp}>\r\n            <UnitName id={unit} /> / {name} {elAccess}\r\n        </LMR>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { AppController, UqAccess } from '.';\r\nimport { LMR } from 'tonva';\r\n\r\nexport class UqBindPage extends VPage<AppController> {\r\n    private uqAccess: UqAccess;\r\n    private accesses: string[];\r\n    private accessChecked:{[name:string]:boolean};\r\n    async open(uqAccess: UqAccess) {\r\n        this.uqAccess = uqAccess;\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {access} = uq;\r\n        if (access) {\r\n            this.accessChecked = {};\r\n            this.accesses = access.split(',');\r\n            for (let acc of this.accesses) {\r\n                this.accessChecked[acc] = (bind_access && bind_access.find(bc => bc === acc)) !== undefined;\r\n            }\r\n        }\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onCheckChanged = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let {target} = evt;\r\n        this.accessChecked[target.name] = target.checked;\r\n    }\r\n\r\n    private saveUqBind = async () => {\r\n        let acc:string[] = [];\r\n        if (this.accesses) {\r\n            for (let i in this.accessChecked) {\r\n                if (this.accessChecked[i] === true) acc.push(i);\r\n            }\r\n        }\r\n        await this.controller.saveUqBind(this.uqAccess.uq, acc);\r\n        nav.pop();\r\n    }\r\n\r\n    private removeUqBind = async () => {\r\n        await this.controller.removeUqBind(this.uqAccess.uq);\r\n        nav.pop();\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {owner, name, discription, access} = uq;\r\n        let btnDelete:any;\r\n        if (bind_access !== null && bind_access !== undefined) {\r\n            btnDelete = <button className=\"btn btn-outline-danger btn-sm\" onClick={this.removeUqBind}>取消关联</button>;\r\n        }\r\n        let checkAccessList:any;\r\n        if (this.accesses) {\r\n            checkAccessList = <div className=\"mt-3\">\r\n            {\r\n                this.accesses.map(v => {\r\n                    let checked = this.accessChecked[v];\r\n                    return <label key={v} className=\"d-inline-block mr-4\">\r\n                        <input onChange={this.onCheckChanged}\r\n                            style={{width:'1.1rem', height:'1.1rem'}} \r\n                            name={v} type=\"checkbox\" defaultChecked={checked} />&nbsp;{v}\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>;\r\n        }\r\n        return <Page header=\"关联UQ\">\r\n            <div className=\"m-3 py-3 px-3 bg-white border\">\r\n                <div>{owner} / {name}</div>\r\n                <div className=\"text-muted\">{discription}</div>\r\n                {checkAccessList}\r\n                <LMR className=\"pt-3\" right={btnDelete}>\r\n                    <button className=\"btn btn-primary btn-sm\" onClick={this.saveUqBind}>保存关联</button>\r\n                </LMR>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { Controller } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { devApi } from 'api';\r\nimport { AppsPage } from './appsPage';\r\nimport { AppPage } from './appPage';\r\nimport { UqBindPage } from './uqBindPage';\r\n\r\nexport interface UqAccess {\r\n    uq: DevModel.UQ;\r\n    bind_access: string[];\r\n}\r\n\r\nexport class AppController extends Controller {\r\n    private unitId: number;\r\n    app: DevModel.App;\r\n    @observable appList: DevModel.App[];\r\n    @observable uqAccesses: UqAccess[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.appList = await devApi.apps(this.unitId);\r\n        this.openVPage(AppsPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.App) => {\r\n        this.app = item;\r\n        let ret = await devApi.loadAppUqs(item.id);\r\n        this.uqAccesses = ret.map(v => {\r\n            let {owner, access, id, name, discription, unit, date_init, date_update, bind_access} = v;\r\n            return {\r\n                uq: {\r\n                    id: id,\r\n                    name: name,\r\n                    discription: discription,\r\n                    unit: unit,\r\n                    access: access,\r\n                    owner: owner,\r\n                    date_init: date_init,\r\n                    date_update: date_update, \r\n                    service_count: undefined,\r\n                },\r\n                uqOwner: owner,\r\n                bind_access: bind_access && bind_access.split(',')\r\n            }\r\n        });\r\n        this.openVPage(AppPage);\r\n    }\r\n\r\n    saveApp = async (values: DevModel.App) => {\r\n        let app: DevModel.App;\r\n        let now = new Date();\r\n        if (this.app === undefined) {\r\n            app = _.clone(values);\r\n            app.date_init = now;\r\n        }\r\n        else {\r\n            app = _.clone(this.app);\r\n            _.merge(app, values);\r\n        }\r\n        app.unit = this.unitId;\r\n        app.date_update = now;\r\n        let ret = await devApi.saveApp(app);\r\n        app.id = ret;\r\n        let org = this.appList.find(v => v.id === ret);\r\n        if (org !== undefined) {\r\n            _.merge(org, app);\r\n        }\r\n        else {\r\n            this.appList.push(app);\r\n        }\r\n    }\r\n\r\n    deleteApp = async () => {\r\n        await devApi.delApp(this.unitId, this.app.id);\r\n        let index = this.appList.findIndex(v => v.id === this.app.id);\r\n        if (index >= 0) this.appList.splice(index, 1);\r\n    }\r\n\r\n    searchUq = async (key:string, pageStart:number, pageSize:number) => {\r\n        return await devApi.searchUq(this.unitId, key, pageStart, pageSize);\r\n    }\r\n\r\n    getMyUqs = async () => {\r\n        return await devApi.getMyUqs(this.unitId);\r\n    }\r\n\r\n    onUq = (uq: DevModel.UQ) => {\r\n        let uqAccess:UqAccess = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n        if (uqAccess === undefined) {\r\n            uqAccess = {\r\n                uq: uq,\r\n                bind_access: undefined,\r\n            }\r\n        }\r\n        else {\r\n            let access = uqAccess.bind_access;\r\n            if (access === null || access === undefined) uqAccess.bind_access = [];\r\n        }\r\n        this.openVPage(UqBindPage, uqAccess);\r\n    }\r\n\r\n    // accesses = undefined, 表示删除\r\n    private buildBindUqs(uq: DevModel.UQ, accesses?:string[]) {\r\n        let uqs:{id:number, access:string[]}[] = [];\r\n        let isNew = true;\r\n        for (let ua of this.uqAccesses) {\r\n            let {uq:uaUq, bind_access} = ua;\r\n            if (uaUq.id === uq.id) {\r\n                if (accesses === undefined) continue;\r\n                bind_access = accesses;\r\n                isNew = false;\r\n            }\r\n            uqs.push({\r\n                id: uaUq.id,\r\n                access: bind_access || [],\r\n            });\r\n        }\r\n        if (accesses !== undefined && isNew === true) {\r\n            uqs.push({id: uq.id, access: accesses});\r\n        }\r\n        return uqs;\r\n    }\r\n\r\n    saveUqBind = async (uq: DevModel.UQ, accesses:string[]) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq, accesses);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        if (uqs.length > this.uqAccesses.length) {\r\n            this.uqAccesses.unshift({\r\n                uq: uq,\r\n                bind_access: accesses,\r\n            });\r\n        }\r\n        else {\r\n            let ua = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n            ua.bind_access = accesses;\r\n        }\r\n    }\r\n\r\n    removeUqBind = async (uq: DevModel.UQ) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        let index = this.uqAccesses.findIndex(v => v.uq.id === uq.id);\r\n        if (index>=0) this.uqAccesses.splice(index, 1);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst groupStart = '///++++++';\r\nconst groupEnd = '------///';\r\n\r\nexport abstract class Section {\r\n    rowId: number;\r\n    render: () => JSX.Element;\r\n}\r\n\r\nclass StringSection extends Section {\r\n    text: string;\r\n    constructor(text:string) {\r\n        super(); \r\n        this.text = text;\r\n    }\r\n    render = (): JSX.Element => {\r\n        if (this.text.trim().length === 0) return null;\r\n        let parts = this.text.split('\\n');\r\n        return <>{parts.map((v, i) => v.length === 0?\r\n            <div key={i}>&nbsp;</div> :\r\n            <div key={i}>{v}</div>\r\n        )}</>;\r\n    }\r\n}\r\n\r\nclass GroupSection extends Section {\r\n    group: string[];\r\n    @observable collaps: boolean;\r\n    constructor(group:string[]) {\r\n        super();\r\n        this.group = group;\r\n        this.collaps = true;\r\n    }\r\n    render = observer(():JSX.Element => {\r\n        //let groupId = 'text-group-' + index;\r\n        let line = this.group[0];\r\n        let title: string;\r\n        let p0 = 0, p = line.indexOf('\\n');\r\n        if (p < 0) p = undefined;\r\n        else {\r\n            let l = line.indexOf('(');\r\n            if (l < p) p = l;\r\n        }\r\n        title = line.substring(p0, p);\r\n\r\n        let onClick = () => {\r\n            let c = this.collaps;\r\n            if (c === false) c = true;\r\n            else c = false;\r\n            this.collaps = c;\r\n            /*\r\n            this.setState(prevState => ({\r\n                collaps: {\r\n                    ...prevState.collaps,\r\n                    [index]: c,\r\n                },\r\n            }));*/\r\n        }\r\n        let titleIcon:any, content:any;\r\n        if (this.collaps===false) {\r\n            titleIcon = <FA name='arrow-circle-up' className='text-success' />;\r\n            content = <div>\r\n                {\r\n                    this.group.map((v, i) => {\r\n                        if (v.trim().length === 0) return null;\r\n                        return <pre style={{whiteSpace: 'pre-wrap'}} key={i}>{v}</pre>\r\n                    })\r\n                }\r\n            </div>;\r\n        }\r\n        else {\r\n            titleIcon = <FA name='arrow-circle-down' className='text-success' />;\r\n        }\r\n        return <>\r\n            <div className=\"cursor-pointer text-primary\" onClick={onClick}>{titleIcon} <u>{title}</u></div>\r\n            {content}\r\n        </>;\r\n    });\r\n}\r\n\r\nclass ErrorSection extends Section {\r\n    error: string[];\r\n    constructor(error:string[]) {super(); this.error = error}\r\n    render = ():JSX.Element => {\r\n        return <div className=\"text-danger\">\r\n            <FA name=\"exclamation-circle\" />&nbsp;\r\n            {this.error.join().split('\\n').map((v, index)=><React.Fragment key={index}>{v}<br/></React.Fragment>)}\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ResultSections {\r\n    private text: string;\r\n    private p: number;\r\n    private group: string[];\r\n    private stop: boolean;\r\n    @observable hasError: boolean = false;\r\n    @observable seconds: number;\r\n    //readonly sections: (string | string[])[] = [];\r\n    private sectionId: number = 1;\r\n    @observable readonly sections: Section[] = [];\r\n\r\n    add(text:string):void {\r\n        this.stop = false;\r\n        if (this.text === undefined) {\r\n            this.p = 0;\r\n            this.text = text;\r\n        }\r\n        else {\r\n            this.text = this.text + text;\r\n        }\r\n        if (this.text.length < 10) return;\r\n        while (this.stop === false) {\r\n            this.addToGroup();\r\n            this.addText();\r\n        }\r\n    }\r\n\r\n    private addSection(section:Section) {\r\n        section.rowId = this.sectionId;\r\n        this.sectionId++;\r\n        this.sections.push(section);\r\n        let len = this.sections.length;\r\n        if (len > 500) {\r\n            this.sections.splice(0, len - 500);\r\n        }\r\n    }\r\n\r\n    private mayStart(token:string):boolean {\r\n        let len = this.text.length - token.length;\r\n        if (this.p < len) return false;\r\n        for (let i=0; i<len; i++) {\r\n            if (this.text.charCodeAt(this.p + i) !== token.charCodeAt(i)) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private parse():Section {\r\n        let type: string = '';\r\n        let len = this.group.length;\r\n        for (let i=0; i<len; i++) {\r\n            let ln = this.group[i];\r\n            let pos = ln.indexOf('\\n');\r\n            if (pos < 0) {\r\n                type += ln;\r\n                continue;\r\n            }\r\n            type += ln.substr(0, pos);\r\n            for (let s=0; s<i+1; s++) this.group.shift();\r\n            this.group.unshift(ln.substr(pos+1));\r\n            switch (type) {\r\n                default:\r\n                case '': \r\n                    return new GroupSection(this.group);\r\n                case 'error': \r\n                    this.hasError = true;\r\n                    return new ErrorSection(this.group);\r\n            }            \r\n        }\r\n    }\r\n\r\n    private addToGroup():void {\r\n        if (this.group === undefined) return;\r\n        if (this.text === undefined) return;\r\n        let p = this.text.indexOf(groupEnd, this.p);\r\n        if (p < 0) {\r\n            if (this.mayStart(groupEnd) === true) return;\r\n            this.group.push(this.p === 0? this.text : this.text.substr(this.p));\r\n            this.p = 0;\r\n            this.text = undefined;\r\n            this.stop = true;\r\n            return;\r\n        }\r\n        this.group.push(this.text.substring(this.p, p));\r\n        this.addSection(this.parse());\r\n        this.group = undefined;\r\n        this.p = p + 9;\r\n    }\r\n\r\n    private addText():void {\r\n        if (this.text === undefined) return;\r\n        let p = this.text.indexOf(groupStart, this.p);\r\n        if (p < 0) {\r\n            if (this.mayStart(groupStart) === true) return;\r\n            this.addSection(new StringSection(this.p === 0? this.text : this.text.substr(this.p)));\r\n            this.p = 0;\r\n            this.text = undefined;\r\n            this.stop = true;\r\n            return;\r\n        }\r\n        this.addSection(new StringSection(this.text.substring(this.p, p)));\r\n        this.p = p + 9;\r\n        this.group = [];\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page, FA} from 'tonva';\r\nimport {List, EasyDate, LMR, Muted} from 'tonva';\r\nimport {DevModel} from '../../model';\r\nimport {store} from '../../store';\r\nimport { ResultSections, Section } from './resultSections';\r\nimport { observer } from 'mobx-react';\r\n\r\ninterface State {\r\n    files: any[];\r\n    compiled?: string;\r\n    text?: string;\r\n}\r\n\r\nexport interface UqActionProps {\r\n    uq: DevModel.UQ;\r\n    action?: 'upload' | 'test' | 'deploy';\r\n    services: DevModel.Service[];\r\n}\r\n\r\n//const fastUpload = '快速测试';\r\n//const thoroughlyUpload = '完全测试';\r\nexport class UqUpload extends React.Component<UqActionProps, State> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    constructor(props:UqActionProps) {\r\n        super(props);\r\n        this.state = {\r\n            files: undefined,\r\n        }\r\n    }\r\n\r\n    private onFilesChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let upFiles:any[] = [];\r\n        let {files} = evt.target;\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            upFiles.push(files[i]);\r\n        }\r\n        this.setState({\r\n            files: upFiles,\r\n        });\r\n    }\r\n    fileRender(file:any, index:number):JSX.Element {\r\n        let {name, size, lastModifiedDate} = file;\r\n        function sz():string {\r\n            let n:number, u:string;\r\n            if (size < 1024) {\r\n                n = size; u = 'b';\r\n            }\r\n            else if (size < 1024*1024) {\r\n                n = Math.trunc((size / 1024) * 100)/100; u = 'k';\r\n            }\r\n            else {\r\n                n = Math.trunc((size / 1024 / 1024) * 100)/100; u = 'm';\r\n            }\r\n            return n + ' ' + u;\r\n        }\r\n        return <LMR className=\"px-2 py-1\" right={<Muted>{sz()}</Muted>}>\r\n            <div>{name}</div>\r\n            <div><Muted>修改日期: <EasyDate date={lastModifiedDate} /></Muted></div>\r\n        </LMR>;\r\n    }\r\n    private fileClick = (file:any) => {\r\n        let fr = new FileReader();\r\n        fr.onload = function(f) {\r\n            //alert(this.result);\r\n            nav.push(<UqPage name={file.name} content={this.result} />)\r\n        }\r\n        fr.readAsText(file, \"utf8\");\r\n    }\r\n    private onSubmit = (evt:React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n    private async upload() {\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        let url = store.uqServer + 'uq-compile/' + this.props.uq.id + '/upload';\r\n        /*\r\n        let actionName:string;\r\n        if (thoroughly === true) {\r\n            actionName = thoroughlyUpload;\r\n            url += '-thoroughly';\r\n        }\r\n        else {\r\n            actionName = fastUpload;\r\n        }\r\n        */\r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            nav.push(<CompileResult {...this.props} \r\n                actionName=\"上传\" \r\n                action=\"upload\"\r\n                res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n    private onUpload = async () => {\r\n        nav.ceaseTop();\r\n        await this.upload();\r\n    }\r\n    render() {\r\n        let {files} = this.state;\r\n        let fileList:any;\r\n        if (files !== undefined) {\r\n            fileList = <List \r\n                className=\"my-3\" \r\n                items={files} \r\n                item={{render: this.fileRender, onClick: this.fileClick}}/>;\r\n        }\r\n        let button:any;\r\n        if (files !== undefined && files.length > 0) {\r\n            button = <div className=\"my-2 d-flex\">\r\n                <button className=\"btn btn-success\" type=\"submit\" onClick={this.onUpload}>提交</button>\r\n            </div>;\r\n        }\r\n        return <Page header={'测试 - ' + this.props.uq.name}>\r\n            <div className=\"py-2 px-3\">\r\n                <div>请选择UQ源代码文件</div>\r\n                <form className=\"my-1\" encType=\"multipart/form-data\" onSubmit={this.onSubmit}>\r\n                    <div className=\"my-1\">\r\n                        <input ref={(fileInput) => this.fileInput=fileInput}type=\"file\" id=\"photo\" \r\n                            className=\"w-100 form-control-file\" name=\"files\" multiple={true} \r\n                            onChange={this.onFilesChange} />\r\n                    </div>\r\n                    {fileList}\r\n                    {button}\r\n                </form>\r\n                <pre>{this.state.compiled}</pre>\r\n                <div>{this.state.text}</div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n\r\ninterface Options {\r\n    action: 'test' | 'deploy';\r\n    caption: string;\r\n    fast: string;\r\n    thoroughly: string;\r\n    description: any;\r\n}\r\nconst test:Options = {\r\n    action: 'test',\r\n    caption: '测试',\r\n    fast: '快速测试',\r\n    thoroughly: '完全测试',\r\n    description: <>\r\n        <li>用上传的UQ代码，生成测试数据库</li>\r\n        <li>优化测试快速比较代码，仅仅根据修改代码的部分修改数据库</li>\r\n        <li>彻底测试仅用于底层代码有突破性变化时</li>\r\n    </>\r\n}\r\n\r\nconst deploy:Options = {\r\n    action: 'deploy',\r\n    caption: '发布',\r\n    fast: '快速发布',\r\n    thoroughly: '完全发布',\r\n    description: <>\r\n        <li>将已经编译测试过的代码，发布到生产服务器</li>\r\n        <li>优化发布快速比较代码，仅仅对修改代码的部分发布</li>\r\n        <li>彻底发布仅用于底层代码有突破性变化时</li>\r\n    </>\r\n}\r\n\r\nexport class UqDeploy extends React.Component<UqActionProps> {\r\n    readonly options: Options;\r\n    constructor(props: UqActionProps) {\r\n        super(props);\r\n        switch (props.action) {\r\n            case 'test':\r\n                this.options = test;\r\n                break;\r\n            case 'deploy':\r\n                this.options = deploy;\r\n                break;\r\n        }\r\n    }\r\n\r\n    private onCompile = async () => {\r\n        nav.ceaseTop();\r\n        let thoroughly = false;\r\n        await this.compile(thoroughly);\r\n    }\r\n    private onCompileThoroughly = async () => {\r\n        nav.ceaseTop();\r\n        let thoroughly = true;\r\n        await this.compile(thoroughly);\r\n    }\r\n    private async compile(isThoroughly:boolean) {\r\n        let {action, thoroughly, fast} = this.options;\r\n        let url = store.uqServer + 'uq-compile/' + this.props.uq.id + '/' + action;\r\n        let actionName:string;\r\n        if (isThoroughly === true) {\r\n            actionName = thoroughly;\r\n            url += '-thoroughly';\r\n        }\r\n        else {\r\n            actionName = fast;\r\n        }\r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                signal: abortController.signal,\r\n            });\r\n            nav.push(<CompileResult {...this.props} \r\n                action={action}\r\n                actionName={actionName}\r\n                res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n    render() {\r\n        let {caption, fast, thoroughly, description} = this.options;\r\n        return <Page header={caption + ' - ' + this.props.uq.name}>\r\n            <div className=\"m-3 bg-white p-3\">\r\n                <ul className=\"my-3\">{description}</ul>\r\n                <div className=\"d-flex p-3\">\r\n                    <button className=\"btn btn-success\" type=\"submit\" onClick={this.onCompile}>{fast}</button>\r\n                    <div className=\"py-2 flex-grow-1\" />\r\n                    <button className=\"btn btn-outline-warning\"\r\n                        type=\"submit\" onClick={this.onCompileThoroughly}>{thoroughly}</button>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\ninterface UqPgeProps {\r\n    name: string;\r\n    content: string|ArrayBuffer;\r\n}\r\nclass UqPage extends React.Component<UqPgeProps> {\r\n    render() {\r\n        return <Page header={this.props.name}>\r\n            <pre className=\"px-3 py-2\">{this.props.content}</pre>\r\n        </Page>;\r\n    }\r\n}\r\n\r\ninterface CompileResultProps extends UqActionProps {\r\n    uq: DevModel.UQ;\r\n    action: 'upload' | 'test' | 'deploy';\r\n    actionName: string;\r\n    res: Response;\r\n    abortController: AbortController;\r\n}\r\n\r\n@observer\r\nexport class CompileResult extends React.Component<CompileResultProps> {\r\n    private resultSections: ResultSections;\r\n    private timeHandler:any;\r\n    constructor(props:CompileResultProps) {\r\n        super(props);\r\n        this.resultSections = new ResultSections();\r\n    }\r\n    componentWillMount() {\r\n        nav.regConfirmClose(async ():Promise<boolean>=>{\r\n            if (this.resultSections.seconds>=0) return true;\r\n            return new Promise<boolean>((resolve, reject) => {\r\n                try {\r\n                    if (confirm(`正在${this.props.actionName}中，真的要中止吗？`) === true) {\r\n                        try {\r\n                            this.props.abortController.abort();\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err);\r\n                        }\r\n                        resolve(true);\r\n                    }\r\n                    else {\r\n                        resolve(false);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            })\r\n        });\r\n    }\r\n    private autoScrollEnd:boolean = false;\r\n    private startAutoScrollToBottom() {\r\n        if (this.autoScrollEnd === true) return;\r\n        this.timeHandler = setInterval(() => {\r\n            var pane = document.getElementById('bottomDiv');\r\n            pane && pane.scrollIntoView();\r\n        }, 100);\r\n    }\r\n    private clearAutoScrollToBottom = () => {\r\n        if (this.timeHandler === undefined) return;\r\n        clearInterval(this.timeHandler);\r\n        this.timeHandler = undefined;\r\n}\r\n    private endAutoScrollToBottom() {\r\n        this.autoScrollEnd = true;\r\n        setTimeout(this.clearAutoScrollToBottom, 300);\r\n    }\r\n    private getParent(el:HTMLElement):HTMLElement {\r\n        if (!el) return;\r\n        if (el.tagName === 'MAIN') return el;\r\n        return this.getParent(el.parentElement);\r\n    }\r\n    private topIntoView() {\r\n        var pane = document.getElementById('topDiv');\r\n        pane && pane.scrollIntoView();\r\n    }\r\n    private bottomIntoView() {\r\n        var pane = document.getElementById('bottomDiv');\r\n        pane && pane.scrollIntoView();\r\n    }\r\n    private doubleClick = () => {\r\n        var pane = document.getElementById('scrollDiv');\r\n        let main = this.getParent(pane);\r\n        if (!main) return;\r\n        if (main.scrollTop >= main.scrollHeight / 2) {\r\n            this.topIntoView();\r\n        }\r\n        else {\r\n            this.bottomIntoView();\r\n        }\r\n    }\r\n    private lastScrollTop = 0;\r\n    private onScroll = (e:any) => {\r\n        let el = e.target as HTMLBaseElement;\r\n        \r\n        let {scrollTop, scrollHeight, offsetHeight} = el;\r\n        if (scrollTop < this.lastScrollTop) {\r\n            //this.clearAutoScrollToBottom();\r\n        }\r\n        else if (scrollTop + offsetHeight > scrollHeight - 30) {\r\n            if (this.timeHandler === undefined) {\r\n                this.startAutoScrollToBottom();\r\n            }\r\n        }\r\n\r\n        this.lastScrollTop = scrollTop;\r\n    }\r\n\r\n    private uintToString(uintArray:number[]):string {\r\n        let encodedString = String.fromCharCode(...uintArray);\r\n        try {\r\n            return decodeURIComponent(escape(encodedString));\r\n        }\r\n        catch (err) {\r\n            return encodedString;\r\n        }\r\n    }\r\n\r\n    private startTime: Date;\r\n    private reader: ReadableStreamReader;\r\n    private total: number;\r\n    private async pump():Promise<boolean> {\r\n        let ret = await this.reader.read();\r\n        let {done, value} = ret;\r\n        if (done) {\r\n            this.resultSections.seconds = (new Date().getTime() - this.startTime.getTime());\r\n            let {action, services} = this.props;\r\n            if (services !== undefined) {\r\n                let now = Date.now() / 1000;\r\n                for (let service of services) {\r\n                    switch (action) {\r\n                        case 'test': service.compile_time = now; break;\r\n                        case 'deploy': service.deploy_time = now; break;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        let text = this.uintToString(value);\r\n        this.resultSections.add(text);\r\n        this.total += value.byteLength;\r\n        //await pump();\r\n        return false;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        /*\r\n        let that = this;\r\n        let time = new Date();\r\n        function consume(reader: ReadableStreamReader) {\r\n            let total = 0;\r\n            return new Promise(async (resolve, reject) => {\r\n                async function pump() {\r\n                    let ret = await reader.read();\r\n                    let {done, value} = ret;\r\n                    try {\r\n                        function uintToString(uintArray:number[]):string {\r\n                            let encodedString = String.fromCharCode.apply(null, uintArray);\r\n                            try {\r\n                                return decodeURIComponent(escape(encodedString));\r\n                            }\r\n                            catch (err) {\r\n                                return encodedString;\r\n                            }\r\n                        }\r\n                        if (done) {\r\n                            that.resultSections.seconds = (new Date().getTime() - time.getTime());\r\n                            let {action, services} = that.props;\r\n                            let now = Date.now() / 1000;\r\n                            for (let service of services) {\r\n                                switch (action) {\r\n                                    case 'test': service.compile_time = now; break;\r\n                                    case 'deploy': service.deploy_time = now; break;\r\n                                }\r\n                            }\r\n                            resolve();\r\n                            return;\r\n                        }\r\n                        let text = uintToString(value);\r\n                        that.resultSections.add(text);\r\n                        total += value.byteLength;\r\n                        await pump();\r\n                    }\r\n                    catch (err) {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                await pump();\r\n            });\r\n        }\r\n        */\r\n        this.startAutoScrollToBottom();\r\n        try {\r\n            //await consume(this.props.res.body.getReader());\r\n            this.reader = this.props.res.body.getReader();\r\n            this.startTime = new Date;\r\n            this.total = 0;\r\n            while (true) {\r\n                if (await this.pump() === true) break;\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n        finally {\r\n            this.endAutoScrollToBottom();\r\n        }\r\n    }\r\n    private renderText = (section:Section, index:number):JSX.Element => {\r\n        return <section.render key={section.rowId} />;\r\n    }\r\n    render() {\r\n        let {uq, actionName} = this.props;\r\n        let {seconds, sections, hasError} = this.resultSections;\r\n        let finish = hasError === true? '发生错误' : '完成';\r\n        let header = actionName + (seconds>=0? finish : \"中...\");\r\n        if (uq !== undefined) header = uq.name + ' - ' + header;\r\n        return <Page header={header} back=\"close\" onScroll={this.onScroll}>\r\n            <div id='topDiv' />\r\n            <div id='scrollDiv'\r\n                onDoubleClick={this.doubleClick} \r\n                className='py-2 px-3' \r\n                style={{wordWrap: 'break-word', whiteSpace: 'normal'}}>\r\n                {sections.map(this.renderText)}\r\n            </div>\r\n            {seconds>=0? <div className='px-3 pb-3' style={{color: 'red', fontWeight: 'bold'}}>\r\n                {actionName}完成。共计用时{Math.floor(seconds/1000)}秒\r\n            </div> : undefined}\r\n            <div id='bottomDiv' />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport {nav, Page} from 'tonva';\r\nimport {IdPick, IdPickFace} from 'tonva-form';\r\nimport {List, SearchBox} from 'tonva';\r\n\r\nexport interface IdPickProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n}\r\n\r\nexport function createIdPick(props: IdPickProps):IdPick {\r\n    return function(face: IdPickFace, params: any):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            nav.push(<IdPickPage resolve={resolve} face={face} params={params} {...props} />);\r\n        });\r\n    }\r\n}\r\n\r\ninterface IdPickPageProps extends IdPickProps {\r\n    face: IdPickFace;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\ninterface IdPickPageState {\r\n    items?: any[];\r\n}\r\n\r\nclass IdPickPage extends React.Component<IdPickPageProps, IdPickPageState> {\r\n    private items:any[];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: null,\r\n        }\r\n        this.itemClick = this.itemClick.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        let {face, candidateItems, params} = this.props;\r\n        this.setState({\r\n            items: Array.isArray(candidateItems)? candidateItems : await candidateItems(params, ''),\r\n        });\r\n    }\r\n    itemClick(item:any) {\r\n        let {resolve} = this.props;\r\n        resolve(item);\r\n        nav.pop();\r\n    }\r\n    async onSearch(key: string) {\r\n        //alert('search ' + key);\r\n        //await store.dev.searchServer.first(key)\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.setState({items: ret});\r\n        }\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.state.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DevModel } from 'model';\r\nimport { IdPickProps, createIdPick } from 'createIdPick';\r\nimport { store } from 'store';\r\nimport { Field, FormRow, StringFace, TextAreaFace, TonvaForm, SubmitResult } from 'tonva-form';\r\nimport { UQController } from './uqController';\r\nimport { VPage, nav, Page } from 'tonva';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst urlTestField:Field = {name: 'urlTest', type: 'string', required:false, maxLength:200};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst dbTypeField:Field = {name: 'db_type', type: 'string', maxLength:20, defaultValue:'mysql'};\r\nconst dbField:Field = {name: 'db', type: 'string', maxLength:50, required: true};\r\nconst connectionField:Field = {name:'connection', type:'string', maxLength:250};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\n\r\nconst urlRowTest = {\r\n    label: 'URL-Test',\r\n    field: urlTestField,\r\n    face: {placeholder:'如果同URL，请不要输入'}\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: <ServerCaption {...item} />,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n/*\r\nconst dbTypeRow:FormRow = {\r\n    label: '数据库类型',\r\n    field: dbTypeField,\r\n    face: {\r\n        type: 'string',\r\n        readonly: true,\r\n    } as StringFace\r\n};\r\n*/\r\nconst dbRow = {\r\n    label: '数据库名字',\r\n    field: dbField,\r\n};\r\n/*\r\nconst connectionRow = {\r\n    label: '连接字符串',\r\n    field: connectionField,\r\n    face: {\r\n        type: 'textarea',\r\n        maxLength: 250,\r\n        rows: 8,\r\n    } as TextAreaFace,\r\n};\r\n*/\r\nexport class NewServicePage extends VPage<UQController> {\r\n    private tonvaForm:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        urlRow,\r\n        urlRowTest,\r\n        serverRow,\r\n        //dbTypeRow,\r\n        dbRow,\r\n        //connectionRow\r\n    ];\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onSubmit = async (values:any):Promise<SubmitResult | undefined> => {\r\n        /*\r\n        if (values.url.indexOf('/uq/')<0) {\r\n            this.tonvaForm.formView.setError('url', 'service url 必须包含/uq/');\r\n            return;\r\n        }\r\n        */\r\n        values.type = 2; // uq type, to be removed\r\n        values.bindId = this.controller.uq.id;\r\n        let ret = await this.controller.saveService(values);\r\n        if (ret === 0) {\r\n            /*\r\n            if (this.tonvaForm !== undefined) {\r\n                this.tonvaForm.formView.setError('url', '已经有Service使用这个url');\r\n            }\r\n            */\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private page = () => {\r\n        return <Page header=\"新建Service\">\r\n            <TonvaForm ref={t=>this.tonvaForm=t} className=\"m-3\" formRows={this.formRows} onSubmit={this.onSubmit} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Page, VPage, nav } from 'tonva';\r\nimport { UQController } from './uqController';\r\nimport { DevModel } from 'model';\r\nimport { Prop, PropGrid } from 'tonva';\r\nimport { StringValueEdit, ServerSpan, TextValueEdit } from 'tools';\r\n\r\nexport class ServicePage extends VPage<UQController> {\r\n    @observable private service: DevModel.Service;\r\n    async open(service: DevModel.Service) {\r\n        this.service = service;\r\n        this.openPage(this.page);\r\n    }\r\n    private async changeProp(prop:string, value:any):Promise<any> {\r\n        return await this.controller.changeServiceProp(this.service, prop, value);\r\n    }\r\n    private onUrlChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        /*\r\n        if ((value as string).indexOf('/uq/')<0) {\r\n            return 'URL必须包含/uq/';\r\n        }\r\n        */\r\n        let ret = await this.changeProp('url', value);\r\n        if (ret === 0) {\r\n            //return 'URL已经被使用了';\r\n            return;\r\n        }\r\n        this.service.url = value;\r\n    }\r\n    private onUrlTestChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        /*\r\n        if ((value as string).indexOf('/uq/')<0) {\r\n            return 'URL必须包含/uq/';\r\n        }\r\n        */\r\n        let ret = await this.changeProp('urlTest', value);\r\n        if (ret === 0) {\r\n            //return 'URL已经被使用了';\r\n            return;\r\n        }\r\n        this.service.urlTest = value;\r\n    }\r\n    private onDbChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        let ret = await this.changeProp('db', value);\r\n        if (ret === 0) {\r\n            return 'Db已经被使用了';\r\n        }\r\n        this.service.db = value;\r\n    }\r\n    /*\r\n    private onDbTypeChanged = async (value:string, orgValue:any):Promise<string|void> => {\r\n        if (value === undefined || value === null) return;\r\n        if (value.toLowerCase().trim() !== 'mysql') return '目前只支持mysql';\r\n        let ret = await this.changeProp('db_type', value);\r\n        this.service.db_type = value;\r\n    }\r\n    private onConnectionChanged = async (value:string, orgValue:any):Promise<string|void> => {        \r\n        await this.changeProp('connection', value);\r\n        this.service.connection = value;\r\n    }\r\n    */\r\n    private onDeleteClick = async () => {\r\n        if (confirm(\"真的要删除Service吗？删除了不可恢复，需要重新录入。\")!==true) return;\r\n        await this.controller.delService(this.service);\r\n        nav.pop();\r\n    }\r\n    private page = () => {\r\n        let {uq} = this.controller;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'string',\r\n                name: 'url',\r\n                label: 'URL',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改URL\"\r\n                    value={this.service.url}\r\n                    onChanged={this.onUrlChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'urlTest',\r\n                label: 'URL-Test',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改URL-Test\"\r\n                    value={this.service.urlTest}\r\n                    onChanged={this.onUrlTestChanged} />)\r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={this.service.server} />\r\n            },\r\n            /*\r\n            {\r\n                type: 'string',\r\n                name: 'db_type',\r\n                label: '数据库类型',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库类型\"\r\n                    value={this.service.db_type}\r\n                    onChanged={this.onDbTypeChanged} />)\r\n            },\r\n            */\r\n            {\r\n                type: 'string',\r\n                name: 'db',\r\n                label: '数据库名',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库名字\"\r\n                    value={this.service.db}\r\n                    onChanged={this.onDbChanged} />)\r\n            },\r\n            /*\r\n            {\r\n                type: 'string',\r\n                name: 'connection',\r\n                label: '连接字符串',\r\n                onClick: ()=>nav.push(<TextValueEdit\r\n                    title=\"连接字符串\"\r\n                    value={this.service.connection}\r\n                    onChanged={this.onConnectionChanged} />)\r\n            },\r\n            */\r\n        ];\r\n        let right = <button onClick={this.onDeleteClick} className=\"btn btn-success\">删除</button>;\r\n        return <Page header={'UQ - ' + uq.name} right={right}>\r\n            <PropGrid rows={rows} values={this.service} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { UQController } from './uqController';\r\nimport { VPage, nav, Page } from 'tonva';\r\nimport { SubmitResult, TonvaForm } from 'tonva-form';\r\n\r\nconst formRows = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    //{\r\n    //    label: '入口',\r\n    //    field: {name: 'access', type: 'string', maxLength: 250},\r\n    //    face: {type: 'textarea', placeholder: '逗号分隔的入口名'}\r\n    //},\r\n];\r\n\r\n\r\nexport abstract class EditBasePage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveUq(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form(initValues:any):JSX.Element {\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n    }\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    protected page = () => {\r\n        let {uq} = this.controller;\r\n        let {name} = uq;\r\n        return <Page header={'修改UQ - ' + name} back=\"close\">\r\n            {this.form(uq)}\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    protected page = () => {\r\n        return <Page header={'新建UQ'} back=\"close\">\r\n            {this.form({})}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav, EasyTime } from 'tonva';\r\nimport { UQController } from './uqController';\r\nimport { IdDates, UnitSpan, ServerSpan } from 'tools';\r\nimport { Prop, Media, LMR, FA, PropGrid, Muted, List, EasyDate, DropdownActions } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { EditPage } from './editPage';\r\nimport { store } from 'store';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class UQPage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除UQ吗？') === true) {\r\n            await this.controller.deleteUq();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let {onUqUpload, onUqTest, onUqDeploy, serviceClick, uq, services} = this.controller;\r\n        let {isOwner} = store.unit;\r\n        let {id, name, discription, access, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            {caption:'修改UQ', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n        let right = isOwner>0 && <DropdownActions actions={menuItems} />;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\"\r\n                    left={<FA name=\"database\" className=\"text-primary fa-2x mr-3\" />}>\r\n                    <div><b>{name}</b></div>\r\n                    {disp}\r\n                </LMR>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n            '',\r\n            {\r\n                type: 'component',\r\n                label: '上传UQ', \r\n                component: <LMR onClick={onUqUpload} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"上传提交UQ代码\" right={<FA className=\"align-self-center\" name=\"angle-right\" />} />\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '测试UQ', \r\n                component: <LMR onClick={onUqTest} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"升级UQ测试数据库\" right={<FA className=\"align-self-center\" name=\"angle-right\" />} />\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '发布UQ', \r\n                component: <LMR onClick={onUqDeploy} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"升级UQ生产数据库\" right={<FA className=\"align-self-center\" name=\"angle-right\" />} />\r\n            },\r\n        ];\r\n\r\n        let adminDev:any;\r\n        let btnAddService:any;\r\n        if (isOwner > 0) {\r\n            btnAddService = <button\r\n                className=\"btn btn-outline-primary btn-sm\"\r\n                onClick={()=>this.controller.showNewServicePage()}>\r\n                增加\r\n            </button>;\r\n            let devList = this.controller.uqDevs.filter(v => v.isOwner===0);\r\n            adminDev = <>\r\n                <div className=\"d-flex mx-3 mt-3 mb-1 align-items-end\">\r\n                    <Muted style={{display:'block', flex:1}}>开发者</Muted>\r\n                    <button\r\n                        className=\"btn btn-outline-primary btn-sm\"\r\n                        onClick={()=>this.controller.uqDevsAdmin()}>\r\n                        管理\r\n                    </button>\r\n                </div>\r\n                <div className=\"p-2 d-flex flex-wrap bg-white\">\r\n                    {\r\n                        devList.length === 0?\r\n                        <span className=\"text-muted\">无</span>\r\n                        :\r\n                        devList.map((v:any) => {\r\n                            return <div key={v.id} className=\"m-2 \">{v.nick || v.name}</div>\r\n                        })}\r\n                </div>\r\n            </>;\r\n        }\r\n\r\n        let onServiceClick:any;\r\n        if (isOwner>0) onServiceClick = serviceClick;\r\n\r\n        return <Page header={'UQ - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={uq} />\r\n            {adminDev}\r\n            <div className=\"d-flex mx-3 mt-3 mb-1 align-items-end\">\r\n                <Muted style={{display:'block', flex:1}}>Service</Muted>\r\n                {btnAddService}\r\n            </div>\r\n            <List items={services} item={{\r\n                render:(service:DevModel.Service, index:number)=><this.renderService service={service} index={index} />, \r\n                onClick:onServiceClick\r\n            }} />\r\n        </Page>;\r\n    });\r\n    private renderService = observer((props: {service:DevModel.Service; index:number}):JSX.Element => {\r\n        let {service, index} = props;\r\n        let {url, server, db, compile_time, deploy_time} = service;\r\n        let compile = !compile_time?\r\n            <Muted>未测试</Muted> \r\n            :\r\n            <><Muted>测试: </Muted><EasyTime date={compile_time}/></>;\r\n        let deploy = !deploy_time?\r\n            <Muted>未发布</Muted> \r\n            :\r\n            <><Muted>发布: </Muted><EasyTime date={deploy_time}/></>;\r\n\r\n        return <LMR className=\"d-flex w-100 align-items-center cursor-pointer py-2 px-3\"\r\n            right={<small>{compile}<br/>{deploy}</small>}\r\n            >\r\n            <div>\r\n                <div>{url}</div>\r\n                <Muted><ServerSpan id={server} /></Muted>\r\n            </div>\r\n        </LMR>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, EasyDate, EasyTime, DropdownActions, DropdownAction, nav } from 'tonva';\r\nimport { UQController } from './uqController';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\nimport { store } from 'store';\r\nimport { CompileResult } from './uqUpload';\r\n\r\nexport class ListPage extends VPage<UQController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.controller.uq = undefined;\r\n        this.openVPage(NewPage);\r\n    }\r\n    private batchCompile = () => {\r\n        this.openPage(this.batchCompilePage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {uqList: list, listRowClick} = this.controller;\r\n        let {isOwner} = store.unit;\r\n        let actions:DropdownAction[] = [\r\n            {icon:'plus', caption:'新增UQ', action: this.newItem},\r\n            {icon:'plus', caption:'批量编译', action: this.batchCompile},\r\n        ];\r\n        let right = isOwner>0 && \r\n            <DropdownActions icon=\"bars\" actions={actions}>\r\n                <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>\r\n            </DropdownActions>\r\n        return <Page header=\"UQ\" right={right}>\r\n            <List items={list} item={{render: this.listRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private listRow = (item:DevModel.UQ):JSX.Element => {\r\n        let {name, discription, service_count, date_init, date_update} = item;\r\n        return <LMR className=\"py-1 px-3 align-items-center\"\r\n            left={<FA name=\"database\" className=\"text-primary fa-lg\" />}\r\n            right={<div className=\"text-right\">\r\n                <div><small className=\"text-muted\">服务数:</small> {service_count}</div>\r\n                <div className=\"small text-muted\"><EasyTime date={date_update} /></div>\r\n            </div>}>\r\n            <div className=\"py-2 px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n\r\n    private onSelect = (item:DevModel.UQ, isSelected:boolean, anySelected:boolean) => {\r\n        //alert('ok');\r\n    }\r\n\r\n    private listCompileRow = (item:DevModel.UQ):JSX.Element => {\r\n        let {name, discription, service_count, date_init, date_update} = item;\r\n        return <LMR className=\"py-1 px-3 align-items-center\"\r\n            left={<FA name=\"database\" className=\"text-info fa-lg\" />}\r\n            right={<div className=\"text-right\">\r\n                <div className=\"small text-muted\"><EasyTime date={date_update} /></div>\r\n            </div>}>\r\n            <div className=\"py-2 px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n\r\n    private list:List;\r\n    private selectAll = () => {\r\n        this.list.selectAll();\r\n    }\r\n    private unselectAll = () => {\r\n        this.list.unselectAll();\r\n    }\r\n    private test = () => {\r\n        this.compile('test', false);\r\n    }\r\n    private testThoroughly = () => {\r\n        this.compile('test', true);\r\n    }\r\n    private deploy = () => {\r\n        this.compile('deploy', false);\r\n    }\r\n    private deployThoroughly = () => {\r\n        this.compile('deploy', true);\r\n    }\r\n    private async compile(action:'test'|'deploy', thoroughly: boolean) {\r\n        let selectItems = this.list.selectedItems;\r\n        //let {action, thoroughly, fast} = this.options;\r\n        let url = store.uqServer + 'uq-compile/batch';\r\n        let actionName:string;\r\n        switch (action) {\r\n            case 'test': actionName = '测试'; break;\r\n            case 'deploy': actionName = '发布'; break;\r\n        }\r\n        try {\r\n            let abortController = new AbortController();\r\n            let body = {\r\n                test: action === 'test',\r\n                thoroughly: thoroughly,\r\n                uqs: selectItems.map(v => v.id)\r\n            };\r\n            //let data = new FormData();\r\n            //data.append( \"json\", JSON.stringify(body) );\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                signal: abortController.signal,\r\n                headers: {\r\n                    //'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(body)\r\n            });\r\n            nav.push(<CompileResult uq={undefined} services={undefined}\r\n                action={action}\r\n                actionName={actionName}\r\n                res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n\r\n    private batchCompilePage = ():JSX.Element => {\r\n        let {uqList: list} = this.controller;\r\n        let right = <span>\r\n            <button className=\"btn btn-sm btn-link\" onClick={this.selectAll}>全选</button> \r\n            <button className=\"btn btn-sm btn-link\" onClick={this.unselectAll}>全清</button>\r\n        </span>;\r\n        let cnBtn = 'btn btn-sm btn-outline-primary mr-3';\r\n        let bar = <span className=\"px-3 py-1 d-flex w-100\">\r\n            <span className=\"flex-grow-1\">\r\n                <button className={cnBtn} onClick={this.test}>测试</button>\r\n                <button className={cnBtn} onClick={this.deploy}>发布</button>\r\n                <button className={cnBtn} onClick={this.testThoroughly}>彻底测试</button>\r\n                <button className={cnBtn} onClick={this.deployThoroughly}>彻底发布</button>\r\n            </span>\r\n            {right}\r\n        </span>;\r\n\r\n        return <Page header=\"批量编译\" footer={bar}>\r\n            <List ref={list=>this.list = list} items={list} item={{render: this.listCompileRow, onSelect: this.onSelect}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { VPage, Page, LMR, Image, List } from 'tonva';\r\nimport { UQController } from './uqController';\r\nimport { UnitAdmin } from '../../model';\r\nimport { store } from '../../store';\r\n\r\nexport class UqDevsAdmin extends VPage<UQController> {\r\n    async open() {\r\n        await this.controller.loadAdmins();\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onSelect = async (admin:any, isSelected:boolean) => {\r\n        await this.controller.devChanged(admin, isSelected);\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {admins} = store.admins;\r\n        let {uqDevs} = this.controller;\r\n        let selectedItems = admins.filter(v => uqDevs.find(d => d.userId === v.id) !== undefined);\r\n        return <Page header=\"增减开发者\">\r\n            <List\r\n                className='my-4' \r\n                header=\"开发者\" items={admins} \r\n                none='[无]'\r\n                selectedItems = {selectedItems}\r\n                item={{onSelect: this.onSelect, render: this.row}}\r\n            />\r\n        </Page>;\r\n    }\r\n\r\n    private row = ({icon, name, nick}:UnitAdmin) => {\r\n        let content = nick?\r\n            <><b>{nick}</b> &nbsp; <small className=\"text-muted\">{name}</small></>\r\n            :\r\n            <b>{name}</b>;\r\n        let left = <Image className=\"w-2-5c h-2-5c\" src={icon} />; \r\n        return <LMR className=\"py-2 px-3 align-items-stretch\" left={left}>\r\n            <div className=\"px-3\">{content}</div>\r\n        </LMR>;\r\n    }\r\n\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { nav, Controller } from 'tonva';\r\nimport { DevModel } from '../../model';\r\nimport { UqUpload, UqActionProps, UqDeploy } from './uqUpload';\r\nimport { devApi } from 'api';\r\nimport { NewServicePage } from './newServicePage';\r\nimport { ServicePage } from './servicePage';\r\nimport { UQPage } from './uqPage';\r\nimport { ListPage } from './listPage';\r\nimport { UqDevsAdmin } from './UqDevsAdmin';\r\nimport { store } from '../../store';\r\n\r\nexport class UQController extends Controller {\r\n    private unitId: number;\r\n    uq: DevModel.UQ;\r\n    access: string;\r\n    entities: string;\r\n    @observable uqDevs: any[];\r\n    @observable uqList: DevModel.UQ[];\r\n    @observable services: DevModel.Service[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.uqList = await devApi.uqs(this.unitId);\r\n        this.openVPage(ListPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.UQ) => {\r\n        this.uq = item;\r\n        await this.loadUqEntities(item.id);\r\n        this.openVPage(UQPage);\r\n    }\r\n\r\n    private async loadUqEntities(uqId: number) {\r\n        let ret = await devApi.uqGetEntities(this.unitId, uqId);\r\n        let r0 = ret[0][0];\r\n        this.access = r0.access;\r\n        this.entities = r0.entities;\r\n        this.services = ret[1];\r\n        this.uqDevs = ret[4];\r\n    }\r\n\r\n    async loadAdmins() {\r\n        await store.admins.load();\r\n    }\r\n\r\n    async devChanged(admin:any, isSelected:boolean) {\r\n        let param = {\r\n            unit: this.unitId,\r\n            type: 'uq',\r\n            dev: this.uq.id,\r\n            devUser: admin.id\r\n        };\r\n        if (isSelected === true) {\r\n            await devApi.adminDevAdd(param);\r\n            this.uqDevs.push({\r\n                userId: admin.id,\r\n                icon: admin.icon,\r\n                name: admin.name,\r\n                nick: admin.nick,\r\n                isOwner: 0,\r\n            });\r\n        }\r\n        else {\r\n            await devApi.adminDevDel(param);\r\n            let index = this.uqDevs.findIndex(v => v.userId === admin.id);\r\n            this.uqDevs.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    uqDevsAdmin = () => {\r\n        this.openVPage(UqDevsAdmin);\r\n    }\r\n\r\n    serviceClick = (service: DevModel.Service) => {\r\n        this.openVPage(ServicePage, service);\r\n    }\r\n\r\n    onUqUpload = async() => {\r\n        let onDispose = () => {}\r\n        nav.push(<UqUpload uq={this.uq} services={this.services} />, onDispose);\r\n    }\r\n\r\n    onUqTest = async() => {\r\n        let onDispose = () => {}\r\n        nav.push(<UqDeploy uq={this.uq} action=\"test\" services={this.services} />, onDispose);\r\n    }\r\n\r\n    onUqDeploy = async() => {\r\n        let onDispose = () => {}\r\n        nav.push(<UqDeploy uq={this.uq} action=\"deploy\" services={this.services} />, onDispose);\r\n    }\r\n\r\n    saveUq = async (values: DevModel.UQ) => {\r\n        let uq: DevModel.UQ;\r\n        if (this.uq === undefined) {\r\n            uq = _.clone(values);\r\n        }\r\n        else {\r\n            uq = _.clone(this.uq);\r\n            _.merge(uq, values);\r\n        }\r\n        uq.unit = this.unitId;\r\n        let ret = await devApi.saveUq(uq);\r\n        uq.id = ret;\r\n        this.uqList.push(uq);\r\n    }\r\n\r\n    deleteUq = async () => {\r\n        await devApi.delUq(this.unitId, this.uq.id);\r\n        let index = this.uqList.findIndex(v => v.id === this.uq.id);\r\n        if (index >= 0) this.uqList.splice(index);\r\n    }\r\n\r\n    async changeServiceProp(service: DevModel.Service, prop:string, value:any):Promise<any> {\r\n        return await devApi.changeServiceProp(this.unitId, service.id, prop, value);\r\n    }\r\n\r\n    async saveService(service: DevModel.Service):Promise<number> {\r\n        let svc = _.clone(service);\r\n        svc.unit = this.unitId;\r\n        if (!svc.urlTest) svc.urlTest = '-';\r\n        let ret = await devApi.saveService(svc);\r\n        svc.id = ret;\r\n        this.services.push(svc);\r\n        return ret;\r\n    }\r\n\r\n    async delService(service: DevModel.Service) {\r\n        await devApi.delService(this.unitId, service.id);\r\n        let index = this.services.findIndex(v => v.id == service.id);\r\n        if (index >= 0) this.services.splice(index);\r\n    }\r\n\r\n    showNewServicePage = async () => {\r\n        await this.openVPage(NewServicePage);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport _ from 'lodash';\r\nimport {EasyDate, Media, \r\n    Prop, ListProp, PropGrid, List, SearchBox, LMR, Badge, Muted, FA} from 'tonva';\r\nimport {UnitSpan, IdDates, ServerSpan} from '../tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {Row} from './row';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\n\r\nconst busIcon = 'cogs';\r\n\r\n@observer\r\nclass Info extends React.Component<DevModel.Bus> {\r\n    async componentDidMount() {\r\n        //await store.dev.buses.loadCurApis();\r\n    }\r\n    render() {\r\n        let {unit, owner, name, discription, mine, schema, version, date_init, date_update} = this.props;\r\n        let disp = <small>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </small>;\r\n        let caption:any = owner + ' / ' + name;\r\n        if (mine === 1) {\r\n            caption = <b>{caption}</b>;\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <LMR className=\"py-2\"\r\n                left={<FA className=\"pt-2 pr-1 text-primary\" name={busIcon} size=\"3x\" />}>\r\n                <div className=\"pl-3\">\r\n                    <div className=\"mb-2\">{caption}</div>\r\n                    {disp}\r\n                </div>\r\n            </LMR>},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {\r\n                type: 'component', \r\n                label: '版本号', \r\n                component: <LMR className=\"py-2 w-100\" right={<small className=\"text-muted\"><EasyDate date={date_update}/></small>} >{version}</LMR> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n\r\n@observer\r\nexport class SchemaView extends React.Component {\r\n    render() {\r\n        let bus = store.dev.buses.cur;\r\n        if (bus === null) return '...';\r\n        let content = bus.schema;\r\n        return <div className=\"d-flex py-2 w-100 align-items-center\" style={{flex:1}}>\r\n            <pre>\r\n                {content}\r\n            </pre>\r\n        </div>;\r\n\r\n    }\r\n}\r\n\r\nconst busesProps:ObjViewProps<DevModel.Bus> = {\r\n    title: 'BUS',\r\n    formRows: [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n        {\r\n            label: 'Schema',\r\n            field: {name: 'schema', type: 'string', maxLength: 2500},\r\n            face: {type: 'textarea', rows: 8}\r\n        },\r\n    ],\r\n    row: (item:DevModel.Bus):JSX.Element => {\r\n        let {owner, name, discription, mine} = item;\r\n        let icon = appIcon;\r\n        let main = owner + ' / ' + name;\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={<FA className=\"pt-2 pr-1 text-primary\" name='cogs' size=\"lg\" />}>\r\n            <div className=\"px-3\">\r\n                <div>{mine===1? <b>{main}</b> : main}</div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    },\r\n    items: ()=>store.dev.buses,\r\n    repeated: {\r\n        name: 'name',\r\n        err: '跟已有的名称重复',\r\n    },\r\n    info: Info,\r\n    canEdit: bus => bus.mine === 1,\r\n};\r\n\r\nexport default busesProps;\r\n","import * as React from 'react';\r\nimport {Prop, PropGrid, LMR, Muted, FA} from 'tonva';\r\nimport {UnitSpan, IdDates} from '../tools';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\nclass Info extends React.Component<DevModel.Server> {\r\n    render() {\r\n        let {discription, cloud, ip, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;        \r\n        //<Media icon={appIcon} main={discription} discription={ip} />},\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <LMR className=\"py-2\"\r\n                left={<FA name=\"server\" className=\"text-primary fa-2x mr-3\" />}>\r\n                <div><b>{ip}</b></div>\r\n                {disp}\r\n            </LMR>},\r\n            '',\r\n            {type: 'component', label: '开发号', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst serversProps:ObjViewProps<DevModel.Server> = {\r\n    title: 'Server',\r\n    info: Info,\r\n    formRows: [\r\n        {\r\n            label: '描述', \r\n            field: {name: 'discription', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '云服务商', \r\n            field: {name: 'cloud', type: 'string', maxLength: 20, required: true},\r\n        },\r\n        {\r\n            label: 'IP地址', \r\n            field: {name: 'ip', type: 'string', maxLength: 20},\r\n        },\r\n    ],\r\n    row: (item: DevModel.Server):JSX.Element => {\r\n        let {discription, cloud} = item;\r\n        //return <Row main={item.discription} vice={<>{item.cloud}  {item.ip}</>} />;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n            left={<FA name=\"server\" className=\"text-primary fa-lg\" />}>\r\n            <div className=\"px-3\">\r\n                <div><b>{discription}</b></div>\r\n                <div><Muted>{cloud}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    },\r\n    items: ()=>store.dev.servers,\r\n    repeated: {\r\n        name: 'discription',\r\n        err: '重复的描述',\r\n    }\r\n};\r\n\r\nexport default serversProps;\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page} from 'tonva';\r\nimport {FormRow, TonvaForm, Step, MultiStep, SubmitResult} from 'tonva-form';\r\nimport {DropdownActions, Action, List, FA} from 'tonva';\r\nimport {DevModel} from '../model';\r\nimport { ObjViewProps } from './ObjViewProps';\r\nimport { store } from 'store';\r\n\r\n@observer\r\nexport class ObjView<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    async componentDidMount() {\r\n        await this.props.items().load();\r\n    }\r\n    //converter(item:T):ListItem {\r\n    //    return this.props.converter(item);\r\n    //}\r\n    newItem() {\r\n        this.props.items().cur = undefined;\r\n        nav.push(<New {...this.props} />);\r\n    }\r\n    itemClick = (item:T) => {\r\n        this.props.items().cur = observable(item);\r\n        nav.push(<Info {...this.props} />);\r\n    }\r\n    render() {\r\n        let {title, items} = this.props;\r\n        let {isOwner} = store.unit;\r\n        let right = isOwner>0 && <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header={title} right={right}>\r\n            <List items={items().items}\r\n                item={{render: this.props.row, onClick: this.itemClick}}\r\n                />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass New<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        if (await this.props.items().check(values) === false) return;\r\n        let ret = await this.props.items().saveCur(values);\r\n        if (ret === true) {\r\n            nav.pop();\r\n        }\r\n        else {\r\n            let repeated = this.props.repeated;\r\n            //this.formView.setError(repeated.name, repeated.err);\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let content;\r\n        let {title, steps, stepHeader} = this.props;\r\n        let {formRows, items} = this.props;\r\n        if (steps !== undefined) {\r\n            content = <MultiStep className=\"mt-4\" header={stepHeader} steps={steps} first=\"step1\" onSubmit={this.onSubmit} />;\r\n        }\r\n        else if (formRows !== undefined) {\r\n            content = <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={formRows} \r\n                onSubmit={this.onSubmit} initValues={items().cur} />;\r\n        }\r\n        else {\r\n            content = 'ObjViewProps: no steps and no formRows';\r\n        }\r\n        return <Page header={'新增'+title}>\r\n            {content}\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass Info<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private menuItems = [\r\n        {caption:'修改' + this.props.title, action:this.editItem.bind(this), icon:'edit' },\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    editItem() {\r\n        nav.push(<Edit {...this.props} />);\r\n    }\r\n    render() {\r\n        let item = this.props.items().cur;\r\n        let actions = [];\r\n        let ex = this.props.extraMenuActions;\r\n        if (ex !== undefined) actions.push(...ex);\r\n        actions.push(...this.menuItems);\r\n        let canEdit = this.props.canEdit;\r\n        let right:any;\r\n        if (canEdit && canEdit(item) === true) {\r\n            right = <DropdownActions actions={actions} />;\r\n        }\r\n        return <Page header={this.props.title + ' - 详细资料'} right={right}>\r\n            <this.props.info {...item} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass Edit<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private actions = [\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    constructor(props: ObjViewProps<T>) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentWillMount() {\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        if (await this.props.items().check(values) === false) return;\r\n        await this.props.items().saveCur(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    render() {\r\n        let right = <DropdownActions actions={this.actions} />\r\n        return <Page header={'修改 '+this.props.title} right={right} back=\"close\">\r\n            <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={this.props.formRows} \r\n                onSubmit={this.onSubmit} initValues={this.props.items().cur} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR, FA } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers } from './cUsers';\r\n\r\nexport class VApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (appUsers: AppUsers, index:number):JSX.Element => {\r\n        let {app, more, users} = appUsers;\r\n        let {id, name, discription} = app;\r\n        let right = <small className=\"text-muted\">{discription}</small>;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <LMR className=\"mb-2\" right={right}>\r\n                <FA name=\"address-card-o\" className=\"text-primary mr-3\" />\r\n                <b>{name}</b>\r\n            </LMR>\r\n            <div>\r\n                <small className=\"text-muted\">用户: </small>\r\n                {users.length===0?\r\n                    '[无]':\r\n                    users.map(u => u.assigned || u.nick || u.name).join(', ') + (more===true? ' ...' : '')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {appUsersList, searchApp, onAppsClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchApp} \r\n            placeholder=\"搜索App\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={appUsersList} \r\n                item={{render: this.renderRow, onClick:onAppsClick,  key: (item=>item.app.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR, FA } from 'tonva';\r\nimport { UsersController, UserApps } from './cUsers';\r\n\r\nexport class VUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (userApps: UserApps, index:number):JSX.Element => {\r\n        let {user, apps} = userApps;\r\n        let {id, name, nick, icon, assigned} = user;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <div className=\"mb-2\">\r\n                <FA name=\"user-o\" className=\"text-primary mr-3\" />\r\n                <b>{assigned || nick || name}</b>\r\n            </div>\r\n            <div>\r\n                <small className=\"text-muted\">App: </small>\r\n                {apps.length===0?'[无]':apps.map(a => a.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {userAppsList, searchUser, onUsersClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchUser} \r\n            placeholder=\"搜索用户\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={userAppsList} \r\n                item={{render: this.renderRow, onClick:onUsersClick, key: (item=>item.user.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List } from 'tonva';\r\nimport { UsersController, User } from './cUsers';\r\n\r\nexport class VApp extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, curAppUsers, onAppEditUsers} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onAppEditUsers()}>增减用户</button>;\r\n        return <Page header={'App - ' + (curApp.name)} right={right}>\r\n            <List items={curAppUsers} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (user: User, index:number):JSX.Element => {\r\n        let {name, nick, assigned} = user;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <span>{assigned} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else if (nick)\r\n            content = <span>{nick} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else\r\n            content = <>{name}</>\r\n        return <div className=\"px-3 py-2\">{content}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers, App } from './cUsers';\r\n\r\nexport class VUser extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, curUserApps, onUserEditApps} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onUserEditApps()}>增减App</button>;\r\n        return <Page header={'用户 - ' + (curUser.assigned || curUser.nick || curUser.name)}\r\n            right={right}>\r\n            <List items={curUserApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (app: App, index:number):JSX.Element => {\r\n        let {name, discription} = app;\r\n        return <div className=\"px-3 py-2\">{name} {discription}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR, Muted, FA } from 'tonva';\r\nimport { UsersController, EditUser } from './cUsers';\r\n\r\nexport class VAppEditUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, appEditUsers, onAppEditUsers} = this.controller;\r\n        return <Page header={curApp.name + ' - 增减用户'} >\r\n            <List items={appEditUsers} item={{render:this.renderUser}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderUser = (editUser: EditUser, index:number):JSX.Element => {\r\n        let {name, nick, assigned, bind} = editUser;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <>{assigned} <Muted>{name}</Muted></>;\r\n        else if (nick)\r\n            content = <>{nick} <Muted>{name}</Muted></>;\r\n        else\r\n            content = <>{name}</>\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onUserChanged(editUser, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={right}>\r\n            {content}\r\n        </LMR>\r\n    }\r\n\r\n    private onUserChanged = async (editUser: EditUser, checked:boolean) => {\r\n        await this.controller.bindAppUser(editUser, checked);\r\n        editUser.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers, App, EditApp } from './cUsers';\r\n\r\nexport class VUserEditApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, userEditApps, onUserEditApps} = this.controller;\r\n        return <Page header={'增减App - ' + (curUser.assigned || curUser.nick || curUser.name)}>\r\n            <List items={userEditApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (editApp: EditApp, index:number):JSX.Element => {\r\n        let {name, discription, bind} = editApp;\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onAppChanged(editApp, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2\" right={right}>\r\n            {name} {discription}\r\n        </LMR>\r\n    }\r\n\r\n    private onAppChanged = async (editApp: EditApp, checked:boolean) => {\r\n        await this.controller.bindUserApp(editApp, checked);\r\n        editApp.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, Image, nav } from 'tonva';\r\nimport { UsersController, User } from './cUsers';\r\nimport { SearchBox } from 'tonva';\r\nimport { mainApi } from 'api';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VAddUser extends VPage<UsersController> {\r\n    @observable private user: User = null;\r\n    //@observable private addedUser: User;\r\n    private searchBox: SearchBox;\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let searchBox = <SearchBox ref={v=>this.searchBox=v}\r\n            className=\"w-100\"\r\n            onSearch={this.onSearch}\r\n            onFocus={this.onSearchFocus}\r\n            placeholder=\"用户全名/手机号/邮箱\"\r\n             />;\r\n        let content:any;\r\n        if (this.user === null) {\r\n        }\r\n        else if (this.user === undefined) {\r\n            content = <div className=\"text-info p-3\">没有找到用户</div>;\r\n        }\r\n        else {\r\n            let {name, nick, icon} = this.user;\r\n            let divUser:any;\r\n            if (nick) {\r\n                divUser = <><div><b>{nick}</b></div><div>{name}</div></>;\r\n            }\r\n            else {\r\n                divUser = <div><b>{name}</b></div>;\r\n            }\r\n            content = <div>\r\n                <div className=\"m-3 p-3 d-flex bg-white\">\r\n                    <Image src={icon} />\r\n                    <div className=\"ml-3\">{divUser}</div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <button className=\"btn btn-success text-center\" onClick={this.onAddUser}>增加用户</button>\r\n                </div>\r\n            </div>;\r\n        }\r\n        /*\r\n        let divUserAdded:any;\r\n        if (this.addedUser) {\r\n            divUserAdded = <div className=\"p-3\">\r\n                <div>\r\n                    新增用户: {this.addedUser.name} &nbsp; &nbsp; \r\n                    <button className=\"btn btn-success\" \r\n                        onClick={()=>this.controller.onUserEditApps()}>\r\n                        为用户添加App\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        }\r\n        */\r\n        return <Page header={searchBox}>\r\n            {content}\r\n        </Page>;\r\n    })\r\n    //{divUserAdded}\r\n\r\n    private onSearch = async (key:string) => {\r\n        this.user = await mainApi.userFromKey(key);\r\n    }\r\n\r\n    private onAddUser = async () => {\r\n        await this.controller.addUser(this.user.id);\r\n        this.controller.curUser = this.user;\r\n        this.user = null;\r\n        this.searchBox.clear();\r\n        this.replacePage(this.addedPage);\r\n    }\r\n\r\n    private onSearchFocus = () => {\r\n        this.user = null;\r\n        //this.addedUser = null;\r\n        if (this.searchBox) this.searchBox.clear();\r\n    }\r\n\r\n    private onAddApps = () => {\r\n        this.closePage();\r\n        this.controller.onUserEditApps();\r\n    }\r\n\r\n    private onContinueAddUser = () => {\r\n        this.closePage();\r\n        this.controller.onAddUser();\r\n    }\r\n\r\n    private addedPage = () => {\r\n        return <Page header=\"添加成功\">\r\n            <div className=\"p-3 text-center\">\r\n                <div>\r\n                    新增用户: {this.controller.curUser.name}\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-success mr-3\" \r\n                        onClick={this.onAddApps}>\r\n                        为用户添加App\r\n                    </button>\r\n                    <button className=\"btn btn-outline-primary\"\r\n                        onClick={this.onContinueAddUser}>\r\n                        继续添加新用户\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Controller, VPage, Page } from 'tonva';\r\nimport { mainApi } from 'api';\r\nimport { LMR, FA } from 'tonva';\r\nimport { VApps } from './vApps';\r\nimport { VUsers } from './vUsers';\r\nimport { VApp } from './vApp';\r\nimport { VUser } from './vUser';\r\nimport { VAppEditUsers } from './vAppEditUsers';\r\nimport { VUserEditApps } from './vUserEditApps';\r\nimport { VAddUser } from './VAddUser';\r\nimport { Unit } from 'model';\r\n\r\nexport interface User {\r\n    id: number;\r\n    name: string;\r\n    nick: string;\r\n    icon: string;\r\n    assigned: string;\r\n}\r\nexport interface App {\r\n    id: number;\r\n    name: string;\r\n    discription: string;\r\n}\r\nexport interface UserApps {\r\n    user: User;\r\n    apps: App[];\r\n}\r\nexport interface AppUsers {\r\n    app: App;\r\n    users: User[];\r\n    more: boolean;\r\n}\r\nexport interface EditApp extends App {\r\n    bind: number;   // 0: not bind, 1: bind\r\n}\r\nexport interface EditUser extends User {\r\n    bind: number;  // 0: not bind, 1: bind\r\n}\r\n\r\nexport class UsersController extends Controller {\r\n    private unit: Unit;\r\n    @observable userAppsList: UserApps[];\r\n    @observable appUsersList: AppUsers[];\r\n    curUser: User;\r\n    @observable curUserApps: App[];\r\n    @observable userEditApps: EditApp[];\r\n    curApp: App;\r\n    @observable curAppUsers: User[];\r\n    @observable appEditUsers: EditUser[];\r\n\r\n    protected async internalStart(unit:Unit) {\r\n        this.unit = unit;\r\n        let cn = \"bg-white px-3 py-2 my-1\";\r\n        let appIcon = <FA name=\"columns\" className=\"text-primary mr-3\" />;\r\n        let userIcon = <FA name=\"user-plus\" className=\"text-primary mr-3\" />;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.onAddUser}><FA name=\"plus\" /></button>;\r\n        this.openPage(<Page header={'用户管理 - ' +  this.unit.name} right={right}>\r\n            <LMR className={cn} onClick={this.onAppUsers} left={appIcon}>App</LMR>\r\n            <LMR className={cn} onClick={this.onUserApps} left={userIcon}>用户</LMR>\r\n        </Page>);\r\n    }\r\n\r\n    private onAppUsers = async () => {\r\n        await this.loadAppUsers(undefined);\r\n        this.openVPage(VApps);\r\n    }\r\n\r\n    private onUserApps = async () => {\r\n        await this.loadUserApps(undefined);\r\n        this.openVPage(VUsers);\r\n    }\r\n\r\n    private async loadAppUsers(key:string) {\r\n        let list:AppUsers[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitAppUsers(this.unit.id, key, pageStart, pageSize);\r\n        let apps = ret[0];\r\n        let users = ret[1];\r\n        let coll: {[id:number]:AppUsers} = {}\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.id,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            };\r\n            list.push(coll[a.id] = {app:app, more:false, users:[]});\r\n        }\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.user,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            }\r\n            let item = coll[u.app];\r\n            let {users} = item;\r\n            if (users.length >= 5) {\r\n                item.more = true;\r\n            }\r\n            else {\r\n                users.push(user);\r\n            }\r\n        }\r\n        this.appUsersList = list;\r\n    }\r\n\r\n    private async loadUserApps(key:string) {\r\n        let list:UserApps[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitUsers(this.unit.id, key, pageStart, pageSize);\r\n        let users = ret[0];\r\n        let apps = ret[1];\r\n        let coll: {[id:number]:UserApps} = {}\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.id,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            };\r\n            list.push(coll[u.id] = {user:user, apps:[]});\r\n        }\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.app,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            }\r\n            coll[a.user].apps.push(app);\r\n        }\r\n        this.userAppsList = list;\r\n    }\r\n\r\n    searchUser = async(key:string) => {\r\n        await this.loadUserApps(key);\r\n    }\r\n\r\n    searchApp = async(key:string) => {\r\n        await this.loadAppUsers(key);\r\n    }\r\n\r\n    onAppsClick = async (appUsers: AppUsers) => {\r\n        this.curApp = appUsers.app;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curAppUsers = await mainApi.unitOneAppUsers(this.unit.id, this.curApp.id, pageStart, pageSize);\r\n        this.openVPage(VApp);\r\n    }\r\n\r\n    onUsersClick = async (userApps: UserApps) => {\r\n        this.curUser = userApps.user;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curUserApps = await mainApi.unitOneUserApps(this.unit.id, this.curUser.id, pageStart, pageSize);\r\n        this.openVPage(VUser);\r\n    }\r\n\r\n    onAppEditUsers = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.appEditUsers = await mainApi.unitAppEditUsers(this.unit.id, this.curApp.id, key, pageStart, pageSize);\r\n        this.openVPage(VAppEditUsers);\r\n    }\r\n\r\n    onAddUser = () => {\r\n        this.openVPage(VAddUser);\r\n    }\r\n\r\n    onUserEditApps = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.userEditApps = await mainApi.unitUserEditApps(this.unit.id, this.curUser.id, key, pageStart, pageSize);\r\n        this.openVPage(VUserEditApps);\r\n    }\r\n\r\n    bindAppUser = async(user:User, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, this.curApp.id, user.id, checked===true? 1:0);\r\n        let appUsers = this.appUsersList.find(v => v.app.id === this.curApp.id);\r\n        if (checked === true) {\r\n            this.curAppUsers.push(user);\r\n            if (appUsers) appUsers.users.push(user);\r\n        }\r\n        else {\r\n            let index = this.curAppUsers.findIndex(v => v.id === user.id);\r\n            if (index>=0) this.curAppUsers.splice(index, 1);\r\n            if (appUsers) {\r\n                index = appUsers.users.findIndex(v => v.id === user.id);\r\n                if (index>=0) appUsers.users.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    bindUserApp = async(app:App, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, app.id, this.curUser.id, checked===true? 1:0);\r\n        if (this.userAppsList === undefined) return;\r\n        let userApps = this.userAppsList.find(v => v.user.id === this.curUser.id);\r\n        if (checked === true) {\r\n            this.curUserApps.push(app);\r\n            if (userApps) userApps.apps.push(app);\r\n        }\r\n        else {\r\n            let index = this.curUserApps.findIndex(v => v.id === app.id);\r\n            if (index>=0) this.curUserApps.splice(index, 1);\r\n            if (userApps) {\r\n                index = userApps.apps.findIndex(v => v.id === app.id);\r\n                if (index>=0) userApps.apps.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    addUser = async (userId: number) => {\r\n        await mainApi.unitAddUser(this.unit.id, userId);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, appInFrame, Controller, \r\n    VPage, Image, Edit, ItemSchema, UiSchema, \r\n    StringSchema, ImageSchema, UiImageItem, UiTextItem} from 'tonva'; \r\nimport {List, LMR, FA} from 'tonva';\r\n//, StackedFA, PropGrid, Prop, Muted\r\n//import {StringValueEdit} from './tools';\r\nimport {Unit, UnitApps, UnitAdmin, DevModel} from './model';\r\nimport {store} from './store';\r\nimport Administors from './Administors';\r\nimport AppsPage from './Apps';\r\nimport {Members} from './Members';\r\nimport { mainApi } from 'api';\r\n//import { COrganization } from 'organization';\r\nimport {\r\n    ObjViewProps, ObjView,\r\n    //appsProps, \r\n    busesProps, \r\n    serversProps, /*uqdbsProps, servicesProps, */ UQController} from './Dev';\r\nimport { AppController } from './Dev';\r\nimport { UsersController } from 'Users';\r\n\r\nexport class CAdmin extends Controller {\r\n    isProduction: boolean;\r\n    adminUnits: UnitAdmin[]; // 仅仅为Admins调试用。从登录用户获取units\r\n\r\n    private async loadAdminUnits(): Promise<void> {        \r\n        let ret = await mainApi.userAdminUnits();\r\n        let adminUnits = this.adminUnits = ret[0];\r\n        console.log('loadAdminUnits', adminUnits);\r\n        if (adminUnits.length === 1) {\r\n            appInFrame.unit = adminUnits[0].id;\r\n            await store.loadUnit();\r\n        }\r\n    }\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        store.init();\r\n        \r\n        this.isProduction = document.location.hash.startsWith('#tv');\r\n        console.log('admins isProduction %s', this.isProduction);\r\n\r\n        if (this.isProduction === false) {\r\n            await this.loadAdminUnits();\r\n            this.openVPage(VAdmin);\r\n            return;\r\n        }\r\n        await store.loadUnit();\r\n        this.openVPage(VAdmin);\r\n    /*\r\n        let user = nav.user;\r\n        if (user === undefined) {\r\n            console.log('autorun: user has logged out');\r\n            return;\r\n        }\r\n    \r\n        console.log('autorun login');\r\n        */\r\n       /*\r\n        setTimeout(async () => {\r\n            // 等待 tonva-tools 里面的initSubWin的nav.user的赋值\r\n            // 这个地方实际上有问题的，不应该这么写。程序逻辑顺序逻辑错误。\r\n            // 2018-11-5: 临时凑合用延时的方式来解决。\r\n            await store.loadUnit();\r\n            this.showVPage(VAdmin);\r\n        }, 200);\r\n        */\r\n    }\r\n}\r\n\r\nexport class VAdmin extends VPage<CAdmin> {\r\n    async open() {\r\n        let {isProduction, adminUnits} = this.controller;\r\n        if (isProduction === false) {\r\n            switch (adminUnits.length) {\r\n                default: this.openPage(this.selectUnitPage); return;\r\n                case 0: this.openPage(this.noUnitPage); return;\r\n                case 1: this.openPageElement(<AdminPage />); return;\r\n            }\r\n        }\r\n\r\n        if (store.unit === undefined) {\r\n            this.openPage(this.noUnitPage);\r\n            return;\r\n        }\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n\r\n    private selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={logout}>\r\n            <List items={this.controller.adminUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>;\r\n    }\r\n\r\n    private noUnitPage = () => {\r\n        let {nick, name} = nav.user;\r\n        return <Page header=\"没有小号\" logout={logout}>\r\n            <div className=\"p-3 small text-info\">\r\n                {nick || name}: 没有需要管理的小号\r\n            </div>\r\n        </Page>\r\n    }\r\n\r\n    protected get view() {return undefined}\r\n\r\n    renderRow = (item: UnitAdmin, index: number):JSX.Element => {\r\n        return <LMR className=\"p-2\" right={'id: ' + item.id}>\r\n            <div>{item.nick || item.name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: UnitAdmin) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        store.init();\r\n        await store.loadUnit();\r\n        this.closePage();\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n}\r\n\r\nconst logout = async () => {\r\n    store.logout();\r\n}\r\n\r\ninterface ActionItem {\r\n    main: string | JSX.Element;\r\n    right?: string | JSX.Element;\r\n    icon: string|JSX.Element;\r\n    page?: new (props:any) => React.Component;\r\n    //onClick: () => nav.push(<Administors />),\r\n    controller?: Controller;\r\n}\r\n\r\ninterface DevItem<T extends DevModel.ObjBase> {\r\n    title: string;\r\n    count: number;\r\n    icon: string;\r\n    objProps?: ObjViewProps<T>;\r\n    onClick?: ()=>void;\r\n}\r\n\r\ntype Item = ActionItem|DevItem<DevModel.ObjBase>|string;\r\n\r\nconst rArrow = <FA name=\"angle-right\" />;\r\nconst typeCaptions = {\r\n    1: '开发号',\r\n    2: '小号',\r\n    3: '系统号'\r\n}\r\n@observer\r\ndefault class AdminPage extends React.Component {\r\n    private caption:string;\r\n\r\n    async componentWillMount() {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        this.caption = typeCaptions[type];\r\n        if ((type & 1) !== 0) {\r\n            await store.dev.loadCounts();\r\n        }\r\n    }\r\n\r\n    private appsAction:ActionItem = {\r\n        main: '启停App',\r\n        right: rArrow, //'增减',\r\n        icon: 'play-circle-o',\r\n        page: AppsPage,\r\n    };\r\n    private usersAction:ActionItem = {\r\n        main: '用户角色',\r\n        right: rArrow,\r\n        icon: 'users',\r\n        page: Members,\r\n    };\r\n    private newUsersAction:ActionItem = {\r\n        main: '用户管理',\r\n        right: rArrow,\r\n        icon: 'user-o',\r\n        controller: new UsersController(undefined),\r\n    };\r\n    /*\r\n    private devAction:Item = {\r\n        main: <DevActions />,\r\n        right: '程序开发相关管理',\r\n        icon: 'laptop',\r\n        //page: Dev,\r\n    };*/\r\n    private adminsAction:ActionItem = {\r\n        main: '管理员',\r\n        right: rArrow,\r\n        icon: 'universal-access',\r\n        page: Administors,\r\n    };\r\n\r\n    /*\r\n    private cOrganization = new COrganization;\r\n    private organizeAction:ActionItem = {\r\n        main: this.cOrganization.label,\r\n        right: rArrow,\r\n        icon: this.cOrganization.icon,\r\n        controller: this.cOrganization\r\n    };\r\n    */\r\n\r\n    private noneAction:ActionItem = {\r\n        main: '请耐心等待分配任务',\r\n        icon: 'hourglass-start',\r\n    };\r\n\r\n    private buildItems():Item[] {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        let items:Item[] = [];\r\n        if (isOwner === 1) {\r\n            items.push(this.adminsAction);\r\n        }\r\n        console.log('unit:', unit);\r\n        if (isAdmin === 1) {\r\n            if ((type & 2) !== 0) {\r\n                // unit\r\n                items.push(\r\n                    '小号管理',\r\n                    this.appsAction, \r\n                    //this.usersAction, \r\n                    this.newUsersAction, \r\n                    //this.organizeAction\r\n                );\r\n            }\r\n            if ((type & 1) !== 0) {\r\n                // dev unit\r\n                let {counts} = dev;\r\n\r\n                let appAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'APP', \r\n                    count: counts && counts.app, \r\n                    icon: 'tablet', \r\n                    onClick: () => new AppController(undefined).start(unit.id),\r\n                };\r\n                let uqAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'UQ', \r\n                    count: counts && counts.uq, \r\n                    icon: 'database', \r\n                    onClick: () => new UQController(undefined).start(unit.id),\r\n                };\r\n                let busAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'BUS', \r\n                    count: counts && counts.bus, \r\n                    icon: 'cogs', \r\n                    objProps: busesProps,\r\n                };\r\n                let serverAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'Server', \r\n                    count: counts && counts.server, \r\n                    icon: 'server', \r\n                    objProps: serversProps,\r\n                };\r\n                items.push('开发号管理')\r\n                if (isOwner>0) items.push(appAction);\r\n                items.push(uqAction, busAction);\r\n                if (isOwner>0) items.push(serverAction);\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n    private row = (item:Item, index:number):JSX.Element => {\r\n        if (typeof item === 'string') {\r\n            return <div className=\"px-3 pt-3 pb-1 small text-muted\" style={{backgroundColor:'#f0f0f0'}}>{item}</div>;\r\n        }\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        let left:any, mid:any, r:any;\r\n        if (title !== undefined) {\r\n            let {icon, count} = item as DevItem<DevModel.ObjBase>;\r\n            left = <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" />;\r\n            mid = title;\r\n            r = count>0 && <span>{count}</span>;\r\n        }\r\n        else {\r\n            let {right, main, icon} = item as ActionItem;\r\n            left = typeof icon === 'string'? \r\n                <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" /> :\r\n                item.icon;\r\n            mid = main;\r\n            r = <span>{right}</span>;\r\n        }\r\n        return <LMR className=\"px-3 py-2 align-items-center\" left={left} right={r}>\r\n            <div className=\"px-3\"><b>{mid}</b></div>\r\n        </LMR>;\r\n    }\r\n    private rowClick = async (item:Item) => {\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        if (title !== undefined) {\r\n            let {objProps, onClick} = item as DevItem<DevModel.ObjBase>;\r\n            if (objProps !== undefined)\r\n                return nav.push(<ObjView {...objProps} />);\r\n            else {\r\n                onClick();\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            let {page:P, controller} = item as ActionItem;\r\n            if (P !== undefined)\r\n                nav.push(<P />);\r\n            else {\r\n                await controller.start(store.unit);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        if (unit === undefined) {\r\n            console.log(\"admin render without unit\");\r\n            return null;\r\n        }\r\n        console.log(\"admin render with unit\");\r\n        let items = this.buildItems();\r\n        if (items === undefined) {\r\n            return <Page header=\"\" />;\r\n        }\r\n        let header:any, top:any;\r\n        if (unit !== undefined) {\r\n            let {name, nick, icon, discription} = unit;\r\n            let title:string, vice:any;\r\n            if (nick) {\r\n                title = nick;\r\n                vice = <h6><small className='text-secondary'>{name}</small></h6>;\r\n            }\r\n            else {\r\n                title = name;\r\n            }\r\n            if (this.caption !== undefined) header = this.caption + ' - ' + title;\r\n            top = <LMR className='px-3 my-4 bg-white py-2 cursor-pointer' onClick={()=>nav.push(<UnitProps />)}\r\n                left={<div><Image className=\"w-3c h-3c\" src={icon} /></div>}>\r\n                <div className=\"px-3\">\r\n                    <LMR right={vice}><h6 className='text-dark font-weight-bold'>{title}</h6></LMR>\r\n                    <div className='small text-info'>{discription}</div>\r\n                </div>\r\n            </LMR>;\r\n        }\r\n        else {\r\n            header = '系统管理';\r\n        }\r\n        return <Page header={header} logout={logout}>\r\n            {top}\r\n            <List items={items} item={{render:this.row, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass UnitProps extends React.Component {\r\n    /*\r\n    private rows:Prop[] = [\r\n        '',\r\n        {label: '标志图', type: 'string', name: 'icon'},\r\n        '=',\r\n        {label: '唯一号', type: 'string', name: 'name'},\r\n        {\r\n            label: '名称', \r\n            type: 'string',\r\n            name: 'nick', \r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改名称\"\r\n                value={store.unit.nick}\r\n                onChanged={this.onNickChanged} \r\n                info=\"好的名字会提升接受度\" />)\r\n        },\r\n        {\r\n            label: '说明',\r\n            type: 'string',\r\n            name: 'discription',\r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改说明\"\r\n                value={store.unit.discription}\r\n                onChanged={this.onDiscriptionChanged} \r\n                info=\"对小号做一个说明\" />)\r\n        },\r\n    ];\r\n    */\r\n    private schema:ItemSchema[] =[\r\n        {name: 'icon', type: 'image'} as ImageSchema,\r\n        {name: 'nick', type: 'string'} as StringSchema,\r\n        {name: 'discription', type: 'string'} as StringSchema,\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'标志图'} as UiImageItem,\r\n            discription: {widget:'text', label:'描述', placeholder:'简短清晰的描述'} as UiTextItem,\r\n        }\r\n    }\r\n    /*\r\n    async onNickChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('nick', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('discription', value);\r\n    }\r\n    */\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        //await userApi.userSetProp(name, newValue);\r\n        await store.unitChangeProp(name, newValue);\r\n        //this.data[name] = newValue;\r\n        //nav.user[name] = newValue;\r\n        //nav.saveLocalUser();\r\n    }\r\n    //<PropGrid rows={this.rows} values={store.unit} alignValue=\"right\" />\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        let {isRoot, isOwner} = unit;\r\n        return <Page header=\"小号信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={store.unit}\r\n                onItemChanged={this.onItemChanged}\r\n                stopEdit={!(isRoot>0 && isOwner>0)} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, NavView } from 'tonva';\r\nimport { CAdmin } from './Admin';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n    async onLogined() {\r\n        let loc = document.location;\r\n        nav.clear();\r\n        //nav.push(<StartPage />);\r\n        let cAdmin = new CAdmin({});\r\n        await cAdmin.start();\r\n    }\r\n    render() {\r\n        return (\r\n            <NavView onLogined={this.onLogined} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}