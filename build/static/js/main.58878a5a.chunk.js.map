{"version":3,"sources":["tonva/index.ts","tonva/components/index.ts","tonva/CApp/CVEntity.tsx","tonva/net/guestApi.ts","tonva/net/caller.ts","tonva/net/index.ts","tonva/components/nav.tsx","tonva/tool/cacheIds.ts","tonva/tool/localDb.ts","tonva/tool/env.ts","tonva/tool/local.ts","tonva/tool/index.ts","tonva/CApp/tools/jsonStringify.ts","tonva/CApp/tools/pureJsonContent.tsx","tonva/CApp/tools/index.ts","tonva/net/appBridge.ts","tonva/components/page.tsx","tonva/uq/caller.ts","tonva/CApp/form/viewModel.tsx","tonva/net/httpChannel.ts","tonva/net/httpChannelUI.ts","tonva/net/uqApi.ts","tonva/CApp/link/cLink.tsx","tonva/CApp/link/index.ts","tonva/uq/entity.ts","tonva/tool/uid.ts","tonva/net/wsChannel.ts","tonva/uq/index.ts","tonva/uq/query.ts","tonva/components/edit/itemEdit.tsx","tonva/components/image.tsx","tonva/tool/user.ts","tonva/net/host.ts","tonva/CApp/cUq/reactBoxId.tsx","tonva-form/index.ts","tonva/CApp/tuid/vTuidMain.tsx","tonva/CApp/tuid/vTuidEdit.tsx","tonva/CApp/tuid/vTuidSelect.tsx","tonva/CApp/tuid/vTuidView.tsx","tonva/CApp/tuid/vTuidInfo.tsx","tonva/CApp/tuid/pageItems.ts","tonva/CApp/tuid/vTuidList.tsx","tonva/CApp/tuid/cTuid.ts","tonva/CApp/tuid/index.tsx","tonva/uq/action.ts","tonva/CApp/form/vBand.tsx","tonva/CApp/form/vSubmit.tsx","tonva/CApp/form/rule.ts","tonva/CApp/form/vField/vField.tsx","tonva/CApp/form/vField/vComputeField.tsx","tonva/CApp/form/vArr.tsx","tonva/CApp/form/vField/vTuidField.tsx","tonva/CApp/form/bandsBuilder.ts","tonva/CApp/form/vField/buildVmField.ts","tonva/CApp/form/vForm.tsx","tonva/CApp/form/index.ts","tonva/uq/tuid/idCache.ts","tonva/uq/tuid/tuid.ts","tonva/components/res.ts","tonva-form/form/control/control.tsx","tonva-form/form/control/buttonsControl.tsx","tonva-form/form/control/charsControl.tsx","tonva-form/form/control/stringControl.tsx","tonva-form/form/control/numberControl.tsx","tonva-form/form/control/unknownControl.tsx","tonva-form/form/control/pickIdControl.tsx","tonva-form/form/control/pickTuidControl.tsx","tonva-form/form/control/pickControl.tsx","tonva-form/form/control/index.ts","tonva-form/form/control/checkControl.tsx","tonva-form/form/control/radioControl.tsx","tonva-form/form/control/selectControl.tsx","tonva-form/form/control/textAreaControl.tsx","tonva/uq/tuid/index.ts","tonva-form/form/rowContainer/index.tsx","tonva/uq/tuid/reactBoxId.tsx","tonva/net/apiBase.ts","tonva/components/pageHeader.tsx","tonva/CApp/query/defaultRow.tsx","tonva/CApp/query/vQueryMain.tsx","tonva/CApp/query/vQuerySelect.tsx","tonva/CApp/query/cQuery.ts","tonva/CApp/query/index.ts","tonva/components/edit/imageItemEdit.tsx","tonva/entry/userApi.ts","tonva/tool/pageItems.ts","tonva/components/loading.tsx","tonva/components/resUploader.tsx","tonva/uq/uqMan.ts","tonva/uq/sheet.ts","tonva/uq/book.ts","tonva/uq/history.ts","tonva/uq/map.ts","tonva/uq/pending.ts","tonva/CApp/icons.tsx","tonva/CApp/ControllerUq.ts","tonva-form/form/index.ts","tonva-form/form/formView.tsx","tonva/CApp/sheet/vMain.tsx","tonva/CApp/sheet/vNew.tsx","tonva/CApp/sheet/vSheetView.tsx","tonva/CApp/sheet/vEdit.tsx","tonva/CApp/sheet/vSheetAction.tsx","tonva/CApp/sheet/vSchema.tsx","tonva/CApp/sheet/vArchives.tsx","tonva/CApp/sheet/vList.tsx","tonva/CApp/sheet/vArchived.tsx","tonva/CApp/sheet/vSheet.tsx","tonva/CApp/sheet/vSaved.tsx","tonva/CApp/sheet/vSheetProcessing.tsx","tonva/CApp/sheet/cSheet.ts","tonva/CApp/sheet/index.ts","tonva/components/simple/Badge.tsx","tonva/components/simple/LMR.tsx","tonva/components/simple/FA.tsx","tonva/components/simple/Muted.tsx","tonva/components/simple/index.ts","tonva/CApp/book/vBookMain.tsx","tonva/CApp/book/cBook.ts","tonva/CApp/cUq/vUq.tsx","tonva/CApp/cUq/cUq.tsx","tonva/CApp/cUq/index.ts","tonva/CApp/centerApi.ts","tonva/CApp/app/vApp.tsx","tonva/CApp/app/CApp.tsx","tonva/CApp/app/index.ts","tonva/CApp/map/vMain.tsx","tonva/CApp/map/inputValues.tsx","tonva/CApp/map/cMap.ts","tonva/CApp/map/index.ts","tonva/CApp/action/vActionMain.tsx","tonva/CApp/action/cAction.ts","tonva/CApp/action/index.ts","tonva/CApp/history/vHistoryMain.tsx","tonva/CApp/history/cHistory.ts","tonva/CApp/history/index.ts","tonva/CApp/pending/vPendingMain.tsx","tonva/CApp/pending/cPending.ts","tonva/CApp/pending/index.ts","tonva/net/netToken.ts","tonva/components/VM.tsx","tonva/components/schema/index.ts","tonva/components/rules/index.ts","tonva/components/dropDownActions/index.tsx","tonva/components/easyDate/index.tsx","tonva/components/media.tsx","tonva/components/searchBox.tsx","tonva/uq/tuid/tuidsCache.ts","tonva/uq/uqsMan.ts","tonva/CApp/index.ts","tonva-form/form/TonvaForm.tsx","tonva-form/multiStep/index.tsx","tonva/components/form/rules/index.ts","tonva/components/form/widgets/widget.tsx","tonva/components/form/widgets/textWidget.tsx","tonva/components/form/widgets/numberWidget.tsx","tonva/components/form/widgets/updownWidget.tsx","tonva/components/form/widgets/dateWidget.tsx","tonva/components/form/widgets/checkBoxWidget.tsx","tonva/components/form/widgets/selectWidget.tsx","tonva/components/form/widgets/radioWidget.tsx","tonva/components/form/widgets/idWidget.tsx","tonva/components/form/widgets/unknown.tsx","tonva/components/form/widgets/buttonWidget.tsx","tonva/components/form/context.tsx","tonva/components/form/widgets/arrComponent.tsx","tonva/components/form/widgets/imageWidget.tsx","tonva/components/form/widgets/factory.tsx","tonva/components/form/widgets/textareaWidget.tsx","tonva/components/form/widgets/passwordWidget.tsx","tonva/components/form/widgets/rangeWidget.tsx","tonva/components/form/formRes.ts","tonva/components/form/form.tsx","tonva/components/form/field.tsx","tonva/components/form/index.ts","tonva/components/edit/stringItemEdit.tsx","tonva/components/edit/radioItemEdit.tsx","tonva/components/edit/selectItemEdit.tsx","tonva/components/edit/idItemEdit.tsx","tonva/components/edit/edit.tsx","tonva/components/edit/index.tsx","tonva/app/centerApi.ts","tonva/components/list/base.tsx","tonva/components/list/clickable.tsx","tonva/components/list/static.tsx","tonva/components/list/selectable.tsx","tonva/components/list/index.tsx","tonva/components/propGrid/row.tsx","tonva/components/propGrid/propView.tsx","tonva/components/propGrid/PropGrid.tsx","tonva/components/propGrid/index.tsx","tonva/entry/meInfo.tsx","tonva/components/tabs/tabs.tsx","tonva/components/fetchErrorView.tsx","api/mainApi.ts","api/devApi.ts","store/admins.ts","store/dev.ts","store/cacheIds.ts","store/index.ts","Administors/NewFellow.tsx","Administors/EditAdmin.tsx","Administors/index.tsx","tools/idDates.tsx","tools/span.tsx","tools/unitSpan.tsx","consts.ts","tools/uqSpan.tsx","tools/appSpan.tsx","tools/serverSpan.tsx","tools/stringValueEdit.tsx","tools/idPickPage.tsx","Apps/info.tsx","Apps/new.tsx","Apps/index.tsx","Members/newRole.tsx","Members/roleApps.tsx","Members/memberPage.tsx","Members/membersPage.tsx","Members/rolePage.tsx","Members/index.tsx","Dev/apps/editPage.tsx","Dev/apps/appsPage.tsx","Dev/apps/appUqs.tsx","Dev/apps/appPage.tsx","Dev/apps/uqBindPage.tsx","Dev/apps/index.tsx","Dev/uqs/resultSections.tsx","Dev/uqs/uqUpload.tsx","createIdPick.tsx","Dev/uqs/newServicePage.tsx","Dev/uqs/servicePage.tsx","Dev/uqs/editPage.tsx","Dev/uqs/uqPage.tsx","Dev/uqs/listPage.tsx","Dev/uqs/uqController.tsx","Dev/buses.tsx","Dev/servers.tsx","Dev/ObjView.tsx","Users/vApps.tsx","Users/vUsers.tsx","Users/vApp.tsx","Users/vUser.tsx","Users/vAppEditUsers.tsx","Users/vUserEditApps.tsx","Users/VAddUser.tsx","Users/cUsers.tsx","Admin.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["_tool__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_net__WEBPACK_IMPORTED_MODULE_1__","_components__WEBPACK_IMPORTED_MODULE_2__","o","_uq__WEBPACK_IMPORTED_MODULE_4__","_CApp__WEBPACK_IMPORTED_MODULE_5__","_nav__WEBPACK_IMPORTED_MODULE_0__","_page__WEBPACK_IMPORTED_MODULE_2__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_edit__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_image__WEBPACK_IMPORTED_MODULE_10__","_rules__WEBPACK_IMPORTED_MODULE_12__","_list__WEBPACK_IMPORTED_MODULE_13__","_dropDownActions__WEBPACK_IMPORTED_MODULE_14__","_easyDate__WEBPACK_IMPORTED_MODULE_15__","_propGrid__WEBPACK_IMPORTED_MODULE_16__","_simple__WEBPACK_IMPORTED_MODULE_17__","_media__WEBPACK_IMPORTED_MODULE_18__","_searchBox__WEBPACK_IMPORTED_MODULE_19__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_3__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_2__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_1__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","__awaiter","ownerField","cTuidSelect","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","_components__WEBPACK_IMPORTED_MODULE_0__","controller","createForm","guestApi","uqApi","get","user","token","unitName","unit","Caller","params","method","headers","wsChannel","apiBase","appBridge","host","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_0__","props","waitCount","upgradeUq","nav","start","isHistoryBack","clearError","setState","fetchError","back","bind","navBack","stack","state","wait","window","addEventListener","set","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","uq","version","show","header","className","onClick","view","disposer","clear","push","history","pushState","key","ceased","refresh","item","pop","dispose","p","i","len","backLevel","popAndDispose","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","_loading__WEBPACK_IMPORTED_MODULE_10__","_fetchErrorView__WEBPACK_IMPORTED_MODULE_4__","assign","test","testing","style","lineHeight","_simple__WEBPACK_IMPORTED_MODULE_15__","map","index","visibility","Nav","local","_tool__WEBPACK_IMPORTED_MODULE_6__","lang","district","_res__WEBPACK_IMPORTED_MODULE_9__","language","culture","guest","g","handler","ws","onWsReceiveAny","handlerId","endWsReceive","msg","receive","unitJsonPath","unitRes","fetch","json","remove","envUnit","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","REACT_APP_UNIT","Number","isDevelopment","getPredefinedUnitName","unitId","_net__WEBPACK_IMPORTED_MODULE_7__","unitFromName","settings","navSettings","href","document","location","toLowerCase","endsWith","substr","hash","pos","_net_appBridge__WEBPACK_IMPORTED_MODULE_5__","hashParam","substring","startWait","url","resHost","centerHost","resUrl","wsHost","setGuest","exHash","appInFrame","parent","_net_wsChannel__WEBPACK_IMPORTED_MODULE_8__","predefinedUnit","loadPredefinedUnit","notLogined","logined","endWait","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_3__","callback","JSON","stringify","saveLocalUser","showAppView","connect","defaultTop","loginTop","withBack","lv","e","then","loginView","default","logout","logoutClear","cp","ChangePasswordPage","onError","showUpgradeUq","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","title","String","open","date","Date","getTime","toTimeString","step","__decorate","mobx__WEBPACK_IMPORTED_MODULE_1__","CacheIds","maxCount","dict","Map","ids","loadId","shift","delete","_loadIds","_loadId","setItem","mobx_module","__ls","localStorage","getItem","value","removeItem","LocalCache","text","parse","t","removeLocal","child","Local","caches","locals","k","keyForGet","keyForSet","sk","localDb_LocalArr","LocalMap","keyForRemove","removeAll","ks","maxArrSize","split","join","lodash_default","a","indexOf","unshift","splice","saveIndex","max","forEach","l","isNaN","ls","testingTags","env","pathname","pn","isTesting","localDb","local_LocalData","uid","pageItems","replacer","jsonStringify","PureJSONContent","react","uqTokens","logoutUqTokens","appsInFrame","_unit","val","isBridged","setAppInFrame","appHash","parts","page","slice","getExHashPos","lastIndexOf","getExHash","appUrl","u","_tool_uid__WEBPACK_IMPORTED_MODULE_2__","evt","data","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_4__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_0___default","clone","_components__WEBPACK_IMPORTED_MODULE_1__","subFrameStarted","onReceive","_uqApi__WEBPACK_IMPORTED_MODULE_3__","initSubWin","from","callId","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","apiName","db","uqOwner","uqName","onReceiveAppApiMessage","urlTest","action","uqTokenActions","Error","realUrl","_host__WEBPACK_IMPORTED_MODULE_5__","getUrlOrTest","onAppApiReturn","buildAppUq","realUnit","getUnit","uqToken","at","opener","appUq","bridgeCenterApi","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","lodash__WEBPACK_IMPORTED_MODULE_3___default","isSelected","isMounted","t0","load","footer","right","keepHeader","headerClassName","tabPosition","redDot","img","redDotView","cn","alt","classnames__WEBPACK_IMPORTED_MODULE_2___default","onTabClick","pageHeader","_pageHeader__WEBPACK_IMPORTED_MODULE_4__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","mobx_react__WEBPACK_IMPORTED_MODULE_1__","EntityCaller","_net__WEBPACK_IMPORTED_MODULE_0__","tries","_entity","innerRequest","xcall","jsonResult","innerCall","$uq","$modify","pullModify","xresult","retry","ver","uqVersion","en","schema","rebuildSchema","buildEntities","setSchema","ActionCaller","QueryQueryCaller","path","unpackReturns","buildParams","QueryPageCaller","pageStart","pageSize","$page","ViewModel","JSONContent","RowContent","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","methodsWithBody","httpChannel_HttpChannel","hostUrl","apiToken","showError","timeout","tool","post","urlPrefix","caller","buildOptions","h","append","encodeURI","innerFetch","keys","innerFetchResult","that","buildError","channel","timeOutHandler","ok","statusText","ct","retJson","Array","isArray","retError","catch","startsWith","buildHeaders","Headers","httpChannel_CenterHttpChannel","UqHttpChannel","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","init","acc","entities","uqApi_UnitxApi","buildChannel","centerAppApi","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","loginedUserId","setCenterToken","userId","uqApi_CenterApiBase","uqTokensName","uqTokenApi","localMap","un","localCache","nowTick","Math","floor","now","tick","appUqParams","callCenterapi","appUqsName","appOwner","appName","appUqs","rAppOwner","rAppName","uqsPure","cachedId","uqs","cachedUqs","retId","retUqs","isMatch","isOkCheckUqs","components","loadAppUqs","checkUqs","Link","cLink_CLink","classnames_default","ln","Entity","typeId","fieldMaps","sys","cache","sName","jName","returns","f","loadEntitySchema","buildFieldsTuid","buildFieldTuid","buildArrFieldsTuid","fieldName","arrName","getTuid","fn","fieldArr","an","buildFieldsParams","arrResult","pa","rowResult","buildDateTimeParam","getIdFromObj","dt","toISOString","packRow","packArr","row","r","charCodeAt","escape","boxId","unpackRow","unpackArr","ch0","ch","fLen","to","n","vals","ALPHABET","ID_LENGTH","rtn","charAt","random","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","_uqMan__WEBPACK_IMPORTED_MODULE_0__","_tuid__WEBPACK_IMPORTED_MODULE_5__","_uqsMan__WEBPACK_IMPORTED_MODULE_10__","Query","_entity__WEBPACK_IMPORTED_MODULE_2__","isPaged","size","more","list","hasMore","startField","mobx__WEBPACK_IMPORTED_MODULE_0__","array","deep","_caller__WEBPACK_IMPORTED_MODULE_3__","pageCaller","request","queryCaller","query","table","obj","ItemEdit","itemSchema","uiItem","isChanged","internalStart","internalEnd","rules","nv","newValue","verifyRule","rule","Image","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","_nav__WEBPACK_IMPORTED_MODULE_2__","altImage","currentTarget","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","urlFromHost","resUrlFromHost","fetchOptions","Content-Type","tryLocal","getCenterHost","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","findIndex","fetchUrl","debugHostUrl","localCheck","results","all","j","debugHost","getUrlOrDebug","urlDebug","fetchLocalCheck","TuidWithUIRes","ReactBoxId","tuidUR","isUndefined","valueFromId","boxName","assureBox","Tv","tuidValue","nullUI","ttv","divObj","bi","logContent","render","boxIdContent","tv","_form__WEBPACK_IMPORTED_MODULE_0__","_multiStep__WEBPACK_IMPORTED_MODULE_1__","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","newButton","isImport","placeholder","vTuidEdit_VTuidEdit","next","vTuidEdit_awaiter","vForm","reset","closePage","finish","getValues","save","unique","setError","isCalling","returnCall","openPageElement","editView","vTuidSelect_VTuidSelect","mainView","index_module","react_default","createElement","initKey","onSearchMain","PageItems","renderMainRow","clickMainRow","before","vTuidSelect_awaiter","searchMain","mainRowContent","ceasePage","hasDiv","showDiv","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divs","divItems","getDivItems","vTuidView_VTuidView","vTuidView_awaiter","alert","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","search","vTuidList_VTuidListBase","vTuidList_awaiter","renderRow","clickRow","callOnSelected","rowKey","ownerId","onSelected","VTuidList","cTuid_CTuid","buildPageItems","first","searchArr","cTuid_CTuidBase","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","openVPage","onEdit","itemChanged","cTuidInfo","cTuid_CTuidInfo","cTuidEdit","CTuidEdit","edit","cTuidList","CTuidList","merge","CTuidMain","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","Action","_entity__WEBPACK_IMPORTED_MODULE_0__","ActionSubmitCaller","SubmitReturnsCaller","_caller__WEBPACK_IMPORTED_MODULE_1__","pack","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","submit","isOk","disabled","caption","Rule","RuleRequired","defy","trim","RuleNum","RuleInt","isInteger","RuleMin","min","check","RuleMax","vField_VField","fieldRes","buildRules","required","null","checkRules","errors","str","readonly","FormMode","editable","vField_decorate","vField_VInputControl","renderError","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","setValue","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","VDateField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","vArr_awaiter","valueBoxs","onRowChanged","rowValues","$owner","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","vTuidField_awaiter","showInfo","reactBoxId","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","build","band","getVFields","getVArr","getVSubmit","order","rows","initValues","arrList","ctrl","valueFromFieldName","propName","buildFieldValues","buildObservableValues","vForm_decorate","maxCacheSize","idCache_IdCache","tuidLocal","queue","waitingIds","divName","tuidInner","initLocalArr","localArr","defer","util","has","cacheTuids","moveToHead","_id","tuidValues","loadIds","cacheIdValues","tuids","unpackTuidIds","cacheValue","cacheTuidFieldValues","localedValues","loadTuidIdsOrLocal","filter","netIds","netRet","loadTuidIds","IdDivCache","div","tuid_Tuid","idName","TuidBox","tuid_TuidInner","idCache","newVersion","tuidDiv","tuid_TuidDiv","createBoxId","assureObj","cacheIds","modifyIds","IdsCaller","cached","valuesText","GetCaller","cacheFieldsInValue","arrValues","mainFields","cacheFields","unpackTuidIdsOfFields","SaveCaller","AllCaller","owner","SearchCaller","LoadArrCaller","tuid_SaveArrCaller","ArrPosCaller","tuid_TuidCaller","$id","transParams","arrParams","arrValue","buildDateParam","bid","$order","TuidImport","loadMain","loadArr","saveArr","posArr","TuidBoxDiv","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","_","navigator","languages","setResOptions","control_ControlBase","formView","renderControl","hasError","filled","validate","control_Control","face","setProps","element","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","controlContent","component","pickIdControl_decorate","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickTuidControl_decorate","pickControl_PickControl","pickControl_awaiter","Content","pickControl_decorate","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","password","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","_boxId__WEBPACK_IMPORTED_MODULE_0__","_tuid__WEBPACK_IMPORTED_MODULE_1__","_tuidsCache__WEBPACK_IMPORTED_MODULE_2__","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","TuidContent","tuidName","s","refetchApi","ApiBase","getHttpChannel","callFetch","put","PageHeader","logoutClick","_nav__WEBPACK_IMPORTED_MODULE_1__","showLogout","hasBack","debugLogout","b","nick","openWindow","rightView","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","vQuerySelect_awaiter","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","ImageItemEdit","_itemEdit__WEBPACK_IMPORTED_MODULE_7__","overSize","upload","resUploader","resId","_page__WEBPACK_IMPORTED_MODULE_6__","_resUploader__WEBPACK_IMPORTED_MODULE_3__","multiple","maxSize","border","padding","_image__WEBPACK_IMPORTED_MODULE_4__","_nav__WEBPACK_IMPORTED_MODULE_5__","mobx__WEBPACK_IMPORTED_MODULE_2__","userApi","_tool_user__WEBPACK_IMPORTED_MODULE_1__","account","verify","prop","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","topDiv","_uid__WEBPACK_IMPORTED_MODULE_1__","bottomDiv","onLoad","setPageStart","reverse","Loading","ResUploader","files","fileInput","FormData","file","abortController","AbortController","signal","onFilesChange","fieldDefaultValue","UqMan","uqData","tvs","actions","sheets","queries","books","maps","histories","pendings","createBoxIdFromTVs","_tuid_reactBoxId__WEBPACK_IMPORTED_MODULE_10__","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","clearTuids","localModifyMax","localAccess","tuidsCache","_tuid__WEBPACK_IMPORTED_MODULE_2__","accesses","loadAccess","buildTuids","buildAccess","entityName","newTuid","fromType","fromObj","_action__WEBPACK_IMPORTED_MODULE_3__","_query__WEBPACK_IMPORTED_MODULE_5__","book","_book__WEBPACK_IMPORTED_MODULE_6__","_map__WEBPACK_IMPORTED_MODULE_8__","_history__WEBPACK_IMPORTED_MODULE_7__","pending","_pending__WEBPACK_IMPORTED_MODULE_9__","_sheet__WEBPACK_IMPORTED_MODULE_4__","newAction","newQuery","newBook","newMap","newHistory","newSheet","newPending","buildSheet","buildTuidBox","buildTuidDivBox","af","modifyMax","Sheet","states","op","ops","discription","app","flow","brief","unpackSheet","flows","GetSheetCaller","getArchive","unpack","SheetArchiveCaller","SheetArchivesCaller","StateSheetsCaller","PageStateItems","StateSheetCountCaller","MySheetsCaller","SheetCaller","_caller__WEBPACK_IMPORTED_MODULE_2__","count","_tool_pageItems__WEBPACK_IMPORTED_MODULE_1__","getStateSheets","Book","_query__WEBPACK_IMPORTED_MODULE_0__","queryApiName","BookQueryCaller","History","schemaFrom","actionSchema","querySchema","AddCaller","DelCaller","PageCaller","qc","QueryCaller","MapCaller","getCaller","MapAddCaller","add","MapDelCaller","MapAllCaller","MapPageCaller","MapQueryCaller","_action__WEBPACK_IMPORTED_MODULE_1__","Pending","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","fixWidth","ControllerUq","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","tonva__WEBPACK_IMPORTED_MODULE_2__","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_4__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_3__","buttons","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","getStateLabel","templet","statesCount","isDev","vNew_VSheetNew","vNew_awaiter","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","sheetView","removed","sheetData","vEdit_VSheetEdit","vEdit_awaiter","saveSheet","CApp_form","vSheetAction_VSheetAction","actionClick","vSheetAction_awaiter","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","vArchives_awaiter","processing","archiveRow","getArchives","vList_VSheetList","rowClick","vList_awaiter","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSaved_awaiter","vSheetProcessing_VSheetProcessing","cSheet_CSheet","cSheet_awaiter","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","preState","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","sheetAction","VSheetProcessing","showArchived","showAction","showProcessing","beforeStart","onEvent","getSheetData","net","vCall","inBrief","getArchived","getStateUI","actionName","stateSheetCount","getSheet","sheetTitle","disc","Badge_Badge","badgeAlign","badgeVertical","LMR_LMR","cursor","LMR_decorate","FA_FA","spin","pull","pulse","rotate","flip","inverse","Muted","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","CApp_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","cApp","tuidURs","getUI","CApp_tuid","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","CApp_history","CPending","tonva_uq","loadEntities","tuidPlaceHolder","sheetTypeId","sheetFromTypeId","startSheet","entityType","cFromName","ownerTuid","tUIs","tUI","cEntity","VUq","centerApi","vApp_VAppMain","appPage","vApp_awaiter","appContent","cUqArr","vApp_VUnsupportedUnit","userName","vApp_VUnitSelect","onRowClick","appUnits","vApp_VErrorsPage","vApp_VAppStartError","CApp_CApp","cUqCollection","cImportUqs","setSettings","getCUq","uqUI","CUq","CApp_cUq","VAppMain","retErrors","userAppUnits","showUnsupport","appUnit","localData","uqAppData","promiseInits","uqFullName","newCUq","addUq","setTuidImportsLocal","clearPrevPages","showMainPage","uqId","getCUqFromId","navSheet","vMain_VMapMain","itemRender","ItemRow","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","isFrom","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","inputValues_awaiter","cMap_MapItem","cMap_CMap","cMap_awaiter","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","template","v0","del","q","retFields","newItem","addItem","VMapMain","tuidBox","callParam","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","submitReturns","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","Controller","_tool__WEBPACK_IMPORTED_MODULE_3__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","_resolve_$","View","VPage","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","mobileRegex","emailRegex","DropdownActions","handleDocumentClick","dropdownOpen","contains","menu","toggle","removeEventListener","isRight","hasIcon","data-toggle","aria-expanded","dropdown-menu","dropdown-menu-right","aria-hidden","EasyDate","EasyTime","renderDate","vDate","withTime","nDate","_date","month","year","hm","nowYear","hour","getHours","minute","getMinutes","getDate","getMonth","getFullYear","Media","___WEBPACK_IMPORTED_MODULE_2__","disp","px","py","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","TuidsCache","clearCacheTimer","cacheTimer","seconds","tuidCached","innerPullModify","tuidLists","queueModify","modify","UQsMan","tonvaAppName","buildTVs","collection","uqTVs","lj","uqsData","_uqMan__WEBPACK_IMPORTED_MODULE_1__","lower","uqMan","setInner","tuidImport","fromName","iName","setFrom","_formUI__WEBPACK_IMPORTED_MODULE_12__","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_2__","MultiStep","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","classnames__WEBPACK_IMPORTED_MODULE_2__","_form__WEBPACK_IMPORTED_MODULE_3__","stepViews","topView","onPrev","onNext","stepName","steps","ButtonConten","prefix","btnContent","formProps","setStep","nextStepName","num","pIcon","sIcon","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","maxMsg","checkMore","integer","widget_Widget","context","fieldProps","contextErrors","onInputChange","changeValue","container","visible","inNode","requiredFlag","FieldContainer","renderBody","_itemSchema","_ui","getUiItem","removeErrorWidget","addErrorWidget","isChanging","initData","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","elDiscription","discriptionClassName","uiLabel","Templet","errorList","tag","textWidget_TextWidget","onKeyDown","internalOnKeyDown","keyCode","onEnter","blur","checkContextRules","renderTemplet","renderErrors","numberWidget_NumberWidget","updownWidget_UpdownWidget","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","selectWidget_decorate","radioStyle","height","idWidget_IdWidget","idWidget_awaiter","pickId","clearContextError","required-item","cursor-pointer","idWidget_decorate","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","buttonWidget_awaiter","observerRender","widget","widgetType","ButtonClass","context_Context","uiSchema","isRow","widgets","errorWidgets","subContexts","arrRowContexts","itemName","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","buttonName","ew","onButtonClick","checkFieldRules","rowContext","setContextError","clearWidgetsErrors","checkHasError","clearContextErrors","context_decorate","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","itemSchemas","parentData","FormContext","ContextContainer","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","imageWidget_ImageWidget","imageWidget_awaiter","imageItemEdit","imageSrc","end","components_image","imageWidget_decorate","widgetsFactory","datetime","time","email","updown","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","formRes","zh","form_Form","watch","formData","calcSelectOrDelete","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","components_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","arrItemOperated","formArrVal","beforeShow","contextType","stringItemEdit_StringItemEdit","edit_itemEdit","preValue","verifyValue","radioItemEdit_RadioItemEdit","selectItemEdit_SelectItemEdit","idItemEdit_IdItemEdit","idItemEdit_awaiter","edit_Edit","defaultSepClassName","defaultRowContainerClassName","divValue","requireFlag","rowContainerClassName","edit_awaiter","stopEdit","onItemChanged","onItemClick","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","topBorder","bottomBorder","elItems","base_ListBase","selectedItems","clickable_Clickable","static_Static","selectable_Selectable","buildItems","itemsArray","comp","compare","selectItem","retItems","selected","si","labelId","obItem","onSelect","flex","marginBottom","htmlFor","anySelected","selectable_decorate","list_List","buildBase","listBase","selectAll","unselectAll","waitingMore","isLoading","staticRow","list_decorate","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","col","labelFixLeft","bk","bg-white","renderLabel","renderProp","align","vAlign","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","row_ComponentPropRow","full","propView_PropView","isGap","PropGrid_PropGrid","propView","userSetProp","Tab","_content","contentBuilder","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","tabName","display","notifyCircle","FetchErrorView","reApi","errContent","mainApi","tonva","toUser","fromUnit","fromApp","fellow","isOwner","isAdmin","apps","member","assigned","roles","devApi","uqsText","service","admins_Admins","store","owners","admins","fellows","unitAdmins","ua","fellowId","unitSetAdmin","removeCur","admin","unitAddAdmin","dev_ObjItems","dev","_load","_save","_inc","_del","_dec","dev_decorate","dev_Apps","searchedUqs","saveApp","delApp","counts","searchUq","searchPageSize","allUqs","appBindUq","dev_Uqs","saveUq","delUq","dev_Buses","buses","saveBus","delBus","bus","checkBusFace","checkBusQuery","busTypes","refNameOk","faceName","refArrayOk","checkBusQueryParam","dev_Servers","servers","saveServer","delServer","server","dev_Services","services","saveService","delService","changeServiceProp","loadUqServices","SearchItems","dev_Dev","searchApp","searchServer","cacheIds_CacheUnits","cacheIds_CacheUqs","cacheIds_CacheApps","cacheIds_CacheServers","store_Store","cacheUnits","cacheUqs","cacheApps","cacheServers","memberCount","roleApps","roleMember","roleMembers","memberRoles","unitChangeProp","unitApps","unitMemberCount","uqServer","uqBuilderUrl","appId","unitDeleteApp","inUnit","unitAddApp","unitRoles","unitAddRole","unitRoleChangeProp","unitRoleApps","unitRoleSetApps","unitMembers","unitAssignMember","unitMemberRoles","rId","unitSetMemberRoles","org","store_decorate","store_store","NewFellow_NewFellowPage","onSendInvitation","NewFellow_awaiter","addNew","NewFellow","NewFellow_decorate","EditAdmin_EditAdmin","EditAdmin_awaiter","isRoot","unitAdmin","Fellow","Administors_EditAdmin","EditAdmin_decorate","Administors_AdministorsPage","onNewOwner","newAdmin","onNewAdmin","ownersView","adminsView","onNewFellow","showOwners","showAdmins","Administors","Administors_decorate","idDates_IdDates","date_init","date_update","span","isLink","unitSpan_UnitSpan","unitSpan_UnitInfo","unitSpan_decorate","unitSpan_UnitName","consts_appIcon","REACT_APP_ICON","REACT_APP_ITEM_ICON","uqSpan_UqSpan","uqSpan_UqInfo","api","uqSpan_decorate","appSpan_AppSpan","appSpan_AppInfo","public","appSpan_decorate","apis","appSpan_AppRow","serverSpan_ServerSpan","serverSpan_ServerInfo","cloud","ip","serverSpan_decorate","stringValueEdit_StringValueEdit","stringValueEdit_awaiter","errorDiv","info","idPickPage_IdPickPage","itemClick","idPickPage_awaiter","candidateItems","searchPlaceHolder","idPickPage_decorate","info_Info","renderUqRow","uqAccess","act","info_awaiter","appActed","newInUnit","restoreUnitApp","stopUnitApp","newApp","addUnitApp","uqAccesses","faName","info_decorate","new_PageApps","new_NewApp","new_awaiter","appClick","renderApp","new_decorate","Apps_AppsPage","loadApps","ban","src_Apps","Apps_decorate","newRole_NewRole","newRole_awaiter","roleApps_RoleApps","renderRoleApp","memberPage_MemberPage","renderMemberRole","setRole","memberPage_SetRole","loadRoles","loadMemberRoles","orgValue","roleUser","onAssigned","roleClick","memberPage_decorate","setMemberRoles","selectRole","renderRole","roleSelect","membersPage_MembersPage","loadMembers","MemberRow","setRoleUser","roleId","membersPage_MemberSearch","renderMember","userClick","membersPage_decorate","members","rolePage_RolePage","roleAppClick","rolePage_RoleApps","loadRoleApps","rolePage_EditRole","onMembersClick","membersLeft","membersRight","editRole","addRoleApp","rolePage_decorate","roleChangeProp","isSysRole","onNameChanged","onDiscriptionChanged","setRoleApps","appSelect","midClassName","Members_Members","newRole","allUsersClick","Members_decorate","ServerCaption","editPage_schema","editPage_EditBasePage","editPage_awaiter","moreCandidates","pickServerId","renderServerInput","itemId","editPage_EditPage","editPage_NewPage","appsPage_AppsPage","appList","listRowClick","appRow","spanCaption","appUqs_SearchUqPage","appUqs_awaiter","onUq","getMyUqs","appUqs_decorate","appUqs_AppUqs","removeBind","btnProps","appUqs_Uqs","listHeader","btn","onBind","appPage_AppPage","editItem","appPage_awaiter","deleteItem","deleteApp","menuItems","btnAddUq","uqClick","elAccess","bind_access","uqBindPage_UqBindPage","onCheckChanged","accessChecked","saveUqBind","uqBindPage_awaiter","removeUqBind","btnDelete","checkAccessList","bc","apps_AppController","apps_awaiter","service_count","buildBindUqs","isNew","uaUq","apps_decorate","groupStart","groupEnd","Section","resultSections_StringSection","resultSections_GroupSection","line","titleIcon","collaps","whiteSpace","resultSections_decorate","resultSections_ErrorSection","ResultSections","sectionId","sections","stop","addToGroup","addText","section","rowId","mayStart","addSection","uqUpload_UqUpload","upFiles","fileClick","fr","FileReader","onload","uqUpload_UqPage","readAsText","onUpload","uqUpload_awaiter","lastModifiedDate","trunc","sz","uqUpload_CompileResult","fileList","fileRender","encType","compiled","fast","thoroughly","description","uqUpload_deploy","uqUpload_UqDeploy","onCompile","compile","onCompileThoroughly","isThoroughly","autoScrollEnd","clearAutoScrollToBottom","timeHandler","clearInterval","doubleClick","pane","getParent","topIntoView","bottomIntoView","lastScrollTop","startAutoScrollToBottom","renderText","resultSections","abort","setInterval","scrollIntoView","tagName","parentElement","uintArray","encodedString","fromCharCode","decodeURIComponent","reader","read","done","startTime","compile_time","deploy_time","uintToString","total","byteLength","getReader","pump","endAutoScrollToBottom","onDoubleClick","wordWrap","fontWeight","uqUpload_decorate","createIdPick_IdPickPage","newServicePage_ServerCaption","urlRow","urlRowTest","serverRow","newServicePage_awaiter","dbRow","newServicePage_NewServicePage","bindId","tonva_form","tonvaForm","servicePage_ServicePage","onUrlChanged","servicePage_awaiter","changeProp","onUrlTestChanged","onDbChanged","onDeleteClick","servicePage_decorate","editPage_formRows","uqs_editPage_EditBasePage","uqs_editPage_awaiter","uqs_editPage_EditPage","uqs_editPage_NewPage","uqPage_UQPage","uqPage_awaiter","deleteUq","onServiceClick","onUqUpload","onUqTest","onUqDeploy","serviceClick","btnAddService","showNewServicePage","renderService","deploy","listPage_ListPage","batchCompile","batchCompilePage","uqList","listCompileRow","testThoroughly","deployThoroughly","cnBtn","bar","selectItems","uqController_UQController","uqController_awaiter","loadUqEntities","uqGetEntities","r0","svc","uqController_decorate","buses_Info","mine","buses_SchemaView","buses_decorate","repeated","canEdit","ObjView_ObjView","ObjView_Info","ObjView_New","ObjView_decorate","saveCur","stepHeader","ObjView_Edit","ex","extraMenuActions","vApps_VApps","appUsers","users","appUsersList","onAppsClick","searchBox","vUsers_VUsers","userApps","userAppsList","searchUser","onUsersClick","vApp_VApp","curApp","curAppUsers","onAppEditUsers","vUser_VUser","curUser","curUserApps","onUserEditApps","vAppEditUsers_VAppEditUsers","appEditUsers","renderUser","editUser","onUserChanged","vAppEditUsers_awaiter","bindAppUser","vUserEditApps_VUserEditApps","userEditApps","editApp","onAppChanged","vUserEditApps_awaiter","bindUserApp","VAddUser_VAddUser","onSearchFocus","divUser","onAddUser","VAddUser_awaiter","userFromKey","addUser","addedPage","onAddApps","onContinueAddUser","VAddUser_decorate","cUsers_UsersController","onAppUsers","cUsers_awaiter","loadAppUsers","onUserApps","loadUserApps","unitOneAppUsers","unitOneUserApps","unitAppEditUsers","unitUserEditApps","unitAddUser","appIcon","userIcon","unitAppUsers","coll","unitUsers","cUsers_decorate","Admin_CAdmin","userAdminUnits","adminUnits","loadUnit","isProduction","loadAdminUnits","Admin_VAdmin","selectUnitPage","noUnitPage","Admin_awaiter","Admin_AdminPage","rArrow","typeCaptions","1","2","3","appsAction","usersAction","newUsersAction","adminsAction","noneAction","mid","objProps","P","loadCounts","appAction","uqAction","busAction","serverAction","vice","Admin_UnitProps","Admin_decorate","src_App_0","cAdmin","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","origin","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.58878a5a.chunk.js","sourcesContent":["export * from './tool';\r\nexport * from './net';\r\nexport * from './components';\r\nexport * from './entry';\r\nexport * from './uq';\r\nexport * from './CApp';\r\nexport * from './app';\r\n","export * from './nav';\r\nexport * from './pageHeader';\r\nexport * from './page';\r\nexport * from './VM';\r\nexport * from './schema';\r\nexport * from './form';\r\nexport * from './edit';\r\nexport * from './res';\r\nexport * from './tabs';\r\nexport * from './loading';\r\nexport * from './image';\r\nexport * from './resUploader';\r\nexport * from './rules';\r\nexport * from './list';\r\nexport * from './dropDownActions';\r\nexport * from './easyDate';\r\nexport * from './propGrid';\r\nexport * from './simple';\r\nexport * from './media';\r\nexport * from './searchBox';\r\n","import * as React from 'react';\r\nimport { VPage } from '../components';\r\nimport { Entity, Field } from '../uq';\r\nimport { CUq } from './cUq/cUq';\r\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\r\nimport { CQuerySelect } from './query';\r\nimport { FormUI, FieldTuidUI } from './formUI';\r\nimport { entityIcons } from './icons';\r\nimport { ControllerUq } from './ControllerUq';\r\n\r\nexport interface EntityUI {\r\n    form?: FormUI;\r\n}\r\n\r\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\r\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\r\n        super(cUq, res);\r\n        Object.setPrototypeOf(this.x, cUq.x);\r\n        let {name, typeName} = entity;\r\n        this.entity = entity;\r\n        this.ui = ui; // || entityUI.ui;\r\n        this.label = this.res.label || name;\r\n        this.icon = entityIcons[typeName];\r\n    }\r\n    readonly entity: T;\r\n    readonly ui: UI;\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        return true;\r\n    }\r\n\r\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\r\n        let options = this.buildFormOptions(mode);\r\n        let ret = new VForm(options, onSubmit);\r\n        ret.setValues(values);\r\n        return ret;\r\n    }\r\n\r\n    private buildFormOptions(mode?:FormMode):FormOptions {\r\n        let {fields, arrFields} = this.entity;\r\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\r\n        if (this.res !== undefined) {\r\n            none = this.res['none'];\r\n            submitCaption = this.res['submit'];\r\n            arrNewCaption = this.res['arrNew'];\r\n            arrEditCaption = this.res['arrEdit'];\r\n            arrTitleNewButton = this.res['arrTitleNewButton'];\r\n        }\r\n        if (none === undefined) {\r\n            none = this.cUq.res['none'] || 'none';\r\n        }\r\n        if (submitCaption === undefined)\r\n            submitCaption = this.cUq.res['submit'] || 'Submit';\r\n        if (arrNewCaption === undefined)\r\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\r\n        if (arrEditCaption === undefined)\r\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\r\n        if (arrTitleNewButton === undefined)\r\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\r\n        if (mode === undefined) mode = FormMode.new;\r\n        let formUI = this.ui.form;\r\n        let ret:FormOptions = {\r\n            fields: fields,\r\n            arrs: arrFields,\r\n            ui: formUI,\r\n            res: this.res || {},\r\n            inputs: this.buildInputs(formUI),\r\n            none: none,\r\n            submitCaption: submitCaption,\r\n            arrNewCaption: arrNewCaption,\r\n            arrEditCaption: arrEditCaption,\r\n            arrTitleNewButton: arrTitleNewButton,\r\n            mode: mode,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildInputs(formUI: FormUI):FieldInputs {\r\n        let {fields, arrFields} = this.entity;\r\n        let ret:FieldInputs = {};\r\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\r\n        if (arrFields !== undefined) {\r\n            for (let arr of arrFields) {\r\n                let {name, fields} = arr;\r\n                let items = formUI && formUI.items;\r\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\r\n        if (arr !== undefined) {\r\n            let arrFieldInputs = ret[arr];\r\n            if (arrFieldInputs === undefined) {\r\n                ret[arr] = arrFieldInputs = {};\r\n                ret = arrFieldInputs;\r\n            }\r\n        }\r\n        for (let field of fields) {\r\n            let {name, _tuid} = field;\r\n            if (_tuid === undefined) continue;\r\n            let {tuid} = _tuid;\r\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\r\n            ret[name] = {\r\n                select: this.buildSelect(field, arr, fieldUI),\r\n                content: this.buildContent(field, arr),\r\n                placeHolder: this.cUq.getTuidPlaceHolder(tuid),\r\n            };\r\n        }\r\n    }\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\r\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n            let {_tuid } = field;\r\n            let {ownerField} = _tuid;\r\n            let cTuidSelect = undefined; // await tuid.cSelectFrom();\r\n            let param:any = undefined;\r\n            if (ownerField !== undefined) param = form.getValue(ownerField.name);\r\n            if (fieldUI && fieldUI.autoList === true) {\r\n                console.log('select search set param=empty string');\r\n                param = '';\r\n            }\r\n            let ret = await cTuidSelect.call(param);\r\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\r\n            if (ret === undefined) return undefined;\r\n            let id = cTuidSelect.idFromItem(ret);\r\n            _tuid.useId(id);\r\n            return id;\r\n        };\r\n    }\r\n\r\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\r\n        return;\r\n    }\r\n\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        return this.cUq.cQuerySelect(queryName);\r\n    }\r\n}\r\n\r\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\r\n    protected readonly entity: T;\r\n    protected readonly ui: UI;\r\n    constructor(controller: C) {\r\n        super(controller);\r\n        this.entity = controller.entity;\r\n        this.ui = controller.ui;\r\n    }\r\n\r\n    get label():string {return this.controller.label}\r\n\r\n    //private _form_$: VForm;\r\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\r\n        //if (this._form_$ !== undefined) return this._form_$;\r\n        return this.controller.createForm(onSubmit, values, mode);\r\n    }\r\n}\r\n","import { decodeGuestToken } from '../tool/user';\r\nimport { CenterApiBase } from './uqApi';\r\n\r\nexport class GuestApi extends CenterApiBase {\r\n    async guest(): Promise<any> {\r\n        //let guest = nav.local.guest.get();\r\n        let ret = await this.get('', {});\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeGuestToken(ret);\r\n            case 'object':\r\n                let guest = decodeGuestToken(ret.token);\r\n                return guest;\r\n        }\r\n    }\r\n\r\n    async unitFromName(unitName:string): Promise<number> {\r\n        let ret = await this.get(unitName);\r\n        return ret && ret.unit;\r\n    }\r\n}\r\n\r\nexport const guestApi = new GuestApi('tv/guest/', undefined);\r\n","export abstract class Caller<T> {\r\n    protected readonly params: T;\r\n    constructor(params: T) {\r\n        this.params = params;\r\n    }\r\n    buildParams():any {return this.params;}\r\n    method: string  = 'POST';\r\n    abstract get path(): string;\r\n    get headers(): {[header:string]: string} {return undefined}\r\n}\r\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\r\nexport * from './apiBase';\r\nexport * from './guestApi';\r\nexport * from './caller';\r\nexport * from './uqApi';\r\nexport {appInFrame, isBridged, getExHash} from './appBridge';\r\nexport * from './host';\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {User, Guest/*, UserInNav*/} from '../tool/user';\r\nimport {Page} from './page';\r\nimport {netToken} from '../net/netToken';\r\nimport FetchErrorView from './fetchErrorView';\r\nimport {FetchError} from '../net/fetchError';\r\nimport {appUrl, setAppInFrame, getExHash, getExHashPos} from '../net/appBridge';\r\nimport {LocalData, env} from '../tool';\r\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, appInFrame, host, resUrlFromHost} from '../net';\r\nimport { WsBase, wsBridge } from '../net/wsChannel';\r\nimport { resOptions } from './res';\r\nimport { Loading } from './loading';\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../css/va-form.css';\r\nimport '../css/va.css';\r\nimport '../css/animation.css';\r\nimport { FA } from './simple';\r\n\r\n/*\r\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\r\n    'BlackBerry|Windows Phone|'  +\r\n    'Opera Mini|IEMobile|Mobile' , \r\n    'i');\r\nconst isMobile = regEx.test(navigator.userAgent);\r\n*/\r\n/*\r\nexport const mobileHeaderStyle = isMobile? {\r\n    minHeight:  '3em'\r\n} : undefined;\r\n*/\r\n//const logo = require('../img/logo.svg');\r\nlet logMark: number;\r\nconst logs:string[] = [];\r\n\r\nexport interface Props //extends React.Props<Nav>\r\n{\r\n    //view: JSX.Element | (()=>JSX.Element);\r\n    //start?: ()=>Promise<void>;\r\n    onLogined: ()=>Promise<void>;\r\n    notLogined?: ()=>Promise<void>;\r\n};\r\nlet stackKey = 1;\r\nexport interface StackItem {\r\n    key: number;\r\n    view: JSX.Element;\r\n    ceased: boolean;\r\n    confirmClose?: ()=>Promise<boolean>;\r\n    disposer?: ()=>void;\r\n}\r\nexport interface NavViewState {\r\n    stack: StackItem[];\r\n    wait: 0|1|2;\r\n    fetchError: FetchError\r\n}\r\n\r\nexport class NavView extends React.Component<Props, NavViewState> {\r\n    private stack: StackItem[];\r\n    private htmlTitle: string;\r\n    private waitCount: number = 0;\r\n    private waitTimeHandler?: NodeJS.Timer;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.back = this.back.bind(this);\r\n        this.navBack = this.navBack.bind(this);\r\n        this.stack = [];\r\n        this.state = {\r\n            stack: this.stack,\r\n            wait: 0,\r\n            fetchError: undefined\r\n        };\r\n    }\r\n    /*\r\n    async componentWillMount() {\r\n        window.addEventListener('popstate', this.navBack);\r\n    }\r\n    */\r\n    async componentDidMount()\r\n    {\r\n        window.addEventListener('popstate', this.navBack);\r\n        nav.set(this);\r\n        /*\r\n        let start = this.props.start;\r\n        if (start !== undefined) {\r\n            await start();\r\n        }\r\n        else {\r\n        */\r\n            await nav.start();\r\n        //}\r\n    }\r\n\r\n    get level(): number {\r\n        return this.stack.length;\r\n    }\r\n\r\n    startWait() {\r\n        if (this.waitCount === 0) {\r\n            this.setState({wait: 1});\r\n            this.waitTimeHandler = global.setTimeout(\r\n                () => {\r\n                    this.waitTimeHandler = undefined;\r\n                    this.setState({wait: 2});\r\n                },\r\n                1000) as NodeJS.Timer;\r\n        }\r\n        ++this.waitCount;\r\n        this.setState({\r\n            fetchError: undefined,\r\n        });\r\n    }\r\n\r\n    endWait() {\r\n        setTimeout(() => {\r\n            /*\r\n            this.setState({\r\n                fetchError: undefined,\r\n            });*/\r\n            --this.waitCount;\r\n            if (this.waitCount === 0) {\r\n                if (this.waitTimeHandler !== undefined) {\r\n                    clearTimeout(this.waitTimeHandler);\r\n                    this.waitTimeHandler = undefined;\r\n                }\r\n                this.setState({wait: 0});\r\n            }\r\n        },100);\r\n    }\r\n\r\n    async onError(fetchError: FetchError)\r\n    {\r\n        let err = fetchError.error;\r\n        if (err !== undefined && err.unauthorized === true) {\r\n            await nav.showLogin(undefined);\r\n            return;\r\n        }\r\n        this.setState({\r\n            fetchError: fetchError,\r\n        });\r\n    }\r\n\r\n    private upgradeUq = () => {\r\n        nav.start();\r\n    }\r\n\r\n    async showUpgradeUq(uq:string, version:number):Promise<void> {\r\n        this.show(<Page header={false}>\r\n            <div>\r\n                UQ升级了，请点击按钮升级 <br />\r\n                <small className=\"text-muted\">{uq} ver-{version}</small>\r\n                <button className=\"btn btn-primary\" onClick={this.upgradeUq}>升级</button>\r\n            </div>\r\n        </Page>)\r\n    }\r\n\r\n    show(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.clear();\r\n        return this.push(view, disposer);\r\n    }\r\n\r\n    push(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.removeCeased();\r\n        if (this.stack.length > 0) {\r\n            window.history.pushState('forward', null, null);\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key,\r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        this.refresh();\r\n        //console.log('push: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    replace(view: JSX.Element, disposer?: ()=>void): number {\r\n        let item:StackItem = undefined;\r\n        let stack = this.stack;\r\n        if (stack.length > 0) {\r\n            item = stack.pop();\r\n            //this.popAndDispose();\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key, \r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        if (item !== undefined) this.dispose(item.disposer);\r\n        this.refresh();\r\n        //console.log('replace: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    ceaseTop(level:number = 1) {\r\n        let p = this.stack.length - 1;\r\n        for (let i=0; i<level; i++, p--) {\r\n            if (p < 0) break;\r\n            let item = this.stack[p];\r\n            item.ceased = true;\r\n        }\r\n    }\r\n\r\n    pop(level:number = 1) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        //console.log('pop start: %s pages level=%s', len, level);\r\n        if (level <= 0 || len <= 1) return;\r\n        if (len < level) level = len;\r\n        let backLevel = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            if (stack.length === 0) break;\r\n            //stack.pop();\r\n            this.popAndDispose();\r\n            ++backLevel;\r\n        }\r\n        if (backLevel >= len) backLevel--;\r\n        this.refresh();\r\n        if (this.isHistoryBack !== true) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(backLevel);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n        //console.log('pop: %s pages', stack.length);\r\n    }\r\n\r\n    popTo(key: number) {\r\n        if (key === undefined) return;\r\n        if (this.stack.find(v => v.key === key) === undefined) return;\r\n        while (this.stack.length >0) {\r\n            let len = this.stack.length;\r\n            let top = this.stack[len-1];\r\n            if (top.key === key) break;\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    topKey():number {\r\n        let len = this.stack.length;\r\n        if (len === 0) return undefined;\r\n        return this.stack[len-1].key;\r\n    }\r\n\r\n    removeCeased() {\r\n        for (;;) {\r\n            let p=this.stack.length-1;\r\n            if (p < 0) break;\r\n            let top = this.stack[p];\r\n            if (top.ceased === false) break;\r\n            let item = this.stack.pop();\r\n            let {disposer} = item;\r\n            this.dispose(disposer);\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    private popAndDispose() {\r\n        this.removeCeased();\r\n        let item = this.stack.pop();\r\n        if (item === undefined) return;\r\n        let {disposer} = item;\r\n        this.dispose(disposer);\r\n        this.removeCeased();\r\n        return item;\r\n    }\r\n\r\n    private dispose(disposer:()=>void) {\r\n        if (disposer === undefined) return;\r\n        let item = this.stack.find(v => v.disposer === disposer);\r\n        if (item === undefined) disposer();\r\n    }\r\n\r\n    clear() {\r\n        let len = this.stack.length;\r\n        while (this.stack.length > 0) this.popAndDispose();\r\n        //this.refresh();\r\n        if (len > 1) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(len-1);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n    }\r\n\r\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        let top = stack[len-1];\r\n        top.confirmClose = confirmClose;\r\n    }\r\n\r\n    private isHistoryBack:boolean = false;\r\n    navBack() {\r\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\r\n        this.isHistoryBack = true;\r\n        this.back(true);\r\n        this.isHistoryBack = false;\r\n    }\r\n\r\n    async back(confirm:boolean = true) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        if (len === 1) {\r\n            if (window.self !== window.top) {\r\n                window.top.postMessage({type:'pop-app'}, '*');\r\n            }\r\n            return;\r\n        }\r\n        let top = stack[len-1];\r\n        if (confirm===true && top.confirmClose) {\r\n            if (await top.confirmClose()===true) this.pop();\r\n        }\r\n        else {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    confirmBox(message?:string): boolean {\r\n        return window.confirm(message);\r\n    }\r\n    clearError = () => {\r\n        this.setState({fetchError: undefined});\r\n    }\r\n    /*\r\n    private clickCount = 0;\r\n    private firstClick: number = 0;\r\n    private clickRange = 3000;\r\n    private clickMax = 6;\r\n    private onClick = () => {\r\n        let now = Date.now();\r\n        if (now - this.firstClick > this.clickRange) {\r\n            this.clickCount = 1;\r\n            this.firstClick = now;\r\n            return;\r\n        }\r\n        ++this.clickCount;\r\n        if (this.clickCount >= this.clickMax) {\r\n            nav.reverseTest();\r\n            this.firstClick = 0;\r\n            return;\r\n        }\r\n    }\r\n    */\r\n    /*\r\n    private onTestClick = () => {\r\n        nav.testing = false;\r\n        nav.push(<Page header={false}>\r\n            <div className=\"m-5 border border-info bg-white rounded p-4 text-center\">\r\n                <div>当前运行在测试模式</div>\r\n                <div className=\"mt-4\">\r\n                    <button className=\"btn btn-danger\" onClick={nav.toNormal}>正常模式</button>\r\n                    <button className=\"btn btn-outline-info ml-3\" onClick={()=>{nav.testing=true;this.pop()}}>测试模式</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    */\r\n    render() {\r\n        const {wait, fetchError} = this.state;\r\n        let stack = this.state.stack;\r\n        let top = stack.length - 1;\r\n        let elWait = null, elError = null;\r\n        switch (wait) {\r\n            case 1:\r\n                elWait = <li className=\"va-wait va-wait1\">\r\n                </li>;\r\n                break;\r\n            case 2:\r\n                elWait = <li className=\"va-wait va-wait2\">\r\n                    <Loading />\r\n                </li>;\r\n                break;\r\n        }\r\n        if (fetchError)\r\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />;\r\n        let test = nav.testing===true && \r\n            <span className=\"cursor-pointer position-absolute\" style={{lineHeight:0}}>\r\n                <FA className=\"text-warning\" name=\"info-circle\" />\r\n            </span>;\r\n        //onClick={this.onClick}\r\n        return (\r\n        <ul className=\"va\">\r\n            {\r\n                stack.map((item, index) => {\r\n                    let {key, view} = item;\r\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\r\n                        {view}\r\n                    </li>\r\n                })\r\n            }\r\n            {elWait}\r\n            {elError}\r\n            {test}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    private refresh() {\r\n        // this.setState({flag: !this.state.flag});\r\n        this.setState({stack: this.stack });\r\n        // this.forceUpdate();\r\n    }\r\n}\r\n\r\nexport interface NavSettings {\r\n    loginTop?: JSX.Element;\r\n}\r\n\r\nexport class Nav {\r\n    private nav:NavView;\r\n    private ws: WsBase;\r\n    private wsHost: string;\r\n    private local: LocalData = new LocalData();\r\n    private navSettings: NavSettings;\r\n    @observable user: User/*InNav*/ = undefined;\r\n    testing: boolean;\r\n    language: string;\r\n    culture: string;\r\n    resUrl: string;\r\n\r\n    constructor() {\r\n        let {lang, district} = resOptions;\r\n        this.language = lang;\r\n        this.culture = district;\r\n        this.testing = false;\r\n    }\r\n\r\n    get guest(): number {\r\n        let guest = this.local.guest;\r\n        if (guest === undefined) return 0;\r\n        let g = guest.get();\r\n        if (g === undefined) return 0;\r\n        return g.guest;\r\n    }\r\n\r\n    set(nav:NavView) {\r\n        //this.logo = logo;\r\n        this.nav = nav;\r\n    }\r\n\r\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\r\n        if (this.ws === undefined) return;\r\n        return this.ws.onWsReceiveAny(handler);\r\n    }\r\n\r\n    unregisterReceiveHandler(handlerId:number) {\r\n        if (this.ws === undefined) return;\r\n        if (handlerId === undefined) return;\r\n        this.ws.endWsReceive(handlerId);\r\n    }\r\n\r\n    /*\r\n    private static testMode = '测试';\r\n    private static normalMode = '正常';\r\n    private setTesting(testing:boolean) {\r\n        this.testing = testing;\r\n        this.local.testing.set(testing);\r\n    };\r\n    private resetTest = () => {\r\n        this.setTesting(!this.testing);\r\n        //this.pop();\r\n        this.start();\r\n    }\r\n    toNormal = () => {\r\n        this.setTesting(false);\r\n        this.start();\r\n    }\r\n    reverseTest() {\r\n        let m1:string, m2:string;\r\n        if (this.testing === true) {\r\n            m1 = Nav.testMode;\r\n            m2 = Nav.normalMode;\r\n        }\r\n        else {\r\n            m1 = Nav.normalMode;\r\n            m2 = Nav.testMode;\r\n        }\r\n\r\n        this.push(<Page back=\"close\" header={false}>\r\n            <div className=\"m-5 border border-info bg-white rounded p-4 text-center\">\r\n                <div>\r\n                    <p>从{m1}模式切换到{m2}模式吗?</p>\r\n                    <p className=\"small text-muted\">测试模式下，页面左上角会有一个 <FA className=\"text-warning\" name=\"info-circle\" /></p>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <button className=\"btn btn-danger\" onClick={this.resetTest}>切换</button>\r\n                    <button className=\"btn btn-outline-info ml-3\" onClick={()=>this.pop()}>取消</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    */\r\n\r\n    async onReceive(msg:any) {\r\n        if (this.ws === undefined) return;\r\n        await this.ws.receive(msg);\r\n    }\r\n\r\n    private async getPredefinedUnitName() {\r\n        try {\r\n            let unitJsonPath = this.unitJsonPath();\r\n            let unitRes = await fetch(unitJsonPath, {});\r\n            let res = await unitRes.json();\r\n            return res.unit;\r\n        }\r\n        catch (err) {\r\n            this.local.unit.remove();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async loadPredefinedUnit() {\r\n        let envUnit = process.env.REACT_APP_UNIT;\r\n        if (envUnit !== undefined) {\r\n            return Number(envUnit);\r\n        }\r\n        let unitName:string;\r\n        let unit = this.local.unit.get();\r\n        if (unit !== undefined) {\r\n            if (env.isDevelopment !== true) return unit.id;\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n            if (unit.name === unitName) return unit.id;\r\n        }\r\n        else {\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n        }\r\n        let unitId = await guestApi.unitFromName(unitName);\r\n        if (unitId !== undefined) {\r\n            this.local.unit.set({id: unitId, name: unitName});\r\n        }\r\n        return unitId;\r\n    }\r\n\r\n    setSettings(settings?: NavSettings) {\r\n        this.navSettings = settings;\r\n    }\r\n\r\n    hashParam: string;\r\n    private centerHost: string;\r\n    private arrs = ['/test', '/test/'];\r\n    private unitJsonPath():string {\r\n        let {href} = document.location;\r\n        href = href.toLowerCase();\r\n        for (let item of this.arrs) {\r\n            if (href.endsWith(item) === true) {\r\n                href = href.substr(0, href.length - item.length);\r\n                break;\r\n            }\r\n        }\r\n        if (href.endsWith('/') === true || href.endsWith('\\\\') === true) {\r\n            href = href.substr(0, href.length-1);\r\n        }\r\n        return href + '/unit.json';\r\n    }\r\n    async start() {\r\n        try {\r\n            this.testing = env.testing;\r\n            await host.start(this.testing);\r\n            let hash = document.location.hash;\r\n            if (hash !== undefined && hash.length > 0) {\r\n                let pos = getExHashPos();\r\n                if (pos < 0) pos = undefined;\r\n                this.hashParam = hash.substring(1, pos);\r\n            }\r\n            nav.clear();\r\n            this.startWait();\r\n            let {url, ws, resHost} = host;\r\n            this.centerHost = url;\r\n            this.resUrl = resUrlFromHost( resHost);\r\n            this.wsHost = ws;\r\n            setCenterUrl(url);\r\n            \r\n            let guest:Guest = this.local.guest.get();\r\n            if (guest === undefined) {\r\n                guest = await guestApi.guest();\r\n            }\r\n            nav.setGuest(guest);\r\n\r\n            let exHash = getExHash();\r\n            let appInFrame = setAppInFrame(exHash);\r\n            if (exHash !== undefined && window !== window.parent) {\r\n                // is in frame\r\n                if (appInFrame !== undefined) {\r\n                    this.ws = wsBridge;\r\n                    console.log('this.ws = wsBridge in sub frame');\r\n                    //nav.user = {id:0} as User;\r\n                    if (window.self !== window.parent) {\r\n                        window.parent.postMessage({type:'sub-frame-started', hash: appInFrame.hash}, '*');\r\n                    }\r\n                    // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\r\n                    //await this.showAppView();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let predefinedUnit = await this.loadPredefinedUnit();\r\n            appInFrame.predefinedUnit = predefinedUnit;\r\n\r\n            let user: User = this.local.user.get();\r\n            if (user === undefined) {\r\n                let {notLogined} = this.nav.props;\r\n                if (notLogined !== undefined) {\r\n                    await notLogined();\r\n                }\r\n                else {\r\n                    await nav.showLogin(undefined);\r\n                }\r\n                return;\r\n            }\r\n\r\n            await nav.logined(user);\r\n        }\r\n        catch (err) {\r\n        }\r\n        finally {\r\n            this.endWait();\r\n        }\r\n    }\r\n\r\n    async showAppView() {\r\n        let {onLogined} = this.nav.props;\r\n        if (onLogined === undefined) {\r\n            nav.push(<div>NavView has no prop onLogined</div>);\r\n            return;\r\n        }\r\n        nav.clear();\r\n        await onLogined();\r\n        console.log('logined: AppView shown');\r\n    }\r\n\r\n    setGuest(guest: Guest) {\r\n        this.local.guest.set(guest);\r\n        netToken.set(0, guest.token);\r\n    }\r\n\r\n    saveLocalUser() {\r\n        this.local.user.set(this.user);\r\n    }\r\n\r\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\r\n        logoutApis();\r\n        console.log(\"logined: %s\", JSON.stringify(user));\r\n        this.user = user;\r\n        this.saveLocalUser();\r\n        netToken.set(user.id, user.token);\r\n        if (callback !== undefined) //this.loginCallbacks.has)\r\n            callback(user);\r\n            //this.loginCallbacks.call(user);\r\n        else {\r\n            await this.showAppView();\r\n        }\r\n    }\r\n\r\n    wsConnect() {\r\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, this.user.token);\r\n        ws.connect();\r\n    }\r\n\r\n    loginTop(defaultTop:JSX.Element) {\r\n        return (this.navSettings && this.navSettings.loginTop) || defaultTop;\r\n    }\r\n\r\n    async showLogin(callback?: (user:User)=>Promise<void>, withBack?:boolean) {\r\n        let lv = await import('../entry/login');\r\n        let loginView = <lv.default \r\n            withBack={withBack} \r\n            callback={callback} />;\r\n        if (withBack !== true) {\r\n            this.nav.clear();\r\n            this.pop();\r\n        }\r\n        this.nav.push(loginView);\r\n    }\r\n\r\n    async showLogout(callback?: ()=>Promise<void>) {\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\r\n        appInFrame.unit = undefined;\r\n        this.local.logoutClear();\r\n        this.user = undefined; //{} as User;\r\n        logoutApis();\r\n        let guest = this.local.guest.get();\r\n        setCenterToken(0, guest && guest.token);\r\n        this.ws = undefined;\r\n        /*\r\n        if (this.loginCallbacks.has)\r\n            this.logoutCallbacks.call();\r\n        else {\r\n            if (notShowLogin === true) return;\r\n        }\r\n        await nav.start();\r\n        */\r\n        if (callback === undefined)\r\n            await nav.start();\r\n        else\r\n            await callback();\r\n    }\r\n\r\n    async changePassword() {\r\n        let cp = await import('../entry/changePassword');\r\n        nav.push(<cp.ChangePasswordPage />);\r\n    }\r\n\r\n    get level(): number {\r\n        return this.nav.level;\r\n    }\r\n    startWait() {\r\n        this.nav.startWait();\r\n    }\r\n    endWait() {\r\n        this.nav.endWait();\r\n    }\r\n    async onError(error: FetchError) {\r\n        await this.nav.onError(error);\r\n    }\r\n    async showUpgradeUq(uq:string, version:number):Promise<void> {\r\n        await this.nav.showUpgradeUq(uq, version);\r\n    }\r\n\r\n    show (view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.show(view, disposer);\r\n    }\r\n    push(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.push(view, disposer);\r\n    }\r\n    replace(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.replace(view, disposer);\r\n    }\r\n    pop(level:number = 1) {\r\n        this.nav.pop(level);\r\n    }\r\n    topKey():number {\r\n        return this.nav.topKey();\r\n    }\r\n    popTo(key:number) {\r\n        this.nav.popTo(key);\r\n    }\r\n    clear() {\r\n        this.nav.clear();\r\n    }\r\n    navBack() {\r\n        this.nav.navBack();\r\n    }\r\n    ceaseTop(level?:number) {\r\n        this.nav.ceaseTop(level);\r\n    }\r\n    removeCeased() {\r\n        this.nav.removeCeased();\r\n    }\r\n    async back(confirm:boolean = true) {\r\n        await this.nav.back(confirm);\r\n    }\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.nav.regConfirmClose(confirmClose);\r\n    }\r\n    confirmBox(message?:string): boolean {\r\n        return this.nav.confirmBox(message);\r\n    }\r\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\r\n            let uh = sheetId === undefined?\r\n                    appUrl(url, unitId) :\r\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\r\n            console.log('navToApp: %s', JSON.stringify(uh));\r\n            nav.push(<article className='app-container'>\r\n                <span id={uh.hash} onClick={()=>this.back()} /*style={mobileHeaderStyle}*/>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </span>\r\n                {\r\n                    // eslint-disable-next-line \r\n                    <iframe src={uh.url} title={String(sheetId)} />\r\n                }\r\n            </article>, \r\n            ()=> {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    navToSite(url: string) {\r\n        // show in new window\r\n        window.open(url);\r\n    }\r\n\r\n    get logs() {return logs};\r\n    log(msg:string) {\r\n        logs.push(msg);\r\n    }\r\n    logMark() {\r\n        let date = new Date();\r\n        logMark = date.getTime();\r\n        logs.push('log-mark: ' + date.toTimeString());\r\n    }\r\n    logStep(step:string) {\r\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\r\n    }\r\n}\r\nexport const nav: Nav = new Nav();\r\n","import {observable} from 'mobx';\r\n\r\nexport interface Id {\r\n    id: number;\r\n}\r\n\r\nexport abstract class CacheIds<T extends Id> {\r\n    constructor(maxCount:number = 100) {\r\n        this.maxCount = maxCount;\r\n    }\r\n    private maxCount:number;\r\n    private arr:T[] = [];\r\n    @observable dict = new Map<number, T>();\r\n\r\n    loadIds(ids:number[]) {\r\n        let arr:number[] = [];\r\n        for (let id of ids) {\r\n            if (id === null) continue;\r\n            let item = this.dict.get(id);\r\n            if (item === undefined) {\r\n                arr.push(id);\r\n                item = {id:id} as T;\r\n                this.dict.set(id, item);\r\n            }\r\n        }                \r\n        this.loadId(arr);\r\n    }\r\n\r\n    get(id:number):T {\r\n        if (id === undefined || id === null) return null;\r\n        let item = this.dict.get(id);\r\n        if (item === undefined) {\r\n            this.dict.set(id, {id:id} as T);\r\n            this.loadId([id]);\r\n            item = this.dict.get(id);\r\n        }\r\n        return item;\r\n    }\r\n    private setItem(id:number, item:T) {\r\n        if (item === undefined) {\r\n            this.dict.set(id, null);\r\n            this.arr.push({id: id} as T);\r\n        }\r\n        else {\r\n            this.dict.set(id, item);\r\n            this.arr.push(item);\r\n        }\r\n        if (this.arr.length > this.maxCount) {\r\n            item = this.arr.shift();\r\n            this.dict.delete(item.id);\r\n        }\r\n    }\r\n    private async loadId(ids:number[]) {\r\n        let items = await this._loadIds(ids);\r\n        if (items === undefined) {\r\n            for (let id of ids) {\r\n                if (id === null) continue;\r\n                let item = await this._loadId(id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n        else {\r\n            for (let id of ids) {\r\n                let item = items.find(v => v.id === id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\r\n    protected abstract async _loadId(id:number):Promise<T>;\r\n}\r\n","import _ from 'lodash';\r\n\r\nclass _LocalStorage {\r\n    getItem(key:string) {\r\n        return localStorage.getItem(key)\r\n    }\r\n    setItem(key:string, value:string) {\r\n        localStorage.setItem(key, value);\r\n    }\r\n    removeItem(key:string) {\r\n        localStorage.removeItem(key);\r\n    }\r\n}\r\n\r\nconst __ls = new _LocalStorage(); // new Ls;\r\n\r\nexport class LocalCache {\r\n    private readonly local: Local;\r\n    //private value: T;\r\n    readonly key: string|number;\r\n\r\n    constructor(local:Local, key:string|number) {\r\n        this.local = local;\r\n        this.key = key;\r\n    }\r\n    get():any {\r\n        try {\r\n            // 下面缓冲的内容不能有，可能会被修改，造成circular引用\r\n            //if (this.value !== undefined) return this.value;\r\n            let text = this.local.getItem(this.key);\r\n            if (text === null) return;\r\n            if (text === undefined) return undefined;\r\n            //return this.value = \r\n            return JSON.parse(text);\r\n        }\r\n        catch (err) {\r\n            this.local.removeItem(this.key);\r\n            return;\r\n        }\r\n    }\r\n    set(value:any) {\r\n        //this.value = value;\r\n        let t = JSON.stringify(value);\r\n        this.local.setItem(this.key, t);\r\n        /*\r\n        let text = Flatted.stringify(value, undefined, undefined);\r\n        let objs:object[] = [];\r\n        let circular:any = {};\r\n        let path:string[] = [];\r\n        try {\r\n            if (testCircular(value, objs, circular, path) === true) debugger;\r\n            let t = JSON.stringify(value);\r\n            this.local.setItem(this.key, t);\r\n        }\r\n        catch (e) {\r\n            let s = null;\r\n        }\r\n        */\r\n    }\r\n    remove(local?:Local) {\r\n        if (local === undefined) {\r\n            this.local.removeItem(this.key);\r\n            //this.value = undefined;\r\n        }\r\n        else {\r\n            this.local.removeLocal(local);\r\n        }\r\n    }\r\n    child(key:string|number):LocalCache {\r\n        return this.local.child(key);\r\n    }\r\n    arr(key:string|number):LocalArr {\r\n        return this.local.arr(key);\r\n    }\r\n    map(key:string|number):LocalMap {\r\n        return this.local.map(key);\r\n    }\r\n}\r\n\r\nabstract class Local {\r\n    private readonly caches: {[key:string]:LocalCache};\r\n    private readonly locals: {[key:string]:Local};\r\n    protected readonly name: string;\r\n    constructor(name: string) {\r\n        this.name = name;\r\n        this.caches = {};\r\n        this.locals = {};\r\n    }\r\n\r\n    protected abstract keyForGet(key:string|number):string;\r\n    protected abstract keyForSet(key:string|number):string;\r\n    protected abstract keyForRemove(key:string|number):string;\r\n    abstract removeAll():void;\r\n    getItem(key:string|number):string {\r\n        let k = this.keyForGet(key);\r\n        if (k === undefined) return;\r\n        return __ls.getItem(k);\r\n    }\r\n    setItem(key:string|number, value: string):void {\r\n        let k = this.keyForSet(key);\r\n        __ls.setItem(k, value);\r\n    }\r\n    removeItem(key:string|number):void {\r\n        let k = this.keyForSet(key);\r\n        if (k === undefined) return;\r\n        localStorage.removeItem(k);\r\n    }\r\n    arr(key:string|number):LocalArr {\r\n        let sk = String(key);\r\n        let arr = this.locals[sk] as LocalArr;\r\n        if (arr === undefined) {\r\n            let k = this.keyForSet(key);\r\n            this.locals[sk] = arr = new LocalArr(k);\r\n        }\r\n        return arr;\r\n    }\r\n    map(key:string|number):LocalMap {\r\n        let sk = String(key);\r\n        let map = this.locals[sk] as LocalMap;\r\n        if (map === undefined) {\r\n            let k = this.keyForSet(key);\r\n            this.locals[sk] = map = new LocalMap(k);\r\n        }\r\n        return map;\r\n    }\r\n    removeLocal(local:Local) {\r\n        let sk = local.name;\r\n        let k = this.keyForRemove(sk);\r\n        if (k === undefined) return;\r\n        let arr = this.locals[sk];\r\n        if (arr === undefined) arr = new LocalArr(k);\r\n        else this.locals[sk] = undefined;\r\n        arr.removeAll();\r\n    }\r\n    child(key:string|number):LocalCache {\r\n        let ks = String(key);\r\n        let ret = this.caches[ks];\r\n        if (ret !== undefined) return ret;\r\n        return this.caches[ks] =ret = new LocalCache(this, key);\r\n    }\r\n}\r\n\r\nconst maxArrSize = 500;\r\nexport class LocalArr extends Local {\r\n    private readonly index: number[];\r\n    constructor(name: string) {\r\n        super(name);\r\n        let index = __ls.getItem(this.name);\r\n        this.index = index === null? [] : index.split('\\n').map(v => Number(v));\r\n    }\r\n    private saveIndex() {\r\n        __ls.setItem(this.name, this.index.join('\\n'));\r\n    }\r\n    protected keyForGet(key:number):string {\r\n        let i = _.indexOf(this.index, key);\r\n        if (i < 0) return undefined;\r\n        return `${this.name}.${key}`;\r\n    }\r\n    protected keyForSet(key:number):string {\r\n        let i = _.indexOf(this.index, key);\r\n        if (i<0) {\r\n            this.index.unshift(key);\r\n            if (this.index.length > maxArrSize) this.index.pop();\r\n        }\r\n        else {\r\n            this.index.splice(i, 1);\r\n            this.index.unshift(key)\r\n        }\r\n        this.saveIndex();\r\n        return `${this.name}.${key}`;\r\n    }\r\n    protected keyForRemove(key:number):string {\r\n        let i = _.indexOf(this.index, key);\r\n        if (i<0) return;\r\n        this.index.splice(i, 1);\r\n        this.saveIndex();\r\n        return `${this.name}.${key}`;\r\n    }\r\n    removeAll():void {\r\n        for (let i of this.index) {\r\n            __ls.removeItem(`${this.name}.${i}`);\r\n        }\r\n        __ls.removeItem(this.name);\r\n        this.index.splice(0);\r\n    }\r\n    item(index:number):LocalCache {\r\n        return this.child(index);\r\n    }\r\n}\r\n\r\nexport class LocalMap extends Local {\r\n    private readonly index: {[key:string]:number};\r\n    private max: number;\r\n    constructor(name: string) {\r\n        super(name);\r\n        this.max = 0;\r\n        this.index = {};\r\n        let index = __ls.getItem(this.name);\r\n        if (index !== null) {\r\n            let ls = index.split('\\n');\r\n            ls.forEach(l => {\r\n                let p = l.indexOf('\\t');\r\n                if (p<0) return;\r\n                let key = l.substr(0, p);\r\n                let i = Number(l.substr(p+1));\r\n                if (isNaN(i) === true) return;\r\n                this.index[key] = i;\r\n                if (i>this.max) this.max = i;\r\n            });\r\n        }\r\n    }\r\n    private saveIndex() {\r\n        let ls:string[] = [];\r\n        for (let k in this.index) {\r\n            let v = this.index[k];\r\n            if (v === undefined) continue;\r\n            ls.push(`${k}\\t${v}`);\r\n        }\r\n        __ls.setItem(this.name, ls.join('\\n'));\r\n    }\r\n    protected keyForGet(key:number):string {\r\n        let i = this.index[key];\r\n        if (i === undefined) return undefined;\r\n        return `${this.name}.${i}`;\r\n    }\r\n    protected keyForSet(key:number):string {\r\n        let i = this.index[key];\r\n        if (i === undefined) {\r\n            ++this.max;\r\n            i = this.max;\r\n            this.index[key] = i;\r\n            this.saveIndex();\r\n        }\r\n        return `${this.name}.${i}`;\r\n    }\r\n    protected keyForRemove(key:string|number):string {\r\n        let i = this.index[key];\r\n        if (i===undefined) return;\r\n        this.index[key] = undefined;\r\n        this.saveIndex();\r\n        return `${this.name}.${i}`;\r\n    }\r\n    removeAll():void {\r\n        for (let i in this.index) {\r\n            __ls.removeItem(`${this.name}.${this.index[i]}`);\r\n            this.index[i] = undefined;\r\n        }\r\n        __ls.removeItem(this.name);\r\n        this.max = 0;\r\n    }\r\n    item(key:string):LocalCache {\r\n        return this.child(key);\r\n    }\r\n}\r\n","import { LocalMap } from './localDb';\r\n\r\nconst testingTags:string[] = ['/test', '/test/', '-test', '-test/'];\r\nfunction isTesting():boolean {\r\n    let {pathname} = document.location;\r\n    let pn = pathname.toLowerCase();\r\n    for (let item of testingTags) {\r\n        if (pn.endsWith(item) === true) return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const env = (function () {\r\n    let testing = isTesting();\r\n    let localDb = new LocalMap(testing===true? '$$':'$');\r\n    return {\r\n        testing: testing,\r\n        isDevelopment: process.env.NODE_ENV === 'development',\r\n        localDb: localDb,\r\n    }\r\n}());\r\n","import { env } from './env';\r\n\r\nexport class LocalData {\r\n    user = env.localDb.child('user');\r\n    guest = env.localDb.child('guest');\r\n    unit = env.localDb.child('unit');\r\n\r\n    logoutClear() {\r\n        [\r\n            this.user,\r\n            this.unit,\r\n        ].forEach(d => d.remove());\r\n    }\r\n}\r\n","export {left0} from './left0';\r\nexport * from './user';\r\nexport * from './uid';\r\nexport {PageItems} from './pageItems';\r\nexport {CacheIds} from './cacheIds';\r\nexport {LocalMap, LocalArr, LocalCache} from './localDb';\r\nexport {LocalData} from './local';\r\nexport {env} from './env';","function replacer(key:string, value:any) {\r\n    let first = key.substr(0, 1);\r\n    switch (first) {\r\n        default: return value;\r\n        case '$':\r\n        case '_': return;\r\n    }\r\n}\r\n\r\nexport function jsonStringify(value:any) {\r\n    return JSON.stringify(value, replacer, ' ');\r\n}\r\n","import * as React from 'react';\r\n\r\nexport const PureJSONContent = (values:any, x?:any) => <>content: {JSON.stringify(values)}</>;\r\n","export * from './jsonStringify';\r\nexport * from './pureJsonContent';","import _ from 'lodash';\r\nimport {nav} from '../components';\r\nimport {uid} from '../tool/uid';\r\nimport {uqTokenApi, callCenterapi, centerToken, setCenterToken} from './uqApi';\r\nimport {setSubAppWindow} from './wsChannel';\r\nimport { host } from './host';\r\n\r\nexport interface UqToken {\r\n    name: string;\r\n    db: string;\r\n    url: string;\r\n    token: string;\r\n}\r\nconst uqTokens:{[uqName:string]: UqToken}  = {};\r\nexport function logoutUqTokens() {\r\n    for (let i in uqTokens) {\r\n        uqTokens[i] = undefined;\r\n    }\r\n}\r\n\r\nexport interface AppInFrame {\r\n    hash: string;\r\n    unit: number;       // unit id\r\n    page?: string;\r\n    param?: string[];\r\n    predefinedUnit?: number;  // 比如像Cart这样的应用，直接让用户访问的，就需要在unit.json里面定义unitName\r\n}\r\nconst appsInFrame:{[key:string]:AppInFrame} = {};\r\n\r\nclass AppInFrameClass implements AppInFrame {\r\n    hash: string;\r\n    private _unit: number;\r\n    get unit(): number {return this._unit;}       // unit id\r\n    set unit(val:number) { this._unit=val;}\r\n    page?: string;\r\n    param?: string[];\r\n}\r\n\r\nexport let appInFrame:AppInFrame = new AppInFrameClass();\r\n/* {\r\n    hash: undefined,\r\n    get unit():number {return } undefined, //debugUnitId,\r\n    page: undefined;\r\n    param: undefined,\r\n}*/\r\n\r\nexport function isBridged():boolean {\r\n    return window.self !== window.parent;\r\n}\r\n\r\nwindow.addEventListener('message', async function(evt) {\r\n    var message = evt.data;\r\n    switch (message.type) {\r\n        case 'sub-frame-started':\r\n            subFrameStarted(evt);\r\n            break;\r\n        case 'ws':\r\n            //wsBridge.receive(message.msg);\r\n            await nav.onReceive(message.msg);\r\n            break;\r\n        case 'init-sub-win':\r\n            await initSubWin(message);\r\n            break;\r\n        case 'pop-app':\r\n            nav.navBack();\r\n            break;\r\n        case 'center-api':\r\n            await callCenterApiFromMessage(evt.source as Window, message);\r\n            break;\r\n        case 'center-api-return':\r\n            bridgeCenterApiReturn(message);\r\n            break;\r\n        case 'app-api':\r\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\r\n            (evt.source as Window).postMessage({\r\n                type: 'app-api-return', \r\n                apiName: message.apiName,\r\n                db: ret.db,\r\n                url: ret.url,\r\n                token: ret.token} as any, \"*\");\r\n            break;\r\n        case 'app-api-return':\r\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\r\n            console.log('await onAppApiReturn(message);');\r\n            await onAppApiReturn(message);\r\n            break;\r\n        default:\r\n            this.console.log('message: %s', JSON.stringify(message));\r\n            break;\r\n    }\r\n});\r\n\r\nfunction subFrameStarted(evt:any) {\r\n    var message = evt.data;\r\n    let subWin = evt.source as Window;\r\n    setSubAppWindow(subWin);\r\n    hideFrameBack(message.hash);\r\n    let msg:any = _.clone(nav.user);\r\n    msg.type = 'init-sub-win';\r\n    subWin.postMessage(msg, '*');\r\n}\r\nfunction hideFrameBack(hash:string) {\r\n    let el = document.getElementById(hash);\r\n    if (el !== undefined) el.hidden = true;\r\n}\r\nasync function initSubWin(message:any) {\r\n    console.log('initSubWin: set nav.user', message);\r\n    let user = nav.user = message; // message.user;\r\n    setCenterToken(user.id, user.token);\r\n    await nav.showAppView();\r\n}\r\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\r\n    let appInFrame = appsInFrame[hash];\r\n    if (appInFrame === undefined) return {name:apiName, db:undefined, url:undefined, token:undefined};\r\n    //let unit = getUnit();\r\n    let {unit, predefinedUnit} = appInFrame;\r\n    unit = unit || predefinedUnit;\r\n    if (!unit) {\r\n        console.error('no unit defined in unit.json or not logined in', unit);\r\n    }\r\n    let parts = apiName.split('/');\r\n    let param = {unit: unit, uqOwner: parts[0], uqName: parts[1]};\r\n    console.log('uqTokenApi.uq onReceiveAppApiMessage', param);\r\n    let ret = await uqTokenApi.uq(param);\r\n    let {db, url, token} = ret;\r\n    return {name: apiName, db:db, url: url, token: token};\r\n}\r\n\r\nasync function onAppApiReturn(message:any) {\r\n    let {apiName, db, url, urlTest, token} = message;\r\n    let action = uqTokenActions[apiName];\r\n    if (action === undefined) {\r\n        throw new Error('error app api return');\r\n        //return;\r\n    }\r\n    let realUrl = host.getUrlOrTest(db, url, urlTest);\r\n    console.log('onAppApiReturn(message:any): url=' + url + ', real=' + realUrl);\r\n    //action.url = realUrl;\r\n    //action.token = token;\r\n    action.resolve({\r\n        name: apiName,\r\n        db: db,\r\n        url: realUrl,\r\n        token: token,\r\n    } as UqToken);\r\n}\r\n\r\nexport function setAppInFrame(appHash: string):AppInFrame {\r\n    if (appHash) {\r\n        let parts = appHash.split('-');\r\n        let len = parts.length;\r\n        if (len > 0) {\r\n            let p = 1;\r\n            appInFrame.hash = parts[p++];\r\n            if (len>0) appInFrame.unit = Number(parts[p++]);\r\n            if (len>1) appInFrame.page = parts[p++];\r\n            if (len>2) appInFrame.param = parts.slice(p++);\r\n        }\r\n    }\r\n    return appInFrame;\r\n}\r\n\r\nexport function getExHashPos():number {\r\n    let hash = document.location.hash;\r\n    if (hash !== undefined && hash.length > 0) {\r\n        let pos = hash.lastIndexOf('#tv-');\r\n        if (pos < 0) pos = hash.lastIndexOf('#tvdebug-');\r\n        return pos;\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function getExHash():string {\r\n    let pos = getExHashPos();\r\n    if (pos < 0) return undefined;\r\n    return document.location.hash.substring(pos);\r\n}\r\n\r\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\r\n    let u:string;\r\n    for (;;) {\r\n        u = uid();\r\n        let a = appsInFrame[u];\r\n        if (a === undefined) {\r\n            appsInFrame[u] = {hash:u, unit:unitId};\r\n            break;\r\n        }\r\n    }\r\n    url += '#tv-' + u + '-' + unitId;\r\n    if (page !== undefined) {\r\n        url += '-' + page;\r\n        if (param !== undefined) {\r\n            for (let i=0; i<param.length; i++) {\r\n                url += '-' + param[i];\r\n            }\r\n        }\r\n    }\r\n    return {url: url, hash: u};\r\n}\r\n\r\nfunction getUnit():number {\r\n    let {unit, predefinedUnit} = appInFrame;\r\n    let realUnit = unit || predefinedUnit;\r\n    if (realUnit === undefined) {\r\n        throw new Error('no unit defined in unit.json or not logined in');\r\n    }\r\n    return realUnit;\r\n}\r\n\r\ninterface UqTokenAction {\r\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\r\n    reject: (reason?: any) => void;\r\n}\r\nconst uqTokenActions:{[uq:string]: UqTokenAction} = {};\r\nexport async function buildAppUq(uq:string, uqOwner:string, uqName:string):Promise<void> {\r\n    if (!isBridged()) {\r\n        let unit = getUnit();\r\n        let uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {db, url, urlTest} = uqToken;\r\n        let realUrl = host.getUrlOrTest(db, url, urlTest);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"**** before buildAppUq ****\", appInFrame);\r\n    let bp = uqTokenActions[uq];\r\n    if (bp !== undefined) return;\r\n    return new Promise<void>((resolve, reject) => {\r\n        uqTokenActions[uq] = {\r\n            resolve: async (at:any) => {\r\n                let {db, url, token} = await at;\r\n                uqTokens[uq] = {\r\n                    name: uq,\r\n                    db: db,\r\n                    url: url,\r\n                    token: token,\r\n                };\r\n                uqTokenActions[uq] = undefined;\r\n                console.log(\"**** after buildAppUq ****\", appInFrame);\r\n                resolve();\r\n            },\r\n            reject: reject,\r\n        };\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: appInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n\r\nexport function appUq(uq:string):UqToken {\r\n    let uts = uqTokens;\r\n    return uts[uq];\r\n}\r\n/*\r\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\r\n    let uqToken = uqTokens[uq];\r\n    if (uqToken !== undefined) return uqToken;\r\n    if (!isBridged()) {\r\n        let unit = getUnit();\r\n        uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {url, urlDebug} = uqToken;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"appApi parent send: %s\", appInFrame.hash);\r\n    uqToken = {\r\n        name: uq,\r\n        url: undefined,\r\n        urlDebug: undefined,\r\n        token: undefined,\r\n        resolve: undefined,\r\n        reject: undefined,\r\n    };\r\n    uqTokens[uq] = uqToken;\r\n    return new Promise<UqToken>((resolve, reject) => {\r\n        uqToken.resolve = async (at) => {\r\n            let a = await at;\r\n            console.log('return from parent window: %s', JSON.stringify(a));\r\n            uqToken.url = a.url;\r\n            uqToken.urlDebug = a.urlDebug;\r\n            uqToken.token = a.token;\r\n            resolve(uqToken);\r\n        }\r\n        uqToken.reject = reject;\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: appInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n*/\r\ninterface BridgeCenterApi {\r\n    id: string;\r\n    resolve: (value?:any)=>any;\r\n    reject: (reason?:any)=>void;\r\n}\r\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\r\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\r\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\r\n    return await new Promise<any>(async (resolve, reject) => {\r\n        let callId:string;\r\n        for (;;) {\r\n            callId = uid();\r\n            let bca = brideCenterApis[callId];\r\n            if (bca === undefined) {\r\n                brideCenterApis[callId] = {\r\n                    id: callId,\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'center-api',\r\n            callId: callId,\r\n            url: url,\r\n            method: method,\r\n            body: body\r\n        }, '*');\r\n    });\r\n}\r\n\r\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\r\n    let {callId, url, method, body} = message;\r\n    let result = await callCenterapi.directCall(url, method, body);\r\n    from.postMessage({\r\n        type: 'center-api-return',\r\n        callId: callId,\r\n        result: result,\r\n    }, '*');\r\n}\r\n\r\nfunction bridgeCenterApiReturn(message:any) {\r\n    let {callId, result} = message;\r\n    let bca = brideCenterApis[callId];\r\n    if (bca === undefined) return;\r\n    brideCenterApis[callId] = undefined;\r\n    bca.resolve(result);\r\n}\r\n","import * as React from 'react';\r\nimport {IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport {PageHeader} from './pageHeader';\r\n\r\nexport interface ScrollProps {\r\n    onScroll?: (e:any) => void;\r\n    onScrollTop?: () => void;\r\n    onScrollBottom?: () => void;\r\n}\r\ninterface ScrollViewProps extends ScrollProps {\r\n    className?: string;\r\n}\r\nconst scrollTimeGap = 100;\r\nclass ScrollView extends React.Component<ScrollViewProps, null> {\r\n    private bottomTime:number = 0;\r\n    private topTime:number = 0;\r\n\r\n    private onScroll = async (e) => {\r\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\r\n        if (onScroll) this.props.onScroll(e);\r\n        let el = e.target as HTMLBaseElement;\r\n        if (el.scrollTop < 30) {\r\n            //this.eachChild(this, 'top');\r\n            if (onScrollTop !== undefined) {\r\n                let topTime = new Date().getTime();\r\n                if (topTime-this.topTime > scrollTimeGap) {\r\n                    this.topTime = topTime;\r\n                    onScrollTop();\r\n                }\r\n            }\r\n        }\r\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\r\n            //this.eachChild(this, 'bottom');\r\n            if (onScrollBottom !== undefined) {\r\n                let bottomTime = new Date().getTime();\r\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\r\n                    this.bottomTime = bottomTime;\r\n                    onScrollBottom();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private eachChild(c:any, direct:'top'|'bottom') {\r\n        let { props } = c;\r\n        if (props === undefined)\r\n            return;\r\n        let { children } = props;\r\n        if (children === undefined)\r\n            return;\r\n        React.Children.forEach(children, (child, index) => {\r\n            let {_$scroll} = child as any;\r\n            if (_$scroll) _$scroll(direct);\r\n            console.log(child.toString());\r\n            this.eachChild(child, direct);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <main className={this.props.className} onScroll={this.onScroll}>\r\n                {this.props.children}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface Tab extends ScrollProps {\r\n    title: string | JSX.Element;    \r\n    icon?: string;\r\n    className?: string;\r\n    content?: JSX.Element | (()=>JSX.Element);\r\n    header?: string;\r\n    isSelected?: boolean;\r\n    redDot?: IComputedValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\nexport interface TabState extends Tab {\r\n    isMounted?: boolean;\r\n}\r\nexport interface PageProps extends ScrollProps {\r\n    back?: 'close' | 'back' | 'none';\r\n    header?: boolean | string | JSX.Element;\r\n    keepHeader?: boolean;\r\n    right?: JSX.Element;\r\n    sideBar?: JSX.Element;\r\n    footer?: JSX.Element;\r\n    tabs?: Tab[];\r\n    tabPosition?: 'top' | 'bottom';\r\n    logout?: boolean | (()=>Promise<void>);\r\n    headerClassName?: string;\r\n}\r\nexport interface PageState {\r\n    cur?: Tab;\r\n    tabs?: TabState[];\r\n}\r\n\r\n@observer\r\nexport class Page extends React.Component<PageProps, PageState> {\r\n    private tabs:TabState[];\r\n    constructor(props: PageProps) {\r\n        super(props);\r\n        let {tabs} = props;\r\n        if (tabs === undefined || tabs.length === 0) return;\r\n        this.tabs = tabs;\r\n        let cur:Tab;\r\n        let tabStates:Tab[] = [];\r\n        for (let tab of tabs) {\r\n            let t:TabState = _.clone(tab);\r\n            if (cur === undefined) {\r\n                if (t.isSelected === true)\r\n                    cur = t;\r\n                else\r\n                    t.isSelected = false;\r\n            }\r\n            else {\r\n                t.isSelected = false;\r\n            }\r\n            t.isMounted = false;\r\n            tabStates.push(t);\r\n        }\r\n        this.state = {\r\n            cur: cur,\r\n            tabs: tabStates,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        let t0 = this.state.tabs.find(v => v.isSelected === true);\r\n        if (t0 === undefined) {\r\n            t0 = this.state.tabs[0];\r\n            if (t0 === undefined) return;\r\n        }\r\n        await t0.load && await t0.load();\r\n        //await this.onTabClick(t0);\r\n    }\r\n\r\n    private async onTabClick(tab: TabState) {\r\n        if (tab.isSelected === true) return;\r\n        let cur:TabState;\r\n        let tabs = this.state.tabs;\r\n        for (let t of tabs) {\r\n            if (t === tab) {\r\n                t.isSelected = true;\r\n                cur = t;\r\n            }\r\n            else\r\n                t.isSelected = false;\r\n        }\r\n        if (cur.isMounted !== true) {\r\n            let {load} = cur;\r\n            if (load !== undefined) {\r\n                await load();\r\n            }\r\n        }\r\n        this.setState({\r\n            cur: cur,\r\n            tabs: tabs\r\n        });\r\n    }\r\n\r\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\r\n    }\r\n\r\n    private renderTabs(footer: JSX.Element) {\r\n        const {header, back, right, keepHeader, headerClassName, tabPosition} = this.props;\r\n        let cur = this.state.cur;\r\n        let tabs = <div>{\r\n                this.state.tabs.map((tab, index) => {\r\n                    const {icon, isSelected, title, redDot, className} = tab;\r\n                    let img:any, redDotView:any, cn:any;\r\n                    if (icon !== undefined) img = <img src={icon} alt=\"tab icon\" />;\r\n                    if (redDot !== undefined) {\r\n                        let v = redDot.get();\r\n                        if (v < 0) {\r\n                            cn = classNames('red-dot', className);\r\n                            redDotView = <u />;\r\n                        }\r\n                        else if (v > 0) {\r\n                            cn = classNames('red-dot', 'num', className);\r\n                            redDotView = <u>{v}</u>;\r\n                        }\r\n                    }\r\n                    return <div key={index}\r\n                        className= {classNames('va-tab', {cur: isSelected})}\r\n                        onClick={() => this.onTabClick(tab)}>\r\n                        {img}<div className={cn}>{title}{redDotView}</div>\r\n                    </div>\r\n                })\r\n            }</div>;\r\n        let pageHeader = header !== false &&\r\n            <PageHeader \r\n                back={back} \r\n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\r\n                right={right}\r\n                className={headerClassName}\r\n            />;\r\n\r\n        return <article className='page-container'>\r\n            {pageHeader}\r\n            {tabPosition==='top' && tabs}\r\n            <section className=\"position-relative\">\r\n            {this.props.sideBar}\r\n            {\r\n                this.state.tabs.map((tab, index) => {\r\n                    let {isSelected, isMounted, content} = tab;\r\n                    if (isSelected === true || isMounted === true) {\r\n                        tab.isMounted = true;\r\n                        return <ScrollView key={index}\r\n                            className={classNames({invisible: isSelected===false})}\r\n                            onScroll={tab.onScroll}\r\n                            onScrollTop={tab.onScrollTop}\r\n                            onScrollBottom={tab.onScrollBottom}\r\n                        >\r\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\r\n                        </ScrollView>;\r\n                    }\r\n                    return undefined;\r\n                })\r\n            }\r\n            </section>\r\n            {tabPosition!=='top' && tabs}\r\n            {footer}\r\n        </article>;\r\n    }\r\n    private renderSingle(footer: JSX.Element) {\r\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children, headerClassName} = this.props;\r\n        let pageHeader = header !== false && <PageHeader \r\n            back={back} \r\n            center={header as any}\r\n            right={right}\r\n            logout={this.props.logout}\r\n            className={headerClassName}\r\n        />;\r\n        return (\r\n            <article className='page-container' onTouchStart={this.onTouchStart}>\r\n                {pageHeader}\r\n                <section className=\"position-relative\">\r\n                    {this.props.sideBar}\r\n                    <ScrollView\r\n                        onScroll={onScroll}\r\n                        onScrollTop={onScrollTop}\r\n                        onScrollBottom={onScrollBottom}\r\n                    >\r\n                        {children}\r\n                    </ScrollView>\r\n                </section>\r\n                {footer}\r\n            </article>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {footer} = this.props;\r\n        let elFooter = footer !== undefined && <footer>{footer}</footer>;\r\n        if (this.tabs !== undefined)\r\n            return this.renderTabs(elFooter);\r\n        else\r\n            return this.renderSingle(elFooter);\r\n    }\r\n}\r\n","//import _ from 'lodash';\r\nimport { Caller } from '../net';\r\nimport { Entity } from './entity';\r\nimport { Action } from './action';\r\nimport { Query } from './query';\r\n\r\ninterface UqResponseSchema {\r\n    uq: any;\r\n    entity: any;\r\n}\r\n\r\nexport abstract class EntityCaller<T> extends Caller<T> {\r\n    private tries: number;\r\n    protected _entity: Entity;\r\n\r\n    constructor(entity: Entity, params:T) {\r\n        super(params);\r\n        this.tries = 0;\r\n        this._entity = entity;\r\n    }\r\n\r\n    protected get entity(): Entity {return this._entity;}\r\n\r\n    //大多的entityCaller都不需要这个\r\n    //buildParams() {return this.entity.buildParams(this.params);}\r\n    \r\n    async request(): Promise<any> {\r\n        await this.entity.loadSchema();\r\n        let ret = await this.innerRequest();\r\n        return ret;\r\n    }\r\n\r\n    protected async innerCall(): Promise<any> {\r\n        return await this.entity.uqApi.xcall(this);\r\n    }\r\n\r\n    async innerRequest(): Promise<any> {\r\n        let jsonResult = await this.innerCall();\r\n        let {$uq, $modify, res} = jsonResult;\r\n        this.entity.uq.pullModify($modify);\r\n        if ($uq === undefined) {\r\n            //if (res === undefined) debugger;\r\n            let ret = this.xresult(res);\r\n            //if (ret === undefined) debugger;\r\n            return ret;\r\n        }\r\n        return await this.retry($uq);\r\n    }\r\n\r\n    xresult(res:any):any {return res}\r\n\r\n    get headers(): {[header:string]: string} {\r\n        let {ver, uq} = this.entity;\r\n        let {uqVersion} = uq;\r\n        return {\r\n            uq: `${uqVersion}`,\r\n            en: `${ver}`,\r\n        }\r\n    }\r\n\r\n    private async retry(schema: UqResponseSchema) {\r\n        ++this.tries;\r\n        if (this.tries > 5) throw new Error('can not get right uq response schema, 5 tries');\r\n        this.rebuildSchema(schema);\r\n        return await this.innerRequest();\r\n    }\r\n\r\n    private rebuildSchema(schema: UqResponseSchema) {\r\n        let {uq, entity} = schema;\r\n        if (uq !== undefined) this.entity.uq.buildEntities(uq);\r\n        if (entity !== undefined) this.entity.setSchema(entity);\r\n    }\r\n}\r\n\r\nexport abstract class ActionCaller extends EntityCaller<any> {\r\n    protected get entity(): Action {return this._entity as Action;}\r\n}\r\n\r\nexport class QueryQueryCaller extends EntityCaller<any> {\r\n    protected get entity(): Query {return this._entity as Query};\r\n    get path():string {return `query/${this.entity.name}`;}\r\n    xresult(res:any) {\r\n        let data = this.entity.unpackReturns(res);\r\n        return data;\r\n    }\r\n    buildParams() {return this.entity.buildParams(this.params);}\r\n}\r\n\r\nexport class QueryPageCaller extends EntityCaller<any> {\r\n    protected readonly params: {pageStart:any; pageSize:number, params:any};\r\n    protected get entity(): Query {return this._entity as Query};\r\n    get path():string {return `query-page/${this.entity.name}`;}\r\n    buildParams() {\r\n        let {pageStart, pageSize, params} = this.params;\r\n        let p:any;\r\n        if (params === undefined) {\r\n            p = {key: ''};\r\n        }\r\n        else {\r\n            p = this.entity.buildParams(params);\r\n        }\r\n        /*\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        */\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return p;\r\n    };\r\n    xresult(res:any) {\r\n        let data = this.entity.unpackReturns(res);\r\n        return data.$page;// as any[];\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { jsonStringify, PureJSONContent } from '../tools';\r\n\r\nexport type TypeViewModel = typeof ViewModel;\r\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\r\nexport type TypeContent = React.StatelessComponent<any>;\r\n\r\nexport abstract class ViewModel {\r\n    protected abstract get view(): TypeView;\r\n    render(className?:string|string[]):JSX.Element {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view, {vm: this, className:className});\r\n    }\r\n}\r\n\r\n/*\r\nexport const PureJSONContent = (values:any, x?:any) => {\r\n    return <>content: {jsonStringify(values)}</>;\r\n}\r\n*/\r\n\r\nexport const JSONContent = observer(PureJSONContent);\r\nexport const RowContent = \r\n    (values:any) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\r\n;\r\n","import {bridgeCenterApi, isBridged} from './appBridge';\r\nimport {FetchError} from './fetchError';\r\nimport {HttpChannelUI} from './httpChannelUI';\r\nimport {nav} from '../components/nav';\r\nimport { Caller } from './caller';\r\nimport { env } from '../tool';\r\n\r\n/*\r\nexport async function httpGet(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.get('', params);\r\n    return ret;\r\n}\r\n\r\nexport async function httpPost(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.post('', params);\r\n    return ret;\r\n}\r\n*/\r\n\r\nconst methodsWithBody = ['POST', 'PUT'];\r\n\r\nexport abstract class HttpChannel {\r\n    private timeout: number;\r\n    protected ui?: HttpChannelUI;\r\n    protected hostUrl: string;\r\n    protected apiToken: string;\r\n\r\n    constructor(hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\r\n        this.hostUrl = hostUrl;\r\n        this.apiToken = apiToken;\r\n        this.ui = ui;\r\n        this.timeout = env.isDevelopment === true? 500000:5000;\r\n    }\r\n\r\n    private startWait = () => {\r\n        if (this.ui !== undefined) this.ui.startWait();\r\n    }\r\n\r\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\r\n        if (this.ui !== undefined) this.ui.endWait();\r\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\r\n    }\r\n\r\n    private showError = async (error:FetchError) => {\r\n        if (this.ui !== undefined) await this.ui.showError(error);\r\n    }\r\n\r\n    used() {\r\n        this.post('', {});\r\n    }\r\n\r\n    async xcall(urlPrefix:string, caller:Caller<any>): Promise<void> {\r\n        let options = this.buildOptions();\r\n        let {headers, path, method} = caller;\r\n        if (headers !== undefined) {\r\n            let h = options.headers;\r\n            for (let i in headers) {\r\n                h.append(i, encodeURI(headers[i]));\r\n            }\r\n        }\r\n        options.method = method;\r\n        let p = caller.buildParams();\r\n        if (methodsWithBody.indexOf(method) >= 0 && p !== undefined) {\r\n            options.body = JSON.stringify(p)\r\n        }\r\n        return await this.innerFetch(urlPrefix + path, options);\r\n    }\r\n\r\n    private async innerFetchResult(url: string, options: any): Promise<any> {\r\n        let ret = await this.innerFetch(url, options);\r\n        return ret.res;\r\n    }\r\n\r\n    async get(url: string, params: any = undefined): Promise<any> {\r\n        if (params) {\r\n            let keys = Object.keys(params);\r\n            if (keys.length > 0) {\r\n                let c = '?';\r\n                for (let k of keys) {\r\n                    let v = params[k];\r\n                    if (v === undefined) continue;\r\n                    url += c + k + '=' + params[k];\r\n                    c = '&';\r\n                }\r\n            }\r\n        }\r\n        let options = this.buildOptions();\r\n        options.method = 'GET';\r\n        return await this.innerFetchResult(url, options);\r\n    }\r\n\r\n    async post(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'POST';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetchResult(url, options);\r\n    }\r\n\r\n    async put(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'PUT';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetchResult(url, options);\r\n    }\r\n\r\n    async delete(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'DELETE';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetchResult(url, options);\r\n    }\r\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\r\n        let that = this;\r\n        this.startWait();\r\n        let path = url;\r\n        function buildError(err: any) {\r\n            return {\r\n                channel: that,\r\n                url: path,\r\n                options: options,\r\n                resolve: resolve,\r\n                reject: reject,\r\n                error: err,\r\n            }\r\n        }\r\n        try {\r\n            console.log('%s %s', options.method, path);\r\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\r\n            let res = await fetch(encodeURI(path), options);\r\n            if (res.ok === false) {\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                console.log('call error %s', res.statusText);\r\n                throw res.statusText;\r\n            }\r\n            let ct = res.headers.get('content-type');\r\n            if (ct && ct.indexOf('json')>=0) {\r\n                return res.json().then(async retJson => {\r\n                    clearTimeout(timeOutHandler);\r\n                    that.endWait();\r\n                    if (retJson.ok === true) {\r\n                        if (typeof retJson !== 'object') {\r\n                            debugger;\r\n                        }\r\n                        else if (Array.isArray(retJson) === true) {\r\n                            debugger;\r\n                        }\r\n                        /*\r\n                        let json = retJson.res;\r\n                        if (json === undefined) {\r\n                            json = {\r\n                                $uq: retJson.$uq\r\n                            }\r\n                        }\r\n                        */\r\n                        //json.$modify = retJson.$modify;\r\n                        //return resolve(json);\r\n                        return resolve(retJson);\r\n                    }\r\n                    let retError = retJson.error;\r\n                    if (retError === undefined) {\r\n                        await that.showError(buildError('not valid tonva json'));\r\n                    }\r\n                    else {\r\n                        await that.showError(buildError(retError));\r\n                        reject(retError);\r\n                    }\r\n                }).catch(async error => {\r\n                    await that.showError(buildError(error));\r\n                });\r\n            }\r\n            else {\r\n                let text = await res.text();\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                resolve(text);\r\n            }\r\n        }\r\n        catch(error) {\r\n            if (typeof error === 'string') {\r\n                let err = error.toLowerCase();\r\n                if (err.startsWith('unauthorized') === true) {\r\n                    nav.logout();\r\n                    return;\r\n                }\r\n            }\r\n            await this.showError(buildError(error.message));\r\n        };\r\n    }\r\n\r\n    protected abstract async innerFetch(url: string, options: any): Promise<any>;\r\n\r\n    async callFetch(url:string, method:string, body:any):Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = method;\r\n        options.body = body;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(url, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    private buildOptions(): {method:string; headers:Headers; body:any} {\r\n        let headers = this.buildHeaders();\r\n        let options = {\r\n            headers: headers,\r\n            method: undefined,\r\n            body: undefined,\r\n            // cache: 'no-cache',\r\n        };\r\n        return options;\r\n    }\r\n\r\n    protected buildHeaders():Headers {\r\n        let {language, culture} = nav;\r\n        let headers = new Headers();\r\n        //headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\r\n        let lang = language;\r\n        if (culture) lang += '-' + culture;\r\n        headers.append('Accept-Language', lang);\r\n        if (this.apiToken) { \r\n            headers.append('Authorization', this.apiToken); \r\n        }\r\n        return headers;\r\n    }\r\n}\r\n\r\nexport class CenterHttpChannel extends HttpChannel {\r\n    protected async innerFetch(url: string, options: any): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        if (this.apiToken === undefined && isBridged())\r\n            return await bridgeCenterApi(u, options.method, options.body);\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, resolve, reject);\r\n        });\r\n    }\r\n}\r\n\r\nexport class UqHttpChannel extends HttpChannel {\r\n    /*\r\n    private uqForChannel: IUqForChannel;\r\n    constructor(hostUrl: string, apiToken:string, uqForChannel: IUqForChannel, ui?: HttpChannelUI) {\r\n        super(hostUrl, apiToken, ui);\r\n        this.uqForChannel = uqForChannel;\r\n    }\r\n    */\r\n    protected async innerFetch(url: string, options: any): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    /*\r\n    protected buildHeaders():Headers {\r\n        let headers = super.buildHeaders();\r\n        if (this.uqForChannel !== undefined) {\r\n            let {uqVersion} = this.uqForChannel;\r\n            if (uqVersion !== undefined) {\r\n                headers.append('tonva-uq-version', String(uqVersion));\r\n            }\r\n        }\r\n        return headers;\r\n    }\r\n\r\n    protected async showSpecificError(err:string):Promise<boolean> {\r\n        if (err === 'unmatched uq version') {\r\n            if (this.ui !== undefined) {\r\n                let uq:string, uqVersion:number;\r\n                if (this.uqForChannel !== undefined) {\r\n                    uq = this.uqForChannel.uq;\r\n                    uqVersion = this.uqForChannel.uqVersion;\r\n                }\r\n                else {\r\n                    uq = 'undefined uq';\r\n                    uqVersion = 0;\r\n                }\r\n                await this.ui.showUpgradeUq(uq, uqVersion);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    */\r\n}\r\n","import {nav} from '../components/nav';\r\nimport {FetchError} from './fetchError';\r\n\r\nexport interface HttpChannelUI {\r\n    startWait():void;\r\n    endWait():void;\r\n    showError(error:FetchError):Promise<void>;\r\n    showUpgradeUq(uq:string, version:number):Promise<void>;\r\n}\r\n\r\nexport class HttpChannelNavUI implements HttpChannelUI {\r\n    startWait() {\r\n        nav.startWait();\r\n    }\r\n    endWait() {\r\n        nav.endWait();\r\n    }\r\n    async showError(error:FetchError):Promise<void> {\r\n        nav.endWait();\r\n        /*\r\n        if (error.name === 'SyntaxError') {\r\n            error = {\r\n                name: error.name,\r\n                message: error.message,\r\n            }\r\n        }*/\r\n        await nav.onError(error);\r\n    }\r\n    async showUpgradeUq(uq:string, version:number):Promise<void> {\r\n        await nav.showUpgradeUq(uq, version);\r\n    }\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {HttpChannel, CenterHttpChannel, UqHttpChannel} from './httpChannel';\r\nimport {HttpChannelNavUI} from './httpChannelUI';\r\nimport {appUq, logoutUqTokens, buildAppUq} from './appBridge';\r\nimport {ApiBase} from './apiBase';\r\nimport { host } from './host';\r\nimport { nav } from '../components';\r\nimport { LocalCache, LocalMap, env } from '../tool';\r\n\r\nlet channelUIs:{[name:string]: HttpChannel} = {};\r\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\r\n\r\nexport function logoutApis() {\r\n    channelUIs = {};\r\n    channelNoUIs = {};\r\n    logoutUnitxApis();\r\n    logoutUqTokens();\r\n}\r\n\r\ninterface UqLocal {\r\n    user: number;\r\n    unit: number;\r\n    value: any;\r\n    tick?: number;\r\n    isNet?: boolean;\r\n}\r\ninterface UqLocals {\r\n    user: number;\r\n    unit: number;\r\n    uqs: {[uq:string]: UqLocal};\r\n}\r\n/*\r\nconst uqLocalEntities = 'uqLocalEntities';\r\nclass CacheUqLocals {\r\n    private local:UqLocals;\r\n\r\n    async loadAccess(uqApi: UqApi):Promise<any> {\r\n        try {\r\n            let {uqOwner, uqName} = uqApi;\r\n            if (this.local === undefined) {\r\n                let ls = null; // localStorage.getItem(uqLocalEntities);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {user, uqs} = this.local;\r\n                if (user !== loginedUserId || uqs === undefined) {\r\n                    this.local = undefined;\r\n                }\r\n                else {\r\n                    for (let i in uqs) {\r\n                        let ul = uqs[i];\r\n                        ul.isNet = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: undefined,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let ret: any;\r\n            let un = uqOwner+'/'+uqName;\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {value} = uq;\r\n                ret = value;\r\n            }\r\n            if (ret === undefined) {\r\n                ret = await uqApi.__loadAccess();\r\n                //this.saveLocal(un, ret);\r\n            }\r\n            return _.cloneDeep(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqLocalEntities);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private saveLocal(uqName:string, accessValue: any) {\r\n        this.local.uqs[uqName] = {\r\n            value: accessValue,\r\n            isNet: true,\r\n        }\r\n        let str = JSON.stringify(this.local);\r\n        localStorage.setItem(uqLocalEntities, str);\r\n    }\r\n\r\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\r\n        if (this.local === undefined) return false;\r\n        let {uqOwner, uqName} = uqApi;\r\n        let un = uqOwner+'/'+uqName;\r\n        let uq = this.local.uqs[un];\r\n        if (uq === undefined) return false;\r\n        let {isNet, value} = uq;\r\n        if (isNet === true) return true;\r\n        let ret = await uqApi.__loadAccess();\r\n        let isMatch = _.isMatch(value, ret);\r\n        if (isMatch === false) {\r\n            this.saveLocal(un, ret);\r\n            return false;\r\n        }\r\n        uq.isNet = true;\r\n        return true;\r\n    }\r\n}\r\n\r\nconst localUqs = new CacheUqLocals;\r\n*/\r\nexport class UqApi extends ApiBase {\r\n    private access:string[];\r\n    uqOwner: string;\r\n    uqName: string;\r\n    uq: string;\r\n    //uqVersion: number;\r\n\r\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\r\n        super(basePath, showWaiting);\r\n        if (uqName) {\r\n            this.uqOwner = uqOwner;\r\n            this.uqName = uqName;\r\n            this.uq = uqOwner + '/' + uqName;\r\n        }\r\n        this.access = access;\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    //setUqVersion(uqVersion:number) {this.uqVersion = undefined}\r\n\r\n    async init() {\r\n        await buildAppUq(this.uq, this.uqOwner, this.uqName);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channels: {[name:string]: HttpChannel};\r\n        let channelUI: HttpChannelNavUI;\r\n        if (this.showWaiting === true || this.showWaiting === undefined) {\r\n            channels = channelUIs;\r\n            channelUI = new HttpChannelNavUI();\r\n        }\r\n        else {\r\n            channels = channelNoUIs;\r\n        }\r\n        let channel = channels[this.uq];\r\n        if (channel !== undefined) return channel;\r\n        let uqToken = appUq(this.uq); //, this.uqOwner, this.uqName);\r\n        if (!uqToken) {\r\n            debugger;\r\n            await this.init();\r\n            uqToken = appUq(this.uq);\r\n        }\r\n        let {url, token} = uqToken;\r\n        this.token = token;\r\n        channel = new UqHttpChannel(url, token, channelUI);\r\n        return channels[this.uq] = channel;\r\n    }\r\n\r\n    /*async update():Promise<string> {\r\n        return await this.get('update');\r\n    }*/\r\n\r\n    /*\r\n    async __loadAccess():Promise<any> {\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        let ret = await this.get('access', {acc:acc});\r\n        return ret;\r\n    }\r\n    */\r\n    async loadAccess():Promise<any> {\r\n        //return await localUqs.loadAccess(this);\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        let ret = await this.get('access', {acc:acc});\r\n        return ret;\r\n    }\r\n\r\n    /*async loadEntities():Promise<any> {\r\n        return await this.get('entities');\r\n    }*/\r\n\r\n    /*\r\n    async checkAccess():Promise<boolean> {\r\n        return await localUqs.checkAccess(this);\r\n    }\r\n    */\r\n\r\n    async schema(name:string):Promise<any> {\r\n        return await this.get('schema/' + name);\r\n    }\r\n\r\n    async queueModify(start:number, page:number, entities:string) {\r\n        return await this.post('queue-modify', {start:start, page:page, entities:entities});\r\n    }\r\n\r\n    /*async schemas(names:string[]):Promise<any[]> {\r\n        return await this.post('schema', names);\r\n    }*/\r\n\r\n    /*\r\n    async tuidGet(name:string, id:number):Promise<any> {\r\n        return await this.get('tuid/' + name + '/' + id);\r\n    }\r\n\r\n    async tuidGetAll(name:string):Promise<any[]> {\r\n        return await this.get('tuid-all/' + name + '/');\r\n    }\r\n\r\n    async tuidSave(name:string, params:any):Promise<any> {\r\n        return await this.post('tuid/' + name, params);\r\n    }\r\n\r\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret = await this.post('tuids/' + name, {\r\n            arr: arr,\r\n            owner: owner,\r\n            key: key,\r\n            pageStart: pageStart,\r\n            pageSize: pageSize\r\n        });\r\n        return ret;\r\n    }\r\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\r\n    }\r\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\r\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\r\n    }\r\n    async tuidArrSave(name:string, arr:string, owner:number, params:any):Promise<any> {\r\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\r\n    }\r\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\r\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\r\n            id: id,\r\n            $order: order\r\n        });\r\n    }\r\n\r\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\r\n        try {\r\n            let url = 'tuidids/' + name + '/';\r\n            if (arr !== undefined) url += arr;\r\n            else url += '$';\r\n            let ret = await this.post(url, ids);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n    */\r\n    /*async sheetSave(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name, data);\r\n    }*/\r\n\r\n    /*async sheetAction(name:string, data:object) {\r\n        return await this.put('sheet/' + name, data);\r\n    }*/\r\n\r\n    /*async stateSheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/states', data);\r\n    }*/\r\n\r\n    /*async stateSheetCount(name:string):Promise<any> {\r\n        return await this.get('sheet/' + name + '/statecount');\r\n    }*/\r\n\r\n    /*async mySheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/my-sheets', data);\r\n    }*/\r\n\r\n    /*async getSheet(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/get/' + id);\r\n    }*/\r\n\r\n    /*async sheetArchives(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name + '/archives', data);\r\n    }\r\n\r\n    async sheetArchive(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/archive/' + id);\r\n    }*/\r\n\r\n    /*async action(name:string, data:object):Promise<any> {\r\n        return await this.post('action/' + name, data);\r\n    }\r\n\r\n    async actionReturns(name:string, data:object):Promise<any[][]> {\r\n        return await this.post('action/' + name + '/returns', data);\r\n    }\r\n\r\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p:any;\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return await this.post('query-page/' + name, p);\r\n    }\r\n\r\n    async query(name:string, params:any):Promise<any> {\r\n        let ret = await this.post('query/' + name, params);\r\n        return ret;\r\n    }\r\n    */\r\n/*\r\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n\r\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n*/\r\n    /*async user():Promise<any> {\r\n        return await this.get('user');\r\n    }*/\r\n}\r\n\r\nlet channels:{[unitId:number]: HttpChannel} = {};\r\n\r\nexport function logoutUnitxApis() {\r\n    channels = {};\r\n}\r\n\r\nexport class UnitxApi extends UqApi {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super('tv/', undefined, undefined, undefined, true);\r\n        this.unitId = unitId;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channel = channels[this.unitId];\r\n        if (channel !== undefined) return channel;\r\n        return channels[this.unitId] = await this.buildChannel();\r\n    }\r\n\r\n    private async buildChannel():Promise<HttpChannel> {\r\n        let channelUI = new HttpChannelNavUI();\r\n        let centerAppApi = new CenterAppApi('tv/', undefined);\r\n        let ret = await centerAppApi.unitxUq(this.unitId);\r\n        let {token, db, url, urlTest} = ret;\r\n        let realUrl = host.getUrlOrTest(db, url, urlTest);\r\n        this.token = token;\r\n        return new UqHttpChannel(realUrl, token, channelUI);\r\n    }\r\n}\r\n\r\nlet centerHost:string;\r\n\r\nexport function setCenterUrl(url:string) {\r\n    console.log('setCenterUrl %s', url);\r\n    centerHost = url;\r\n    centerToken = undefined;\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nexport let centerToken:string|undefined = undefined;\r\n\r\nlet loginedUserId:number = 0;\r\nexport function setCenterToken(userId:number, t?:string) {\r\n    loginedUserId = userId;\r\n    centerToken = t;\r\n    console.log('setCenterToken %s', t);\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nlet centerChannelUI:HttpChannel;\r\nlet centerChannel:HttpChannel;\r\nfunction getCenterChannelUI():HttpChannel {\r\n    if (centerChannelUI !== undefined) return centerChannelUI;\r\n    return centerChannelUI = new CenterHttpChannel(centerHost, centerToken, new HttpChannelNavUI());\r\n}\r\nfunction getCenterChannel():HttpChannel {\r\n    if (centerChannel !== undefined) return centerChannel;\r\n    return centerChannel = new CenterHttpChannel(centerHost, centerToken);\r\n}\r\n\r\nexport abstract class CenterApiBase extends ApiBase {\r\n    /*\r\n    constructor(path: string, showWaiting?: boolean) {\r\n        super(path, showWaiting);\r\n    }*/\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        return (this.showWaiting === true || this.showWaiting === undefined)?\r\n            getCenterChannelUI():\r\n            getCenterChannel();\r\n    }\r\n}\r\n\r\nconst uqTokensName = 'uqTokens';\r\nexport class UqTokenApi extends CenterApiBase {\r\n    private localMap: LocalMap = env.localDb.map(uqTokensName);\r\n\r\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\r\n        let {uqOwner, uqName} = params;\r\n        let un = uqOwner+'/'+uqName;\r\n        let localCache = this.localMap.child(un);\r\n        try {\r\n            let uqToken:UqLocal = localCache.get();\r\n            if (uqToken !== undefined) {\r\n                let {unit, user} = uqToken;\r\n                if (unit !== params.unit || user !== loginedUserId) {\r\n                    localCache.remove();\r\n                    uqToken = undefined;\r\n                }\r\n            }\r\n            let nowTick = Math.floor(Date.now() / 1000);\r\n            if (uqToken !== undefined) {\r\n                let {tick, value} = uqToken;\r\n                if (value !== undefined && (nowTick - tick) < 24*3600) {\r\n                    return _.clone(value);\r\n                }\r\n            }\r\n            let appUqParams:any = _.clone(params);\r\n            appUqParams.testing = host.testing;\r\n            let ret = await this.get('app-uq', appUqParams);\r\n            if (ret === undefined) {\r\n                let {unit, uqOwner, uqName} = params;\r\n                let err = `center get app-uq(unit=${unit}, '${uqOwner}/${uqName}') - not exists or no unit-service`;\r\n                throw err;\r\n            }\r\n\r\n            uqToken = {\r\n                unit: params.unit,\r\n                user: loginedUserId,\r\n                tick: nowTick,\r\n                value: ret,\r\n            }\r\n            localCache.set(uqToken);\r\n            return _.clone(ret);\r\n        }\r\n        catch (err) {\r\n            localCache.remove();\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\r\n\r\nexport class CallCenterApi extends CenterApiBase {\r\n    directCall(url:string, method:string, body:any):Promise<any> {\r\n        return this.call(url, method, body);\r\n    }\r\n}\r\nexport const callCenterapi = new CallCenterApi('', undefined);\r\n\r\nexport interface UqAppData {\r\n    appName: string;\r\n    appOwner: string;\r\n    id: number;\r\n    version: string;        // AppUI version\r\n    uqs: UqData[];\r\n}\r\n\r\nexport interface UqData {\r\n    id: number;\r\n    uqOwner: string;\r\n    uqName: string;\r\n    access: string;\r\n    newVersion: boolean;\r\n}\r\n\r\nexport interface UqServiceData {\r\n    id: number;\r\n    db: string;\r\n    url: string;\r\n    urlTest: string;\r\n    token: string;\r\n}\r\n\r\nconst appUqsName = 'appUqs';\r\n\r\nexport class CenterAppApi extends CenterApiBase {\r\n    private local: LocalCache = env.localDb.item(appUqsName);\r\n    //private cachedUqs: UqAppData;\r\n    async uqs(appOwner:string, appName:string):Promise<UqAppData> {\r\n        let ret:UqAppData;\r\n        let appUqs = this.local.get();\r\n        if (appUqs) {\r\n            let {appOwner:rAppOwner, appName:rAppName} = appUqs;\r\n            if (appOwner === rAppOwner && appName === rAppName) ret = appUqs;\r\n        }\r\n        if (ret === undefined) {\r\n            ret = await this.uqsPure(appOwner, appName);\r\n            ret.appName = appName;\r\n            ret.appOwner = appOwner;\r\n            //localStorage.setItem(JSON.stringify(obj));\r\n            this.local.set(ret);\r\n        }\r\n        //return this.cachedUqs = _.cloneDeep(ret);\r\n        return ret;\r\n    }\r\n    private async uqsPure(appOwner:string, appName:string):Promise<UqAppData> {\r\n        return await this.get('tie/app-uqs', {appOwner:appOwner, appName:appName});\r\n    }\r\n    private async isOkCheckUqs(appOwner:string, appName:string):Promise<boolean> {\r\n        let ret = await this.uqsPure(appOwner, appName);\r\n        let {id:cachedId, uqs:cachedUqs} = this.local.get(); //.cachedUqs;\r\n        let {id:retId, uqs:retUqs} = ret;\r\n        if (cachedId !== retId) return false;\r\n        if (cachedUqs.length !== retUqs.length) return false;\r\n        let len = cachedUqs.length;\r\n        for (let i=0; i<len; i++) {\r\n            if (_.isMatch(cachedUqs[i], retUqs[i]) === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    async checkUqs(appOwner:string, appName:string):Promise<boolean> {\r\n        let ret = await this.isOkCheckUqs(appOwner, appName);\r\n        if (ret === false) {\r\n            this.local.remove();\r\n            nav.start();\r\n        }\r\n        return ret;\r\n    }\r\n    async unitxUq(unit:number):Promise<UqServiceData> {\r\n        return await this.get('tie/unitx-uq', {unit:unit});\r\n    }\r\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\r\n        return await this.post('tie/change-password', param);\r\n    }\r\n}\r\n\r\nexport async function loadAppUqs(appOwner:string, appName:string): Promise<UqAppData> {\r\n    let centerAppApi = new CenterAppApi('tv/', undefined);\r\n    //let unit = meInFrame.unit;\r\n    let ret = await centerAppApi.uqs(appOwner, appName);\r\n    await centerAppApi.checkUqs(appOwner, appName);\r\n    /*\r\n    .then(v => {\r\n        if (v === false) {\r\n            localStorage.removeItem(appUqs);\r\n            nav.start();\r\n        }\r\n    });\r\n    */\r\n    return ret;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Controller } from '../../components';\r\n\r\nexport abstract class Link {\r\n    abstract onClick: () => void;\r\n    abstract render(className?:string):JSX.Element;\r\n}\r\n\r\nexport class CLink extends Link {\r\n    private controller: Controller;\r\n    protected icon:string|JSX.Element;\r\n    protected label:string|JSX.Element;\r\n\r\n    constructor(controller:Controller) {\r\n        super();\r\n        this.controller = controller;\r\n        this.icon = controller.icon;\r\n        this.label = controller.label;\r\n    }\r\n\r\n    onClick = async () => {\r\n        await this.controller.start();\r\n    }\r\n\r\n    render(className?:string) {\r\n        return <div\r\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\r\n            onClick={this.onClick}>\r\n            {this.icon} &nbsp; {this.label}\r\n        </div>;\r\n        //return React.createElement(this.view, className);\r\n    }\r\n}\r\n","export * from './cLink';\r\n","import { UqApi } from '../net';\r\nimport { LocalCache } from '../tool';\r\nimport { UqMan, Field, ArrFields, FieldMap } from './uqMan';\r\nimport { Tuid } from './tuid';\r\n//import { EntityCache } from './caches';\r\n\r\nconst tab = '\\t';\r\nconst ln = '\\n';\r\n\r\nexport abstract class Entity {\r\n    private jName: string;\r\n    schema: any;\r\n    ver: number = 0;\r\n    sys?: boolean;\r\n    readonly uq: UqMan;\r\n    readonly name: string;\r\n    readonly typeId: number;\r\n    readonly cache: LocalCache;\r\n    readonly uqApi: UqApi;\r\n    abstract get typeName(): string;\r\n    get sName():string {return this.jName || this.name}\r\n    fields: Field[];\r\n    arrFields: ArrFields[];\r\n    returns: ArrFields[];\r\n\r\n    constructor(uq:UqMan, name:string, typeId:number) {\r\n        this.uq = uq;\r\n        this.name = name;\r\n        this.typeId = typeId;\r\n        this.sys = this.name.indexOf('$') >= 0;\r\n        this.cache = this.uq.localMap.item(this.name); // new EntityCache(this);\r\n        this.uqApi = this.uq.uqApi;\r\n    }\r\n\r\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\r\n\r\n    //getApiFrom() {return this.entities.uqApi;}\r\n\r\n    private fieldMaps: {[arr:string]: FieldMap} = {};\r\n    fieldMap(arr?:string): FieldMap {\r\n        if (arr === undefined) arr = '$';\r\n        let ret = this.fieldMaps[arr];\r\n        if (ret === undefined) {\r\n            let fields:Field[];\r\n            if (arr === '$') fields = this.fields;\r\n            else if (this.arrFields !== undefined) {\r\n                let arrFields = this.arrFields.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            else if (this.returns !== undefined) {\r\n                let arrFields = this.returns.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            if (fields === undefined) return {};\r\n            ret = {};\r\n            for (let f of fields) ret[f.name] = f;\r\n            this.fieldMaps[arr] = ret;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public async loadSchema():Promise<void> {\r\n        if (this.schema !== undefined) return;\r\n        let schema = this.cache.get();\r\n        if (!schema) {\r\n            schema = await this.uq.loadEntitySchema(this.name);\r\n        }\r\n        this.setSchema(schema);\r\n        this.buildFieldsTuid();\r\n    }\r\n\r\n    // 如果要在setSchema里面保存cache，必须先调用clearSchema\r\n    public clearSchema() {\r\n        this.schema = undefined;\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        if (schema === undefined) return;\r\n        let {name, version} = schema;\r\n        this.ver = version || 0;\r\n        if (name !== this.name) this.jName = name;\r\n        //if (this.schema === undefined) \r\n        this.cache.set(schema);\r\n        this.schema = schema;\r\n        //this.buildFieldsTuid();\r\n    }\r\n\r\n    public buildFieldsTuid() {\r\n        let {fields, arrs, returns} = this.schema;\r\n        this.uq.buildFieldTuid(this.fields = fields);\r\n        this.uq.buildArrFieldsTuid(this.arrFields = arrs, fields);\r\n        this.uq.buildArrFieldsTuid(this.returns = returns, fields);\r\n    }\r\n\r\n    schemaStringify():string {\r\n        return JSON.stringify(this.schema, (key:string, value:any) => {\r\n            if (key === '_tuid') return undefined;\r\n            return value;\r\n        }, 4);\r\n    }\r\n\r\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\r\n        if (this.schema === undefined) return;\r\n        let {fields, arrs} = this.schema;\r\n        let entities = this.uq;\r\n        function getTuid(fn:string, fieldArr:Field[]) {\r\n            if (fieldArr === undefined) return;\r\n            let f = fieldArr.find(v => v.name === fn);\r\n            if (f === undefined) return;\r\n            return entities.getTuid(f.tuid);\r\n        }\r\n        let fn = fieldName.toLowerCase();\r\n        if (arrName === undefined) return getTuid(fn, fields);\r\n        if (arrs === undefined) return;\r\n        let an = arrName.toLowerCase();\r\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\r\n        if (arr === undefined) return;\r\n        return getTuid(fn, arr.fields);\r\n    }\r\n\r\n    buildParams(params:any):any {\r\n        let result = {};\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\r\n        let arrs = this.arrFields;\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                let {name, fields} = arr;\r\n                let paramsArr:any[] = params[name];\r\n                if (paramsArr === undefined) continue;\r\n                let arrResult = [];\r\n                result[name] = arrResult;\r\n                for (let pa of params) {\r\n                    let rowResult = {};\r\n                    this.buildFieldsParams(rowResult, fields, pa);\r\n                    arrResult.push(rowResult);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\r\n        for (let field of fields) {\r\n            let {name, type} = field;            \r\n            let d = params[name];\r\n            let val:any;\r\n            if (type === 'datetime') {\r\n                val = this.buildDateTimeParam(d);\r\n            }\r\n            else {\r\n                switch (typeof d) {\r\n                    default: val = d; break;\r\n                    case 'object':\r\n                        let tuid = field._tuid;\r\n                        if (tuid === undefined) val = d.id;\r\n                        else val = tuid.getIdFromObj(d);\r\n                        break;\r\n                }\r\n            }\r\n            result[name] = val;\r\n        }\r\n    }\r\n\r\n    buildDateTimeParam(val:any) {\r\n        let dt: Date;\r\n        switch (typeof val) {\r\n            default: debugger; throw new Error('escape datetime field in pack data error: value=' + val);\r\n            case 'undefined': return undefined;\r\n            case 'object': dt = (val as Date); break;\r\n            case 'string':\r\n            case 'number': dt = new Date(val); break;\r\n        }\r\n        return Math.floor(dt.getTime()/1000);\r\n    }\r\n\r\n    buildDateParam(val:any) {\r\n        let dt: Date;\r\n        switch (typeof val) {\r\n            default: debugger; throw new Error('escape datetime field in pack data error: value=' + val);\r\n            case 'undefined': return undefined;\r\n            case 'string': return val;\r\n            case 'object': dt = (val as Date); break;\r\n            case 'number': dt = new Date(val); break;\r\n        }\r\n        let ret = dt.toISOString();\r\n        let p = ret.indexOf('T');\r\n        return p>0? ret.substr(0, p) : ret;\r\n}\r\n\r\n    pack(data:any):string {\r\n        let ret:string[] = [];\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.packRow(ret, fields, data);\r\n        let arrs = this.arrFields; \r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                this.packArr(ret, arr.fields, data[arr.name]);\r\n            }\r\n        }\r\n        return ret.join('');\r\n    }\r\n\r\n    private escape(row:any, field:Field):any {\r\n        let d = row[field.name];\r\n        switch (field.type) {\r\n            case 'datetime':\r\n                return this.buildDateTimeParam(d);\r\n            default:\r\n                switch (typeof d) {\r\n                    default: return d;\r\n                    case 'object':\r\n                        let tuid = field._tuid;\r\n                        if (tuid === undefined) return d.id;\r\n                        return tuid.getIdFromObj(d);\r\n                    case 'string':\r\n                        let len = d.length;\r\n                        let r = '', p = 0;\r\n                        for (let i=0;i<len;i++) {\r\n                            let c = d.charCodeAt(i);\r\n                            switch(c) {\r\n                                case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\r\n                                case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\r\n                            }\r\n                        }\r\n                        return r + d.substring(p);\r\n                    case 'undefined': return '';\r\n                }\r\n        }\r\n    }\r\n\r\n    private packRow(result:string[], fields:Field[], data:any) {\r\n        let len = fields.length;\r\n        if (len === 0) return;\r\n        let ret = '';\r\n        ret += this.escape(data, fields[0]);\r\n        for (let i=1;i<len;i++) {\r\n            let f = fields[i];\r\n            ret += tab + this.escape(data, f);\r\n        }\r\n        result.push(ret + ln);\r\n    }\r\n\r\n    private packArr(result:string[], fields:Field[], data:any[]) {\r\n        if (data !== undefined) {\r\n            for (let row of data) {\r\n                this.packRow(result, fields, row);\r\n            }\r\n        }\r\n        result.push(ln);\r\n    }\r\n    protected cacheFieldsInValue(values:any, fields:Field[]) {\r\n        for (let f of fields as Field[]) {\r\n            let {name, _tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            let id = values[name];\r\n            //_tuid.useId(id);\r\n            values[name] = _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    protected unpackTuidIdsOfFields(values:string[], fields: Field[]):any[] {\r\n        if (fields === undefined) return values as any[];\r\n        //if (this.fields === undefined) return values as any[];\r\n        let ret:any[] = []\r\n        for (let ln of values) {\r\n            if (!ln) continue;\r\n            let len = ln.length;\r\n            let p = 0;\r\n            while (p<len) {\r\n                let ch = ln.charCodeAt(p);\r\n                if (ch === 10) {\r\n                    ++p;\r\n                    break;\r\n                }\r\n                let row = {};\r\n                p = this.unpackRow(row, fields, ln, p);\r\n                ret.push(row);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    unpackSheet(data:string):any {\r\n        let ret = {} as any; //new this.newMain();\r\n        //if (schema === undefined || data === undefined) return;\r\n        let fields = this.fields;\r\n        let p = 0;\r\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    unpackReturns(data:string):any {\r\n        if (data === undefined) debugger;\r\n        let ret = {} as any;\r\n        //if (schema === undefined || data === undefined) return;\r\n        //let fields = schema.fields;\r\n        let p = 0;\r\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\r\n        let arrs = this.returns; //schema['returns'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                //let creater = this.newRet[arr.name];\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    protected unpackRow(ret:any, fields:Field[], data:string, p:number):number {\r\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\r\n        for (;p<len;p++) {\r\n            ch0 = ch;\r\n            ch = data.charCodeAt(p);\r\n            if (ch === 9) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                c = p+1;\r\n                ++i;\r\n                if (i>=fLen) {\r\n                    p = data.indexOf('\\n', c);\r\n                    if (p >= 0) ++p;\r\n                    else p = len;\r\n                    return p;\r\n                }\r\n            }\r\n            else if (ch === 10) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                ++p;\r\n                ++i;\r\n                return p;\r\n            }\r\n        }\r\n        let f = fields[i];\r\n        let {name} = f;\r\n        if (ch0 !== 8) {\r\n            let v = data.substring(c);\r\n            ret[name] = this.to(ret, v, f);\r\n        }\r\n        return len;\r\n    }\r\n\r\n    private to(ret:any, v:string, f:Field):any {\r\n        switch (f.type) {\r\n            default: return v;\r\n            case 'datetime':\r\n            case 'time':\r\n                let n = Number(v);\r\n                let date = isNaN(n) === true? new Date(v) : new Date(n*1000);\r\n                return date;\r\n            case 'date':\r\n                let parts = v.split('-');\r\n                return new Date(Number(parts[0]), Number(parts[1])-1, Number(parts[2]));\r\n            case 'tinyint':\r\n            case 'smallint':\r\n            case 'int':\r\n            case 'bigint':\r\n            case 'dec':\r\n                return Number(v);\r\n            case 'id':\r\n                let id = Number(v);\r\n                let {_tuid} = f;\r\n                if (_tuid === undefined) return id;\r\n                return _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\r\n        let vals:any[] = [], len = data.length;\r\n        let {name, fields} = arr;\r\n        while (p<len) {\r\n            let ch = data.charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let val = {} as any; //new creater();\r\n            vals.push(val);\r\n            p = this.unpackRow(val, fields, data, p);\r\n        }\r\n        ret[name] = vals;\r\n        return p;\r\n    }\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","\r\nlet subAppWindow:Window;\r\nfunction postWsToSubApp(msg:any) {\r\n    if (subAppWindow === undefined) return;\r\n    subAppWindow.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport function setSubAppWindow(win:Window) {\r\n    subAppWindow = win;\r\n}\r\n\r\nexport function postWsToTop(msg:any) {\r\n    window.top.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport abstract class WsBase {\r\n    wsBaseId:string;\r\n    private handlerSeed = 1;\r\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\r\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\r\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.anyHandlers[seed] = handler;\r\n        return seed;\r\n    }\r\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.msgHandlers[seed] = {type:type, handler: handler};\r\n        return seed;\r\n    }\r\n    endWsReceive(handlerId:number) {\r\n        delete this.anyHandlers[handlerId];\r\n        delete this.msgHandlers[handlerId];\r\n    }\r\n    async receive(msg:any) {\r\n        let {$type} = msg;\r\n        for (let i in this.anyHandlers) {\r\n            await this.anyHandlers[i](msg);\r\n        }\r\n        for (let i in this.msgHandlers) {\r\n            let {type, handler} = this.msgHandlers[i];\r\n            if (type !== $type) continue;\r\n            await handler(msg);\r\n        }\r\n    }\r\n}\r\n\r\nlet wsBaseSeed = 1;\r\nexport class WsBridge extends WsBase {\r\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\r\n}\r\n\r\nexport const wsBridge = new WsBridge();\r\n\r\nexport class WSChannel extends WsBase {\r\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\r\n    static centerToken:string;\r\n    private wsHost: string;\r\n    private token: string;\r\n    private ws: WebSocket;\r\n\r\n    constructor(wsHost: string, token: string) {\r\n        super();\r\n        this.wsHost = wsHost;\r\n        this.token = token;\r\n    }\r\n\r\n    static setCenterToken(token?: string) {\r\n        WSChannel.centerToken = token;\r\n    }\r\n    \r\n    connect():Promise<void> {\r\n        //this.wsHost = wsHost;\r\n        //this.token = token || WSChannel.centerToken;\r\n        if (this.ws !== undefined) return;\r\n        let that = this;\r\n        return new Promise((resolve, reject) => {\r\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\r\n            console.log('connect webSocket %s', this.wsHost);\r\n            ws.onopen = (ev) => {\r\n                console.log('webSocket connected %s', this.wsHost);\r\n                that.ws = ws;\r\n                resolve();\r\n            };\r\n            ws.onerror = (ev) => {\r\n                reject('webSocket can\\'t open!');\r\n            };\r\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\r\n            ws.onclose = (ev) => {\r\n                that.ws = undefined;\r\n                console.log('webSocket closed!');\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        if (this.ws !== undefined) {\r\n            this.ws.close();\r\n            this.ws = undefined;\r\n        }\r\n    }\r\n    private async wsMessage(event:any):Promise<void> {\r\n        try {\r\n            console.log('websocket message: %s', event.data);\r\n            let msg = JSON.parse(event.data);\r\n            postWsToSubApp(msg);\r\n            await this.receive(msg);\r\n        }\r\n        catch (err) {\r\n            console.log('ws msg error: ', err);\r\n        }\r\n    }\r\n    sendWs(msg:any) {\r\n        let netThis = this;\r\n        this.connect().then(() => {\r\n            netThis.ws.send(msg);\r\n        });\r\n    }\r\n}\r\n","export * from './uqMan';\r\nexport * from './entity';\r\nexport * from './action';\r\nexport * from './query';\r\nexport * from './sheet';\r\nexport * from './tuid';\r\nexport * from './book';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './uqsMan';\r\n","//import _ from 'lodash';\r\nimport {observable, IObservableArray} from 'mobx';\r\nimport { PageItems } from '../tool';\r\nimport {Field, ArrFields} from './uqMan';\r\nimport {Entity} from './entity';\r\nimport { QueryQueryCaller, QueryPageCaller } from './caller';\r\n\r\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\r\n\r\nexport class QueryPager<T> extends PageItems<T> {\r\n    private query: Query;\r\n    constructor(query: Query, pageSize?: number, firstSize?: number) {\r\n        super();\r\n        this.query = query;\r\n        if (pageSize !== undefined) this.pageSize = pageSize;\r\n        if (firstSize !== undefined) this.firstSize = firstSize;\r\n    }\r\n\r\n    protected async onLoad() {\r\n        let {schema} = this.query;\r\n        if (schema === undefined) await this.query.loadSchema();\r\n    }\r\n\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<T[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.query.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:T) {\r\n        let {schema} = this.query;\r\n        if (schema === undefined) return;\r\n        let $page = (schema.returns as any[]).find(v => v.name === '$page');\r\n        if ($page === undefined) return;\r\n        let {order} = $page;\r\n        if (order === undefined) return;\r\n        let {field, type, asc} = order;\r\n        let start:any;\r\n        if (item !== undefined) start = item[field];\r\n        if (asc === false) {\r\n            this.appendPosition = 'head';\r\n            switch (type) {\r\n                default:\r\n                case 'tinyint':\r\n                case 'smallint':\r\n                case 'int':\r\n                case 'bigint':\r\n                case 'dec': start = 999999999999; break;\r\n                case 'date':\r\n                case 'datetime': start = undefined; break;          // 会自动使用现在\r\n                case 'char': start = ''; break;\r\n            }\r\n        }\r\n        else {\r\n            this.appendPosition = 'tail';\r\n            switch (type) {\r\n                default:\r\n                case 'tinyint':\r\n                case 'smallint':\r\n                case 'int':\r\n                case 'bigint':\r\n                case 'dec': start = 0; break;\r\n                case 'date':\r\n                case 'datetime': start = '1970-1-1'; break;\r\n                case 'char': start = ''; break;\r\n            }\r\n        }\r\n        this.pageStart = start;\r\n    }\r\n}\r\n\r\nexport class Query extends Entity {\r\n    get typeName(): string { return 'query';}\r\n    private pageStart: any;\r\n    private pageSize:number;\r\n    private params:any;\r\n    private more: boolean;\r\n    private startField: Field;\r\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\r\n    returns: ArrFields[];\r\n    isPaged: boolean;\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {returns} = schema;\r\n        //this.returns = returns;\r\n        this.isPaged = returns && (returns as any[]).find(v => v.name === '$page') !== undefined;\r\n    }\r\n\r\n    resetPage(size:number, params:any) {\r\n        this.pageStart = undefined;\r\n        this.pageSize = size;\r\n        this.params = params;\r\n        this.more = false;\r\n        this.list = undefined;\r\n    }\r\n    get hasMore() {return this.more;}\r\n    async loadPage():Promise<void> {\r\n        if (this.pageSize === undefined) {\r\n            throw new Error('call resetPage(size:number, params:any) first');\r\n        }\r\n        let pageStart:any;\r\n        if (this.pageStart !== undefined) {\r\n            switch (this.startField.type) {\r\n                default: pageStart = this.pageStart; break;\r\n                case 'date':\r\n                case 'time':\r\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\r\n            }\r\n        }\r\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\r\n        let data = await this.unpackReturns(res);\r\n        let page = data['$page'] as any[];\r\n        */\r\n        this.list = observable.array([], {deep: false});\r\n        if (page !== undefined) {\r\n            if (page.length > this.pageSize) {\r\n                this.more = true;\r\n                page.pop();\r\n                let ret = this.returns.find(r => r.name === '$page');\r\n                this.startField = ret.fields[0];\r\n                this.pageStart = page[page.length-1][this.startField.name];\r\n            }\r\n            else {\r\n                this.more = false;\r\n            }\r\n            this.list.push(...page);\r\n        }\r\n        //this.loaded = true;\r\n    }\r\n\r\n    protected pageCaller(params: any): QueryPageCaller {\r\n        return new QueryPageCaller(this, params);\r\n    }\r\n\r\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.uqApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\r\n        */\r\n        let p = {pageStart:pageStart, pageSize:pageSize+1, params:params};\r\n        let res = await this.pageCaller(p).request();\r\n        //let data = this.unpackReturns(res);\r\n        //return data.$page;// as any[];\r\n        return res;\r\n    }\r\n    protected queryCaller(params: any): QueryQueryCaller {\r\n        return new QueryQueryCaller(this, params);\r\n    }\r\n    async query(params:any):Promise<any> {\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.uqApi.query(this.name, this.buildParams(params));\r\n        */\r\n        let res = await this.queryCaller(params).request();\r\n        //let data = this.unpackReturns(res);\r\n        //return data;\r\n        return res;\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","//import * as React from 'react';\r\nimport { ItemSchema, UiItem } from '../schema';\r\nimport { nav } from '../nav';\r\n//import { Page } from '../page';\r\n//import { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { FieldRule } from '../form/rules';\r\n\r\nexport abstract class ItemEdit {\r\n    protected name: string;\r\n    protected itemSchema: ItemSchema;\r\n    protected uiItem:UiItem;\r\n    protected value: any;\r\n    protected label: string;\r\n\r\n    @observable protected error: string;\r\n    @observable protected isChanged: boolean = false;\r\n    protected newValue: any;\r\n\r\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\r\n        this.itemSchema = itemSchema;\r\n        this.uiItem = uiItem\r\n        this.value = value;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.label = label;\r\n    }\r\n    async start():Promise<any> {\r\n        return await this.internalStart();\r\n    }\r\n\r\n    protected abstract internalStart():Promise<any>;\r\n\r\n    async end():Promise<any> {\r\n        await this.internalEnd()\r\n    }\r\n\r\n    protected async internalEnd():Promise<void> {nav.pop()}\r\n\r\n    protected verifyValue() {\r\n        if (this.uiItem === undefined) return;\r\n        let {rules} = this.uiItem;\r\n        if (rules === undefined) return;\r\n        let nv = this.newValue;\r\n        function verifyRule(rule:FieldRule, value: any):string {\r\n            let error = rule(nv);\r\n            if (error !== undefined) {\r\n                if (typeof error !== 'object')\r\n                    return error;\r\n                else\r\n                    return JSON.stringify(error);\r\n            }\r\n        }\r\n        if (Array.isArray(rules)) {\r\n            for (let rule of rules) {\r\n                let error = verifyRule(rule as FieldRule, nv);\r\n                if (error !== undefined) {\r\n                    this.error = error;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.error = verifyRule(rules as FieldRule, nv);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav } from './nav';\r\n\r\nexport interface ImageProps {\r\n    src: string;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    altImage?: string;\r\n}\r\n\r\nexport function Image(props: ImageProps) {\r\n    let {className, style, src, altImage} = props;\r\n    if (!src) {\r\n        return <div className={classNames(className, 'image-none')} style={style}>\r\n            <i className=\"fa fa-file-o\" />\r\n        </div>;\r\n    }\r\n    if (src.startsWith(':') === true) {\r\n        src = nav.resUrl + src.substr(1);\r\n    }\r\n    return <img src={src} className={className} alt=\"img\"\r\n        style={style}\r\n        onError={evt=>{\r\n            if (altImage) evt.currentTarget.src=altImage;\r\n            else evt.currentTarget.src = 'https://tv.jkchemical.com/imgs/0001.png';\r\n        }} />;\r\n}\r\n","import jwtDecode from 'jwt-decode';\r\n\r\nexport interface Unit {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface Guest {\r\n    id: number;             // id = 0\r\n    guest: number;\r\n    token: string;\r\n}\r\n\r\nexport interface User extends Guest {\r\n    id: number;\r\n    name: string;\r\n    nick?: string;\r\n    icon?: string;\r\n}\r\n\r\n/*\r\nexport class UserInNav {\r\n    private user: User;\r\n    constructor(user: User) {\r\n        this.user = user;\r\n    }\r\n    get id():number {return this.user.id}\r\n    get name(): string {return this.user.name}\r\n    get nick(): string {return this.user.nick}\r\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\r\n    get guest(): number {return this.user.guest}\r\n    get token(): string {return this.user.token}\r\n}\r\n*/\r\nexport function decodeUserToken(token: string): User {\r\n    let ret:any = jwtDecode(token);\r\n    let user: User = {\r\n        id: ret.id,\r\n        name: ret.name,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return user;\r\n}\r\n\r\nexport function decodeGuestToken(token: string): Guest {\r\n    let ret:any = jwtDecode(token);\r\n    let guest: Guest = {\r\n        id: 0,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return guest;\r\n}\r\n","import { env } from '../tool';\r\n\r\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\r\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\r\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\r\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugBuilderHost = 'localhost:3009';\r\ninterface HostValue {\r\n    value: string;\r\n    local: boolean;\r\n}\r\nconst hosts:{[name:string]:HostValue} = {\r\n    centerhost: {\r\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \r\n        local: false\r\n    },\r\n    reshost: {\r\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\r\n        local: false\r\n    },\r\n    uqhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    unitxhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    \"uq-build\": {\r\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \r\n        local: false\r\n    }\r\n}\r\n\r\nfunction urlFromHost(host:string):string {\r\n    if (host.startsWith('https://') === true) {\r\n        if (host.endsWith('/')) return host;\r\n        return host + '/';\r\n    }\r\n    return `http://${host}/`;\r\n}\r\n\r\nfunction centerUrlFromHost(host:string):string {\r\n    return urlFromHost(host);\r\n}\r\nfunction centerWsFromHost(host:string) {\r\n    let https = 'https://';\r\n    if (host.startsWith(https) === true) {\r\n        host = host.substr(https.length);\r\n        if (host.endsWith('/') === true) host = host.substr(0, host.length-1);\r\n        return 'wss://' + host + '/tv/';\r\n    }\r\n    return `ws://${host}/tv/`\r\n}\r\nexport function resUrlFromHost(host:string) {\r\n    let url = urlFromHost(host);\r\n    return url + 'res/';\r\n}\r\n\r\nconst fetchOptions = {\r\n    method: \"GET\",\r\n    mode: \"no-cors\", // no-cors, cors, *same-origin\r\n    headers: {\r\n        \"Content-Type\": \"text/plain\"\r\n    },\r\n};\r\n\r\nclass Host {\r\n    testing: boolean;\r\n    url: string;\r\n    ws: string;\r\n    resHost: string;\r\n\r\n    async start(testing:boolean) {\r\n        this.testing = testing;\r\n        if (env.isDevelopment === true) {\r\n            await this.tryLocal();\r\n        }\r\n        let host = this.getCenterHost();\r\n        this.url = centerUrlFromHost(host);\r\n        this.ws = centerWsFromHost(host);\r\n        this.resHost = this.getResHost();\r\n    }\r\n\r\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\r\n    private async tryLocal() {\r\n        let promises:PromiseLike<any>[] = [];\r\n        let hostArr:string[] = [];\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            let {value} = hostValue;\r\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\r\n        }\r\n\r\n        for (let host of hostArr) {\r\n            let fetchUrl = this.debugHostUrl(host);\r\n            promises.push(localCheck(fetchUrl));\r\n        }\r\n        let results = await Promise.all(promises);\r\n        let len = hostArr.length;\r\n        for (let i=0; i<len; i++) {\r\n            let local = results[i];\r\n            let host = hostArr[i];\r\n            for (let j in hosts) {\r\n                let hostValue = hosts[j];\r\n                if (hostValue.value === host) {\r\n                    hostValue.local = local;\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        let p = 0;\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            hostValue.local = results[p];\r\n            ++p;\r\n        }\r\n        */\r\n    }\r\n\r\n    private getCenterHost():string {\r\n        let {value, local} = hosts.centerhost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (env.isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return centerHost;\r\n    }\r\n\r\n    private getResHost():string {\r\n        let {value, local} = hosts.reshost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (env.isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return resHost;\r\n    }\r\n\r\n    getUrlOrDebug(url:string, debugHost:string = 'uqhost'):string {\r\n        if (env.isDevelopment === false) return url;\r\n        let host = hosts[debugHost];\r\n        if (host === undefined) return url;\r\n        let {value, local} = host;\r\n        if (local === false) return url;\r\n        return `http://${value}/`;\r\n    }\r\n    getUrlOrTest(db:string, url:string, urlTest:string):string {\r\n        let path:string;\r\n        if (this.testing === true) {\r\n            if (urlTest !== '-') url = urlTest;\r\n            path = 'uq/test/' + db + '/';\r\n        }\r\n        else {\r\n            path = 'uq/prod/' + db + '/';\r\n        }\r\n        url = this.getUrlOrDebug(url);\r\n        return url + path;\r\n    }\r\n\r\n    async localCheck(urlDebug: string):Promise<boolean> {\r\n        return await localCheck(urlDebug);\r\n    }\r\n}\r\n\r\nexport const host:Host = new Host();\r\n\r\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\r\n// 网上找了上面的fetch timeout代码。\r\n// 尽管timeout了，fetch仍然继续，没有cancel\r\n\r\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\r\n//const timeout = 2000;\r\nconst timeout = 200;\r\n\r\nfunction fetchLocalCheck(url:string):Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url, fetchOptions as any)\r\n      .then(v => {\r\n          v.text().then(resolve).catch(reject);\r\n      })\r\n      .catch(reject);\r\n      const e = new Error(\"Connection timed out\");\r\n      setTimeout(reject, timeout, e);\r\n    });\r\n}\r\n\r\nasync function localCheck(url:string):Promise<boolean> {\r\n    try {\r\n        await fetchLocalCheck(url);\r\n        return true;\r\n    }\r\n    catch (err) {\r\n        return false;\r\n    }\r\n}\r\n\r\n/*\r\nexport interface IUqForChannel {\r\n    uq: string;\r\n    uqVersion: number;\r\n}\r\n*/","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Tuid, BoxId } from '../../uq';\r\nimport { PureJSONContent } from '../tools';\r\n\r\nexport class TuidWithUIRes {\r\n    readonly tuid: Tuid;\r\n    readonly ui: any;\r\n    readonly res: any;\r\n    constructor(tuid:Tuid, ui:any, res:any) {\r\n        this.tuid = tuid;\r\n        this.ui = ui;\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class ReactBoxId implements BoxId {\r\n    readonly id: number;\r\n    protected tuidUR: TuidWithUIRes;\r\n    readonly isUndefined:boolean;\r\n    constructor(tuidUR: TuidWithUIRes, id: number) {\r\n        this.tuidUR = tuidUR;\r\n        this.id = id;\r\n        this.isUndefined = (this.tuidUR.tuid === undefined);\r\n    }\r\n\r\n    get obj():any {\r\n        return this.tuidUR.tuid.valueFromId(this.id);\r\n    }\r\n\r\n    render(ui:TvTemplet, x:any):JSX.Element {\r\n        if (this.id === undefined || this.id === null) return;\r\n        let boxName = this.boxName; // this.tuid.name;\r\n        let val = this.obj; // this.tuid.valueFromId(this.id);\r\n        if (this.isUndefined === true) {\r\n            if (ui !== undefined) return ui(val, x);\r\n            return PureJSONContent(val, x);\r\n        }\r\n        switch (typeof val) {\r\n            case 'undefined':\r\n                return <del className=\"text-black-50\">{boxName} undefined</del>;\r\n            case 'number':\r\n                return <del className=\"text-black-50\">{boxName} {this.id}</del>;\r\n        }\r\n        if (ui === undefined) {\r\n            ui = this.tuidUR.ui;\r\n        }\r\n        if (ui !== undefined) {\r\n            if (typeof ui !== 'function') {\r\n                ui = (ui as any).content;\r\n            }\r\n            if (ui !== undefined) {\r\n                let ret = ui(val, this.tuidUR.res);\r\n                if (ret !== undefined) return ret;\r\n                return <del className=\"text-danger\">{boxName} {this.id}</del>;\r\n            }\r\n        }\r\n\r\n        return PureJSONContent(val);\r\n    }\r\n\r\n    get boxName():string {return this.tuidUR.tuid.name}\r\n    // ui(): TvTemplet {return this.tuid.ui}\r\n    // res(): any {return this.tuid.res}\r\n\r\n    async assure(): Promise<void> {\r\n        await this.tuidUR.tuid.assureBox(this.id);\r\n    }\r\n}\r\n\r\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\r\n    let logContent:any;\r\n    let boxId:ReactBoxId = bi as ReactBoxId;\r\n    switch(typeof bi) {\r\n        case 'undefined': logContent = <>boxId undefined</>; break;\r\n        case 'number': logContent = <>id:{bi}</>; break;\r\n        default:\r\n            if (typeof boxId.render !== 'function') {\r\n                if (ui === undefined) {\r\n                    logContent = PureJSONContent(bi, x);\r\n                }\r\n                else {\r\n                    return ui(bi, x);\r\n                }\r\n            }\r\n            break;\r\n    }\r\n    if (logContent !== undefined) {\r\n        return <del className=\"text-danger\">{logContent}</del>;\r\n    }\r\n    return boxId.render(ui, x);\r\n}\r\n\r\nexport type TvTemplet = (values?:any, x?:any) => JSX.Element;\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: TvTemplet,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    if (tuidValue === undefined) {\r\n        if (nullUI === undefined) return <>[undefined]</>;\r\n        return nullUI();\r\n    }\r\n    if (tuidValue === null) {\r\n        if (nullUI === undefined) return <>[null]</>;\r\n        return nullUI();\r\n    }\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else {\r\n                let ret = ui(tuidValue, x);\r\n                if (ret !== undefined) return ret;\r\n                return <>{tuidValue}</>;\r\n            }\r\n        case 'object':\r\n            let divObj = boxIdContent(tuidValue, ui, x);\r\n            if (divObj !== undefined) return divObj;\r\n            return nullUI === undefined? <>id null</>: nullUI();\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n\r\n/*\r\nclass BoxDivId extends BoxId {\r\n    private div: TuidDiv;\r\n    constructor(tuid: Tuid, div: TuidDiv, id: number) {\r\n        super(tuid, id);\r\n        this.div = div;\r\n    }\r\n    get obj():any {\r\n        return this.div.valueFromId(this.id);\r\n    }\r\n    boxName():string {return this.div.name}\r\n    isUndefined(): boolean {return this.div === undefined}\r\n    ui(): TvTemplet {return this.div.ui}\r\n    res(): any {return this.div.res}\r\n\r\n    async assure(): Promise<void> {\r\n        await this.div.assureBox(this.id);\r\n    }\r\n}\r\n*/\r\n","export * from './form';\r\nexport * from './multiStep';","import * as React from 'react';\r\nimport { Page, SearchBox, LMR } from '../../components';\r\nimport { Tuid } from '../../uq';\r\nimport { CLink } from '../link';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\n\r\nexport class VTuidMain extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    protected controller: CTuidMain;\r\n    onNew = () => this.event('new');\r\n    onList = () => this.event('list');\r\n    onSearch = async (key:string) => this.event('list', key);\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected entityRender(link: CLink, index: number): JSX.Element {\r\n        return link.render();\r\n    }\r\n\r\n    protected async entityClick(link: CLink) {\r\n        await link.onClick();\r\n    }\r\n\r\n    protected get view() {\r\n        let {label, isImport} = this.controller;\r\n        let newButton:any;\r\n        if (isImport === false) newButton = <button className=\"btn btn-outline-success ml-2\" onClick={this.onNew}>新增</button>;\r\n        let right = <>\r\n            {newButton}\r\n            <button className=\"btn btn-outline-info ml-2\" onClick={this.onList}>全部</button>\r\n        </>;\r\n        let content = <LMR className='m-3' right={right}>\r\n            <SearchBox className=\"w-100\" size=\"md\"\r\n                onSearch={this.onSearch} \r\n                placeholder={'搜索'+label} />\r\n        </LMR>;\r\n        return () => <Page header={label}>\r\n            {content}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page, FA } from '../../components';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\nimport { Tuid } from '../../uq';\r\n\r\nexport type TypeVTuidEdit = typeof VTuidEdit;\r\n\r\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    private vForm: VForm;\r\n    private id: number;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        if (param !== undefined) {\r\n            this.id = param.id;\r\n        }\r\n        this.openPage(this.editView);\r\n    }\r\n\r\n    protected get editView() {\r\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\r\n            {this.vForm.render('py-3')}\r\n        </Page>;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n        this.event('edit-end');\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.controller.entity.save(this.id, values);\r\n        let {id} = ret;\r\n        if (id < 0) {\r\n            let {unique} = this.controller.entity;\r\n            if (unique !== undefined) {\r\n                for (let u of unique) {\r\n                    this.vForm.setError(u, '不能重复');\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.controller.isCalling) {\r\n            this.returnCall(id);\r\n            this.closePage();\r\n            return;\r\n        }\r\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n\r\n        this.event('item-changed', {id: this.id, values: values});\r\n        return;\r\n    }\r\n\r\n    //protected view = TuidNewPage;\r\n}\r\n/*\r\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\r\n    let {label, id, vmForm} = vm;\r\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\r\n        {vmForm.render('mx-3 my-2')}\r\n    </Page>;\r\n});\r\n*/","import { Page, SearchBox, List } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../uq';\r\nimport { CTuid, TuidUI } from './cTuid';\r\nimport React from 'react';\r\nimport { RowContent } from '../form/viewModel';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\r\n    protected mainRowContent: (row:any) => JSX.Element;\r\n    protected divRowContent: (row:any) => JSX.Element;\r\n\r\n    async open(param?:any): Promise<void> {\r\n        if (param === undefined)\r\n            await this.showMain(param);\r\n        else\r\n            await this.showDiv(param);\r\n    }\r\n\r\n    private async showMain(param) {\r\n        this.mainRowContent = this.ui.rowContent || RowContent;\r\n        await this.controller.searchMain(param);\r\n        this.openPage(this.mainView);\r\n    }\r\n\r\n    private async showDiv(ownerValue: any) {\r\n        let {divs} = this.ui;\r\n        if (divs !== undefined) {\r\n            this.divRowContent = divs[this.entity.name].rowContent;\r\n        }\r\n        if (this.divRowContent === undefined) {\r\n            this.divRowContent = RowContent;\r\n        }\r\n        let divItems = await this.controller.getDivItems(ownerValue);\r\n        this.openPage(this.divView, {items: divItems});\r\n    }\r\n\r\n    protected mainView = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header} back=\"close\">\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n\r\n    onSearchMain = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\r\n    clickMainRow = async (item:any) => {\r\n        this.ceasePage();\r\n        if (this.controller.entity.hasDiv === undefined) {\r\n            this.returnCall(item);\r\n            return;\r\n        }\r\n        await this.showDiv(this.entity.getIdFromObj(item));\r\n    }\r\n\r\n    protected divView = (param:any) => {\r\n        return <Page header=\"选择Div\">\r\n            <List\r\n                items={param.items}\r\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\r\n        </Page>;\r\n    }\r\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\r\n    clickDivRow = (item:any) => {\r\n        this.ceasePage();\r\n        this.returnCall(item);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA, Page } from '../../components';\r\nimport { jsonStringify } from '../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../uq';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\n\r\nexport type TypeVTuidView = typeof VTuidView;\r\n\r\nexport class VTuidView extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    vForm: VForm;\r\n    id: number;\r\n\r\n    protected buildForm(param:any) {\r\n        this.vForm = this.createForm(undefined, param);\r\n    }\r\n\r\n    async open(param:any) {\r\n        this.buildForm(param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    render(param:any) {\r\n        this.buildForm(param);\r\n        return this.vForm.render();\r\n    }\r\n\r\n    async loadId(id: number) {\r\n        this.id = id;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.entity.save(this.id, values);\r\n        if (ret) {\r\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\r\n        }\r\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n            {this.vForm.render('py-3')}\r\n    </Page>;\r\n}\r\n","//import React from 'react';\r\nimport { VTuidView } from './vTuidView';\r\n\r\nexport class VTuidInfo  extends VTuidView {\r\n/*\r\n    async open(param?:any) {\r\n        this.open(this.view);\r\n    }\r\n*/\r\n/*\r\n    private view = () => {\r\n        return <Page>\r\n            TuidInfo\r\n        </Page>\r\n    }\r\n*/\r\n}\r\n","import { PageItems } from '../../tool';\r\nimport { Tuid } from '../../uq';\r\n\r\nexport class TuidPageItems<T> extends PageItems<T> {\r\n    private tuid: Tuid;\r\n    constructor(tuid: Tuid) {\r\n        super(true);\r\n        this.tuid = tuid;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.tuid.search(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { SearchBox, List, Page } from '../../components';\r\n//import { jsonStringify } from '../tools';\r\nimport { Tuid } from '../../uq';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\nimport { RowContent } from '../form/viewModel';\r\n\r\nexport abstract class VTuidListBase  extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    protected rowContent: (row:any) => JSX.Element;\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        this.rowContent = this.ui.rowContent || RowContent;\r\n        //if (this.entity.owner !== undefined) \r\n        this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n    private rowKey = (item:any) => {\r\n        let {id} = item;\r\n        return id;\r\n    }\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        /*\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        */\r\n        return <Page header={header}>\r\n            {/*ownerTop*/}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidList extends VTuidListBase {\r\n    protected async onSelected(item:any) {\r\n        if (this.controller.isImport === false)\r\n            this.event('edit', item.id);\r\n        else\r\n            this.event('info', item.id);\r\n    }\r\n}\r\n/*\r\nexport abstract class VTuidDivListBase  extends VPage<CTuidDiv> {\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        //this.PageItems = new TuidPageItems(this.entity);\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => {\r\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\r\n    }\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidDivList extends VTuidDivListBase {\r\n    protected async onSelected(item:any) {\r\n        this.event('edit', item.id);\r\n    }\r\n}\r\n*/","import _ from 'lodash';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { Tuid } from '../../uq';\r\nimport { VTuidMain } from './vTuidMain';\r\nimport { VTuidEdit } from './vTuidEdit';\r\nimport { VTuidSelect } from './vTuidSelect';\r\nimport { CUq } from '../cUq/cUq';\r\n//import { CLink } from '../link';\r\nimport { VTuidInfo } from './vTuidInfo';\r\nimport { TuidPageItems } from './pageItems';\r\nimport { VTuidList } from './vTuidList';\r\nimport { PageItems } from '../../tool';\r\n//import { Controller } from 'ui';\r\n\r\nexport interface TuidUI extends EntityUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    content?: React.StatelessComponent<any>;\r\n    rowContent?: React.StatelessComponent<any>;\r\n    divs?: {\r\n        [div:string]: {\r\n            CTuidSelect?: typeof CTuidSelect;\r\n            content?: React.StatelessComponent<any>;\r\n            rowContent?: React.StatelessComponent<any>;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\r\n    PageItems:PageItems<any>;\r\n\r\n    protected buildPageItems():PageItems<any> {\r\n        return new TuidPageItems(this.entity);\r\n    }\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first(key);\r\n    }\r\n\r\n    async getDivItems(ownerId:number):Promise<any[]> {\r\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport abstract class CTuidBase extends CTuid<Tuid> {\r\n    /*\r\n    constructor(cUq: CUq, entity:Tuid, ui: TuidUI, res:any) {\r\n        super(cUq, entity, ui, res);\r\n    }*/\r\n    \r\n    from():CTuidBase {\r\n        let ret = this; // this.entity.cFrom();\r\n        if (ret === undefined) return this;\r\n        return ret;\r\n    }\r\n\r\n    cUqFrom():CUq {\r\n        return this.cUq; // this.entity.cUqFrom();\r\n    }\r\n    cEditFrom(): CTuidEdit {\r\n        let cUq = this.cUq; // this.entity.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.entity.name);\r\n    }\r\n    cInfoFrom(): CTuidInfo {\r\n        let cUq = this.cUq; // this.entity.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.entity.name);\r\n    }\r\n    cSelectFrom(): CTuidSelect {\r\n        let cUq = this.cUq;// this.entity.cUqFrom();\r\n        return cUq.cTuidSelectFromName(this.entity.name);\r\n    }\r\n\r\n    getLable(tuid:Tuid):string {\r\n        if (tuid === this.entity) return this.label;\r\n        let {name} = tuid;\r\n        let {arrs} = this.res;\r\n        if (arrs !== undefined) {\r\n            let arr = arrs[name];\r\n            if (arr !== undefined) {\r\n                let label = arr.label;\r\n                if (label !== undefined) return label;\r\n            }\r\n        }\r\n        return name;\r\n    }\r\n\r\n    isImport: boolean;\r\n\r\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\r\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\r\n    protected get VTuidList():typeof VTuidList {return VTuidList}\r\n\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n        //let v: TypeVPage<CTuidMain>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': await this.onNew(); break;\r\n            case 'list': await this.onList(); break;\r\n            case 'edit': await this.onEdit(value); return;\r\n            case 'item-changed': this.itemChanged(value); return;\r\n            case 'info': \r\n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\r\n                await cTuidInfo.start(value);\r\n                return;\r\n        }\r\n        //await this.openVPage(v, value);\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        let cTuidEdit = this.ui && this.ui.CTuidEdit;\r\n        if (cTuidEdit === undefined) {\r\n            await this.openVPage(this.VTuidEdit, values);\r\n        }\r\n        else {\r\n            await (new cTuidEdit(this.cUq, this.entity, this.ui, this.res)).start(values);\r\n        }\r\n    }\r\n\r\n    private async onNew() {\r\n        await this.edit(undefined);\r\n    }\r\n\r\n    private async onList() {\r\n        let cTuidList = this.ui && this.ui.CTuidList;\r\n        if (cTuidList === undefined) {\r\n            await this.openVPage(this.VTuidList, undefined);\r\n        }\r\n        else {\r\n            await (new cTuidList(this.cUq, this.entity, this.ui, this.res)).start(undefined);\r\n        }\r\n    }\r\n\r\n    protected async onEdit(id:number) {\r\n        let values:any = undefined;\r\n        if (id !== undefined) {\r\n            values = await this.entity.load(id);\r\n        }\r\n        this.edit(values);\r\n        //await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n\r\n    private itemChanged({id, values}:{id:number, values: any}) {\r\n        if (this.PageItems === undefined) return;\r\n        let items = this.PageItems.items;\r\n        let item = items.find(v => v.id === id);\r\n        if (item !== undefined) {\r\n            _.merge(item, values);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CTuidMain extends CTuidBase {\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n}\r\n\r\nexport class CTuidEdit extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        if (typeof(id) === 'number') {\r\n            await this.onEdit(id);\r\n        }\r\n        else {\r\n            await this.edit(id);\r\n        }\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n}\r\n\r\nexport class CTuidList extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isImport = this.entity.isImport;\r\n        await this.openVPage(this.VTuidList);\r\n    }\r\n}\r\n\r\nexport class CTuidDiv extends CTuid<Tuid> {\r\n    protected async internalStart():Promise<void> {\r\n        alert('tuid div: ??');\r\n    }\r\n}\r\n\r\nexport class CTuidSelect extends CTuid<Tuid> {\r\n    protected async internalStart(param?: any):Promise<void> {\r\n        await this.openVPage(this.VTuidSelect, param);\r\n    }\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        if (this.PageItems !== undefined) this.PageItems.reset();\r\n        return true;\r\n    }\r\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\r\n    idFromItem(item:any) {\r\n        return item.id;\r\n    }\r\n}\r\n\r\nexport class CTuidInfo extends CTuid<Tuid> {\r\n    protected async internalStart(id: any):Promise<void> {\r\n        let data = await this.entity.load(id)\r\n        await this.openVPage(this.VTuidInfo, data);\r\n    }\r\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\r\n}\r\n","export * from './cTuid';\r\nexport * from './vTuidMain';\r\nexport * from './vTuidEdit';\r\nexport * from './vTuidInfo';\r\nexport * from './vTuidView';\r\nexport * from './vTuidSelect';\r\n","import { Entity } from './entity';\r\nimport { ActionCaller } from './caller';\r\n\r\nexport class Action extends Entity {\r\n    get typeName(): string { return 'action';}\r\n    async submit(data:object) {\r\n        //await this.loadSchema();\r\n        //let text = this.pack(data);\r\n        //return await this.uqApi.action(this.name, {data:text});\r\n        return await new ActionSubmitCaller(this, data).request();\r\n    }\r\n    async submitReturns(data:object):Promise<{[ret:string]:any[]}> {\r\n        /*\r\n        await this.loadSchema();\r\n        let text = this.pack(data);\r\n        let result = await this.uqApi.actionReturns(this.name, {data:text});\r\n        */\r\n       return await new SubmitReturnsCaller(this, data).request();\r\n    }\r\n}\r\n\r\nexport class ActionSubmitCaller extends ActionCaller {\r\n    get path():string {return 'action/' + this.entity.name;}\r\n    buildParams():any {return {data: this.entity.pack(this.params)}}\r\n}\r\n\r\nclass SubmitReturnsCaller extends ActionSubmitCaller {\r\n    get path():string {return 'action/' + this.entity.name + '/returns';}\r\n    xresult(res:any):any {\r\n        let {returns} = this.entity;\r\n        let len = returns.length;\r\n        let ret:{[r:string]:any[]} = {};\r\n        for (let i=0; i<len; i++) {\r\n            let retSchema = returns[i];\r\n            ret[retSchema.name] = res[i];\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VSubmit } from './vSubmit';\r\n\r\nexport abstract class VBand {\r\n    protected label: string;\r\n    protected view = () => <div />;\r\n\r\n    constructor(label:string) {\r\n        this.label = label;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        //text-sm-right\r\n        return <div key={this.key} className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">\r\n                    {this.label}\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                    {this.renderContent()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {}\r\n    get key() {return this.label}\r\n    public getVFields():VField[] {return;}\r\n    public getVArr():VArr {return;}\r\n    public getVSubmit():VSubmit {return;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\r\n    }\r\n}\r\n\r\nexport interface FieldRes {\r\n    label: string;\r\n    placeHolder: string;\r\n    suffix: string;\r\n}\r\nexport class VFieldBand extends VBand {\r\n    protected vField:VField;\r\n    constructor(label:string, vField:VField) {\r\n        super(label);\r\n        this.vField = vField;\r\n    }\r\n\r\n    get key() {return this.vField.name}\r\n    public getVFields():VField[] {return [this.vField];}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return this.vField.render();\r\n        /*\r\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            {this.vField.render()}\r\n        </div>;*/\r\n    }\r\n}\r\n\r\nexport class VArrBand extends VBand {\r\n    protected vArr:VArr;\r\n    constructor(label:string, vArr:VArr) {\r\n        super(label);\r\n        this.vArr = vArr;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\r\n    get key() {return this.vArr.name}\r\n    public getVArr():VArr {return this.vArr;}\r\n\r\n    render():JSX.Element {\r\n        return <React.Fragment key={this.key}>\r\n            {this.vArr && this.vArr.render()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport class VFieldsBand extends VBand {\r\n    protected vFields: VField[];\r\n    constructor(label:string, vFields:VField[]) {\r\n        super(label);\r\n        this.vFields = vFields;\r\n    }\r\n\r\n    get key() {return this.vFields[0].name}\r\n    public getVFields():VField[] {return this.vFields;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            fields\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class VSubmitBand extends VBand {\r\n    protected vSubmit: VSubmit;\r\n    constructor(vSubmit:VSubmit) {\r\n        super(undefined);\r\n        this.vSubmit = vSubmit;\r\n    }\r\n\r\n    get key() {return '$submit'}\r\n\r\n    public getVSubmit():VSubmit {return this.vSubmit;}\r\n\r\n    render():JSX.Element {\r\n        return <div key=\"$submit\" className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <div className=\"offset-sm-2 col-sm-10\">\r\n                    {this.vSubmit.render()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\n//import classNames from 'classnames'\r\nimport { ViewModel } from './viewModel';\r\nimport { VForm } from './vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VSubmit extends ViewModel {\r\n    private vForm: VForm;\r\n    constructor(vForm: VForm) {\r\n        super();\r\n        this.vForm = vForm;\r\n        this.caption = this.vForm.submitCaption;\r\n        this.className = 'btn btn-primary w-25';\r\n    }\r\n    @observable caption: string;\r\n    @observable className: string;\r\n\r\n    private onClickSubmit = async () => {\r\n        this.vForm.submit();\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let {isOk} = this.vForm;\r\n        return <button type=\"button\" \r\n            onClick={this.onClickSubmit}\r\n            className={this.className}\r\n            disabled={isOk === false}>\r\n            {this.caption}\r\n        </button>;\r\n    });\r\n}","\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any);\r\n}\r\n\r\nexport class RuleRequired extends Rule {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if (isNaN(value as number) === true) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push('不能为空');\r\n    }\r\n}\r\n\r\nexport class RuleNum extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (isNaN(n) === true) defy.push('必须是数字');\r\n    }\r\n}\r\n\r\nexport class RuleInt extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\r\n            defy.push('必须是整数');\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleMin extends RuleNum {\r\n    constructor(min: number) {\r\n        super();\r\n        this.min = min;\r\n    }\r\n    min: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\r\n    }\r\n}\r\n\r\nexport class RuleMax extends RuleNum {\r\n    constructor(max: number) {\r\n        super();\r\n        this.max = max;\r\n    }\r\n    max: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { computed } from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from '../../../components';\r\nimport { ViewModel } from '../viewModel';\r\nimport { VForm, FormMode } from '../vForm';\r\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\r\nimport { Field } from '../../../uq';\r\nimport { FieldRes } from '../vBand';\r\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\r\n\r\nexport abstract class VField extends ViewModel {\r\n    protected form: VForm;\r\n    protected fieldUI: FieldUI;\r\n    protected fieldRes:FieldRes;\r\n    protected field: Field;\r\n    protected rules: Rule[];\r\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super();\r\n        this.form = form;\r\n        this.field = field;\r\n        this.name = field.name;\r\n        this.fieldUI = fieldUI || {} as any;\r\n        this.fieldRes = fieldRes || {} as any;\r\n        this.init();\r\n    }\r\n\r\n    name: string;\r\n\r\n    protected init() {\r\n        this.buildRules();\r\n    }\r\n\r\n    protected buildRules() {\r\n        this.rules = [];\r\n        let {required} = this.fieldUI;\r\n        if (required === true || (this.field !== undefined && this.field.null === false)) {\r\n            this.rules.push(new RuleRequired());\r\n        }\r\n    }\r\n\r\n    @computed get checkRules(): string[] {\r\n        let defy = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        return defy;\r\n    }\r\n\r\n    @computed get isOk() {\r\n        if (this.rules.length === 0) return true;\r\n        let defy = this.checkRules;\r\n        return defy.length === 0;\r\n    }\r\n\r\n    @computed get value() { return this.form.values[this.name]; }\r\n    setValue(v:any) {\r\n        this.form.values[this.name]=v; \r\n    }\r\n    get error() { return this.form.errors[this.name]; }\r\n    set error(err:any) { this.form.errors[this.name]=err; }\r\n    protected parse(str:string):any {return str;}\r\n    get readonly():boolean {\r\n        let {mode} = this.form;\r\n        return mode === FormMode.readonly || \r\n            (mode === FormMode.edit && this.fieldUI.editable === false);\r\n    }\r\n}\r\n\r\nexport class VUnknownField extends VField {\r\n    protected view = () => {\r\n        //let {name, type} = this.fieldUI;\r\n        let type='', name = '';\r\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\r\n            placeholder={'unkown control: ' + type + '-' + name} />;\r\n    }\r\n}\r\n\r\nexport abstract class VInputControl extends VField {\r\n    protected fieldUI: FieldInputUI;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected inputType:string;\r\n    protected get maxLength():number {return undefined}\r\n\r\n    protected renderError = (className:string) => {\r\n        let {errors} = this.form;\r\n        let error = errors[this.name];\r\n        if (error === undefined) return;\r\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\r\n    }\r\n\r\n    /*\r\n    get value() {\r\n        return super.value;\r\n    }*/\r\n    setValue(v:any) {\r\n        super.setValue(v); this.setInputValue(); \r\n    }\r\n\r\n    protected ref = (input:HTMLInputElement) => {\r\n        this.input = input;\r\n        this.setInputValue();\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    protected onBlur = () => {\r\n        let defy = this.checkRules;\r\n        if (defy.length > 0) {\r\n            this.error = defy[0];\r\n        }\r\n        this.form.computeFields();\r\n    }\r\n\r\n    protected onChange = (evt: React.ChangeEvent<any>) => {\r\n        let v = this.parse(evt.currentTarget.value);\r\n        if (v === null) {\r\n            return;\r\n        }\r\n        this.setValue(v);\r\n    }\r\n\r\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\r\n    \r\n    protected view = observer(() => {\r\n        let {required} = this.fieldUI;\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = ['form-control', 'form-control-input'];\r\n        let errCN = 'text-danger small mt-1 mx-2';\r\n    \r\n        let redDot;\r\n        let input;\r\n        if (this.readonly === true) {\r\n            input = <input className={classNames(ctrlCN, 'bg-light')}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                readOnly={true}\r\n            />;\r\n        }\r\n        else {\r\n            input = <input className={classNames(ctrlCN)}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                onFocus={this.onFocus}\r\n                onBlur={this.onBlur}\r\n                onChange={this.onChange}\r\n                placeholder={placeHolder}\r\n                readOnly={false}\r\n                maxLength={this.maxLength}\r\n                onKeyPress={this.onKeyPress}\r\n            />;\r\n            if (required === true || this.field.null === false) {\r\n                redDot = <RedMark />;\r\n            }\r\n        }\r\n\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n\r\n        return <>\r\n            {redDot}\r\n            {inputGroup}\r\n            {this.renderError(errCN)}\r\n        </>\r\n    });\r\n}\r\n\r\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\r\n\r\nexport class VStringField extends VInputControl {\r\n    protected fieldUI: FieldStringUI;\r\n    protected inputType:string = 'text';\r\n    protected get maxLength():number {return this.field.size}\r\n}\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport abstract class VNumberControl extends VInputControl {\r\n    protected fieldUI: FieldNumberUI;\r\n    protected extraChars: number[];\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        if (this.fieldUI !== undefined) {\r\n            let {min, max} = this.fieldUI;\r\n            if (min !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n            }\r\n            else {\r\n                this.extraChars.push(KeyCode_Neg);\r\n            }\r\n    \r\n            if (max !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n            }\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'bigint':\r\n            case 'int':\r\n            case 'smallint':\r\n            case 'tinyint':\r\n                this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleNum());\r\n        let {min, max} = this.fieldUI;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n    }\r\n\r\n    inputType:string = 'number';\r\n\r\n    protected parse(text:string):any {\r\n        try {\r\n            if (text.trim().length === 0) return undefined;\r\n            let ret = Number(text);\r\n            return (isNaN(ret) === true)? null : ret;\r\n        }\r\n        catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        if (this.parse(this.input.value) === v) return;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || (ch >= 48 && ch <= 57)) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.input.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.input.value = v;\r\n    }\r\n}\r\n\r\nexport class VIntField extends VNumberControl {\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleInt());\r\n    }\r\n}\r\n\r\nexport class VDecField extends VNumberControl {\r\n}\r\n\r\nexport class VTextField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateTimeField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateField extends VStringField {\r\n\r\n}\r\n","import React from 'react';\r\nimport { VField } from './vField';\r\nimport { Field } from '../../../uq';\r\nimport { VForm } from '../vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { FieldRes } from '../vBand';\r\n\r\nexport class VComputeField extends VField {\r\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\r\n        super(form, field, undefined, fieldRes);\r\n    }\r\n    protected view = observer(() => {\r\n        let value = this.form.values[this.field.name];\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = 'form-control form-control-input bg-light';\r\n        if (value === null) value = '';\r\n        let input = <input className={ctrlCN}\r\n            type=\"text\"\r\n            placeholder={placeHolder}\r\n            readOnly={true}\r\n            value={value}/>\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n        return inputGroup;\r\n        /*\r\n            return <div \r\n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\r\n            {value} &nbsp;\r\n        </div>;\r\n        */\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { IObservableArray } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Page, nav, List, Muted } from '../../components';\r\nimport { ViewModel, TypeContent, JSONContent } from './viewModel';\r\nimport { ArrFields } from '../../uq';\r\nimport { VForm, FieldInputs, FormMode } from './vForm';\r\nimport { FormArr } from '../formUI';\r\n\r\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\r\n\r\nexport class VArr extends ViewModel {\r\n    protected mode: FormMode;\r\n    protected label: any;\r\n    protected header: any;\r\n    protected footer: any;\r\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\r\n    protected onEditRow: ArrEditRow;\r\n    protected ownerForm:VForm;\r\n    protected vForm:VForm;\r\n    protected rowContent:TypeContent;\r\n    protected none: string;\r\n    protected newSubmitCaption: string;\r\n    protected editSubmitCaption: string;\r\n    protected addRow: ()=>Promise<void>;\r\n\r\n    name:string;\r\n    list: IObservableArray<any>;\r\n\r\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\r\n        super();\r\n        this.ownerForm = ownerForm;\r\n        let {name, fields} = arr;\r\n        this.name = name;\r\n        let {ui, res, mode, inputs, values} = ownerForm;\r\n        let arrsRes = res.arrs;\r\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\r\n        let {label, none, newSubmit, editSubmit} = arrRes;\r\n        this.none = none || ownerForm.none;\r\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\r\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\r\n        this.label = label || name;\r\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\r\n        this.rowContent = arrUI.rowContent;// || JSONContent;\r\n        this.mode = mode;\r\n        if (this.onEditRow === undefined) {\r\n            this.vForm = new VForm({\r\n                fields: fields,\r\n                arrs: undefined,\r\n                ui: arrUI,\r\n                res: arrRes,\r\n                inputs: inputs[name] as FieldInputs,\r\n                none: ownerForm.none,\r\n                submitCaption: 'submit',\r\n                arrNewCaption: undefined,\r\n                arrEditCaption: undefined,\r\n                arrTitleNewButton: undefined,\r\n                mode: mode,\r\n            }, \r\n            mode===FormMode.readonly? undefined: this.onSubmit);\r\n        }\r\n        else {\r\n            this.onEditRow = onEditRow;\r\n        }\r\n        this.list = values[name];\r\n    }\r\n\r\n    reset() {\r\n        this.vForm.reset();\r\n        this.list.clear();\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {\r\n        this.addRow = addRow;\r\n    }\r\n\r\n    protected rowPage = () => {\r\n        return <Page header={this.label} back=\"close\">\r\n            {this.vForm.render('py-3')}\r\n        </Page>\r\n    }\r\n    private onSubmit = async () => {\r\n        let {valueBoxs} = this.vForm;\r\n        await this.onRowChanged(valueBoxs);\r\n    }\r\n\r\n    private onRowChanged = async (rowValues:any) => {\r\n        if (this.rowValues === undefined) {\r\n            rowValues.$owner = this.ownerForm.values;\r\n            this.list.push(rowValues);\r\n            if (this.onEditRow === undefined)\r\n                this.vForm.reset();\r\n            else\r\n                await this.onEditRow(undefined, this.onRowChanged);\r\n        }\r\n        else {\r\n            _.merge(this.rowValues, rowValues);\r\n            if (this.onEditRow === undefined) nav.pop();\r\n        }\r\n    }\r\n\r\n    private renderItem = (item:any, index:number) => {\r\n        if (this.rowContent === undefined)\r\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\r\n        return <this.rowContent {...item} />;\r\n    }\r\n    private showRow = async (rowValues:any):Promise<any> => {\r\n        if (this.onEditRow !== undefined) {\r\n            await this.onEditRow(rowValues, this.onRowChanged);\r\n            return;\r\n        }\r\n        this.vForm.reset();\r\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\r\n        nav.push(<this.rowPage />);\r\n    }\r\n    private editRow = async (rowValues:any): Promise<void> => {\r\n        this.rowValues = rowValues;\r\n        let {vSubmit} = this.vForm;\r\n        if (vSubmit !== undefined) {\r\n            vSubmit.caption = this.editSubmitCaption;\r\n            vSubmit.className = 'btn btn-outline-success';\r\n        }\r\n        this.vForm.mode = this.ownerForm.mode;\r\n        await this.showRow(rowValues);\r\n    }\r\n    private internalAddRow = async () => {\r\n        this.rowValues = undefined;\r\n        let {vSubmit} = this.vForm;\r\n        vSubmit.caption = this.newSubmitCaption;\r\n        vSubmit.className = 'btn btn-outline-success';\r\n        this.vForm.reset();\r\n        this.vForm.mode = FormMode.new;\r\n        await this.showRow(undefined);\r\n    }\r\n\r\n    protected view = () => {\r\n        let button;\r\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\r\n            button = <button onClick={this.addRow || this.internalAddRow}\r\n                type=\"button\" \r\n                className=\"btn btn-link p-0\">\r\n                {this.ownerForm.arrTitleNewButton}\r\n            </button>;\r\n        }\r\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\r\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\r\n            {button}\r\n        </div>;\r\n        return <List className=\"pb-3\"\r\n            header={header}\r\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\r\n            items={this.list}\r\n            item={{render: this.renderItem, onClick: this.editRow}} />;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from '../../cUq/reactBoxId';\r\nimport { Field, TuidBox } from '../../../uq';\r\nimport { VField, RedMark } from './vField';\r\nimport { FieldUI } from '../../formUI';\r\nimport { VForm, FieldInput } from '../vForm';\r\nimport { FieldRes } from '../vBand';\r\n\r\nconst buttonStyle:React.CSSProperties = {\r\n    textAlign:'left', \r\n    paddingLeft:'0.75rem', \r\n    paddingRight:'0.75rem', \r\n    overflow: 'hidden'\r\n};\r\n\r\nexport class VTuidField extends VField {\r\n    protected vForm: VForm;\r\n    protected input: FieldInput;\r\n    protected tuid: TuidBox;\r\n\r\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super(vForm, field, fieldUI, fieldRes);\r\n        this.tuid = field._tuid;\r\n        this.vForm = vForm;\r\n        this.input = vForm.inputs[field.name] as FieldInput;\r\n    }\r\n\r\n    onClick = async () => {\r\n        if (this.readonly === true) {\r\n            if (!this.value) return;\r\n            await this.tuid.showInfo(); //this.value.id);\r\n            return;\r\n        }\r\n        let id:number;\r\n        if (this.input !== undefined) {\r\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\r\n        }\r\n        else {\r\n            alert('call undefined');\r\n            id = 0;\r\n        }\r\n        this.setValue(this.tuid.boxId(id));\r\n    }\r\n    protected view = observer(() => {\r\n        let {placeHolder} = this.fieldRes;\r\n        let disabled:boolean = false;\r\n        //let {_ownerField} = this.field;\r\n        let {_tuid} = this.field;\r\n        let {ownerField} = _tuid;\r\n        if (ownerField !== undefined) {\r\n            let {name} = ownerField;\r\n            disabled = this.vForm.getValue(name) === null;\r\n        }\r\n        let content;\r\n        if (this.value === null)\r\n            content = <>{placeHolder || this.input.placeHolder}</>;\r\n        else if (typeof this.value === 'object') {\r\n            content = tv(this.value);\r\n        }\r\n        else {\r\n            let idBox = this.tuid.boxId(this.value);\r\n            content = tv(idBox); // idBox.content();\r\n        }\r\n        if (this.readonly === true)\r\n        {\r\n            return <div \r\n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </div>;\r\n        }\r\n        let {required} = this.fieldUI;\r\n        let redDot = (required === true || this.field.null === false) && <RedMark />;\r\n        return <>\r\n            {redDot}\r\n            <button className=\"form-control btn btn-outline-info\"\r\n                type=\"button\"\r\n                disabled={disabled}\r\n                style={buttonStyle}\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </button>\r\n        </>;\r\n    })\r\n}\r\n","import { VBand, VFieldBand, VArrBand, VSubmitBand, FieldRes } from './vBand';\r\nimport { Field, ArrFields } from '../../uq';\r\nimport { VForm, FormOptions } from './vForm';\r\nimport { FormItems, FieldUI, FormItem } from '../formUI';\r\nimport { VSubmit } from './vSubmit';\r\nimport { VField, buildVField, VComputeField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VTuidField } from './vField/vTuidField';\r\n\r\nexport class BandsBuilder {\r\n    private vForm: VForm;\r\n    private onSubmit: (values:any)=>Promise<void>;\r\n    private fields: Field[];\r\n    private arrs: ArrFields[];\r\n    private formItems: FormItems;\r\n    private layout: string[];\r\n    private res: any;\r\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.vForm = vForm;\r\n        this.onSubmit = onSubmit;\r\n        let {fields, arrs, ui, res} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        if (ui !== undefined) {\r\n            let {items, layout} = ui;\r\n            this.formItems = items;\r\n            this.layout = layout;\r\n        }\r\n        this.res = res;\r\n    }\r\n\r\n    build():VBand[] {\r\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\r\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\r\n    }\r\n\r\n    private resFromName(name:string, res:any):string|FieldRes {\r\n        if (res === undefined) return;\r\n        let {fields} = res;\r\n        if (fields === undefined) return;\r\n        return fields[name] || name;\r\n    }\r\n\r\n    private bandsOnFly():VBand[] {\r\n        let bands:VBand[] = [];\r\n        this.bandsFromFields(bands, this.fields, this.res);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\r\n        }\r\n        if (this.onSubmit !== undefined) {\r\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\r\n        }\r\n        return bands;\r\n    }\r\n\r\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\r\n        if (fields === undefined) return;\r\n        for (let field of fields) bands.push(this.bandFromField(field, res));\r\n    }\r\n\r\n    private bandsFromLayout():VBand[] {\r\n        let bands:VBand[] = [];\r\n        /*\r\n        for (let bandUI of this.bandUIs)  {\r\n            let band = this.bandFromUI(bandUI);\r\n            bands.push(band);\r\n        }\r\n        */\r\n        return bands;\r\n    }\r\n\r\n    /*\r\n    private bandFromUI(bandUI:BandUI):VBand {\r\n        let {band} = bandUI;\r\n        switch (band) {\r\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\r\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\r\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\r\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\r\n        }\r\n    }\r\n    \r\n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\r\n        let {label} = bandUI;\r\n        let vField = this.vFieldFromUI(bandUI);\r\n        return new VFieldBand(label, vField);\r\n    }\r\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\r\n        let {label, name} = bandUI;\r\n        let vArr = this.vArrFromUI(bandUI);\r\n        return new VArrBand(label, vArr);\r\n    }\r\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\r\n        let {label, fieldUIs} = bandUI;\r\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\r\n        return new VFieldsBand(label, vFields);\r\n    }\r\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\r\n        if (this.onSubmit === undefined) return;\r\n        let vSubmit = new VSubmit(this.vForm);\r\n        return new VSubmitBand(vSubmit);\r\n    }\r\n    */\r\n/*\r\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\r\n        let fieldUI:FieldUI = undefined;\r\n        if (formItem !== undefined) {\r\n            if (typeof formItem === 'function') {\r\n                return new VComputeField(this.vForm, field, fieldRes);\r\n            }\r\n        }\r\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\r\n        if (ret !== undefined) return ret;\r\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\r\n    }\r\n*/\r\n    private bandFromField(field:Field, res:any):VBand {\r\n        let {name} = field;\r\n        let fieldRes:FieldRes;\r\n        let rfn = this.resFromName(name, res);\r\n        let label:string;\r\n        if (typeof rfn === 'object') {\r\n            label = rfn.label;\r\n            fieldRes = rfn;\r\n        }\r\n        else {\r\n            label = rfn as string;\r\n            fieldRes = undefined;\r\n        }\r\n        let vField:VField;\r\n        let formItem:FormItem;\r\n        if (this.formItems !== undefined) formItem = this.formItems[name];\r\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\r\n        //let fieldUI:FieldUI = undefined;\r\n        if (typeof formItem === 'function') {\r\n            vField = new VComputeField(this.vForm, field, fieldRes);\r\n        }\r\n        else {\r\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        if (vField === undefined) {\r\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        return new VFieldBand(label || name, vField);\r\n    }\r\n\r\n    private bandFromArr(arr: ArrFields):VBand {\r\n        let {name} = arr;\r\n        //let row = JSONContent;\r\n        //let bands:VBand[] = [];\r\n        //this.bandsFromFields(bands, fields, res);\r\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\r\n        return new VArrBand(name, vArr);\r\n    }\r\n\r\n    /*\r\n    private vFieldFromUI(fieldUI:FieldUI):VField {\r\n        return;\r\n    }\r\n\r\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\r\n        return;\r\n    }\r\n    */\r\n}\r\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField, VDateField } from './vField';\r\nimport { Field } from '../../../uq';\r\nimport { FieldRes } from '../vBand';\r\nimport { VForm } from '../vForm';\r\nimport { FieldUI } from '../../formUI';\r\n\r\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\r\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\r\n    switch (field.type) {\r\n        default: return;\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n            vField = VIntField;\r\n            break;\r\n        case 'id':\r\n            let {_tuid} = field;\r\n            if (_tuid !== undefined) return;\r\n            vField = VIntField;\r\n            break;\r\n        case 'dec':\r\n            vField = VDecField;\r\n            break;\r\n        case 'char':\r\n            vField = VStringField;\r\n            break;\r\n        case 'text':\r\n            vField = VTextField;\r\n            break;\r\n        case 'datetime':\r\n            vField = VDateTimeField;\r\n            break;\r\n        case 'date':\r\n            vField = VDateField;\r\n            break;\r\n    }\r\n    return new vField(form, field, fieldUI, fieldRes);\r\n}\r\n\r\n","import * as React from 'react';\r\n//import * as _ from 'lodash';\r\nimport { observer } from 'mobx-react';\r\nimport { VBand } from './vBand';\r\nimport { BandsBuilder } from './bandsBuilder';\r\nimport { Field, ArrFields } from '../../uq';\r\nimport { computed, observable, IObservableObject } from 'mobx';\r\nimport { VArr } from './vArr';\r\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\r\nimport { VField } from './vField';\r\nimport { VSubmit } from './vSubmit';\r\nimport { IObservableArray } from 'mobx';\r\nimport { FA } from '../../components';\r\n\r\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\r\nexport interface FieldInput {\r\n    select: FieldCall;\r\n    content: React.StatelessComponent<any>;\r\n    placeHolder: string;\r\n}\r\nexport interface FieldInputs {\r\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\r\n}\r\nexport enum FormMode {new, edit, readonly}\r\n\r\nexport interface FormOptions {\r\n    fields: Field[];\r\n    arrs?: ArrFields[];\r\n    ui: FormUIBase;\r\n    res: any;\r\n    inputs: FieldInputs;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n    none: string;\r\n    mode: FormMode;\r\n}\r\n\r\nexport class VForm {\r\n    protected fields: Field[];\r\n    protected arrs: ArrFields[];\r\n    protected bands: VBand[];\r\n    protected bandColl: {[key:string]: VBand};\r\n    protected onSubmit: ()=>Promise<void>;\r\n\r\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\r\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        this.ui = ui;\r\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\r\n        this.res = res;\r\n        this.inputs = inputs;\r\n        this.none = none;\r\n        this.submitCaption = submitCaption;\r\n        this.arrNewCaption = arrNewCaption;\r\n        this.arrEditCaption = arrEditCaption;\r\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\r\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\r\n        else this.mode = mode;\r\n        this.buildFormValues();\r\n        this.buildBands(options, onSubmit);\r\n        this.onSubmit = onSubmit;\r\n    }\r\n\r\n    ui: FormUI;\r\n    res: any;\r\n    values: any;\r\n    errors: any;\r\n    formItems: FormItems;\r\n    mode: FormMode;\r\n    vFields: {[name:string]:VField} = {};\r\n    vArrs: {[name:string]: VArr} = {};\r\n    vSubmit: VSubmit;\r\n    inputs: FieldInputs;\r\n    none: string;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n\r\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.bandColl = {};\r\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\r\n        this.bands = bandsBuilder.build();\r\n        for (let band of this.bands) {\r\n            this.bandColl[band.key] = band;\r\n            let vFields = band.getVFields();\r\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\r\n            let vArr = band.getVArr();\r\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\r\n            let vSubmit = band.getVSubmit();\r\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\r\n        }\r\n    }\r\n\r\n    private onFormSubmit = (event:React.FormEvent<any>) => {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    protected view = observer(({className}:{className:string}) => {\r\n        return <form className={className} onSubmit={this.onFormSubmit}>\r\n            {this.bands.map(v => v.render())}\r\n        </form>;\r\n    });\r\n\r\n    getBand(name:string) {\r\n        return this.bandColl[name];\r\n    }\r\n\r\n    computeFields() {\r\n        if (this.formItems === undefined) return;\r\n        let values = this.values;\r\n        for (let i in this.formItems) {\r\n            let item = this.formItems[i];\r\n            if (typeof item !== 'function') continue;\r\n            values[i] = item.call(this, values);\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.onSubmit === undefined) return;\r\n        await this.onSubmit();\r\n    }\r\n    \r\n    getValues() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name} = f;\r\n            let v = values[name]\r\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\r\n        }\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                let {name, fields, id, order} = arr;\r\n                let list = ret[name] = [];\r\n                let rows = this.vArrs[name].list;\r\n                for (let row of rows) {\r\n                    let item = {} as any;\r\n                    if (id !== undefined) item[id] = row[id];\r\n                    if (order !== undefined) item[order] = row[order];\r\n                    for (let f of fields) {\r\n                        let {name:fn} = f;\r\n                        let v = row[fn]\r\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\r\n                    }\r\n                    list.push(item);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    get valueBoxs() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name, _tuid} = f;\r\n            let v = values[name]\r\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n        }\r\n        if (this.arrs === undefined) return ret;\r\n        for (let arr of this.arrs) {\r\n            let {name, fields} = arr;\r\n            let list = ret[name] = this.vArrs[name].list.slice();\r\n            for (let row of list) {\r\n                for (let f of fields) {\r\n                    let {name:fn, _tuid} = f;\r\n                    let v = row[fn]\r\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setValues(initValues:any) {\r\n        if (initValues === undefined) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            errors[fn] = undefined;\r\n            let v =  initValues[fn];\r\n            values[fn] = v;\r\n        }\r\n        // 还要设置arrs的values\r\n        for (let i in this.vArrs) {\r\n            let list = initValues[i];\r\n            if (list === undefined) continue;\r\n            let arrList = values[i] as IObservableArray<any>;\r\n            arrList.clear();\r\n            arrList.push(...list);\r\n        }\r\n    }\r\n\r\n    @computed get isOk():boolean {\r\n        for (let i in this.vFields) {\r\n            if (this.vFields[i].isOk === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    reset() {\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\r\n            values[fn] = null;\r\n            errors[fn] = undefined;\r\n        }\r\n        for (let i in this.vFields) {\r\n            let ctrl = this.vFields[i];\r\n            let cn = ctrl.name;\r\n            if (cn === undefined) continue;\r\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\r\n            ctrl.setValue(null);\r\n        }\r\n        for (let i in this.vArrs) {\r\n            let vArr = this.vArrs[i];\r\n            vArr.reset();\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        return this.values[fieldName];\r\n    }\r\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\r\n\r\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\r\n\r\n    private buildFieldValues(fields: Field[]):any {\r\n        let v: {[p:string]: any} = {\r\n            valueFromFieldName: function(propName:string) {\r\n                return this[propName];\r\n            }\r\n        };\r\n        for (let f of fields) {\r\n            let fn = f.name;\r\n            v[fn] = null;\r\n        }\r\n        return v;\r\n    }\r\n    private buildObservableValues():IObservableObject {\r\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                v[arr.name] = observable.array([], {deep:true});\r\n            }\r\n        }\r\n        let ret = observable(v);\r\n        return ret;\r\n    }\r\n    private buildFormValues() {\r\n        this.values = this.buildObservableValues();\r\n        this.errors = observable(this.buildFieldValues(this.fields));\r\n    }\r\n\r\n    render(className:string = \"py-3\"):JSX.Element {\r\n        return <this.view className={className} />\r\n    }\r\n}\r\n","export * from './vForm';\r\n","import { observable } from 'mobx';\r\nimport { isNumber } from 'util';\r\nimport _ from 'lodash';\r\nimport { LocalArr } from '../../tool';\r\nimport { BoxId } from './boxId';\r\nimport { TuidInner, TuidDiv } from './tuid';\r\n\r\nconst maxCacheSize = 1000;\r\n\r\nexport class IdCache {\r\n    private queue: number[] = [];               // 每次使用，都排到队头\r\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\r\n\r\n    protected localArr:LocalArr;\r\n    protected waitingIds: number[] = [];          // 等待loading的\r\n    protected tuidInner: TuidInner;\r\n\r\n    constructor(tuidLocal: TuidInner) {\r\n        this.tuidInner = tuidLocal;\r\n        this.initLocalArr();\r\n    }\r\n\r\n    protected initLocalArr() {\r\n        this.localArr = this.tuidInner.cache.arr(this.tuidInner.name + '.ids');\r\n    }\r\n\r\n    useId(id:number, defer?:boolean) {\r\n        if (id === undefined || id === 0) return;\r\n        if (isNumber(id) === false) return;\r\n        if (this.cache.has(id) === true) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n        this.tuidInner.cacheTuids(defer===true?70:20);\r\n        this.cache.set(id, id);\r\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n\r\n        if (this.queue.length >= maxCacheSize) {\r\n            // 缓冲已满，先去掉最不常用的\r\n            let r = this.queue.shift();\r\n            if (r === id) {\r\n                // 如果移除的，正好是现在用的，则插入\r\n                this.queue.push(r);\r\n                return;\r\n            }\r\n\r\n            //let rKey = String(r);\r\n            if (this.cache.has(r) === true) {\r\n                // 如果移除r已经缓存\r\n                this.cache.delete(r);\r\n            }\r\n            else {\r\n                // 如果移除r还没有缓存\r\n                let index = this.waitingIds.findIndex(v => v === r);\r\n                this.waitingIds.splice(index, 1);\r\n            }\r\n        }\r\n        this.waitingIds.push(id);\r\n        this.queue.push(id);\r\n        return;\r\n    }\r\n\r\n    private moveToHead(id:number) {\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.queue.push(id);\r\n    }\r\n\r\n    getValue(id:number) {\r\n        return this.cache.get(id);\r\n    }\r\n\r\n    remove(id:number) {\r\n        this.cache.delete(id);\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n    }\r\n\r\n    valueFromId(id:number|BoxId):any {\r\n        let _id:number;\r\n        switch (typeof id) {\r\n            case 'object': _id = (id as BoxId).id; break;\r\n            case 'number': _id = id as number; break;\r\n            default: return;\r\n        }\r\n        return this.getValue(_id);\r\n    }\r\n\r\n    resetCache(id:number) {\r\n        this.remove(id);\r\n        this.useId(id);\r\n    }\r\n\r\n    cacheValue(val:any):boolean {\r\n        if (val === undefined) return false;\r\n        let id = this.getIdFromObj(val);\r\n        if (id === undefined) return false;\r\n        let index = this.waitingIds.findIndex(v => v === id);\r\n        if (index>=0) this.waitingIds.splice(index, 1);\r\n        this.cache.set(id, val);\r\n        return true;\r\n    }\r\n    protected getIdFromObj(val:any) {return this.tuidInner.getIdFromObj(val)}\r\n\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let tuidValues = await this.loadIds();\r\n        await this.cacheIdValues(tuidValues);\r\n    }\r\n\r\n    private async cacheIdValues(tuidValues: any[]) {\r\n        if (tuidValues === undefined) return;\r\n        let tuids = this.unpackTuidIds(tuidValues);\r\n        for (let tuidValue of tuids) {\r\n            if (this.cacheValue(tuidValue) === false) continue;\r\n            this.cacheTuidFieldValues(tuidValue);\r\n        }\r\n    }\r\n    async modifyIds(ids:any[]):Promise<void> {\r\n        //let tuidValues:string[] = await this.tuidInner.loadTuidIds(this.divName, ids);\r\n        let tuidValues:string[] = await this.loadTuidIdsOrLocal(ids);\r\n        let localedValues = tuidValues.filter(v => {\r\n            let p = v.indexOf('\\t');\r\n            if (p<0) p = v.length;\r\n            let id = Number(v.substr(0, p));\r\n            let val = this.localArr.getItem(id);\r\n            return (val !== undefined);\r\n        });\r\n        if (localedValues.length === 0) return;\r\n        await this.cacheIdValues(localedValues);\r\n    }\r\n    protected divName:string = undefined;\r\n    protected async loadIds(): Promise<any[]> {\r\n        //let ret = await this.tuidInner.loadTuidIds(this.divName, this.waitingIds);\r\n        let ret = await this.loadTuidIdsOrLocal(this.waitingIds);\r\n        return ret;\r\n    }\r\n    protected unpackTuidIds(values:string[]):any[] {\r\n        return this.tuidInner.unpackTuidIds(values);\r\n    }\r\n    protected cacheTuidFieldValues(tuidValue: any) {\r\n        this.tuidInner.cacheTuidFieldValues(tuidValue);\r\n    }\r\n\r\n    async assureObj(id:number):Promise<any> {\r\n        let val = this.cache.get(id);\r\n        switch (typeof val) {\r\n            case 'object': return;\r\n            case 'number': this.cache.set(id, id); break;\r\n        }\r\n        //let ret = await this.tuidInner.loadTuidIds(this.divName, [id]);\r\n        let ret = await this.loadTuidIdsOrLocal([id]);\r\n        await this.cacheIdValues(ret);\r\n    }\r\n\r\n    private async loadTuidIdsOrLocal(ids:number[]):Promise<string[]> {\r\n        let ret:string[] = [];        \r\n        let netIds:number[] = [];\r\n        for (let id of ids) {\r\n            let value = this.localArr.getItem(id);\r\n            if (value === undefined)\r\n                netIds.push(id);\r\n            else\r\n                ret.push(value);\r\n        }\r\n        let len = netIds.length;\r\n        if (len > 0) {\r\n            let netRet = await this.tuidInner.loadTuidIds(this.divName, netIds);\r\n            for (let i=0; i<len; i++) {\r\n                //有些id可能没有内容，不会返回\r\n                //let id = netIds[i]; \r\n                let row:string = netRet[i];\r\n                if (!row) continue;\r\n                let p = row.indexOf('\\t');\r\n                if (p < 0) p = row.length;\r\n                let id = Number(row.substr(0, p));\r\n                _.remove(netIds, v => v === id);\r\n                ret.push(row);\r\n                this.localArr.setItem(id, row);\r\n            }\r\n            len = netIds.length;\r\n            for (let i=0; i<len; i++) {\r\n                this.localArr.setItem(netIds[i], '');\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport class IdDivCache extends IdCache {\r\n    private div: TuidDiv;\r\n    protected divName:string;\r\n\r\n    constructor(tuidLocal:TuidInner, div: TuidDiv) {\r\n        super(tuidLocal);\r\n        this.div = div;\r\n        this.divName = div.name;\r\n        this.localArr = tuidLocal.cache.arr(tuidLocal.name + '.ids.' + this.divName);\r\n    }\r\n\r\n    protected initLocalArr() {\r\n        // 这个不需要，必须去掉\r\n        // this.localArr = this.tuidInner.cache.arr(this.tuidInner.name + '.ids');\r\n    }\r\n\r\n    protected getIdFromObj(val:any) {return this.div.getIdFromObj(val)}\r\n    protected unpackTuidIds(values:string[]):any[] {\r\n        return this.div.unpackTuidIds(values);\r\n    }\r\n    protected cacheTuidFieldValues(tuidValue: any) {\r\n        this.div.cacheTuidFieldValues(tuidValue);\r\n    }\r\n\r\n    /*\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let tuidValues = await this.loadIds();\r\n        if (tuidValues !== undefined) {\r\n            let tuids = this.tuidLocal.unpackTuidIds(tuidValues);\r\n            for (let tuidValue of tuids) {\r\n                if (this.cacheValue(tuidValue) === false) continue;\r\n                this.tuidLocal.cacheTuidFieldValues(tuidValue);\r\n                this.afterCacheValue(tuidValue);\r\n            }\r\n        }\r\n    }\r\n    */\r\n}\r\n","import _ from 'lodash';\r\nimport { LocalArr } from '../../tool';\r\nimport { Entity } from '../entity';\r\nimport { UqMan, ArrFields, Field, SchemaFrom } from '../uqMan';\r\nimport { EntityCaller } from '../caller';\r\nimport { BoxId } from './boxId';\r\nimport { IdCache, IdDivCache } from './idCache';\r\n\r\nexport interface TuidSaveResult {\r\n    id: number;\r\n    inId: number;\r\n}\r\n\r\nexport abstract class Tuid extends Entity {\r\n    readonly typeName:string = 'tuid';\r\n    protected idName: string;\r\n    cached: boolean;\r\n    unique: string[];\r\n\r\n    /*\r\n    constructor(uq:UqMan, name:string, typeId:number) {\r\n        super(uq, name, typeId)\r\n    }*/\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {id} = schema;\r\n        this.idName = id;\r\n    }\r\n\r\n    buildTuidBox(): TuidBox {\r\n        return new TuidBox(this);\r\n    }\r\n\r\n    getIdFromObj(obj:any):number {return obj[this.idName]}\r\n    abstract useId(id:number):void;\r\n    abstract boxId(id:number):BoxId;\r\n    abstract valueFromId(id:number):any;\r\n    abstract async assureBox (id:number): Promise<void>;\r\n    cacheIds() {}\r\n    async modifyIds(ids:any[]) {}\r\n    isImport = false;\r\n    abstract get hasDiv():boolean;// {return this.divs!==undefined}\r\n    abstract div(name:string):TuidDiv;\r\n    abstract async loadMain(id:number|BoxId):Promise<any>;\r\n    abstract async load(id:number|BoxId):Promise<any>;\r\n    abstract async all():Promise<any[]>;\r\n    abstract async save(id:number, props:any):Promise<TuidSaveResult>;\r\n    abstract async search(key:string, pageStart:string|number, pageSize:number):Promise<any>;\r\n    abstract async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any>;\r\n    abstract async loadArr(arr:string, owner:number, id:number):Promise<any>;\r\n    abstract async saveArr(arr:string, owner:number, id:number, props:any):Promise<void>;\r\n    abstract async posArr(arr:string, owner:number, id:number, order:number):Promise<void>;\r\n}\r\n\r\nexport class TuidInner extends Tuid {\r\n    private divs: {[div:string]: TuidDiv};\r\n    protected cacheFields: Field[];\r\n    protected idCache: IdCache;\r\n    protected localArr:LocalArr;\r\n    constructor(uq:UqMan, name:string, typeId:number) {\r\n        super(uq, name, typeId);\r\n        this.idCache = new IdCache(this);\r\n        this.localArr = this.cache.arr(this.name + '.whole');\r\n        if (uq.newVersion === true) this.localArr.removeAll();\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {arrs} = schema;\r\n        if (arrs !== undefined) {\r\n            this.divs = {};\r\n            for (let arr of arrs) {\r\n                let {name} = arr;\r\n                let tuidDiv = new TuidDiv(this.uq, this, name);\r\n                this.divs[name] = tuidDiv;\r\n                tuidDiv.setSchema(arr);\r\n                tuidDiv.buildFieldsTuid();\r\n            }\r\n        }\r\n    }\r\n    \r\n    useId(id:number, defer?:boolean) {\r\n        this.idCache.useId(id, defer);\r\n    }\r\n    boxId(id:number):BoxId {\r\n        if (typeof id === 'object') return id;\r\n        this.useId(id);\r\n        let {createBoxId} = this.uq;\r\n        if (!createBoxId) return {id: id} as BoxId;\r\n        return createBoxId(this, id);\r\n    }\r\n    valueFromId(id:number) {return this.idCache.getValue(id)}\r\n    async assureBox (id:number):Promise<void> {\r\n        await this.idCache.assureObj(id);\r\n    }\r\n\r\n    cacheIds() {\r\n        this.idCache.cacheIds();\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) this.divs[i].cacheIds();\r\n    }\r\n    async modifyIds(ids:any[]) {\r\n        await this.idCache.modifyIds(ids);\r\n    }\r\n    cacheTuids(defer:number) {this.uq.cacheTuids(defer)}\r\n    get hasDiv():boolean {return this.divs!==undefined}\r\n    div(name:string):TuidDiv {\r\n        return this.divs && this.divs[name];\r\n    }\r\n    async loadTuidIds(divName:string, ids:number[]):Promise<any[]> {\r\n        //return await this.uqApi.tuidIds(this.name, divName, ids);\r\n        let ret:any[] = await new IdsCaller(this, {divName:divName, ids:ids}).request();\r\n        if (ret.length > 0) this.cached = true;\r\n        return ret;\r\n    }\r\n    async loadMain(id:number|BoxId):Promise<any> {\r\n        if (typeof id === 'object') id = id.id;\r\n        await this.idCache.assureObj(id);\r\n        return this.idCache.valueFromId(id);\r\n    }\r\n    async load(id:number|BoxId):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        //let cacheValue = this.idCache.valueFromId(id); \r\n        //if (typeof cacheValue === 'object') return cacheValue;\r\n        if (typeof id === 'object') id = id.id;\r\n        let valuesText = this.localArr.getItem(id);\r\n        let values: any;\r\n        if (valuesText) {\r\n            values = JSON.parse(valuesText);\r\n        }\r\n        else {\r\n            values = await new GetCaller(this, id).request();\r\n            if (values !== undefined) {\r\n                this.localArr.setItem(id, JSON.stringify(values));\r\n            }\r\n        }\r\n        if (values === undefined) return;\r\n        for (let f of this.schema.fields) {\r\n            let {tuid} = f;\r\n            if (tuid === undefined) continue;\r\n            let t = this.uq.getTuid(tuid);\r\n            if (t === undefined) continue;\r\n            let n = f.name;\r\n            values[n] = t.boxId(values[n]);\r\n        }\r\n        this.idCache.cacheValue(values);\r\n        this.cacheTuidFieldValues(values);\r\n        return values;\r\n    }\r\n\r\n    cacheTuidFieldValues(values:any) {\r\n        let {fields, arrs} = this.schema;\r\n        this.cacheFieldsInValue(values, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs as ArrFields[]) {\r\n                let {name, fields} = arr;\r\n                let arrValues = values[name];\r\n                if (arrValues === undefined) continue;\r\n                let tuidDiv = this.div(name);\r\n                for (let row of arrValues) {\r\n                    //row._$tuid = tuidDiv;\r\n                    //row.$owner = this.boxId(row.owner);\r\n                    tuidDiv.cacheValue(row);\r\n                    this.cacheFieldsInValue(row, fields);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public buildFieldsTuid() {\r\n        super.buildFieldsTuid();\r\n        let {mainFields} = this.schema;\r\n        if (mainFields === undefined) debugger;\r\n        this.uq.buildFieldTuid(this.cacheFields = mainFields || this.fields);\r\n    }\r\n\r\n    unpackTuidIds(values:string[]):any[] {\r\n        return this.unpackTuidIdsOfFields(values, this.cacheFields);\r\n    }\r\n\r\n    async save(id:number, props:any):Promise<TuidSaveResult> {\r\n        /*\r\n        let {fields} = this.schema;\r\n        let params:any = {$id: id};\r\n        for (let field of fields as Field[]) {\r\n            let {name, tuid, type} = field;\r\n            let val = props[name];\r\n            if (tuid !== undefined) {\r\n                if (typeof val === 'object') {\r\n                    if (val !== null) val = val.id;\r\n                }\r\n            }\r\n            else {\r\n                switch (type) {\r\n                    case 'date':\r\n                    case 'datetime':\r\n                        val = new Date(val).toISOString();\r\n                        val = (val as string).replace('T', ' ');\r\n                        val = (val as string).replace('Z', '');\r\n                        break;\r\n                }\r\n            }\r\n            params[name] = val;\r\n        }\r\n        let ret = await this.uqApi.tuidSave(this.name, params);\r\n        return ret;\r\n        */\r\n        let ret = new SaveCaller(this, {id:id, props:props}).request();\r\n        if (id !== undefined) {\r\n            this.idCache.remove(id);\r\n            this.localArr.removeItem(id);\r\n        }\r\n        return ret;\r\n    }\r\n    async all():Promise<any[]> {\r\n        let ret: any[] = await new AllCaller(this, {}).request();\r\n        return ret;\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any[]> {\r\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        //let api = this.uqApi;\r\n        //let ret = await api.tuidSearch(this.name, undefined, owner, key, pageStart, pageSize);\r\n        let params = {arr:undefined, owner:owner, key:key, pageStart:pageStart, pageSize:pageSize};\r\n        let ret = await new SearchCaller(this, params).request();\r\n        let {fields} = this.schema;\r\n        for (let row of ret) {\r\n            this.cacheFieldsInValue(row, fields);\r\n        }\r\n        return ret;\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        //let api = this.uqApi;\r\n        //return await api.tuidArrGet(this.name, arr, owner, id);\r\n        return await new LoadArrCaller(this, {arr:arr, owner:owner, id:id}).request();\r\n    }\r\n    async saveArr(arr:string, owner:number, id:number, props:any) {\r\n        //let params = _.clone(props);\r\n        //params[\"$id\"] = id;\r\n        //return await this.uqApi.tuidArrSave(this.name, arr, owner, params);\r\n        return await new SaveArrCaller(this, {arr:arr, owner:owner, id:id, props:props}).request();\r\n    }\r\n\r\n    async posArr(arr:string, owner:number, id:number, order:number) {\r\n        //return await this.uqApi.tuidArrPos(this.name, arr, owner, id, order);\r\n        return await new ArrPosCaller(this, {arr:arr, owner:owner, id:id, order:order}).request();\r\n    }\r\n}\r\n\r\nabstract class TuidCaller<T> extends EntityCaller<T> {\r\n    protected get entity(): Tuid {return this._entity as Tuid};\r\n}\r\n\r\n// 包含main字段的load id\r\n// 当前为了兼容，先调用的包含所有字段的内容\r\nclass GetCaller extends TuidCaller<number> {\r\n    method = 'GET';\r\n    get path():string {return `tuid/${this.entity.name}/${this.params}`}\r\n}\r\n\r\nclass IdsCaller extends TuidCaller<{divName:string, ids:number[]}> {\r\n    get path():string {\r\n        let {divName} = this.params;\r\n        return `tuidids/${this.entity.name}/${divName !== undefined?divName:'$'}`;\r\n    }\r\n    buildParams():any {return this.params.ids}\r\n    xresult(res:any):any {\r\n        return (res as string).split('\\n');\r\n    }\r\n}\r\n\r\n\r\nclass SaveCaller extends TuidCaller<{id:number, props:any}> {\r\n    get path():string {return `tuid/${this.entity.name}`}\r\n    buildParams():any {\r\n        let {fields, arrs} = this.entity.schema;\r\n        let {id, props} = this.params;\r\n        let params:any = {$id: id};\r\n        this.transParams(params, props, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                let arrName = arr.name;\r\n                let arrParams = [];\r\n                let arrFields = arr.fields;\r\n                let arrValues = props[arrName];\r\n                if (arrValues !== undefined) {\r\n                    for (let arrValue of arrValues) {\r\n                        let row = {};\r\n                        this.transParams(row, arrValue, arrFields);\r\n                        arrParams.push(row);\r\n                    }\r\n                }\r\n                params[arrName] = arrParams;\r\n            }\r\n        }\r\n        return params;\r\n    }\r\n    private transParams(values:any, params:any, fields:Field[]) {\r\n        if (params === undefined) return;\r\n        for (let field of fields) {\r\n            let {name, tuid, type} = field;\r\n            let val = params[name];\r\n            if (tuid !== undefined) {\r\n                if (typeof val === 'object') {\r\n                    if (val !== null) val = val.id;\r\n                }\r\n            }\r\n            else {\r\n                switch (type) {\r\n                    case 'date':\r\n                        val = this.entity.buildDateParam(val); \r\n                        //val = (val as string).replace('T', ' ');\r\n                        //val = (val as string).replace('Z', '');\r\n                        break;\r\n                    case 'datetime':\r\n                        val = this.entity.buildDateTimeParam(val);\r\n                        //val = new Date(val).toISOString();\r\n                        //val = (val as string).replace('T', ' ');\r\n                        //val = (val as string).replace('Z', '');\r\n                        break;\r\n                }\r\n            }\r\n            values[name] = val;\r\n        }\r\n    }\r\n}\r\n\r\nclass SearchCaller extends TuidCaller<{arr:string, owner:number, key:string, pageStart:string|number, pageSize:number}> {\r\n    get path():string {return `tuids/${this.entity.name}`}\r\n}\r\n\r\nclass AllCaller extends TuidCaller<{}> {\r\n    method = 'GET';\r\n    get path():string {return `tuid-all/${this.entity.name}`}\r\n}\r\n\r\nclass LoadArrCaller extends TuidCaller<{arr:string, owner:number, id:number}> {\r\n    method = 'GET';\r\n    get path():string {\r\n        let {arr, owner, id} = this.params;\r\n        return `tuid-arr/${this.entity.name}/${owner}/${arr}/${id}`;\r\n    }\r\n}\r\n\r\nclass SaveArrCaller extends TuidCaller<{arr:string, owner:number, id:number, props:any}> {\r\n    get path():string {\r\n        let {arr, owner} = this.params;\r\n        return `tuid-arr/${this.entity.name}/${owner}/${arr}/`;\r\n    }\r\n    buildParams():any {\r\n        let {id, props} = this.params;\r\n        let params = _.clone(props);\r\n        params['$id'] = id;\r\n        return params;\r\n    }\r\n}\r\n\r\nclass ArrPosCaller extends TuidCaller<{arr:string, owner:number, id:number, order:number}> {\r\n    get path():string {\r\n        let {arr, owner} = this.params;\r\n        return `tuid-arr-pos/${this.entity.name}/${owner}/${arr}/`;\r\n    }\r\n    buildParams():any {\r\n        let {id, order} = this.params;\r\n        return { bid: id, $order: order}\r\n    }\r\n}\r\n\r\nexport class TuidImport extends Tuid {\r\n    private tuidLocal: TuidInner;\r\n\r\n    constructor(uq:UqMan, name:string, typeId:number, from: SchemaFrom) {\r\n        super(uq, name, typeId);\r\n        this.from = from;\r\n    }\r\n\r\n    setFrom(tuidLocal: TuidInner) {this.tuidLocal = tuidLocal}\r\n    \r\n    readonly from: SchemaFrom;\r\n    isImport = true;\r\n\r\n    useId(id:number) {this.tuidLocal.useId(id);}\r\n    boxId(id:number):BoxId {return this.tuidLocal.boxId(id);}\r\n    valueFromId(id:number) {return this.tuidLocal.valueFromId(id)}\r\n    async assureBox(id:number):Promise<void> {\r\n        await this.tuidLocal.assureBox(id);\r\n    }\r\n    get hasDiv():boolean {return this.tuidLocal.hasDiv}\r\n    div(name:string):TuidDiv {return this.tuidLocal.div(name)}\r\n    async loadMain(id:number|BoxId):Promise<any> {\r\n        let ret = await this.tuidLocal.loadMain(id);\r\n        return ret;\r\n    }\r\n    async load(id:number|BoxId):Promise<any> {\r\n        return await this.tuidLocal.load(id);\r\n    }\r\n    async save(id:number, props:any):Promise<TuidSaveResult> {\r\n        return await this.tuidLocal.save(id, props);\r\n    }\r\n    async all():Promise<any[]> {\r\n        return await this.tuidLocal.all();\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        return await this.tuidLocal.search(key, pageStart, pageSize);\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        return await this.tuidLocal.searchArr(owner, key, pageStart, pageSize);\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.tuidLocal.loadArr(arr, owner, id);\r\n    }\r\n    async saveArr(arr:string, owner:number, id:number, props:any):Promise<void> {\r\n        await this.tuidLocal.saveArr(arr, owner, id, props);\r\n    }\r\n    async posArr(arr:string, owner:number, id:number, order:number):Promise<void> {\r\n        await this.tuidLocal.posArr(arr, owner, id, order);\r\n    }\r\n}\r\n\r\n// field._tuid 用这个接口\r\n// Tuid, TuidDiv 实现这个接口\r\nexport class TuidBox {\r\n    tuid: Tuid;\r\n    ownerField:Field = undefined;\r\n    constructor(tuid: Tuid) {\r\n        this.tuid = tuid;\r\n    }\r\n\r\n    boxId(id:number):BoxId {\r\n        return this.tuid.boxId(id);\r\n    }\r\n    getIdFromObj(obj:any):number {\r\n        return this.tuid.getIdFromObj(obj);\r\n    }\r\n    useId(id:number):void {\r\n        return this.tuid.useId(id);\r\n    }\r\n    async showInfo() {\r\n        alert('showInfo not implemented');\r\n    }\r\n}\r\n\r\n\r\nexport class TuidDiv extends TuidInner /* Entity*/ {\r\n    readonly typeName:string = 'div';\r\n    protected cacheFields: Field[];\r\n    protected tuid: TuidInner;\r\n    protected idName: string;\r\n    protected idCache: IdDivCache;\r\n\r\n    //ui: React.StatelessComponent<any>;\r\n    //res: any;\r\n\r\n    constructor(uq: UqMan, tuid: TuidInner, name: string) {\r\n        super(uq, name, 0);\r\n        this.tuid = tuid;\r\n        this.idName = 'id';\r\n        this.idCache = new IdDivCache(tuid, this);\r\n    }\r\n\r\n    get owner() {return this.tuid}\r\n\r\n    /*\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.buildFieldsTuid();\r\n    }*/\r\n\r\n    /*\r\n    setUIRes(ui:any, res:any) {\r\n        this.ui = ui && ui.content;\r\n        this.res = res;\r\n    }\r\n    */\r\n\r\n    buildFieldsTuid() {\r\n        super.buildFieldsTuid();\r\n        let {mainFields} = this.schema;\r\n        if (mainFields === undefined) debugger;\r\n        this.uq.buildFieldTuid(this.cacheFields = mainFields);\r\n    }\r\n\r\n    buildTuidDivBox(ownerField: Field): TuidBoxDiv {\r\n        return new TuidBoxDiv(this.tuid, this, ownerField);\r\n    }\r\n\r\n    getIdFromObj(obj:any):number {return obj[this.idName]}\r\n    cacheValue(value:any):void {\r\n        this.idCache.cacheValue(value);\r\n    }\r\n\r\n    useId(id:number, defer?:boolean):void {\r\n        this.idCache.useId(id, defer);\r\n    }\r\n\r\n    /*\r\n    boxId(id:number):BoxId {\r\n        if (typeof id === 'object') return id;\r\n        this.useId(id);\r\n        //return new BoxDivId(this.tuid, this, id);\r\n        return this.tuid.boxDivId(this, id);\r\n    }\r\n    */\r\n    valueFromId(id:number):any {\r\n        return this.idCache.getValue(id)\r\n    }\r\n\r\n    async assureBox(id:number):Promise<void> {\r\n        await this.idCache.assureObj(id);\r\n    }\r\n\r\n    async cacheIds() {\r\n        await this.idCache.cacheIds();\r\n    }\r\n\r\n    cacheTuidFieldValues(values:any) {\r\n        let fields = this.schema.fields;\r\n        this.cacheFieldsInValue(values, fields);\r\n    }\r\n\r\n    unpackTuidIds(values:string[]):any[] {\r\n        return this.unpackTuidIdsOfFields(values, this.cacheFields);\r\n    }\r\n}\r\n\r\nexport class TuidBoxDiv extends TuidBox {\r\n    ownerField: Field;\r\n    private div: TuidDiv;\r\n    constructor(tuid: Tuid, div: TuidDiv, ownerField: Field) {\r\n        super(tuid);\r\n        this.div = div;\r\n        this.ownerField = ownerField;\r\n    }\r\n\r\n    boxId(id:number):BoxId {\r\n        return this.div.boxId(id);\r\n    }\r\n    getIdFromObj(obj:any):number {\r\n        return this.div.getIdFromObj(obj);\r\n    }\r\n    useId(id:number):void {\r\n        return this.div.useId(id);\r\n    }\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport interface KeyValueRes {\r\n    [key:string]: any;\r\n}\r\n\r\nexport interface Res<T extends KeyValueRes> {\r\n    [lang:string]: T | {[district:string]: T};\r\n}\r\n\r\nexport const resOptions:{lang:string, district:string} = {\r\n    lang: undefined,\r\n    district: undefined,\r\n}\r\n\r\nexport function setResOptions(lang:string, district:string) {\r\n    resOptions.lang = lang;\r\n    resOptions.district = district;\r\n}\r\n\r\n(function() {\r\n    let lang: string, district: string;\r\n    let language = (navigator.languages && navigator.languages[0])  // Chrome / Firefox\r\n        || navigator.language; // ||   // All browsers\r\n    //navigator.userLanguage; // IE <= 10\r\n    if (!language) {\r\n        lang = 'zh';\r\n        district = 'CN';\r\n    }\r\n    else {\r\n        let parts = language.split('-');\r\n        lang = parts[0];\r\n        if (parts.length > 1) district = parts[1];\r\n    }\r\n    setResOptions(lang, district);\r\n}());\r\n\r\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\r\n    let {lang, district} = resOptions;\r\n    let ret:T = {} as T;\r\n    if (res === undefined) return ret;\r\n    _.merge(ret, res._);\r\n    let l = res[lang];\r\n    if (l === undefined) return ret;\r\n    _.merge(ret, l._);\r\n    let d = l[district];\r\n    if (d === undefined) return ret;\r\n    _.merge(ret, d);\r\n    let {entity} = ret;\r\n    if (entity !== undefined) {\r\n        for (let i in entity) {\r\n            entity[i.toLowerCase()] = entity[i];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Rule} from '../rule';\r\n\r\nexport abstract class ControlBase {\r\n    protected formView: FormView;\r\n    constructor(formView:FormView) {\r\n        this.formView = formView;\r\n    }\r\n    render():JSX.Element {\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n        </div>;\r\n    }\r\n    protected abstract renderControl():JSX.Element;\r\n    @computed get hasError():boolean {return false;}\r\n    @computed get filled():boolean {return false;}\r\n    clear() {}\r\n    clearErrors() {}\r\n    readValues(values:any):any {}\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    isOk():boolean {this.validate(); return !this.hasError;}\r\n    protected validate() {}\r\n}\r\n\r\nexport abstract class Control extends ControlBase {\r\n    protected field: Field;\r\n    protected face: Face;\r\n    protected props: any;\r\n    protected rules: Rule[];\r\n\r\n    protected element: HTMLElement;\r\n    @observable protected isOK?: boolean;\r\n    @observable protected error: string;\r\n    @observable protected value: any;\r\n\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView);\r\n        this.field = field;\r\n        this.face = face;\r\n        this.init();\r\n        this.setProps();\r\n    }\r\n    protected ref(element: HTMLElement) {\r\n        this.element = element;\r\n    }\r\n    protected init() {\r\n        this.rules = [];\r\n        let r = this.field.rules;\r\n        if (r !== undefined) {\r\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\r\n            else this.rules.push(r as Rule);\r\n        }\r\n    };\r\n    protected setProps():any {\r\n        return this.props = {\r\n            ref: this.ref.bind(this),\r\n            name: this.field.name,\r\n        }\r\n    };\r\n    @computed get hasError():boolean {return this.error !== undefined;}\r\n    @computed get filled():boolean {\r\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\r\n        return ret;\r\n    }\r\n    clearValue() { this.value = undefined; }\r\n    clear() { this.clearErrors(); this.clearValue(); }\r\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\r\n    readValues(values:any):any {\r\n        values[this.field.name] = this.value;\r\n    }\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    protected getValueFromElement():any {return this.value;}\r\n    protected validate() {\r\n        try {\r\n            let v = this.getValueFromElement();\r\n            if (this.rules.length > 0) {\r\n                let isOk:boolean;\r\n                for (let rule of this.rules) {\r\n                    console.log('validate: %s', v);\r\n                    let err = rule(v);\r\n                    console.log('validate: %s err: %s', v, err);\r\n                    if (err === true) {\r\n                        this.error = undefined;\r\n                        isOk = true;\r\n                    }\r\n                    else if (err !== undefined) {\r\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \r\n                        //    this.field.name, JSON.stringify(v), rule, err);\r\n                        this.error = err;\r\n                        this.isOK = false;\r\n                        return;\r\n                    }\r\n                }\r\n                this.isOK = isOk;\r\n            }\r\n            this.value = v;\r\n        }\r\n        catch (e) {\r\n            this.error = e.message;\r\n        }\r\n    }\r\n    render():JSX.Element {\r\n        let n;\r\n        if (this.face !== undefined) {\r\n            let {notes} = this.face;\r\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\r\n        }\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n            {n}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {ControlBase} from './control';\r\n\r\nexport class ButtonsControl extends ControlBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.otherClick = this.otherClick.bind(this);\r\n    }\r\n    private otherClick() {\r\n        let onOther = this.formView.props.onOther;\r\n        if (onOther === undefined) return;\r\n        let values = this.formView.readValues();\r\n        onOther(values);\r\n    }\r\n    renderControl():JSX.Element {\r\n        console.log('buttons.renderControl');\r\n        let nothing = this.formView.nothing;\r\n        let hasError = this.formView.hasError;\r\n        let props = this.formView.props;\r\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\r\n        let {submitButton, otherButton, onOther} = props;\r\n        let btnOther;\r\n        if (otherButton !== undefined) {\r\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\r\n                {otherButton}\r\n            </button>\r\n        }\r\n        return <div className=\"d-flex justify-content-start\">\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\" \r\n                disabled={nothing || hasError}>\r\n                {submitButton || '提交'}\r\n            </button>\r\n            {btnOther}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, Placeholder} from '../face';\r\nimport {Control} from './control';\r\n\r\nconst TxtRequired = '必须填入要求内容';\r\n\r\nexport abstract class CharsControl extends Control {\r\n    protected init() {\r\n        super.init();\r\n        if (this.field.required === true) {\r\n            this.rules.push((v) => {\r\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected element: HTMLInputElement;\r\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onBlur: this.onBlur.bind(this),\r\n            onFocus: this.onFocus.bind(this),\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n        let face = this.face as Placeholder;\r\n        if (face !== undefined) {\r\n            _.assign(this.props, {\r\n                placeholder: face.placeholder,\r\n            });\r\n        }\r\n        return this.props;\r\n    };\r\n    protected parseValue(value?:string):any {return value;}\r\n    private onBlur() {\r\n        //console.log('field %s onBlure', this.field.name);\r\n        this.validate();\r\n    }\r\n    private onChange() {\r\n        console.log('onChange');\r\n        this.validate();\r\n    }\r\n    private onFocus() {\r\n        this.clearErrors();\r\n        //this.error = undefined;\r\n        //this.formView.clearErrors();\r\n    }\r\n    protected className() {\r\n        return classNames({\r\n            \"form-control\": true,\r\n            \"has-success\": this.isOK === true,\r\n            \"is-invalid\": this.error !== undefined,\r\n            \"is-valid\": this.error === undefined && this.isOK === true,\r\n        });\r\n    }\r\n    protected renderInput():JSX.Element {\r\n        return <input className={this.className()} {...this.props} />;\r\n    }\r\n    protected ref(element: HTMLInputElement) {\r\n        super.ref(element);\r\n        if (element) {\r\n            element.value = this.value === undefined? '':this.value;\r\n        }\r\n    }\r\n    protected renderError():JSX.Element {\r\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\r\n        if (this.error === undefined) return null;\r\n        return <div className=\"invalid-feedback\">{this.error}</div>\r\n    }\r\n    clearValue() { super.clearValue(); this.element.value = ''; }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.field.name === fieldName) this.error = error;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) return;\r\n        //this.element.value = v;\r\n        this.value = v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <React.Fragment>\r\n            {this.renderInput()}\r\n            {this.renderError()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\n\r\nexport class StringControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'text',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class PasswordControl extends StringControl {\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'password',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {IntField, DecField, NumberField} from '../field';\r\nimport {CharsControl} from './charsControl';\r\n\r\nconst ErrInvalidNumber = '无效的数字';\r\nconst ErrMin = '最小值为';\r\nconst ErrMax = '最大值为';\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport class NumberControl extends CharsControl {\r\n    protected field: IntField | DecField | NumberField;\r\n    protected value: number;\r\n    protected extraChars: number[];\r\n    \r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        let {min, max} = this.field;\r\n        if (min !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n        }\r\n        else {\r\n            this.extraChars.push(KeyCode_Neg);\r\n        }\r\n\r\n        if (max !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        let n = Number.parseFloat(value);\r\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\r\n        return n;\r\n    }\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            type: 'number',\r\n            step: (this.field as DecField).step,\r\n            onKeyPress: this.onKeyPress.bind(this),\r\n        });\r\n    }\r\n\r\n    onKeyPress(event:KeyboardEvent) {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.element.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.element.value = v;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Control, ControlBase} from './control';\r\nimport {FormView} from '../formView';\r\n\r\nexport class UnknownControl extends Control {\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n            don't know how to create control<br/>\r\n            field: {JSON.stringify(this.field)} must be object <br/>\r\n            face: {JSON.stringify(this.face)} must be object <br/>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class EmptyControl extends ControlBase {\r\n    private element:JSX.Element;\r\n    constructor(formView:FormView, element:JSX.Element) {\r\n        super(formView);\r\n        this.element = element;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.element}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, IdPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickIdControl extends Control {\r\n    protected face: IdPickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    onPicked = (value: any) => {\r\n        this.value = value.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private controlContent():string|JSX.Element {\r\n        let {itemFromId, fromPicked, initCaption} = this.face;\r\n        if (this.value === undefined) {\r\n            return initCaption || '请选择Id';\r\n        }\r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        if (itemFromId !== undefined) {\r\n            if (fromPicked !== undefined) {\r\n                let item = itemFromId(this.value);\r\n                if (item) {\r\n                    let ret = fromPicked(item);\r\n                    if (ret !== undefined) return ret.caption;\r\n                }\r\n            }\r\n        }\r\n        return String(this.value);\r\n    }\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {this.controlContent()}\r\n            </div>;\r\n        }\r\n        return <div className=\"form-control-static \">\r\n            <input.component id={this.value} \r\n                ui={tuid}\r\n                //input={input}\r\n                //entitiesUI={this.formView.props.context} \r\n                //params={this.formView.readValues()}\r\n                //onPicked={this.onPicked}\r\n                />\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, TuidPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickTuidControl extends Control {\r\n    protected face: TuidPickFace;\r\n    // protected value: number;\r\n    @observable private caption: string|JSX.Element;\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.onIdChanged = this.onIdChanged.bind(this);\r\n        //this.onClick = this.onClick.bind(this);\r\n    }\r\n    /*\r\n    private async onClick() {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }*/\r\n    onIdChanged(id: any) {\r\n        this.value = id.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private buildContent():JSX.Element {\r\n        //let {tuid, input} = this.face;\r\n        return <this.face.input.component \r\n            {...this.face}\r\n            id={this.value}\r\n            //ui={this.face.ui}\r\n            //input={input}\r\n            //entitiesUI={this.formView.props.context} \r\n            onFormValues={()=>this.formView.readValues()}\r\n            onIdChanged={this.onIdChanged} />;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static \">\r\n            {this.buildContent()}\r\n        </div>;\r\n    }\r\n}\r\n/*\r\n<button className=\"form-control btn btn-outline-info\"\r\ntype=\"button\"\r\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\r\nonClick={this.onClick}>\r\n{this.buildContent()}\r\n</button>\r\n*/","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, PickFace} from '../face';\r\nimport {Control} from './control';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class PickControl extends Control {\r\n    protected face: PickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    /*\r\n    private controlContent():string|JSX.Element {\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined) {\r\n            return '请选择';\r\n        }\r\n        \r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        return <Content id={this.value} />;\r\n    }*/\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        return <this.view />;\r\n        /*\r\n        let {content:Content} = this.face;\r\n        //if (this.value === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n        //}\r\n        //return <div className=\"form-control-static \">\r\n        //    <Content />\r\n        //</div>;\r\n        */\r\n    }\r\n\r\n    private view = observer(() => {\r\n        let content;\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = '请选择';\r\n        }\r\n        /*\r\n        else if (this.caption !== undefined) {\r\n            content = this.caption;\r\n        }*/\r\n        else {\r\n            content = <Content id={this.value} />;\r\n        } \r\n        return <div\r\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\r\n            onClick={this.onClick}>\r\n            {content}\r\n        </div>\r\n    });\r\n}\r\n","export * from './control';\r\nexport * from './buttonsControl';\r\nexport * from './stringControl';\r\nexport * from './numberControl';\r\n\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Control, ControlBase} from './control';\r\nimport {ButtonsControl} from './buttonsControl';\r\nimport {CheckControl} from './checkControl';\r\nimport {RadioControl} from './radioControl';\r\nimport {TextAreaControl} from './textAreaControl';\r\nimport {SelectControl} from './selectControl';\r\nimport {UnknownControl, EmptyControl} from './unknownControl';\r\nimport {StringControl, PasswordControl} from './stringControl';\r\nimport {NumberControl} from './numberControl';\r\n\r\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\r\nimport { PickIdControl } from './pickIdControl';\r\nimport { PickTuidControl } from './pickTuidControl';\r\nimport { PickControl } from './pickControl';\r\n\r\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\r\n\r\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\r\n    let label = row.label;\r\n    if ((<GroupRow>row).group !== undefined)\r\n        return createGroupControl(form, label, row as GroupRow);\r\n    if ((<FieldRow>row).field !== undefined)\r\n        return createFieldControl(form, label, row as FieldRow);\r\n    return new EmptyControl(form, row.help);\r\n}\r\n\r\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\r\n    \"string\": StringControl,\r\n    \"password\": PasswordControl,\r\n    \"number\": NumberControl,\r\n    \"checkbox\": CheckControl,\r\n    \"radiobox\": RadioControl,\r\n    \"select\": SelectControl,\r\n    \"pick-id\": PickIdControl,\r\n    \"pick-tuid\": PickTuidControl,\r\n    \"textarea\": TextAreaControl,\r\n    \"pick\": PickControl,\r\n};\r\nconst defaultFaces:{[type:string]: Face} = {\r\n    \"string\": {type:'string'},\r\n    \"number\": {type:'number'},\r\n    \"int\": {type:'number'},\r\n    \"dec\": {type:'number'},\r\n    \"bool\": {type:'checkbox'},\r\n}\r\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\r\n    let {field, face} = fieldRow;\r\n    switch (typeof field) {\r\n        case 'string':\r\n            field = {\r\n                name: (field as any) as string,\r\n                type: 'string',\r\n            }\r\n            break;\r\n        case 'object':\r\n            break;\r\n        default:\r\n            return new UnknownControl(form, field, face);\r\n    }\r\n    let fieldType = field.type || 'string';\r\n    if (face === undefined) {\r\n        face = defaultFaces[fieldType];\r\n        if (face === undefined) return new UnknownControl(form, field, face);\r\n    }\r\n    else if (face.type === undefined) {\r\n        let f = defaultFaces[fieldType];\r\n        face.type = f===undefined? 'string' : f.type;\r\n    }\r\n    let control = controls[face.type || fieldType] || UnknownControl;\r\n    return new control(form, field, face);\r\n}\r\n\r\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\r\n    return new UnknownControl(form, groupRow as any, undefined);\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field, BoolField} from '../field';\r\nimport {Face, CheckBoxFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class CheckControl extends Control {    \r\n    protected element: HTMLInputElement;\r\n    protected field: BoolField;\r\n    protected face: CheckBoxFace;\r\n    private trueValue: any;\r\n    private falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        let {trueValue, falseValue} = this.field;\r\n        if (trueValue === undefined) this.trueValue = 1;\r\n        if (falseValue === undefined) this.falseValue = 0;\r\n    }\r\n\r\n    setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n    }\r\n\r\n    clearValue() {\r\n        this.element.checked = this.field.defaultValue === this.trueValue;\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) {\r\n            v = this.field.defaultValue;\r\n        }\r\n        if (v !== undefined) {\r\n            //this.element.checked = v === this.trueValue;\r\n            //this.value = this.getValueFromElement();\r\n        }\r\n    }\r\n\r\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\r\n\r\n    private onChange() {\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <label className=\"form-control\">\r\n                <label className=\"custom-control custom-checkbox mb-0\">\r\n                    <input type='checkbox'\r\n                        name={this.field.name}\r\n                        ref={this.props.ref}\r\n                        onChange={this.props.onChange}\r\n                        className=\"custom-control-input\" />\r\n                    <span className=\"custom-control-indicator\" />\r\n                    <span className=\"custom-control-description\">{this.face.label}</span>\r\n                </label>\r\n            </label>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, RadioFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class RadioControl extends Control {\r\n    protected face: RadioFace;\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <div className=\"form-control\">\r\n            {\r\n                this.face.list.map((item, index) => {\r\n                    let t, v;\r\n                    if (typeof item !== 'object') t = v = item;\r\n                    else {\r\n                        t = item.text;\r\n                        v = item.value;\r\n                    }\r\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\r\n                        <input type='radio'\r\n                            name={this.field.name} \r\n                            className=\"custom-control-input\" />\r\n                        <span className=\"custom-control-indicator\"></span>\r\n                        <span className=\"custom-control-description\">{t}</span>\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, SelectFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class SelectControl extends Control {\r\n    constructor (formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.ref = this.ref.bind(this);\r\n    }\r\n    protected face: SelectFace;\r\n    protected element: HTMLSelectElement;\r\n    protected getValueFromElement():any {\r\n        let {selectedIndex, selectedOptions} = this.element;\r\n        let v:any = selectedOptions[0].value;\r\n        switch (this.field.type) {\r\n            case 'number': v = Number(v); break;\r\n            case 'date': v = new Date(v); break;\r\n            case 'bool': \r\n                if (typeof v === 'string') {\r\n                    v = ((v as string).toLowerCase() === 'true');\r\n                }\r\n                break;\r\n        }\r\n        return v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        let {list} = this.face;\r\n        let def = this.face.default;\r\n        let options: any[] = [];\r\n        if (def === undefined)\r\n            options.push(<option key={-1} value={undefined}>请选择</option>);\r\n        options.push(...list.map((item, index) => {\r\n            let t, v;\r\n            if (typeof item !== 'object') t = v = item;\r\n            else {\r\n                t = item.text;\r\n                v = item.value;\r\n            }\r\n            return <option key={index} value={v}>{t}</option>;\r\n        }));\r\n        return <div className=\"form-control-static\">\r\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\r\n                {options}\r\n            </select>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\nimport {TextAreaFace} from '../face';\r\n\r\nexport class TextAreaControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected face: TextAreaFace;\r\n    private el: HTMLTextAreaElement;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        let {maxLength} = this.field;\r\n        let {rows} = this.face;\r\n        _.assign(p, {\r\n            maxLength: maxLength,\r\n            rows: rows,\r\n        });\r\n        return p;\r\n    };\r\n    protected renderInput():JSX.Element {\r\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\r\n    }\r\n}\r\n","\r\nexport * from './boxId';\r\nexport { Tuid, TuidImport, TuidInner, TuidDiv, TuidBox } from './tuid';\r\nexport { TuidsCache } from './tuidsCache';\r\nexport { tv, ReactBoxId } from './reactBoxId';","import * as React from 'react';\r\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\r\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\r\n\r\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\r\n\r\nexport abstract class RowContainer {\r\n    protected form:FormView;\r\n    protected row: FormRow;\r\n    protected control: ControlBase;\r\n    constructor(form:FormView, row: FormRow) {\r\n        this.form = form;\r\n        this.row = row;\r\n        if ((row as JSX.Element).type === undefined) {\r\n            let cc:CreateControl = (row as LabelFormRow).createControl;\r\n            if (cc === undefined) cc = form.createControl;\r\n            if (cc === undefined) cc = createControl;\r\n            this.control = cc(form, row);\r\n        }\r\n    }\r\n    abstract render(key:string):JSX.Element;\r\n    \r\n    isOk():boolean {\r\n        if (this.control === undefined) return true;\r\n        return this.control.isOk();\r\n    }\r\n\r\n    contains(fieldName:string):boolean {\r\n        let field = (this.row as FieldRow).field;\r\n        if (field !== undefined) return fieldName === field.name;\r\n        let group = (this.row as GroupRow).group;\r\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\r\n        return false;\r\n    }\r\n    get hasError():boolean {return this.control.hasError;}\r\n    get filled():boolean {return this.control.filled;}\r\n    clear() {\r\n        if (this.control !== undefined) this.control.clear();\r\n    }\r\n    clearErrors() {\r\n        if (this.control !== undefined) this.control.clearErrors();\r\n    }\r\n    readValues(values:any):any {\r\n        if (this.control !== undefined) this.control.readValues(values);\r\n    }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.control !== undefined) this.control.setError(fieldName, error);\r\n    }\r\n    setInitValues(values:any) {\r\n        if (this.control !== undefined) this.control.setInitValues(values);\r\n    }\r\n}\r\n\r\nclass ElementRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\r\n    }\r\n    get hasError():boolean {return false;}\r\n    get filled():boolean {return false;}\r\n}\r\n\r\nclass BootStrapRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className='form-group row'>\r\n            <label className='col-sm-2 col-form-label'>\r\n                {(this.row as LabelFormRow).label}\r\n            </label>\r\n            {this.control.render()}\r\n        </div>;\r\n\r\n        //has-success is-valid\r\n    }\r\n}\r\n\r\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new BootStrapRowContainer(form, row);\r\n}\r\n\r\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new ElementRowContainer(form, row);\r\n}\r\n","import * as React from 'react';\r\nimport { BoxId } from './boxId';\r\nimport { Tuid } from './tuid';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst TuidContent = (tuidName:string, values:any, x?:any) => {\r\n    return <>{tuidName}: {stringify(values)}</>;\r\n};\r\n\r\nfunction stringify(values: any): string {\r\n    let s = '{';\r\n    if (values === undefined) return 'undefined';\r\n    for (let i in values) {\r\n        let v = values[i];\r\n        s += i + ': ';\r\n        if (v === undefined) {\r\n            s += 'undefined';\r\n        }\r\n        else if (v === null) {\r\n            s += 'null';\r\n        }\r\n        else {\r\n            switch (typeof v) {\r\n                default:\r\n                    s += v;\r\n                    break;\r\n                case 'function':\r\n                    s += 'function';\r\n                    break;\r\n                case 'object':\r\n                    s += '{obj}';\r\n                    break;\r\n            }\r\n        }\r\n        s += ', ';\r\n    }\r\n    return s + '}';\r\n}\r\n\r\nexport class ReactBoxId implements BoxId {\r\n    readonly id: number;\r\n    protected tuid: Tuid;\r\n    protected ui: (values:any) => JSX.Element;\r\n    readonly isUndefined:boolean;\r\n    constructor(id: number, tuid: Tuid, ui: (values:any) => JSX.Element) {\r\n        this.id = id;\r\n        this.tuid = tuid;\r\n        this.ui = ui;\r\n        this.isUndefined = (this.tuid === undefined);\r\n    }\r\n\r\n    get obj():any {\r\n        return this.tuid.valueFromId(this.id);\r\n    }\r\n\r\n    render(ui:TvTemplet, x:any):JSX.Element {\r\n        if (this.id === undefined || this.id === null) return;\r\n        let boxName = this.boxName; // this.tuid.name;\r\n        let val = this.obj; // this.tuid.valueFromId(this.id);\r\n        if (this.isUndefined === true) {\r\n            if (ui !== undefined) return ui(val, x);\r\n            return TuidContent(boxName, val, x);\r\n        }\r\n        switch (typeof val) {\r\n            case 'undefined':\r\n                return <del className=\"text-black-50\">{boxName} undefined</del>;\r\n            case 'number':\r\n                return <del className=\"text-black-50\">{boxName} {this.id}</del>;\r\n        }\r\n        if (ui === undefined) {\r\n            ui = this.ui;\r\n        }\r\n        if (ui !== undefined) {\r\n            if (typeof ui !== 'function') {\r\n                ui = (ui as any).content;\r\n            }\r\n            if (ui !== undefined) {\r\n                let ret = ui(val/*, this.tuidUR.res*/);\r\n                if (ret !== undefined) return ret;\r\n                return <del className=\"text-danger\">{boxName} {this.id}</del>;\r\n            }\r\n        }\r\n\r\n        return TuidContent(boxName, val);\r\n    }\r\n\r\n    get boxName():string {return this.tuid.name}\r\n    // ui(): TvTemplet {return this.tuid.ui}\r\n    // res(): any {return this.tuid.res}\r\n\r\n    async assure(): Promise<void> {\r\n        await this.tuid.assureBox(this.id);\r\n    }\r\n}\r\n\r\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\r\n    let logContent:any;\r\n    let boxId:ReactBoxId = bi as ReactBoxId;\r\n    switch(typeof bi) {\r\n        case 'undefined': logContent = <>boxId undefined</>; break;\r\n        case 'number': logContent = <>id:{bi}</>; break;\r\n        default:\r\n            if (typeof boxId.render !== 'function') {\r\n                if (ui === undefined) {\r\n                    logContent = TuidContent(boxId.boxName, bi, x);\r\n                }\r\n                else {\r\n                    return ui(bi, x);\r\n                }\r\n            }\r\n            break;\r\n    }\r\n    if (logContent !== undefined) {\r\n        return <del className=\"text-danger\">{logContent}</del>;\r\n    }\r\n    return boxId.render(ui, x);\r\n}\r\n\r\nexport type TvTemplet = (values?:any, x?:any) => JSX.Element;\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: TvTemplet,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    if (tuidValue === undefined) {\r\n        if (nullUI === undefined) return <>[undefined]</>;\r\n        return nullUI();\r\n    }\r\n    if (tuidValue === null) {\r\n        if (nullUI === undefined) return <>[null]</>;\r\n        return nullUI();\r\n    }\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else {\r\n                let ret = ui(tuidValue, x);\r\n                if (ret !== undefined) return ret;\r\n                return <>{tuidValue}</>;\r\n            }\r\n        case 'object':\r\n            let divObj = boxIdContent(tuidValue, ui, x);\r\n            if (divObj !== undefined) return divObj;\r\n            return nullUI === undefined? <>id null</>: nullUI();\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n","import {HttpChannel} from './httpChannel';\r\nimport { Caller } from './caller';\r\n\r\nexport async function refetchApi(channel:HttpChannel, url:string, options:any, \r\n    resolve:(values:any)=>any, reject:(reason:any)=>void)\r\n{\r\n    await channel.fetch(url, options, resolve, reject);\r\n}\r\n\r\nexport abstract class ApiBase {\r\n    protected token: string;\r\n    protected path: string;\r\n    protected showWaiting: boolean;\r\n\r\n    constructor(path: string, showWaiting: boolean) {\r\n        this.path = path || '';\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\r\n\r\n    async xcall(caller:Caller<any>):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.xcall(this.path, caller);\r\n    }\r\n\r\n    public async call(url:string, method:string, body:any):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.callFetch(url, method, body);\r\n    }\r\n\r\n    public async get(path:string, params:any=undefined): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.get(this.path + path, params);\r\n    }\r\n\r\n    public async post(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.post(this.path + path, params);\r\n    }\r\n\r\n    public async put(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.put(this.path + path, params);\r\n    }\r\n\r\n    public async delete(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.delete(this.path + path, params);\r\n    }\r\n}\r\n","import * as React from 'react';\r\n//import _ from 'lodash';\r\nimport {nav} from './nav';\r\n\r\nexport interface PageHeaderProps {\r\n    back?: 'back' | 'close' | 'none';\r\n    center: string | JSX.Element;\r\n    right?: JSX.Element;\r\n    logout?: boolean | (()=>Promise<void>);\r\n    className?: string;\r\n}\r\nexport interface PageHeaderState {\r\n    hasBack: boolean;\r\n}\r\n\r\nexport class PageHeader extends React.Component<PageHeaderProps, PageHeaderState> {\r\n    constructor(props: PageHeaderProps) {\r\n        super(props);\r\n        //this.navChange = this.navChange.bind(this);\r\n        this.state = {\r\n            //hasBack: false,\r\n            hasBack: nav.level > 1\r\n        };\r\n    }\r\n    /*\r\n    navChange() {\r\n        this.setState({\r\n            hasBack: nav.level > 1\r\n        })\r\n    }\r\n    */\r\n    /*\r\n    componentWillMount() {\r\n        this.navChange();\r\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\r\n    }\r\n    */\r\n    componentWillUnmount() {\r\n        //nav.events.remove('change', this.navChangeHandler);\r\n    }\r\n    async back() {\r\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\r\n    }\r\n    openWindow() {\r\n        window.open(document.location.href);\r\n    }\r\n    private logoutClick = () => {\r\n        nav.showLogout(this.logout);\r\n    }\r\n    private logout = async () => {\r\n        let {logout} = this.props;\r\n        if (typeof logout === 'function') {\r\n            await logout(); \r\n        }\r\n        await nav.logout(undefined);\r\n    }\r\n    render() {\r\n        let b = this.state.hasBack || window.self !== window.top;\r\n        let {right, center, logout, className} = this.props;\r\n        let back:any, pop:any, debugLogout:any;\r\n        if (logout !== undefined && window.self === window.top) {\r\n            if ((typeof logout === 'boolean' && logout === true)\r\n                || typeof logout === 'function')\r\n            {\r\n                let {user} = nav;\r\n                if (user !== undefined) {\r\n                    let {nick, name} = user;\r\n                    debugLogout = <div className=\"d-flex align-items-center\">\r\n                        <small className=\"text-light\">{nick || name}</small>\r\n                        {\r\n                            // eslint-disable-next-line\r\n                            <a className=\"btn ml-2 cursor-pointer\" href=\"#\"\r\n                                role=\"button\"\r\n                                onClick={this.logoutClick}>\r\n                                <i className=\"fa fa-sign-out fa-lg\" />\r\n                            </a>\r\n                        }\r\n                    </div>;\r\n                }\r\n            }\r\n        }\r\n        if (b) {\r\n            switch (this.props.back) {\r\n                case 'none': back = undefined; break;\r\n                default:\r\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-angle-left\" /></nav>; break;\r\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\r\n            }\r\n        }\r\n        if (window.self !== window.top) {\r\n            console.log(document.location.href);\r\n            pop = <header onClick={this.openWindow} />;\r\n        }\r\n        let rightView = (right || debugLogout) && <aside>{right} {debugLogout}</aside>;\r\n        return <header className={className}>\r\n            {pop}\r\n            {back}\r\n            <div>{center}</div>\r\n            {rightView}\r\n        </header>;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { jsonStringify } from '../tools';\r\n\r\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page, List, FA } from '../../components';\r\nimport { Query } from '../../uq';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuery } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\r\n    protected vForm: VForm;\r\n    private row: React.StatelessComponent;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        let {row, queryRow} = this.ui;\r\n        this.row = queryRow || row || DefaultRow;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let params = this.vForm.getValues();\r\n        if (this.entity.isPaged === true) {\r\n            await this.entity.resetPage(30, params);\r\n            await this.entity.loadPage();\r\n            this.replacePage(this.pageResult);\r\n        }\r\n        else {\r\n            let data = await this.entity.query(params);\r\n            this.replacePage(this.queryResult, data);\r\n        }\r\n    }\r\n\r\n    again = () => {\r\n        this.vForm.reset();\r\n        this.replacePage(this.view);\r\n    }\r\n\r\n    renderExtra() {\r\n        return;\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render('mx-3 my-2')}\r\n        {this.renderExtra()}\r\n    </Page>;\r\n\r\n    protected pageResult = () => {\r\n        let {list} = this.entity;\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <List items={list} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    }\r\n\r\n    protected queryResult = observer((result:any) => {\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { Page, SearchBox, List } from '../../components';\r\nimport { PageItems } from '../../tool';\r\nimport { Query } from '../../uq';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuerySelect } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\r\n    private row: React.StatelessComponent;\r\n\r\n    PageItems:QueryPageItems;\r\n    ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        let {row, selectRow} = this.ui;\r\n        this.row = selectRow || row || DefaultRow;\r\n        //this.entity = this.controller.entity;\r\n        this.PageItems = new QueryPageItems(this.entity);\r\n        await this.onSearch(param);\r\n        this.openPage(this.view);\r\n    }\r\n    onSearch = async (key:string) => {\r\n        await this.PageItems.first(key);\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    private callOnSelected(item:any) {\r\n       this.closePage();\r\n       this.returnCall(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    view = () => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\nexport class QueryPageItems extends PageItems<any> {\r\n    private query: Query;\r\n    constructor(query: Query) {\r\n        super();\r\n        this.query = query;\r\n    }\r\n    protected async load():Promise<any[]> {\r\n        await  this.query.loadSchema();\r\n        let ret:any[];\r\n        if (this.query.isPaged === true)\r\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\r\n        else {\r\n            let data = await this.query.query(this.param);\r\n            //let data = await this.query.unpackReturns(res);\r\n            ret = data[this.query.returns[0].name];\r\n        }\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        if (item === undefined) this.pageStart = 0;\r\n    }\r\n}\r\n","import { StatelessComponent } from 'react';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { Query } from '../../uq';\r\nimport { VQueryMain } from './vQueryMain';\r\nimport { VQuerySelect } from './vQuerySelect';\r\n\r\nexport interface QueryUI extends EntityUI {\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    main?: typeof VQueryMain;\r\n    row?: StatelessComponent;\r\n    queryRow?: StatelessComponent;\r\n    selectRow?: StatelessComponent;\r\n}\r\n\r\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\r\n}\r\n\r\nexport class CQuery extends CQueryBase {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VQueryMain);\r\n    }\r\n\r\n    protected get VQueryMain():typeof VQueryMain {return (this.ui && this.ui.main) || VQueryMain}\r\n}\r\n\r\nexport class CQuerySelect extends CQueryBase {\r\n    protected async internalStart(param?:any) {\r\n        await this.openVPage(this.VQuerySelect, param);\r\n    }\r\n\r\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\r\n}\r\n","export * from './cQuery';\r\nexport * from './vQueryMain';\r\nexport * from './vQuerySelect';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { UiTextItem } from '../schema';\r\nimport { ResUploader } from '../resUploader';\r\nimport { Image } from '../image';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class ImageItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    private resUploader: ResUploader;\r\n    @observable private resId: string;\r\n    @observable private overSize: boolean = false;\r\n\r\n    protected async internalStart():Promise<any> {\r\n        this.resId = this.value;        \r\n        return new Promise<any>((resolve, reject) => {\r\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\r\n        });\r\n    }\r\n\r\n    private upload = async () => {\r\n        if (!this.resUploader) return;\r\n        let ret = await this.resUploader.upload();\r\n        if (ret === null) {\r\n            this.overSize = true;\r\n            setTimeout(() => this.overSize = false, 3000);\r\n            return;\r\n        }\r\n        this.resId = ret;\r\n        this.isChanged = (this.resId !== this.value);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.resId)}>保存</button>;\r\n        let overSize:any;\r\n        if (this.overSize === true) {\r\n            overSize = <div className=\"text-danger\">\r\n                <i className=\"fa fa-times-circle\" /> 图片文件大小超过2M，无法上传\r\n            </div>;\r\n        }\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"my-3 px-3 py-3 bg-white\">\r\n                <div>\r\n                    <div>上传图片：</div>\r\n                    <div className=\"my-3\">\r\n                        <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-primary\" onClick={this.upload}>上传</button>\r\n                    </div>\r\n                </div>\r\n                {overSize}\r\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"w-12c h-12c mr-4\"\r\n                        style={{border: '1px dotted gray', padding: '8px'}}>\r\n                        <Image className=\"w-100 h-100\" src={this.resId} />\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"small\">图片预览</div>\r\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import {CenterApiBase} from '../net';\r\nimport {decodeUserToken} from '../tool/user';\r\n//import { nav } from '../ui';\r\n\r\nexport interface RegisterParameter {\r\n    nick:string, \r\n    user:string, \r\n    pwd:string,\r\n    country:number, \r\n    mobile:number, \r\n    mobileCountry:number,\r\n    email:string,\r\n    verify:string,\r\n};\r\n\r\nexport class UserApi extends CenterApiBase {\r\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\r\n        //(params as any).device = nav.local.device.get();\r\n        let ret = await this.get('login', params);\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeUserToken(ret);\r\n            case 'object':\r\n                let token = ret.token;\r\n                let user = decodeUserToken(token);\r\n                let {nick, icon} = ret;\r\n                if (nick) user.nick = nick;\r\n                if (icon) user.icon = icon;\r\n                return user;\r\n        }\r\n        // !== undefined) return decodeToken(token);\r\n    }\r\n    async register(params: RegisterParameter): Promise<any>\r\n    {\r\n        return await this.post('register', params);\r\n    }\r\n\r\n    async setVerify(account:string, type:'mobile'|'email') {\r\n        return await this.post('set-verify', {account:account, type:type});\r\n    }\r\n\r\n    async checkVerify(account:string, verify:string) {\r\n        return await this.post('check-verify', {account:account, verify:verify});\r\n    }\r\n\r\n    async isExists(account:string) {\r\n        return await this.get('is-exists', {account:account});\r\n    }\r\n\r\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email') {\r\n        return await this.post('reset-password', {account:account, password, verify, type});\r\n    }\r\n    \r\n    async userSetProp(prop:string, value:any) {\r\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\r\n    }\r\n}\r\n\r\nexport const userApi = new UserApi('tv/user/', undefined);\r\n","import {observable, IObservableArray, computed} from 'mobx';\r\nimport {uid} from './uid';\r\n\r\nexport abstract class PageItems<T> {\r\n    constructor(itemObservable:boolean = false) {\r\n        this._items = observable.array<T>([], {deep:itemObservable});\r\n    }\r\n    private isFirst: boolean = true;\r\n    @observable loading: boolean = false;\r\n    @observable private beforeLoad: boolean = true;\r\n    @observable protected loaded: boolean = false;\r\n    protected _items:IObservableArray<T>;\r\n    @observable allLoaded: boolean = false;\r\n    @computed get items():IObservableArray<T> {\r\n        if (this.beforeLoad === true) return null;\r\n        if (this.loaded === false) return undefined;\r\n        return this._items;\r\n    }\r\n\r\n    @observable topDiv:string;\r\n    @observable bottomDiv:string;\r\n    scrollToTop() {\r\n        this.topDiv = '$$'+uid();\r\n    }\r\n    scrollToBottom() {\r\n        this.bottomDiv = '$$'+uid();\r\n    }\r\n\r\n    protected param: any;\r\n    protected firstSize = 100;\r\n    protected pageStart = undefined;\r\n    protected pageSize = 30;\r\n    protected appendPosition:'head'|'tail' = 'tail';\r\n\r\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\r\n    protected abstract setPageStart(item:T);\r\n\r\n    reset() {\r\n        this.isFirst = true;\r\n        this.beforeLoad = true;\r\n        this.loaded = false;\r\n        this.param = undefined;\r\n        this.allLoaded = false;\r\n        this._items.clear();\r\n        //this.setPageStart(undefined);\r\n    }\r\n\r\n    append(item:T) {\r\n        if (this.appendPosition === 'tail')\r\n            this._items.unshift(item);\r\n        else\r\n            this._items.push(item);\r\n    }\r\n\r\n    async first(param:any):Promise<void> {\r\n        this.reset();\r\n        this.beforeLoad = false;\r\n        this.param = param;\r\n        await this.more();        \r\n    }\r\n\r\n    protected async onLoad(): Promise<void> {}\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        if (this.loading === true) return;\r\n        this.loading = true;\r\n        await this.onLoad();\r\n        if (this.pageStart === undefined) this.setPageStart(undefined);\r\n        let pageSize = this.pageSize + 1;\r\n        if (this.isFirst === true) {\r\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\r\n        }\r\n        let ret = await this.load(\r\n                this.param, \r\n                this.pageStart,\r\n                pageSize);\r\n        this.loading = false;\r\n        this.loaded = true;\r\n        let len = ret.length;\r\n        if ((this.isFirst===true && len>this.firstSize) ||\r\n            (this.isFirst===false && len>this.pageSize))\r\n        {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len === 0) {\r\n            this._items.clear();\r\n            return;\r\n        }\r\n        this.setPageStart(ret[len-1]);\r\n        if (this.appendPosition === 'tail')\r\n            this._items.push(...ret);\r\n        else\r\n            this._items.unshift(...ret.reverse());\r\n        this.isFirst = false;\r\n    }\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function Loading() {\r\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\r\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\nimport { nav } from './nav';\r\n\r\nexport interface ResUploaderProps {\r\n    className?: string;\r\n    multiple?: boolean;\r\n    maxSize?: number;\r\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport class ResUploader extends React.Component<ResUploaderProps> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    upload = async ():Promise<string> => {\r\n        let {maxSize} = this.props;\r\n        if (maxSize === undefined || maxSize <= 0) \r\n            maxSize = 100000000000;\r\n        else\r\n            maxSize = maxSize * 1024;\r\n        let resUrl = nav.resUrl + 'upload';\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            if (file.size > maxSize) return null;\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(resUrl, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            let json = await res.json();\r\n            return ':' + json.res.id;\r\n        }\r\n        catch (err) {\r\n            console.error('%s %s', resUrl, err);\r\n        }\r\n    }\r\n    render() {\r\n        let {className, multiple, onFilesChange} = this.props;\r\n        return <input \r\n            className={className}\r\n            ref={t=>this.fileInput=t} \r\n            onChange={onFilesChange}\r\n            type='file' name='file' multiple={multiple} />\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { UqApi, UqData, UnitxApi, appInFrame } from '../net';\r\nimport { Tuid, TuidDiv, TuidImport, TuidInner, TuidBox, TuidsCache } from './tuid';\r\nimport { Action } from './action';\r\nimport { Sheet } from './sheet';\r\nimport { Query } from './query';\r\nimport { Book } from './book';\r\nimport { History } from './history';\r\nimport { Map } from './map';\r\nimport { Pending } from './pending';\r\nimport { CreateBoxId, BoxId } from './tuid';\r\n//import { UqCache } from './caches';\r\nimport { LocalMap, LocalCache } from '../tool';\r\nimport { UQsMan } from './uqsMan';\r\nimport { ReactBoxId } from './tuid/reactBoxId';\r\n\r\nexport type FieldType = 'id' | 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text'\r\n    | 'datetime' | 'date' | 'time';\r\n\r\nexport function fieldDefaultValue(type:FieldType) {\r\n    switch (type) {\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n        case 'dec':\r\n            return 0;\r\n        case 'char':\r\n        case 'text':\r\n            return '';\r\n        case 'datetime':\r\n        case 'date':\r\n            return '2000-1-1';\r\n        case 'time':\r\n            return '0:00';\r\n    }\r\n}\r\n\r\nexport interface Field {\r\n    name: string;\r\n    type: FieldType;\r\n    tuid?: string;\r\n    arr?: string;\r\n    null?: boolean;\r\n    size?: number;\r\n    owner?: string;\r\n    _tuid: TuidBox;\r\n}\r\nexport interface ArrFields {\r\n    name: string;\r\n    fields: Field[];\r\n    id?: string;\r\n    order?: string;\r\n}\r\nexport interface FieldMap {\r\n    [name:string]: Field;\r\n}\r\nexport interface SchemaFrom {\r\n    owner:string;\r\n    uq:string;\r\n}\r\nexport interface TuidModify {\r\n    max: number;\r\n    seconds: number;\r\n}\r\n\r\nexport class UqMan {\r\n    private readonly actions: {[name:string]: Action} = {};\r\n    private readonly sheets: {[name:string]: Sheet} = {};\r\n    private readonly queries: {[name:string]: Query} = {};\r\n    private readonly books: {[name:string]: Book} = {};\r\n    private readonly maps: {[name:string]: Map} = {};\r\n    private readonly histories: {[name:string]: History} = {};\r\n    private readonly pendings: {[name:string]: Pending} = {};\r\n    private readonly tuidsCache: TuidsCache;\r\n    private readonly localAccess: LocalCache;\r\n    private readonly tvs:{[entity:string]:(values:any)=>JSX.Element};\r\n    readonly localMap: LocalMap;\r\n    readonly localModifyMax: LocalCache;\r\n    readonly tuids: {[name:string]: Tuid} = {};\r\n    readonly createBoxId: CreateBoxId;\r\n    readonly newVersion: boolean;\r\n    readonly uqOwner: string;\r\n    readonly uqName: string;\r\n    readonly name: string;\r\n    readonly uqApi: UqApi;\r\n    readonly id: number;\r\n\r\n    uqVersion: number;\r\n\r\n    constructor(uqs:UQsMan, uqData: UqData, createBoxId:CreateBoxId, tvs:{[entity:string]:(values:any)=>JSX.Element}) {\r\n        this.createBoxId = createBoxId;\r\n        if (createBoxId === undefined) {\r\n            this.createBoxId = this.createBoxIdFromTVs;\r\n            this.tvs = tvs || {};\r\n        }\r\n        let {id, uqOwner, uqName, access, newVersion: clearTuids} = uqData;\r\n        this.newVersion = clearTuids;\r\n        this.uqOwner = uqOwner;\r\n        this.uqName = uqName;\r\n        this.id = id;\r\n        this.name = uqOwner + '/' + uqName;\r\n        this.uqVersion = 0;\r\n        this.localMap = uqs.localMap.map(this.name);\r\n        this.localModifyMax = this.localMap.child('$modifyMax');\r\n        this.localAccess = this.localMap.child('$access');\r\n        //let hash = document.location.hash;\r\n        let baseUrl = 'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        if (this.name === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            this.uqApi = new UnitxApi(appInFrame.unit);\r\n        }\r\n        else {\r\n            this.uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\r\n        }\r\n        this.tuidsCache = new TuidsCache(this);\r\n    }\r\n\r\n    get entities() {\r\n        return _.merge({}, \r\n            this.actions, this.sheets, this.queries, this.books,\r\n            this.maps, this.histories, this.pendings, this.tuids\r\n        );\r\n    }\r\n\r\n    private createBoxIdFromTVs:CreateBoxId = (tuid:Tuid, id:number):BoxId =>{\r\n        let {name} = tuid;\r\n        /*\r\n        let tuidUR = this.tuidURs[name];\r\n        if (tuidUR === undefined) {\r\n            let {ui, res} = this.getUI(tuid);\r\n            this.tuidURs[name] = tuidUR = new TuidWithUIRes(tuid, ui, res);\r\n        }\r\n        */\r\n        return new ReactBoxId(id, tuid, this.tvs[name]);\r\n    }\r\n\r\n    tuid(name:string):Tuid {return this.tuids[name.toLowerCase()]}\r\n    tuidDiv(name:string, div:string):TuidDiv {\r\n        let tuid = this.tuids[name.toLowerCase()]\r\n        return tuid && tuid.div(div.toLowerCase());\r\n    }\r\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\r\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\r\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\r\n    book(name:string):Book {return this.books[name.toLowerCase()]}\r\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\r\n    history(name:string):History {return this.histories[name.toLowerCase()]}\r\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\r\n\r\n    sheetFromTypeId(typeId:number):Sheet {\r\n        for (let i in this.sheets) {\r\n            let sheet = this.sheets[i];\r\n            if (sheet.typeId === typeId) return sheet;\r\n        }\r\n    }\r\n\r\n    tuidArr: Tuid[] = [];\r\n    actionArr: Action[] = [];\r\n    sheetArr: Sheet[] = [];\r\n    queryArr: Query[] = [];\r\n    bookArr: Book[] = [];\r\n    mapArr: Map[] = [];\r\n    historyArr: History[] = [];\r\n    pendingArr: Pending[] = [];\r\n\r\n    async init() {\r\n        await this.uqApi.init();\r\n    }\r\n\r\n    async loadEntities(): Promise<string> {\r\n        try {\r\n            let accesses = this.localAccess.get();\r\n            if (!accesses) {\r\n                accesses = await this.uqApi.loadAccess();\r\n            }\r\n            if (!accesses) return;\r\n            this.buildEntities(accesses);\r\n            if (this.uqName === 'common') {\r\n                this.pullModify(12);\r\n            }\r\n        }\r\n        catch (err) {\r\n            return err;\r\n        }\r\n    }\r\n    /*\r\n    async loadEntities() {\r\n        let accesses = await this.uqApi.loadEntities();\r\n        this.buildEntities(accesses);\r\n    }\r\n    */\r\n    buildEntities(entities:any) {\r\n        if (entities === undefined) {\r\n            debugger;\r\n        }\r\n        this.localAccess.set(entities);\r\n        let {access, tuids, version} = entities;\r\n        this.uqVersion = version;\r\n        this.buildTuids(tuids);\r\n        this.buildAccess(access);\r\n    }\r\n\r\n    /*\r\n    async checkAccess() {\r\n        return await this.uqApi.checkAccess();\r\n    }\r\n    */\r\n\r\n    async loadEntitySchema(entityName: string): Promise<any> {\r\n        return await this.uqApi.schema(entityName);\r\n    }\r\n\r\n    getTuid(name:string): Tuid {\r\n        return this.tuids[name];\r\n    }\r\n\r\n    private buildTuids(tuids:any) {\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {typeId, from} = schema;\r\n            let tuid = this.newTuid(i, typeId, from);\r\n            tuid.sys = true;\r\n        }\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let tuid = this.getTuid(i);\r\n            tuid.setSchema(schema);\r\n        }\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.buildFieldsTuid();\r\n        }\r\n    }\r\n\r\n    private buildAccess(access:any) {\r\n        for (let a in access) {\r\n            let v = access[a];\r\n            switch (typeof v) {\r\n                case 'string': this.fromType(a, v); break;\r\n                case 'object': this.fromObj(a, v); break;\r\n            }\r\n        }\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.tuidsCache.cacheTuids(defer);\r\n    }\r\n\r\n    newAction(name:string, id:number):Action {\r\n        let action = this.actions[name];\r\n        if (action !== undefined) return action;\r\n        action = this.actions[name] = new Action(this, name, id)\r\n        this.actionArr.push(action);\r\n        return action;\r\n    }\r\n    private newTuid(name:string, id:number, from:SchemaFrom):Tuid {\r\n        let tuid = this.tuids[name];\r\n        if (tuid !== undefined) return tuid;\r\n        if (from !== undefined)\r\n            tuid = new TuidImport(this, name, id, from);\r\n        else\r\n            tuid = new TuidInner(this, name, id);\r\n        this.tuids[name] = tuid;\r\n        this.tuidArr.push(tuid);\r\n        return tuid;\r\n    }\r\n    newQuery(name:string, id:number):Query {\r\n        let query = this.queries[name];\r\n        if (query !== undefined) return query;\r\n        query = this.queries[name] = new Query(this, name, id)\r\n        this.queryArr.push(query);\r\n        return query;\r\n    }\r\n    private newBook(name:string, id:number):Book {\r\n        let book = this.books[name];\r\n        if (book !== undefined) return book;\r\n        book = this.books[name] = new Book(this, name, id);\r\n        this.bookArr.push(book);\r\n        return book;\r\n    }\r\n    private newMap(name:string, id:number):Map {\r\n        let map = this.maps[name];\r\n        if (map !== undefined) return map;\r\n        map = this.maps[name] = new Map(this, name, id)\r\n        this.mapArr.push(map);\r\n        return map;\r\n    }\r\n    private newHistory(name:string, id:number):History {\r\n        let history = this.histories[name];\r\n        if (history !== undefined) return;\r\n        history = this.histories[name] = new History(this, name, id)\r\n        this.historyArr.push(history);\r\n        return history;\r\n    }\r\n    private newPending(name:string, id:number):Pending {\r\n        let pending = this.pendings[name];\r\n        if (pending !== undefined) return;\r\n        pending = this.pendings[name] = new Pending(this, name, id)\r\n        this.pendingArr.push(pending);\r\n        return pending;\r\n    }\r\n    newSheet(name:string, id:number):Sheet {\r\n        let sheet = this.sheets[name];\r\n        if (sheet !== undefined) return sheet;\r\n        sheet = this.sheets[name] = new Sheet(this, name, id);\r\n        this.sheetArr.push(sheet);\r\n        return sheet;\r\n    }\r\n    private fromType(name:string, type:string) {\r\n        let parts = type.split('|');\r\n        type = parts[0];\r\n        let id = Number(parts[1]);\r\n        switch (type) {\r\n            //case 'uq': this.id = id; break;\r\n            case 'tuid':\r\n                // Tuid should not be created here!;\r\n                //let tuid = this.newTuid(name, id);\r\n                //tuid.sys = false;\r\n                break;\r\n            case 'action': this.newAction(name, id); break;\r\n            case 'query': this.newQuery(name, id); break;\r\n            case 'book': this.newBook(name, id); break;\r\n            case 'map': this.newMap(name, id); break;\r\n            case 'history': this.newHistory(name, id); break;\r\n            case 'sheet':this.newSheet(name, id); break;\r\n            case 'pending': this.newPending(name, id); break;\r\n        }\r\n    }\r\n    private fromObj(name:string, obj:any) {\r\n        switch (obj['$']) {\r\n            case 'sheet': this.buildSheet(name, obj); break;\r\n        }\r\n    }\r\n    private buildSheet(name:string, obj:any) {\r\n        let sheet = this.sheets[name];\r\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\r\n        sheet.build(obj);\r\n    }\r\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {tuid} = f;\r\n            if (tuid === undefined) continue;\r\n            let t = this.getTuid(tuid);\r\n            if (t === undefined) continue;\r\n            f._tuid = t.buildTuidBox();\r\n        }\r\n        for (let f of fields) {\r\n            let {owner} = f;\r\n            if (owner === undefined) continue;\r\n            let ownerField = fields.find(v => v.name === owner);\r\n            if (ownerField === undefined) {\r\n                if (mainFields !== undefined) {\r\n                    ownerField = mainFields.find(v => v.name === owner);\r\n                }\r\n                if (ownerField === undefined) {\r\n                    debugger;\r\n                    throw new Error(`owner field ${owner} is undefined`);\r\n                }\r\n            }\r\n            let {arr, tuid} = f;\r\n            let t = this.getTuid(ownerField._tuid.tuid.name);\r\n            if (t === undefined) continue;\r\n            let div = t.div(arr || tuid);\r\n            f._tuid = div && div.buildTuidDivBox(ownerField);\r\n            if (f._tuid === undefined) {\r\n                debugger;\r\n                throw new Error(`owner field ${owner} is not tuid`);\r\n            }\r\n        }\r\n    }\r\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\r\n        if (arrFields === undefined) return;\r\n        for (let af of arrFields) {\r\n            let {fields} = af;\r\n            if (fields === undefined) continue;\r\n            this.buildFieldTuid(fields, mainFields);\r\n        }\r\n    }\r\n\r\n    pullModify(modifyMax:number) {\r\n        this.tuidsCache.pullModify(modifyMax);\r\n    }\r\n}\r\n","import { Entity } from './entity';\r\nimport { PageItems } from '../tool/pageItems';\r\nimport { EntityCaller } from './caller';\r\n\r\nexport interface SheetState {\r\n    name: string;\r\n    actions: SheetAction[];\r\n}\r\n\r\nexport interface SheetAction {\r\n    name: string;\r\n}\r\n\r\nexport interface StateCount {\r\n    state: string;\r\n    count: number;\r\n}\r\n\r\nexport class Sheet extends Entity {\r\n    get typeName(): string { return 'sheet';}\r\n    states: SheetState[];\r\n\r\n    /*\r\n    setStates(states: SheetState[]) {\r\n        for (let state of states) {\r\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\r\n        }\r\n    }*/\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.states = schema.states;\r\n    }\r\n    build(obj:any) {\r\n        this.states = [];\r\n        for (let op of obj.ops) {\r\n            this.states.push({name: op, actions:undefined});\r\n        }\r\n        /*\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }\r\n    /*\r\n    private setStateAccess(s:SheetState, s1:SheetState) {\r\n        if (s === undefined) return;\r\n        for (let action of s1.actions) {\r\n            let acn = action.name;\r\n            let ac = s.actions.find(a=>a.name === acn);\r\n            if (ac === undefined) continue;\r\n            s.actions.push(action);\r\n        }\r\n    }*/\r\n    async save(discription:string, data:any):Promise<any> {\r\n        /*\r\n        await this.loadSchema();\r\n        let {id} = this.uq;\r\n        let text = this.pack(data);\r\n\r\n        let ret = await this.uqApi.sheetSave(this.name, );\r\n        return ret;\r\n        */\r\n        let {id} = this.uq;\r\n        //let text = this.pack(data);\r\n        let params = {app: id, discription: discription, data:data};\r\n        return await new SaveCaller(this, params).request();\r\n        /*\r\n        let {id, state} = ret;\r\n        if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n        */\r\n    }\r\n    async action(id:number, flow:number, state:string, action:string) {\r\n        /*\r\n        await this.loadSchema();\r\n        return await this.uqApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\r\n        */\r\n        return await new ActionCaller(this, {id:id, flow:flow, state:state, action:action}).request();\r\n    }\r\n    private unpack(data:any):any {\r\n        //if (this.schema === undefined) await this.loadSchema();\r\n        let ret = data[0];\r\n        let brief = ret[0];\r\n        let sheetData = this.unpackSheet(brief.data);\r\n        let flows = data[1];\r\n        return {\r\n            brief: brief,\r\n            data: sheetData,\r\n            flows: flows,\r\n        }\r\n    }\r\n    async getSheet(id:number):Promise<any> {\r\n        /*\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.getSheet(this.name, id);\r\n        */\r\n        let ret = await new GetSheetCaller(this, id).request();\r\n        if (ret[0].length === 0) return await this.getArchive(id);\r\n        return this.unpack(ret);\r\n    }\r\n    async getArchive(id:number):Promise<any> {\r\n        /*\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.sheetArchive(this.name, id)\r\n        return this.unpack(ret);\r\n        */\r\n        let ret = await new SheetArchiveCaller(this, id).request();\r\n        return this.unpack(ret);\r\n    }\r\n\r\n    async getArchives(pageStart:number, pageSize:number) {\r\n        /*\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n        */\r\n        let params = {pageStart:pageStart, pageSize:pageSize};\r\n        return await new SheetArchivesCaller(this, params).request();\r\n    }\r\n\r\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        /*\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n        */\r\n        let params = {state:state, pageStart:pageStart, pageSize:pageSize};\r\n        return await new StateSheetsCaller(this, params).request();\r\n    }\r\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\r\n\r\n    async stateSheetCount():Promise<StateCount[]> {\r\n        /*\r\n        await this.loadSchema();\r\n        let ret:StateCount[] = await this.uqApi.stateSheetCount(this.name);\r\n        return this.states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = ret.find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n        */\r\n        return await new StateSheetCountCaller(this, undefined).request();\r\n    }\r\n\r\n    async mySheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        /*\r\n        await this.loadSchema();\r\n        let ret = await this.uqApi.mySheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n        */\r\n        let params = {state:state, pageStart:pageStart, pageSize:pageSize};\r\n        return await new MySheetsCaller(this, params).request();\r\n    }\r\n}\r\n\r\n\r\nabstract class SheetCaller<T> extends EntityCaller<T> {\r\n    protected get entity(): Sheet {return this._entity as Sheet;}\r\n    protected readonly suffix:string;\r\n    get path():string {return `sheet/${this.entity.name}/${this.suffix}`;}\r\n}\r\n\r\nclass SaveCaller extends SheetCaller<{app:number; discription:string; data:any}> {\r\n    get path():string {return `sheet/${this.entity.name}`;}\r\n    buildParams() {\r\n        let {app, discription, data} = this.params;\r\n        return {\r\n            app: app,\r\n            discription: discription,\r\n            data: this.entity.pack(data)\r\n        };\r\n    }\r\n}\r\n\r\nclass ActionCaller extends SheetCaller<{id:number, flow:number, state:string, action:string}> {\r\n    method = 'PUT';\r\n    get path():string {return `sheet/${this.entity.name}`;}\r\n    //buildParams() {return this.entity.buildParams(this.params);}\r\n}\r\n\r\nclass GetSheetCaller extends SheetCaller<number> {\r\n    //protected readonly params: number;  // id\r\n    method = 'GET';\r\n    //private id:number;\r\n    //protected readonly suffix = 'archive';\r\n    buildParams() {}\r\n    get path():string {return `sheet/${this.entity.name}/get/${this.params}`;}\r\n}\r\n\r\nclass SheetArchiveCaller extends SheetCaller<number> {\r\n    protected readonly params: number;  // id\r\n    method = 'GET';\r\n    //protected readonly suffix = 'archive';\r\n    buildParams() {}\r\n    get path():string {return `sheet/${this.entity.name}/archive/${this.params}`;}\r\n}\r\n\r\nclass SheetArchivesCaller extends SheetCaller<{pageStart:number, pageSize:number}> {\r\n    protected readonly suffix = 'archives';\r\n}\r\n\r\nclass StateSheetsCaller extends SheetCaller<{state:string, pageStart:number, pageSize:number}> {\r\n    protected readonly suffix = 'states';\r\n}\r\n\r\nclass StateSheetCountCaller extends SheetCaller<undefined> {\r\n    method = 'GET';\r\n    protected readonly suffix = 'statecount';\r\n    xresult(res:any):any {\r\n        let {states} = this.entity;\r\n        return states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = (res as any[]).find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n    }\r\n}\r\n\r\nclass MySheetsCaller extends SheetCaller<{state:string, pageStart:number, pageSize:number}> {\r\n    protected readonly suffix = 'my-sheets';\r\n    xresult(res:any):any {\r\n        return res;\r\n        /*\r\n        let {returns} = this.entity;\r\n        let len = returns.length;\r\n        let ret:{[r:string]:any[]} = {};\r\n        for (let i=0; i<len; i++) {\r\n            let retSchema = returns[i];\r\n            ret[retSchema.name] = res[i];\r\n        }\r\n        return ret;\r\n        */\r\n    }\r\n}\r\n\r\nexport class PageStateItems<T> extends PageItems<T> {\r\n    private sheet: Sheet;\r\n    constructor(sheet: Sheet) {\r\n        super(true);\r\n        this.sheet = sheet;\r\n        this.pageSize = 10;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import {Query} from './query';\r\nimport { QueryQueryCaller } from './caller';\r\n\r\nexport class Book extends Query {\r\n    get typeName(): string { return 'book';}\r\n    protected queryApiName = 'book';\r\n\r\n    protected queryCaller(params: any): QueryQueryCaller {\r\n        return new BookQueryCaller(this, params);\r\n    }\r\n}\r\n\r\nexport class BookQueryCaller extends QueryQueryCaller {\r\n    //protected get entity(): Query {return this._entity as Query};\r\n    get path():string {return `book/${this.entity.name}`;}\r\n    /*\r\n    xresult(res:any) {\r\n        let data = this.entity.unpackReturns(res);\r\n        return data;\r\n    }\r\n    buildParams() {return this.entity.buildParams(this.params);}\r\n    */\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class History extends Query {\r\n    get typeName(): string { return 'history';}\r\n    protected queryApiName = 'history';\r\n}\r\n","import { Entity } from './entity';\r\nimport { Action, ActionSubmitCaller } from './action';\r\nimport { Query } from './query';\r\nimport { Field } from './uqMan';\r\nimport { EntityCaller, QueryPageCaller, QueryQueryCaller } from './caller';\r\n\r\ninterface MapActions {\r\n    add: Action;\r\n    del: Action;\r\n}\r\ninterface MapQueries {\r\n    all: Query;\r\n    page: Query;\r\n    query: Query;\r\n}\r\n\r\nexport class Map extends Entity {\r\n    get typeName(): string { return 'map';}\r\n    keys: Field[];\r\n    actions: MapActions = {} as any;\r\n    queries: MapQueries = {} as any;\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.schemaFrom = this.schema.from;\r\n        let {actions, queries, keys} = schema;\r\n        this.uq.buildFieldTuid(this.keys = keys);\r\n        //let t = this.schemaStringify();\r\n        for (let i in actions) {\r\n            let actionSchema = actions[i];\r\n            let {name} = actionSchema;\r\n            let action = this.uq.newAction(name, undefined);\r\n            action.setSchema(actionSchema);\r\n            action.buildFieldsTuid();\r\n            this.actions[i] = action;\r\n        }\r\n        for (let i in queries) {\r\n            let querySchema = queries[i];\r\n            let {name} = querySchema;\r\n            let query = this.uq.newQuery(name, undefined);\r\n            query.setSchema(querySchema);\r\n            query.buildFieldsTuid();\r\n            this.queries[i] = query;\r\n        }\r\n    }\r\n\r\n    async add(param:any) {\r\n        /*\r\n        await this.loadSchema();\r\n        return await this.actions.add.submit(param);\r\n        */\r\n        let ret = await new AddCaller(this, param).request();\r\n        return ret;\r\n    }\r\n\r\n    async del(param:any) {\r\n        /*\r\n        await this.loadSchema();\r\n        return await this.actions.del.submit(param);\r\n        */\r\n        let ret = await new DelCaller(this, param).request();\r\n        return ret;\r\n    }\r\n\r\n    async all() {\r\n        /*\r\n        await this.loadSchema();\r\n        return await this.queries.all.query({});\r\n        */\r\n        let ret = await new AllCaller(this, undefined).request();\r\n        return ret;\r\n    }\r\n\r\n    async page(param:any, pageStart:any, pageSize: number) {\r\n        /*\r\n        await this.loadSchema();\r\n        return await this.queries.page.page(param, pageStart, pageSize);\r\n        */\r\n        let ret = await new PageCaller(this, {pageStart:pageStart, pageSize:pageSize, param:param}).request();\r\n        return ret;\r\n    }\r\n\r\n    async query(param:any) {\r\n        /*\r\n        await this.loadSchema();\r\n        return await this.queries.query.query(param);\r\n        */\r\n       let qc = new QueryCaller(this, param);\r\n       let ret = await qc.request();\r\n       return ret;\r\n   }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n\r\nabstract class MapCaller extends EntityCaller<any> {\r\n    protected get entity(): Map {return this._entity as Map;}\r\n    get path():string {return undefined;}\r\n\r\n    protected abstract getCaller(param: any):EntityCaller<any>;\r\n\r\n    protected async innerCall(): Promise<any> {\r\n        let caller = this.getCaller(this.params);\r\n        let res = await this.entity.uqApi.xcall(caller);\r\n        let ret = caller.xresult(res.res);\r\n        return {res: ret};\r\n    }\r\n\r\n    buildParams() {\r\n        let p = super.buildParams();\r\n        return p;\r\n    }\r\n}\r\n\r\nclass AddCaller extends MapCaller {\r\n    protected getCaller(param:any):EntityCaller<any> {\r\n        return new MapAddCaller(this.entity, this.entity.actions.add, param);\r\n    }\r\n}\r\n\r\nclass DelCaller extends MapCaller {\r\n    protected getCaller(param:any):EntityCaller<any> {\r\n        return new MapDelCaller(this.entity, this.entity.actions.add, param);\r\n    }\r\n}\r\n\r\nclass AllCaller extends MapCaller {\r\n    protected getCaller(param:any):EntityCaller<any> {\r\n        return new MapAllCaller(this.entity, this.entity.queries.all, param);\r\n    }\r\n}\r\n\r\nclass PageCaller extends MapCaller {\r\n    protected getCaller(param:any):EntityCaller<any> {\r\n        return new MapPageCaller(this.entity, this.entity.queries.page, param);\r\n    }\r\n}\r\n\r\nclass QueryCaller extends MapCaller {\r\n    protected getCaller(param:any):EntityCaller<any> {\r\n        return new MapQueryCaller(this.entity, this.entity.queries.query, param);\r\n    }\r\n}\r\n\r\nclass MapAddCaller extends ActionSubmitCaller {\r\n    private map: Map;\r\n    constructor(map:Map, action:Action, params:any) {\r\n        super(action, params);\r\n        this.map = map;\r\n    }\r\n\r\n    get path():string {return `map/${this.map.name}/add`}\r\n    get headers(): {[header:string]: string} {return undefined;}\r\n    /*\r\n        let {ver, uq} = this.map;\r\n        let {uqVersion} = uq;\r\n        return {\r\n            uq: `${uqVersion}`,\r\n            en: `${ver}`,\r\n        }\r\n    }*/\r\n}\r\n\r\nclass MapDelCaller extends ActionSubmitCaller {\r\n    private map: Map;\r\n    constructor(map:Map, action:Action, params:any) {\r\n        super(action, params);\r\n        this.map = map;\r\n    }\r\n\r\n    get path():string {return `map/${this.map.name}/del`}\r\n    get headers(): {[header:string]: string} {return undefined}\r\n    /*\r\n        let {ver, uq} = this.map;\r\n        let {uqVersion} = uq;\r\n        return {\r\n            uq: `${uqVersion}`,\r\n            en: `${ver}`,\r\n        }\r\n    }*/\r\n}\r\n\r\nclass MapAllCaller extends QueryPageCaller {\r\n    private map: Map;\r\n    constructor(map:Map, query:Query, params:any) {\r\n        super(query, params);\r\n        this.map = map;\r\n    }\r\n\r\n    get path():string {return `map/${this.map.name}/all`}\r\n    get headers(): {[header:string]: string} {return undefined}\r\n    /*\r\n        let {ver, uq} = this.map;\r\n        let {uqVersion} = uq;\r\n        return {\r\n            uq: `${uqVersion}`,\r\n            en: `${ver}`,\r\n        }\r\n    }*/\r\n}\r\n\r\n\r\nclass MapPageCaller extends QueryPageCaller {\r\n    private map: Map;\r\n    constructor(map:Map, query:Query, params:any) {\r\n        super(query, params);\r\n        this.map = map;\r\n    }\r\n\r\n    get path():string {return `map/${this.map.name}/page`}\r\n    get headers(): {[header:string]: string} {return undefined}\r\n    /*\r\n        let {ver, uq} = this.map;\r\n        let {uqVersion} = uq;\r\n        return {\r\n            uq: `${uqVersion}`,\r\n            en: `${ver}`,\r\n        }\r\n    }*/\r\n}\r\n\r\nclass MapQueryCaller extends QueryQueryCaller {\r\n    private map: Map;\r\n    constructor(map:Map, query:Query, params:any) {\r\n        super(query, params);\r\n        this.map = map;\r\n    }\r\n\r\n    get path():string {return `map/${this.map.name}/query`}\r\n    get headers(): {[header:string]: string} {return undefined}\r\n    /*\r\n        let {ver, uq} = this.map;\r\n        let {uqVersion} = uq;\r\n        return {\r\n            uq: `${uqVersion}`,\r\n            en: `${ver}`,\r\n        }\r\n    }*/\r\n}","import {Query} from './query';\r\n\r\nexport class Pending extends Query {\r\n    get typeName(): string { return 'pending';}\r\n    protected queryApiName = 'pending';\r\n}\r\n","import React from 'react';\r\nimport { FA } from '../components';\r\n\r\nfunction icon(className:string, name:string) {\r\n    return <FA className={className} name={name} fixWidth={true} />;\r\n}\r\n\r\nexport const entityIcons:{[type:string]:JSX.Element} = {\r\n    tuid: icon('text-info', 'list-alt'),\r\n    action: icon('text-info', 'hand-o-right'),\r\n    map: icon('text-muted', 'list-ul'),\r\n    book: icon('text-muted', 'book'),\r\n    query: icon('text-warning', 'search'),\r\n    history: icon('text-info', 'hand-o-right'),\r\n    pending: icon('text-info', 'forward'),\r\n    sheet: icon('text-primary', 'wpforms'),\r\n};\r\n","import { Controller } from '../components';\r\nimport { CUq } from './cUq';\r\n\r\nexport abstract class ControllerUq extends Controller {\r\n    constructor(cUq: CUq, res:any) {\r\n        super(res);\r\n        this.cUq = cUq;\r\n    }\r\n    cUq: CUq;\r\n}\r\n","export * from './rule';\r\nexport * from './field';\r\nexport * from './face';\r\nexport * from './rowContainer';\r\nexport * from './formView';\r\nexport * from './TonvaForm';\r\nexport {ControlBase} from './control';\r\n","import * as React from 'react';\r\nimport {FormEvent} from 'react';\r\nimport {computed} from 'mobx';\r\nimport {uid} from 'tonva';\r\nimport {Rule} from './rule';\r\nimport {Field} from './field';\r\nimport {Face} from './face';\r\nimport {CreateControl, ButtonsControl} from './control';\r\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\r\n\r\nexport interface FieldView {\r\n    field: Field;\r\n    face?: Face;\r\n}\r\n\r\nexport interface LabeledRow {\r\n    label?: string;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    help?: JSX.Element;\r\n}\r\n\r\nexport interface FieldRow extends LabeledRow, FieldView {\r\n}\r\n\r\nexport interface GroupRow extends LabeledRow {\r\n    group: FieldView[];\r\n}\r\n\r\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\r\nexport type FormRow = LabelFormRow|JSX.Element;\r\n\r\nexport interface SubmitResult {\r\n    success: boolean;\r\n    message?: string\r\n    result?: any;\r\n}\r\n\r\nexport interface FormProps {\r\n    formRows: FormRow[];\r\n    //context?: any;              // form context，比如，可以是EntitiesUI\r\n    rules?: Rule | Rule[];\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n    otherButton?: string|JSX.Element;\r\n    onOther?: (values:any) => void;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport class FormView {\r\n    uid:string;\r\n    private rows: RowContainer[] = [];\r\n    private buttonsRow: RowContainer;\r\n    props: FormProps;\r\n    createControl?: CreateControl;\r\n    constructor(props:FormProps) {\r\n        this.uid = uid();\r\n        this.props = props;\r\n        this.buildRows(props);\r\n        this.createControl = props.createControl;\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\r\n        console.log(ret);\r\n        return this.rows.some(row => row.hasError);\r\n    }\r\n    @computed get nothing():boolean {\r\n        let ret = this.rows.every(row => !row.filled);\r\n        return ret;\r\n    }\r\n\r\n    readValues():any {\r\n        let values = {} as any;\r\n        for (let row of this.rows) {\r\n            row.readValues(values);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    clear() {\r\n        for (let row of this.rows) {\r\n            row.clear();\r\n        }\r\n    }\r\n\r\n    clearErrors() {\r\n        for (let row of this.rows) {\r\n            row.clearErrors();\r\n        }\r\n    }\r\n\r\n    setError(fieldName:string, error:string) {\r\n        for (let row of this.rows) {\r\n            row.setError(fieldName, error);\r\n        }\r\n    }\r\n\r\n    setInitValues(initValues:any) {\r\n        if (initValues === undefined) return;\r\n        for (let row of this.rows) {\r\n            row.setInitValues(initValues);\r\n        }\r\n    }\r\n\r\n    private buildRows(props:FormProps) {\r\n        let {formRows, createRow} = props;\r\n        if (formRows !== undefined) {\r\n            for (let row of formRows) {\r\n                this.rows.push(this.buildRow(row, createRow));\r\n            }\r\n            if (this.props.readOnly !== true) {\r\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\r\n            }\r\n        }\r\n        else {\r\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\r\n        }\r\n    }\r\n\r\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\r\n        let createRow:CreateRow;\r\n        let type = (formRow as JSX.Element).type;\r\n        if (type !== undefined) {\r\n            createRow = elementCreateRow;\r\n        }\r\n        else {\r\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\r\n            if (createRow === undefined) {\r\n                createRow = formRowCreator;\r\n                if (createRow === undefined) createRow = bootstrapCreateRow;\r\n            }\r\n        }\r\n        let row = createRow(this, formRow);\r\n        return row;\r\n    }\r\n\r\n    private createButtons(form:FormView, row: FormRow) {\r\n        return new ButtonsControl(form);\r\n    }\r\n\r\n    private isOk():boolean {\r\n        let isOk = true;\r\n        for (let row of this.rows) {\r\n            if (!row.isOk()) isOk = false;\r\n        }\r\n        return isOk;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        return <form onSubmit={this.onSubmit}>\r\n            {this.rows.map((row,index) => row.render(this.uid + index))}\r\n            {this.buttons()}\r\n        </form>;\r\n    }\r\n\r\n    buttons():JSX.Element {\r\n        if (this.buttonsRow === undefined) return;\r\n        return this.buttonsRow.render(this.uid + this.rows.length);\r\n    }\r\n    \r\n    async onSubmit(event:FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (!this.isOk()) return;\r\n        let values = this.readValues();\r\n        await this.props.onSubmit(values);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page, List, Muted, LMR } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uq';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open() {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    newClick = () => this.event('new');\r\n    schemaClick = () => this.event('schema'); \r\n    archivesClick = () => this.event('archives');\r\n    sheetStateClick = (state) => this.event('state', state);\r\n\r\n    renderState = (item:any, index:number) => {\r\n        let {state, count} = item;\r\n        if (count === 0) return null;\r\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\r\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let list = this.controller.statesCount.filter(row=>row.count);\r\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\r\n        let templet:any;\r\n        if (this.isDev === true) {\r\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\r\n        }\r\n        return <Page header={this.label}>\r\n            <LMR\r\n                className=\"mx-3 my-2\"\r\n                right={right}>\r\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\r\n                {templet}\r\n            </LMR>\r\n            <List className=\"my-2\"\r\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\r\n                none=\"[ 无 ]\"\r\n                items={list}\r\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../components';\r\nimport { Sheet } from '../../uq';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\r\n    vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        let valuesWithBox = this.vForm.values;\r\n        //let ret = \r\n        await this.controller.onSave(values, valuesWithBox);\r\n        /*\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.controller.showSaved(ret);\r\n        */\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import * as React from 'react';\r\nimport {List, Muted, LMR, EasyDate, FA} from '../../components';\r\nimport { Sheet } from '../../uq';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nconst leftFlowStyle = {width: '8rem'};\r\n\r\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected vForm: VForm;\r\n    protected sheetData: SheetData;\r\n    //data: any;\r\n    //state: string;\r\n    //flows:any[];\r\n\r\n    flowRow = (item:any, index:number):JSX.Element => {\r\n        let {date, state, action} = item;\r\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\r\n        let to;\r\n        switch (state) {\r\n            case '$': break;\r\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\r\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\r\n        }\r\n        /*\r\n        return <div className=\"row\">\r\n            <div className=\"col-sm\"></div>\r\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\r\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\r\n        </div>;\r\n        */\r\n        return <LMR \r\n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\r\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\r\n            <div className=\"p-2\">{to}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    protected sheetView = () => {\r\n        let {brief, flows} = this.sheetData;\r\n        let removed;\r\n        if (brief.state === '-')\r\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\r\n        return <div>\r\n            {removed}\r\n            {this.vForm.render()}\r\n    \r\n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\r\n                items={flows}\r\n                item={{render:this.flowRow}}/>\r\n        </div>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../components';\r\nimport { FormMode } from '../form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\r\n    protected sheetData: SheetData;\r\n    async open(param: SheetData) {\r\n        this.sheetData = param;\r\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        await this.controller.saveSheet(values, this.vForm.values);\r\n        this.closePage();\r\n        this.returnCall(this.vForm.values);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { FA, Page } from '../../components';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetAction extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        let {id, flow, state} = this.sheetData.brief;\r\n        await this.controller.action(id, flow, state, action.name);\r\n        this.ceasePage();\r\n        this.openPage(this.acted);\r\n        //alert(jsonStringify(res));\r\n        //await this.backPage();\r\n    }\r\n\r\n    deleteClick = async () => {\r\n        alert('单据作废：程序正在设计中');\r\n    }\r\n\r\n    editClick = async () => {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.controller.editSheet(this.sheetData);\r\n        this.vForm.setValues(values);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        let {states} = this.entity;\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons, startButtons;\r\n        if (s === undefined) {\r\n            let text:string, cn:string;\r\n            switch (state) {\r\n                default:\r\n                    text = '不认识的单据状态\\'' + state + '\\'';\r\n                    cn = 'text-info';\r\n                    break;\r\n                case '-': \r\n                    text = '已作废';\r\n                    cn = 'text-danger';\r\n                    break;\r\n                case '#':\r\n                    text = '已归档';\r\n                    cn = 'text-success';\r\n                    break;\r\n            }\r\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\r\n        }\r\n        else {\r\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \r\n                <button\r\n                    key={index}\r\n                    className=\"btn btn-primary mr-2\"\r\n                    onClick={()=>this.actionClick(v)}\r\n                >\r\n                    {this.controller.getActionLabel(state, v.name)}\r\n                </button>)}\r\n            </div>;\r\n            if (state === '$') {\r\n                startButtons = <div>\r\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\r\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\r\n                </div>\r\n            }\r\n        };\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    {actionButtons}\r\n                    {startButtons}\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        let {discription} = this.sheetData.brief;\r\n        return <Page header=\"已处理\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"p-3\">{discription}</div>\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uq';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open(param?:any) {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label + \"模板\"}>\r\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\r\n    </Page>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Page, List, LMR, EasyDate, Muted } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uq';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\r\n    list: any[];\r\n\r\n    async open() {\r\n        this.list = await this.entity.getArchives(undefined, 10);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    archiveClick = async (brief:any) => {\r\n        if (brief.processing===1) return;\r\n        this.event('archived', brief);\r\n    }\r\n    archiveRow = (row:any, index:number) => {\r\n        let {date} = row;\r\n        let left = <>\r\n            {row.processing===1? '... ' : ''}\r\n            {row.no} &nbsp; {row.discription}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\r\n    }\r\n\r\n    protected view = () => {\r\n        return <Page header={'已归档' + this.label}>\r\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page, List, Muted, LMR, EasyDate } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../uq';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected row: (values) => JSX.Element;\r\n    stateName: string;\r\n    stateLabel: string;\r\n\r\n    async open(item:any) {\r\n        this.row = this.ui.listRow || this.rowContent;\r\n        this.stateName = item.state;\r\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\r\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\r\n        await this.controller.pageStateItems.first(this.stateName);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    rowClick = async (brief:any) => {\r\n        if (brief.processing===1) {\r\n            this.event('processing', brief.id);\r\n            return;\r\n        }\r\n        this.event('action', brief.id);\r\n    }\r\n\r\n    private onScrollBottom = () => {\r\n        console.log('onScrollBottom');\r\n        this.controller.pageStateItems.more();\r\n    }\r\n\r\n    protected rowContent = (row:any):JSX.Element => {\r\n        let {no, discription, date, processing} = row;\r\n        let left = <>            \r\n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\r\n    }\r\n\r\n    private renderRow = (row:any, index:number) => <this.row {...row} />\r\n\r\n    protected view = () => {\r\n        //let sheets = this.controller.stateSheets;\r\n        let {pageStateItems} = this.controller;\r\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\r\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from '../../components';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport interface SheetStateFlows {\r\n    flows: any;\r\n    data: any;\r\n}\r\nexport class VArchived extends VSheetView {\r\n    //protected controller: CSheet;\r\n    //brief: any;\r\n\r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        /*\r\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\r\n        this.brief = brief;\r\n        this.data = data;\r\n        this.flows = flows;\r\n        */\r\n        this.vForm = this.createForm(undefined, this.sheetData.data);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {brief} = this.sheetData;\r\n        return <Page header={this.label + '-' + brief.no}>\r\n            <this.sheetView />\r\n        </Page>;\r\n    };\r\n}\r\n","import { Sheet } from '../../uq';\r\nimport { SheetUI, CSheet } from './cSheet';\r\nimport { VEntity } from '../CVEntity';\r\n\r\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\r\n}\r\n","import * as React from 'react';\r\nimport { Page, FA } from '../../components';\r\nimport { VSheet } from './vSheet';\r\n\r\nexport class VSheetSaved extends VSheet {\r\n    private brief: any;\r\n    async open(brief?:any) {\r\n        this.brief = brief;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private restart = async () => {\r\n        this.ceasePage();\r\n        await this.event('new');\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        this.ceasePage();\r\n        let {id, flow, state} = this.brief;\r\n        await this.controller.action(id, flow, state, action.name);\r\n        this.openPage(this.acted);\r\n    }\r\n\r\n    private buttons = <>\r\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\r\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n    </>;\r\n\r\n    private view = () => {\r\n        let {states} = this.entity;\r\n        const state = '$';\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons = <>{s.actions.map((v,index) => \r\n            <button\r\n                key={index}\r\n                className=\"btn btn-primary mr-3\"\r\n                onClick={()=>this.actionClick(v)}\r\n            >\r\n                {this.controller.getActionLabel(state, v.name)}\r\n            </button>)}\r\n        </>;\r\n        return <Page header=\"已保存\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\r\n                <div className=\"p-3\">\r\n                    {actionButtons}\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        return <Page>\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Page } from '../../components';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetProcessing extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    正在处理中...\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import { IObservableArray, observable } from 'mobx';\r\nimport { postWsToTop } from '../../net';\r\nimport { TypeVPage } from '../../components';\r\nimport { PageItems } from '../../tool';\r\nimport { Sheet, StateCount } from '../../uq';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { VSheetMain } from './vMain';\r\nimport { VSheetNew } from './vNew';\r\nimport { VSheetEdit } from './vEdit';\r\nimport { VSheetAction } from './vSheetAction';\r\nimport { VSheetSchema } from './vSchema';\r\nimport { VArchives } from './vArchives';\r\nimport { VSheetList } from './vList';\r\nimport { VArchived } from './vArchived';\r\nimport { VSheetSaved } from './vSaved';\r\nimport { VSheetProcessing } from './vSheetProcessing';\r\n\r\nexport interface SheetActionUI {\r\n    label: string;\r\n}\r\n\r\nexport interface StateUI {\r\n    label: string;\r\n    actions: {[name:string]: SheetActionUI}\r\n}\r\n\r\nexport interface SheetUI extends EntityUI {\r\n    CSheet?: typeof CSheet;\r\n    states?: {[name:string]: StateUI};\r\n    main?: TypeVPage<CSheet>;\r\n    sheetNew?: TypeVPage<CSheet>;\r\n    sheetSaved?: TypeVPage<CSheet>;\r\n    sheetEdit?: TypeVPage<CSheet>;\r\n    sheetAction?: TypeVPage<CSheet>;\r\n    listRow?: (row:any) => JSX.Element;\r\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\r\n}\r\n\r\nexport interface SheetData {\r\n    brief: any;\r\n    data: any;\r\n    flows: any[];\r\n}\r\n\r\nexport class CSheet extends CEntity<Sheet, SheetUI> {\r\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\r\n    curState:string;\r\n    pageStateItems: PageItems<any>;\r\n\r\n    protected async internalStart() {\r\n        await this.loadStateSheetCount();\r\n        this.pageStateItems = this.entity.createPageStateItems();\r\n        await this.openVPage(this.VSheetMain);\r\n    }\r\n\r\n    protected async onMessage(msg: any):Promise<void> {\r\n        let {type, body, from, to} = msg;\r\n        if (type === 'sheet') this.onSheet(from, to, body);\r\n    }\r\n    private onSheet(from:number, to:number[], sheetData:any) {\r\n        let me = this.user.id;\r\n        let {id, preState, state} = sheetData;\r\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\r\n        if (from === me) {\r\n            this.sheetActPreState(id, preState);\r\n        }\r\n        if (to.find(v=>v===me) !== undefined) {\r\n            this.sheetActState(id, state, sheetData);\r\n        }\r\n    }\r\n    private sheetActPreState(id:number, preState:string) {\r\n        this.changeStateCount(preState, -1);\r\n        if (this.curState === undefined || this.curState !== preState) return;\r\n        /*\r\n        let index = this.stateSheets.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.stateSheets.splice(index, 1);\r\n        }*/\r\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.pageStateItems.items.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private sheetActState(id:number, state:string, msg:any) {\r\n        this.changeStateCount(state, 1);\r\n        if (this.curState === undefined || this.curState !== state) return;\r\n        /*\r\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\r\n            this.stateSheets.push(msg);\r\n        }\r\n        */\r\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\r\n            this.pageStateItems.items.push(msg);\r\n        }\r\n    }\r\n\r\n    private changeStateCount(state:string, delta:number) {\r\n        if (state === undefined) return;\r\n        let index = this.statesCount.findIndex(v => v.state === state);\r\n        console.log({$:'changeState', state: state, delta: delta, index: index});\r\n        if (index < 0) return;\r\n        let stateCount = this.statesCount[index];\r\n        stateCount.count += delta;\r\n        if (stateCount.count < 0) stateCount.count = 0;\r\n    }\r\n\r\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\r\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\r\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\r\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\r\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\r\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\r\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\r\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\r\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\r\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\r\n    protected async onEvent(type:string, value:any) {\r\n        let c: TypeVPage<CSheet>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': c = this.VSheetNew; break;\r\n            case 'schema': c = this.VSheetSchema; break;\r\n            case 'archives': c = this.VArchives; break;\r\n            case 'state':\r\n                this.curState = value.state;\r\n                c = this.VSheetList;\r\n                break;\r\n            case 'archived':\r\n                await this.showArchived(value); return;\r\n            case 'action':\r\n                await this.showAction(value); return;\r\n            case 'processing':\r\n                await this.showProcessing(value); return;\r\n        }\r\n        await this.openVPage(c, value);\r\n    }\r\n\r\n    async startSheet(sheetId:number) {\r\n        if (await this.beforeStart() === false) return;\r\n        await this.onEvent('action', sheetId);\r\n    }\r\n\r\n    async showAction(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        postWsToTop({\r\n            body: {\r\n                $type: 'msg',\r\n                action: '$sheet',\r\n                msg: {\r\n                    id: sheetId,\r\n                    uq: this.cUq.uq.id,\r\n                    state: sheetData.brief.state\r\n                }\r\n            }\r\n        });\r\n        await this.openVPage(this.VSheetAction, sheetData);\r\n    }\r\n\r\n    async showProcessing(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        await this.openVPage(this.VSheetProcessing, sheetData);\r\n    }\r\n\r\n    async editSheet(sheetData:SheetData):Promise<any> {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.vCall(this.VSheetEdit, sheetData);\r\n        return values;\r\n    }\r\n\r\n    async showArchived(inBrief:any) {\r\n        let sheetData = await this.getArchived(inBrief.id);\r\n        await this.openVPage(this.VArchived, sheetData);\r\n    }\r\n\r\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\r\n        //let values = this.vForm.getValues();\r\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\r\n        let ret = await this.saveSheet(values, valuesWithBox);\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.showSaved(ret);\r\n    }\r\n\r\n    async showSaved(sheetData:any) {\r\n        await this.openVPage(this.VSheetSaved, sheetData);\r\n    }\r\n\r\n    private getStateUI(stateName:string) {\r\n        let {states} = this.res;\r\n        if (states === undefined) return;\r\n        return states[stateName];\r\n    }\r\n    getStateLabel(stateName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        let ret = (state && state.label) || stateName;\r\n        switch (ret) {\r\n            default: return ret;\r\n            case '$': return '新单';\r\n        }\r\n    }\r\n    getActionLabel(stateName:string, actionName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        if (state === undefined) return actionName;\r\n        let actions = state.actions;\r\n        if (actions === undefined) return actionName;\r\n        let action = actions[actionName];\r\n        return (action && action.label) || actionName;\r\n    }\r\n\r\n    private async loadStateSheetCount():Promise<void> {\r\n        this.statesCount.clear();\r\n        let statesCount = await this.entity.stateSheetCount();\r\n        this.statesCount.splice(0, 0, ...statesCount);\r\n    }\r\n\r\n    async getSheetData(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getSheet(sheetId);\r\n    }\r\n\r\n    async getArchived(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getArchive(sheetId);\r\n    }\r\n\r\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\r\n        let {sheetTitle} = this.ui;\r\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\r\n        let ret = await this.entity.save(disc, values);\r\n        //let {id, state} = ret;\r\n        //if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n    }\r\n\r\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\r\n        return await this.entity.action(id, flow, state, actionName);\r\n    }\r\n}\r\n","export * from './cSheet';\r\nexport * from './vSheet';\r\nexport * from './vMain';\r\nexport * from './vNew';\r\nexport * from './vEdit';\r\nexport * from './vList';\r\nexport * from './vSheetAction';\r\nexport * from './vSchema';\r\nexport * from './vArchived';\r\nexport * from './vSheetView';\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../../css/va-badge.css';\r\n\r\nexport interface BadgeProps {\r\n    className?: string;\r\n    badge?: string|number;\r\n    size?: 'xs' | 'sm' | 'lg';\r\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\r\n    badgeAlign?: 'left'|'center'|'right';\r\n    badgeVertical?: 'top'|'middle'|'bottom';\r\n}\r\n\r\n@observer\r\nexport class Badge extends React.Component<BadgeProps> {\r\n    render() {\r\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\r\n        let cn = classNames(\r\n            className,\r\n            'va-badge',\r\n            size && 'va-badge-'+size,\r\n            'va-badge-' + (color||'secondary'),\r\n            badgeAlign && 'va-badg-'+badgeAlign,\r\n            badgeVertical && 'va-badg-'+badgeVertical,\r\n        );\r\n        let b;\r\n        if (badge) b = <b>{badge}</b>;\r\n        return <div className={cn}>\r\n            {children}\r\n            {b}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../../css/va-lmr.css';\r\n\r\nexport interface LMRProps {\r\n    className?: string | string[];\r\n    left?: string|JSX.Element;\r\n    right?: string|JSX.Element;\r\n    onClick?: ()=>void;\r\n}\r\n\r\n@observer\r\nexport class LMR extends React.Component<LMRProps> {\r\n    render() {\r\n        let {className, left, children, right, onClick} = this.props;\r\n        let l, r;\r\n        if (left !== undefined) l = <header>{left}</header>;\r\n        if (right !== undefined) r = <footer>{right}</footer>;\r\n        let cursor;\r\n        if (onClick !== undefined) cursor = 'cursor-pointer';\r\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\r\n            {l}\r\n            <div>{children}</div>\r\n            {r}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport interface FAProps {\r\n    name: string;\r\n    className?: string;\r\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\r\n    spin?: boolean;\r\n    fixWidth?: boolean;\r\n    border?: boolean;\r\n    pull?: 'left'|'right';\r\n    pulse?: boolean;\r\n    rotate?: 90|180|270;\r\n    flip?: 'horizontal'|'vertical';\r\n    inverse?: boolean;\r\n}\r\n\r\nexport class FA extends React.Component<FAProps> {\r\n    render() {\r\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\r\n        let cn = classNames(className, 'fa',\r\n            name && ('fa-' + name),\r\n            size && 'fa-'+size,\r\n            fixWidth && 'fa-fw',\r\n            border && 'fa-border',\r\n            pull && 'fa-pull-' + pull,\r\n            spin && 'fa-spin',\r\n            pulse && 'fa-pulse',\r\n            rotate && 'fa-rotate-' + rotate,\r\n            flip && 'fa-flip-' + flip,\r\n            inverse && 'fa-inverse',\r\n        );\r\n        return <i className={cn} />\r\n    }\r\n}\r\n\r\nexport interface StackedFAProps {\r\n    className?: string;\r\n    size?: 'lg',\r\n}\r\nexport class StackedFA extends React.Component<StackedFAProps> {\r\n    render() {\r\n        let {className, size, children} = this.props;\r\n        let cn = classNames(\r\n            'fa-stack',\r\n            className,\r\n            size && 'fa-' + size);\r\n        return <span className={cn}>\r\n            {children}\r\n        </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport const Muted = (props:any) => \r\n<small className={classNames('text-muted', props.className)} style={props.style}>\r\n    {props.children}\r\n</small>;\r\n","export * from './Badge';\r\nexport * from './LMR';\r\nexport * from './FA';\r\nexport * from './IconText';\r\nexport * from './Muted';\r\n","import * as React from 'react';\r\nimport { Book } from '../../uq';\r\nimport { Page } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CBook, BookUI } from './cBook';\r\n\r\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        Book\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { Book } from '../../uq';\r\nimport { VBookMain } from './vBookMain';\r\n\r\nexport interface BookUI extends EntityUI {\r\n    CBook?: typeof CBook;\r\n    main: typeof VBookMain,\r\n}\r\n\r\nexport class CBook extends CEntity<Book, BookUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VBookMain);\r\n    }\r\n\r\n    protected get VBookMain():typeof VBookMain {return VBookMain}\r\n}\r\n","import React from 'react';\r\nimport { View, List, Muted } from '../../components';\r\nimport { Entity } from '../../uq';\r\nimport { CLink } from '../link';\r\nimport { CUq } from './cUq';\r\n\r\nexport class VUq extends View<CUq> {\r\n    protected isSysVisible = false;\r\n    protected tuidLinks: CLink[];\r\n    protected mapLinks: CLink[];\r\n    protected sheetLinks: CLink[];\r\n    protected actionLinks: CLink[];\r\n    protected queryLinks: CLink[];\r\n    protected bookLinks: CLink[];\r\n    protected historyLinks: CLink[];\r\n    protected pendingLinks: CLink[];\r\n\r\n    constructor(cUq: CUq) {\r\n        super(cUq);\r\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.uq;\r\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\r\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\r\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\r\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\r\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\r\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\r\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\r\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\r\n    }\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n    render(param?:any) {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {res, uq, error} = this.controller;\r\n        let linkItem = {\r\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \r\n            onClick: undefined, \r\n        };\r\n        let lists = [\r\n            {\r\n                header: res.tuid || 'TUID',\r\n                items: this.tuidLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.map || 'MAP',\r\n                items: this.mapLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.sheet || 'SHEET',\r\n                items: this.sheetLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.action || 'ACTION',\r\n                items: this.actionLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.query || 'QUERY',\r\n                items: this.queryLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.book || 'BOOK',\r\n                items: this.bookLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.history || 'HISTORY',\r\n                items: this.historyLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.pending || 'PENDING',\r\n                items: this.pendingLinks\r\n            }\r\n        ];\r\n        let content;\r\n        if (error !== undefined) {\r\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\r\n        }\r\n        else {\r\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\r\n                key={index}\r\n                className={cn}\r\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\r\n                items={items}\r\n                item={linkItem} />\r\n            );\r\n        }\r\n        return <>\r\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\r\n            {content}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\n//import _ from 'lodash';\r\nimport { Controller, resLang } from '../../components';\r\nimport { UqData } from '../../net';\r\nimport { PureJSONContent } from '../tools';\r\nimport { UqMan, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending, TuidDiv, CreateBoxId, BoxId } from '../../uq';\r\nimport { CLink } from '../link';\r\nimport { CBook, BookUI } from '../book';\r\nimport { CSheet, SheetUI } from '../sheet';\r\nimport { ActionUI, CAction } from '../action';\r\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\r\nimport { CTuidMain, TuidUI, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\r\nimport { MapUI, CMap } from '../map';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { VUq } from './vUq';\r\nimport { CHistory, HistoryUI } from '../history';\r\nimport { CPending, PendingUI } from '../pending';\r\nimport { CApp } from '../app';\r\nimport { TuidWithUIRes, ReactBoxId } from './reactBoxId';\r\n\r\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\r\n\r\nexport interface UqUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    CMap?: typeof CMap;\r\n    CAction?: typeof CAction;\r\n    CSheet?: typeof CSheet;\r\n    CBook?: typeof CBook;\r\n    CHistory?: typeof CHistory;\r\n    CPending?: typeof CPending;\r\n    tuid?: {[name:string]: TuidUI};\r\n    sheet?: {[name:string]: SheetUI};\r\n    action?: {[name:string]: ActionUI};\r\n    map?: {[name:string]: MapUI};\r\n    query?: {[name:string]: QueryUI};\r\n    book?: {[name:string]: BookUI};    \r\n    history?: {[name:string]: HistoryUI};\r\n    pending?: {[name:string]: PendingUI};\r\n    res?: any;\r\n}\r\n\r\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\r\n    if (entities === undefined) return;\r\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\r\n}\r\n\r\nexport class CUq extends Controller /* implements Uq*/ {\r\n    private ui:any;\r\n    private tuidURs: {[name:string]: TuidWithUIRes} = {};\r\n    private CTuidMain: typeof CTuidMain;\r\n    private CTuidEdit: typeof CTuidEdit;\r\n    private CTuidList: typeof CTuidList;\r\n    private CTuidSelect: typeof CTuidSelect;\r\n    private CTuidInfo: typeof CTuidInfo;\r\n    private CQuery: typeof CQuery;\r\n    private CQuerySelect: typeof CQuerySelect;\r\n    private CMap: typeof CMap;\r\n    private CAction: typeof CAction;\r\n    private CSheet: typeof CSheet;\r\n    private CBook: typeof CBook;\r\n    private CHistory: typeof CHistory;\r\n    private CPending: typeof CPending;\r\n\r\n    //constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\r\n    constructor(cApp:CApp, uqData:UqData, ui:UqUI) {\r\n        super(resLang(ui.res));\r\n        this.cApp = cApp;\r\n        //this.id = uqId;\r\n        // 每一个ui都转换成小写的key的版本\r\n        lowerPropertyName(ui.tuid);\r\n        lowerPropertyName(ui.sheet);\r\n        lowerPropertyName(ui.map);\r\n        lowerPropertyName(ui.query);\r\n        lowerPropertyName(ui.action);\r\n        lowerPropertyName(ui.book);\r\n        lowerPropertyName(ui.history);\r\n        lowerPropertyName(ui.pending);\r\n        this.ui = ui;\r\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\r\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\r\n        this.CTuidList = ui.CTuidList || CTuidList;\r\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\r\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\r\n        this.CQuery = ui.CQuery || CQuery;\r\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\r\n        this.CMap = ui.CMap || CMap;\r\n        this.CAction = ui.CAction || CAction;\r\n        this.CSheet = ui.CSheet || CSheet;\r\n        this.CBook = ui.CBook || CBook;\r\n        this.CHistory = ui.CHistory || CHistory;\r\n        this.CPending = ui.CPending || CPending;\r\n\r\n        this.uq = new UqMan(cApp.uqs, uqData, this.createBoxId, undefined);\r\n    }\r\n\r\n    protected async internalStart() {\r\n    }\r\n\r\n    cApp:CApp;\r\n    res: any;\r\n    uq: UqMan;\r\n    error: string;\r\n    \r\n    private createBoxId:CreateBoxId = (tuid:Tuid, id:number):BoxId =>{\r\n        let {name} = tuid;\r\n        let tuidUR = this.tuidURs[name];\r\n        if (tuidUR === undefined) {\r\n            let {ui, res} = this.getUI(tuid);\r\n            this.tuidURs[name] = tuidUR = new TuidWithUIRes(tuid, ui, res);\r\n        }\r\n        return new ReactBoxId(tuidUR, id);\r\n    }\r\n\r\n    async init():Promise<void> {\r\n        return await this.uq.init();\r\n    }\r\n\r\n    async loadEntities():Promise<string> {\r\n        try {\r\n            await this.uq.loadEntities();\r\n        }\r\n        catch (err) {\r\n            return err;\r\n        }\r\n    }\r\n\r\n    async getQuerySearch(name:string):Promise<Query> {\r\n        let query = this.uq.query(name);\r\n        if (query === undefined) \r\n            alert(`QUERY ${name} 没有定义!`);\r\n        else {\r\n            await query.loadSchema();\r\n            let {returns} = query;\r\n            if (returns.length > 1) {\r\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\r\n            }\r\n        }\r\n        return query;\r\n    }\r\n    getTuidPlaceHolder(tuid:Tuid) {\r\n        let {tuidPlaceHolder, entity} = this.res;\r\n        let {name} = tuid;\r\n        //let type:string;\r\n        if (entity !== undefined) {\r\n            let en = entity[name];\r\n            if (en !== undefined) {\r\n                //type = en.label;\r\n            }\r\n        }\r\n        return (tuidPlaceHolder || 'Select');\r\n    }\r\n    getNone() {\r\n        let {none} = this.res;\r\n        return none || 'none';\r\n    }\r\n    protected isSysVisible = false;\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n\r\n    async navSheet(sheetTypeId:number, sheetId:number) {\r\n        let sheet = this.uq.sheetFromTypeId(sheetTypeId);\r\n        if (sheet === undefined) {\r\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\r\n            return;\r\n        }\r\n        let cSheet = this.cSheet(sheet);\r\n        await cSheet.startSheet(sheetId);\r\n    }\r\n\r\n    sheet(entityName:string) {return this.uq.sheet(entityName);}\r\n    action(entityName:string) {return this.uq.action(entityName);}\r\n    query(entityName:string) {return this.uq.query(entityName);}\r\n    book(entityName:string) {return this.uq.book(entityName);}\r\n    map(entityName:string) {return this.uq.map(entityName);}\r\n    history(entityName:string) {return this.uq.history(entityName);}\r\n    pending(entityName:string) {return this.uq.pending(entityName);}\r\n    tuid(entityName:string) {return this.uq.tuid(entityName)}\r\n    tuidDiv(entityName:string, divName:string) {\r\n        return this.uq.tuidDiv(entityName, divName);\r\n    }\r\n\r\n    cSheetFromName(entityName:string):CSheet {\r\n        let entity = this.uq.sheet(entityName);\r\n        if (entity !== undefined) return this.cSheet(entity);\r\n    }\r\n    cActionFromName(entityName:string) {\r\n        let entity = this.uq.action(entityName);\r\n        if (entity !== undefined) return this.cAction(entity);\r\n    }\r\n    cQueryFromName(entityName:string) {\r\n        let entity = this.uq.query(entityName);\r\n        if (entity !== undefined) return this.cQuery(entity);\r\n    }\r\n    cBookFromName(entityName:string) {\r\n        let entity = this.uq.book(entityName);\r\n        if (entity !== undefined) return this.cBook(entity);\r\n    }\r\n    cMapFromName(entityName:string) {\r\n        let entity = this.uq.map(entityName);\r\n        if (entity !== undefined) return this.cMap(entity);\r\n    }\r\n    cHistoryFromName(entityName:string) {\r\n        let entity = this.uq.history(entityName);\r\n        if (entity !== undefined) return this.cHistory(entity);\r\n    }\r\n    cPendingFromName(entityName:string) {\r\n        let entity = this.uq.pending(entityName);\r\n        if (entity !== undefined) return this.cPending(entity);\r\n    }\r\n    cTuidMainFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidMain(entity);\r\n    }\r\n    cTuidEditFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidEdit(entity);\r\n    }\r\n    cTuidInfoFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidInfo(entity);\r\n    }\r\n\r\n    cTuidSelectFromName(entityName:string) {\r\n        let entity = this.uq.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidSelect(entity);\r\n    }\r\n\r\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\r\n        switch (entityType) {\r\n            case 'sheet':\r\n                let sheet = this.uq.sheet(entityName);\r\n                if (sheet === undefined) return;\r\n                return this.cSheet(sheet);\r\n            case 'action':\r\n                let action = this.uq.action(entityName);\r\n                if (action === undefined) return;\r\n                return this.cAction(action);\r\n            case 'tuid':\r\n                let tuid = this.uq.tuid(entityName);\r\n                if (tuid === undefined) return;\r\n                return this.cTuidMain(tuid);\r\n            case 'query':\r\n                let query = this.uq.query(entityName);\r\n                if (query === undefined) return;\r\n                return this.cQuery(query);\r\n            case 'book':\r\n                let book = this.uq.book(entityName);\r\n                if (book === undefined) return;\r\n                return this.cBook(book);\r\n            case 'map':\r\n                let map = this.uq.map(entityName);\r\n                if (map === undefined) return;\r\n                return this.cMap(map);\r\n            case 'history':\r\n                let history = this.uq.history(entityName);\r\n                if (history === undefined) return;\r\n                return this.cHistory(history);\r\n            case 'pending':\r\n                let pending = this.uq.pending(entityName);\r\n                if (pending === undefined) return;\r\n                return this.cPending(pending);\r\n        }\r\n    }\r\n\r\n    linkFromName(entityType:EntityType, entityName:string) {\r\n        return this.link(this.cFromName(entityType, entityName));\r\n    }\r\n\r\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\r\n        let ui:any, res:any;\r\n        let {name, typeName} = t;\r\n        if (this.ui !== undefined) {\r\n            if (typeName === 'div') {\r\n                let tuidDiv:TuidDiv = t as unknown as TuidDiv;\r\n                let ownerTuid = tuidDiv.owner;\r\n                let tUIs = this.ui[ownerTuid.typeName] as TuidUI;\r\n                if (tUIs) {\r\n                    let tUI = tUIs[ownerTuid.name];\r\n                    if (tUI) {\r\n                        let divs = tUI.divs;\r\n                        if (divs) {\r\n                            ui = divs[name];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                let tUI = this.ui[typeName];\r\n                if (tUI !== undefined) {\r\n                    ui = tUI[name];\r\n                }\r\n            }\r\n        }\r\n        let {entity} = this.res;\r\n        if (entity !== undefined) {\r\n            res = entity[name];\r\n        }\r\n        return {ui: ui || {}, res: res || {} };\r\n    }\r\n\r\n    link(cEntity:CEntity<Entity, EntityUI>) {\r\n        return new CLink(cEntity);\r\n    }\r\n\r\n    get tuidLinks() {\r\n        return this.uq.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\r\n    }\r\n    cTuidMain(tuid:Tuid):CTuidMain {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new ((ui && ui.CTuidMain) || this.CTuidMain)(this, tuid, ui, res);\r\n    }\r\n    cTuidEdit(tuid:Tuid):CTuidEdit {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new ((ui && ui.CTuidEdit) || this.CTuidEdit)(this, tuid, ui, res);\r\n    }\r\n    cTuidList(tuid:Tuid):CTuidList {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new ((ui && ui.CTuidList) || this.CTuidList)(this, tuid, ui, res);\r\n    }\r\n    cTuidSelect(tuid:Tuid):CTuidSelect {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new ((ui && ui.CTuidSelect) || this.CTuidSelect)(this, tuid, ui, res);\r\n    }\r\n    cTuidInfo(tuid:Tuid):CTuidInfo {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new ((ui && ui.CTuidInfo) || this.CTuidInfo)(this, tuid, ui, res);\r\n    }\r\n\r\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\r\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\r\n        //if (sheetUI !== undefined) ui = sheetUI;\r\n        //if (sheetRes !== undefined) res = sheetRes;\r\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\r\n        return new ((ui && ui.CSheet) || this.CSheet)(this, sheet, ui, res);\r\n    }\r\n    get sheetLinks() { \r\n        return this.uq.sheetArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cSheet(v))\r\n        });\r\n    }\r\n\r\n    cAction(action:Action):CAction {\r\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\r\n        return new ((ui && ui.CAction) || this.CAction)(this, action, ui, res);\r\n    }\r\n    get actionLinks() { \r\n        return this.uq.actionArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cAction(v))\r\n        });\r\n    }\r\n\r\n    cQuery(query:Query):CQuery {\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new ((ui && ui.CQuery) || this.CQuery)(this, query, ui, res);\r\n    }\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        let query = this.uq.query(queryName);\r\n        if (query === undefined) return;\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new ((ui && ui.CQuerySelect) || this.CQuerySelect)(this, query, ui, res);\r\n    }\r\n    get queryLinks() {\r\n        return this.uq.queryArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cQuery(v))\r\n        });\r\n    }\r\n    \r\n    cBook(book:Book):CBook {\r\n        let {ui, res} = this.getUI<Book, BookUI>(book);\r\n        return new ((ui && ui.CBook) || this.CBook)(this, book, ui, res);\r\n    }\r\n    get bookLinks() { \r\n        return this.uq.bookArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cBook(v))\r\n        });\r\n    }\r\n    \r\n    cHistory(history:History):CHistory {\r\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\r\n        return new ((ui && ui.CHistory) || this.CHistory)(this, history, ui, res);\r\n    }\r\n    get historyLinks() { \r\n        return this.uq.historyArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cHistory(v))\r\n        });\r\n    }\r\n    \r\n    cPending(pending:Pending):CPending {\r\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\r\n        return new ((ui && ui.CPending) || this.CPending)(this, pending, ui, res);\r\n    }\r\n    get pendingLinks() { \r\n        return this.uq.pendingArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cPending(v))\r\n        });\r\n    }\r\n    \r\n    cMap(map:Map):CMap {\r\n        let {ui, res} = this.getUI<Map, MapUI>(map);\r\n        return new ((ui && ui.CMap) || this.CMap)(this, map, ui, res);\r\n    }\r\n    get mapLinks() { \r\n        return this.uq.mapArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cMap(v));\r\n        });\r\n    }\r\n\r\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\r\n        let {ui} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return (ui && ui.content) || PureJSONContent;\r\n    }\r\n\r\n    getTuidDivContent(tuidDiv:TuidDiv): React.StatelessComponent<any> {\r\n        let {owner} = tuidDiv;\r\n        let {ui} = this.getUI<Tuid, TuidUI>(owner);\r\n        return (ui && ui.divs && ui.divs[tuidDiv.name].content) || PureJSONContent;\r\n    }\r\n\r\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\r\n        let c = this.cTuidInfo(tuid);\r\n        await c.start(id);\r\n    }\r\n\r\n    async showTuidDiv(tuid:TuidDiv, id:number):Promise<void> {\r\n        let {owner} = tuid;\r\n        let c = this.cTuidInfo(owner);\r\n        await c.start(id);\r\n    }\r\n\r\n    protected get VUq():typeof VUq {return VUq}\r\n\r\n    render() {\r\n        let v = new (this.VUq)(this);\r\n        return v.render();\r\n    }\r\n}\r\n\r\n","export * from './cUq';\r\nexport * from './vUq';\r\n//export * from './reactBoxId';","import {CenterApiBase} from '../net';\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","import * as React from 'react';\r\nimport { VPage, Page, FA, nav, LMR, List } from \"../../components\";\r\nimport { appInFrame } from '../../net';\r\nimport { CApp } from \"./CApp\";\r\n\r\nexport class VAppMain extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    render(param?:any) {\r\n        return this.appContent();\r\n    }\r\n\r\n    protected appPage = () => {\r\n        let {caption} = this.controller;\r\n        return <Page header={caption} logout={async()=>{appInFrame.unit = undefined}}>\r\n            {this.appContent()}\r\n        </Page>;\r\n    }\r\n\r\n    protected appContent = () => {\r\n        let {cUqArr} = this.controller;\r\n        let content:any;\r\n        if (cUqArr.length === 0) {\r\n            content = <div className=\"text-danger\">\r\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <>{content}</>;\r\n    };\r\n}\r\n\r\nexport class VUnsupportedUnit extends VPage<CApp> {\r\n    async open(predefinedUnit: number) {\r\n        this.openPage(this.page, predefinedUnit);\r\n    }\r\n\r\n    private page = (predefinedUnit: number) => {\r\n        let {user} = nav;\r\n        let userName:string = user? user.name : '[未登录]';\r\n        let {appOwner, appName} = this.controller.uqs;\r\n        return <Page header=\"APP无法运行\" logout={true}>\r\n            <div className=\"m-3 text-danger container\">\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">登录用户</div>\r\n                    <div className=\"col-sm text-body\">{userName}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">App</div>\r\n                    <div className=\"col-sm text-body\">{`${appOwner}/${appName}`}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">预设小号</div>\r\n                    <div className=\"col-sm text-body\">{predefinedUnit || <small className=\"\">[无预设小号]</small>}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">\r\n                        可能原因<FA name=\"exclamation-triangle\" />\r\n                    </div>\r\n                    <div className=\"col-sm text-body\">\r\n                        <ul className=\"p-0\">\r\n                            <li>没有小号运行 {appName}</li>\r\n                            <li>用户 <b>{userName}</b> 没有加入任何一个运行{appName}的小号</li>\r\n                            {\r\n                                predefinedUnit && \r\n                                <li>预设小号 <b>{predefinedUnit}</b> 没有运行App {appName}</li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-3 font-weight-bold\">小号{predefinedUnit}</div>\r\n                    <div className=\"col-sm text-body\">\r\n                        预设小号定义在 public/unit.json 文件中。\r\n                        定义了这个文件的程序，只能由url直接启动。\r\n                        用户第一次访问app之后，会缓存在localStorage里。<br/>\r\n                        如果要删去缓存的预定义Unit，logout然后再login。\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class VUnitSelect extends VPage<CApp> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (item: any, index: number):JSX.Element => {\r\n        let {id, nick, name} = item;\r\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\r\n            <div>{nick || name}</div>\r\n        </LMR>;\r\n    }\r\n    private onRowClick = async (item: any) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        await this.controller.start();\r\n    }\r\n\r\n    private page = () => {\r\n        return <Page header=\"选择小号\" logout={true}>\r\n            <List items={this.controller.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>\r\n    }\r\n}\r\n\r\nexport class VErrorsPage extends VPage<CApp> {\r\n    async open(errors:string[]) {\r\n        this.openPage(this.page, errors);\r\n    }\r\n\r\n    private page = (errors:string[]) => {\r\n        return <Page header=\"ERROR\">\r\n            <div className=\"m-3\">\r\n                <div>Load Uqs 发生错误：</div>\r\n                {errors.map((r, i) => <div key={i}>{r}</div>)}\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class VAppStartError extends VPage<CApp> {\r\n    async open(error:any) {\r\n        this.openPage(this.page, error);\r\n    }\r\n\r\n    private page = (error:any) => {\r\n        return <Page header=\"App start error!\">\r\n            <pre>\r\n                {typeof error === 'string'? error : error.message}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}","//import _ from 'lodash';\r\nimport { nav, Controller, TypeVPage, resLang, NavSettings} from '../../components';\r\nimport { loadAppUqs, appInFrame, getExHash, UqData} from '../../net';\r\nimport { CUq, UqUI } from '../cUq';\r\nimport { centerApi } from '../centerApi';\r\nimport { UQsMan } from '../../uq';\r\nimport { VUnsupportedUnit, VAppMain, VUnitSelect, VErrorsPage, VAppStartError } from './vApp';\r\n\r\nexport interface RoleAppUI {\r\n    CApp?: typeof CApp;\r\n    CUq?: typeof CUq;\r\n    main?: TypeVPage<CApp>;\r\n    uqs: {[uq:string]: UqUI | (()=>Promise<UqUI>)};\r\n    res?: any;\r\n}\r\n\r\nexport interface AppUI extends RoleAppUI, NavSettings {\r\n    appName: string;        // 格式: owner/appName\r\n    version: string;        // 版本变化，缓存的uqs才会重载\r\n    roles?: {[role:string]: RoleAppUI | (()=>Promise<RoleAppUI>)};\r\n}\r\n\r\nexport class CApp extends Controller {\r\n    private readonly cUqCollection: {[uq:string]: CUq} = {};\r\n    private readonly cImportUqs: {[uq:string]: CUq} = {};\r\n    protected ui:AppUI;\r\n    readonly name: string;\r\n    readonly version: string;\r\n    readonly uqs: UQsMan;\r\n    readonly caption: string; // = 'View Model 版的 Uq App';\r\n    appUnits:any[];\r\n\r\n    constructor(ui:AppUI) {\r\n        super(resLang(ui && ui.res));\r\n        nav.setSettings(ui);\r\n        this.name = ui.appName;\r\n        this.version = ui.version;\r\n        if (this.name === undefined) {\r\n            throw new Error('appName like \"owner/app\" must be defined in UI');\r\n        }\r\n        this.uqs = new UQsMan(this.name, undefined);\r\n        if (ui.uqs === undefined) ui.uqs = {};\r\n        this.ui = ui;\r\n        this.caption = this.res.caption || 'Tonva';\r\n    }\r\n    \r\n    getImportUq(uqOwner:string, uqName:string):CUq {\r\n        let uq = uqOwner + '/' + uqName;\r\n        let cUq = this.cImportUqs[uq];\r\n        if (cUq !== undefined) return cUq;\r\n        //let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n        //let uqId = -1; // unknown\r\n        this.cImportUqs[uq] = cUq = this.getCUq(uq);\r\n        return cUq;\r\n    }\r\n\r\n    protected newCUq(uqData: UqData, uqUI: UqUI) {\r\n        let cUq = new (this.ui.CUq || CUq)(this, uqData, uqUI);\r\n        Object.setPrototypeOf(cUq.x, this.x);\r\n        return cUq;\r\n    }\r\n\r\n    get cUqArr():CUq[] {\r\n        let ret:CUq[] = [];\r\n        for (let i in this.cUqCollection) {\r\n            ret.push(this.cUqCollection[i]);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getCUq(uq:string):CUq {\r\n        return this.cUqCollection[uq];\r\n    }\r\n\r\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\r\n    protected async beforeStart():Promise<boolean> {\r\n        try {\r\n            let retErrors = await this.load();\r\n            //let app = await loadAppUqs(this.appOwner, this.appName);\r\n            // if (isDevelopment === true) {\r\n            // 这段代码原本打算只是在程序员调试方式下使用，实际上，也可以开放给普通用户，production方式下\r\n            let {predefinedUnit} = appInFrame;\r\n            //let {id} = app;\r\n            //this.id = id;\r\n            let {user} = nav;\r\n            if (user !== undefined && user.id > 0) {\r\n                this.appUnits = await centerApi.userAppUnits(this.uqs.id);\r\n                switch (this.appUnits.length) {\r\n                    case 0:\r\n                        this.showUnsupport(predefinedUnit);\r\n                        return false;\r\n                    case 1:\r\n                        let appUnit = this.appUnits[0].id;\r\n                        if (appUnit === undefined || appUnit < 0 || \r\n                            (predefinedUnit !== undefined && appUnit !== predefinedUnit))\r\n                        {\r\n                            this.showUnsupport(predefinedUnit);\r\n                            return false;\r\n                        }\r\n                        appInFrame.unit = appUnit;\r\n                        break;\r\n                    default:\r\n                        if (predefinedUnit>0 && this.appUnits.find(v => v.id===predefinedUnit) !== undefined) {\r\n                            appInFrame.unit = predefinedUnit;\r\n                            break;\r\n                        }\r\n                        //nav.push(<this.selectUnitPage />)\r\n                        this.openVPage(VUnitSelect);\r\n                        return false;\r\n                }\r\n            }\r\n            if (retErrors !== undefined) {\r\n                this.openVPage(VErrorsPage);\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            this.openVPage(VAppStartError);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private async load(): Promise<string[]> {\r\n        let {appOwner, appName} = this.uqs;\r\n        let {localData} = this.uqs;\r\n        let uqAppData = localData.get();\r\n        if (!uqAppData || uqAppData.version !== this.version) {\r\n            uqAppData = await loadAppUqs(appOwner, appName);\r\n            uqAppData.version = this.version;\r\n            localData.set(uqAppData);\r\n            for (let uq of uqAppData.uqs) uq.newVersion = true;\r\n        }\r\n        let {id, uqs} = uqAppData;\r\n        this.uqs.id = id;\r\n\r\n        let retErrors:string[] = [];\r\n\r\n        let promiseInits: PromiseLike<void>[] = [];\r\n        let promises: PromiseLike<string>[] = [];\r\n        for (let uqData of uqs) {\r\n            let {uqOwner, uqName} = uqData;\r\n            let uqFullName = uqOwner + '/' + uqName;\r\n            let uqUI = this.ui.uqs[uqFullName] as UqUI || {};\r\n            let cUq = this.newCUq(uqData, uqUI);\r\n            this.cUqCollection[uqFullName] = cUq;\r\n            this.uqs.addUq(cUq.uq);\r\n            promiseInits.push(cUq.init());\r\n        }\r\n        await Promise.all(promiseInits);\r\n\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            promises.push(cUq.loadEntities());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) {\r\n            retErrors.push(...this.uqs.setTuidImportsLocal());\r\n            if (retErrors.length === 0) {\r\n                return;\r\n            }\r\n        }\r\n        return retErrors;\r\n    }\r\n\r\n    protected async internalStart(param:any) {\r\n        if (param !== true) {\r\n            this.clearPrevPages();\r\n        }\r\n        await this.showMainPage();\r\n    }\r\n\r\n    /*\r\n    render(): JSX.Element {\r\n        return this.renderView(this.VAppMain);\r\n    }*/\r\n\r\n    // 如果是独立app，删去显示app之前的页面。\r\n    // 如果非独立app，则不删\r\n    protected clearPrevPages() {\r\n        nav.clear();\r\n    }\r\n\r\n    private showUnsupport(predefinedUnit: number) {\r\n        this.clearPrevPages();\r\n        this.openVPage(VUnsupportedUnit, predefinedUnit);\r\n    }\r\n\r\n    private async showMainPage() {\r\n        // #tv-RwPBwMef-23-sheet-api-108\r\n        let exHash = getExHash();\r\n        if (exHash !== undefined) {\r\n            let parts = exHash.split('-');\r\n            if (parts.length > 3) {\r\n                let action = parts[3];\r\n                // sheet_debug 表示centerUrl是debug方式的\r\n                if (action === 'sheet' || action === 'sheet_debug') {\r\n                    let uqId = Number(parts[4]);\r\n                    let sheetTypeId = Number(parts[5]);\r\n                    let sheetId = Number(parts[6]);\r\n                    let cUq = this.getCUqFromId(uqId);\r\n                    if (cUq === undefined) {\r\n                        alert('unknown uqId: ' + uqId);\r\n                        return;\r\n                    }\r\n                    this.clearPrevPages();\r\n                    await cUq.navSheet(sheetTypeId, sheetId);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.openVPage(this.VAppMain);\r\n    }\r\n\r\n    private getCUqFromId(uqId:number): CUq {\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            if (cUq.uq.id === uqId) return cUq;\r\n        }\r\n        return;\r\n    }\r\n}\r\n","export * from './CApp';\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport className from 'classnames';\r\nimport { Page, List, LMR, FA } from '../../components';\r\nimport { PureJSONContent } from '../tools';\r\nimport { Map } from '../../uq';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CMap, MapItem, MapUI } from './cMap';\r\nimport { tv } from '../cUq/reactBoxId';\r\n\r\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\r\n    private isFrom: boolean;\r\n\r\n    async open(param?:any) {\r\n        this.isFrom = this.controller.isFrom;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    itemRender = (item:MapItem, index:number) => {\r\n        return <this.ItemRow item={item} />;\r\n    }\r\n\r\n    private ItemRow = observer(({item}: {item:MapItem}) => {\r\n        let {box, children, isLeaf, keyIndex, values} = item;\r\n        let keyUI = this.controller.keyUIs[keyIndex];\r\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\r\n        let add:any, remove:any;\r\n        if (this.isFrom === false) {\r\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\r\n                <FA name=\"plus\" />\r\n            </button>;\r\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\r\n                <FA className=\"text-info\" name=\"trash\" />\r\n            </button>;\r\n        }\r\n        let right:any;\r\n        if (isLeaf === false) {\r\n            if (keyIndex === 0)\r\n                right = add;\r\n            else\r\n                right = <>{remove} &nbsp; {add}</>;\r\n        }\r\n        else if (keyIndex > 0) {\r\n            right = remove;\r\n        }\r\n        let content:any, border:any, valuesView:any;\r\n        if (isLeaf === true) {\r\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\r\n            if (values) {\r\n                //valuesView = null; // 现在不显示values content了\r\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\r\n            }\r\n        }\r\n        else {\r\n            border = 'border-bottom';\r\n            let none = keyNone && keyNone(this.x);\r\n            content = <List \r\n                className=\"ml-4\" \r\n                items={children} \r\n                item={{onClick:undefined, render:this.itemRender}}\r\n                none={none} />\r\n        }\r\n        let left = <div className=\"py-1 pr-3\">{tv(box, keyContent, this.x)}</div>;\r\n        return <div className=\"d-flex flex-column\">\r\n            <LMR className={className('px-3', 'py-2', border)}\r\n                left={left}\r\n                right={right}\r\n            >\r\n                <div className=\"py-1\">{valuesView}</div>\r\n            </LMR>\r\n            {content}\r\n        </div>;\r\n    });\r\n\r\n    protected get view() { return () => <Page header={this.label}>\r\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\r\n        </Page>\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { VEntity } from '../CVEntity';\r\nimport { MapUI, CMap } from './cMap';\r\nimport { Map } from '../../uq';\r\nimport { Page } from '../../components';\r\nimport { VForm } from '../form';\r\n\r\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\r\n    private vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onValuesSubmit);\r\n        this.openPageElement(<this.view />);\r\n    }\r\n\r\n    private onValuesSubmit = async () => {\r\n        this.ceasePage();\r\n        let values = this.vForm.getValues();\r\n        this.returnCall(values);\r\n    }\r\n\r\n    private view = () => {\r\n        return <Page>\r\n            {this.vForm.render()}\r\n        </Page>\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { Map, Tuid, BoxId, Field, fieldDefaultValue } from '../../uq';\r\nimport { PureJSONContent } from '../tools';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { VMapMain } from './vMain';\r\nimport { VInputValues } from './inputValues';\r\n\r\nexport interface MapKey {\r\n    content: (values, x?:any) => JSX.Element;\r\n    valuesContent?: (values, x?:any) => JSX.Element;\r\n    none?: (x:any)=>string;\r\n}\r\n\r\nexport interface MapUI extends EntityUI {\r\n    CMap?: typeof CMap;\r\n    keys?: MapKey[],\r\n}\r\n\r\nexport class MapItem {\r\n    parent: MapItem;\r\n    tuid: Tuid;\r\n    box: BoxId;\r\n    isLeaf: boolean;\r\n    keyIndex:number;\r\n    children: MapItem[] = observable.array([], {deep: true});\r\n    values: any;\r\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\r\n        this.parent = parent;\r\n        this.tuid = tuid;\r\n        this.box = box;\r\n        this.keyIndex = keyIndex;\r\n        this.isLeaf = false;\r\n    }\r\n}\r\n\r\n/*eslint no-template-curly-in-string: 0*/\r\nexport class CMap extends CEntity<Map, MapUI> {\r\n    isFrom: boolean;\r\n    items:MapItem[];\r\n    keyFields: Field[];\r\n    keyUIs: MapKey[];\r\n\r\n    protected async internalStart() {\r\n        let {keys, schemaFrom} = this.entity;\r\n        this.isFrom = schemaFrom !== undefined;\r\n        let q = this.entity.queries.all;\r\n        let result = await q.query({});\r\n        //let data = await this.entity.unpackReturns(res);\r\n        let ret = result.ret;\r\n        let keysLen = keys.length;\r\n        this.keyUIs = _.clone(this.ui.keys || []);\r\n        this.keyFields = [];\r\n        let retFields = q.returns[0].fields;\r\n        for (let i=0; i<keysLen; i++) {\r\n            this.keyFields.push(retFields[i]);\r\n            if (i >= this.keyUIs.length) {\r\n                this.keyUIs.push({\r\n                    content: PureJSONContent,\r\n                });\r\n            }\r\n        }\r\n        this.items = observable([]);\r\n        let item:MapItem = undefined;\r\n        for (let r of ret) {\r\n            let newItem = this.addItem(item, r);\r\n            if (newItem !== undefined) {\r\n                this.items.push(newItem);\r\n                item = newItem;\r\n            }\r\n        }\r\n\r\n        await this.openVPage(this.VMapMain);\r\n    }\r\n\r\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\r\n        let item = new MapItem(parent, tuid, box, keyIndex);\r\n        if (keyIndex === this.keyFields.length - 1) {\r\n            item.isLeaf = true;\r\n            item.values = values;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    addItem(item:MapItem, row:any):MapItem {\r\n        let ret:MapItem = undefined;\r\n        let keysLen = this.keyFields.length;\r\n        let p = item;\r\n        for (let i=0;i<keysLen;i++) {\r\n            let key = this.keyFields[i];\r\n            let {name} = key;\r\n            let tuidBox = key._tuid;\r\n            let val:BoxId = row[name];\r\n            if (val === undefined) break;\r\n            let {id} = val;\r\n            if (i === 0) {\r\n                if (id === 0) continue;\r\n                if (p === undefined || p.box.id !== id) {\r\n                    ret = p = this.createItem(undefined, tuidBox.tuid, val, i, row);\r\n                }\r\n                continue;\r\n            }\r\n            let {children} = p;\r\n            let len = children.length;\r\n            if (len > 0) {\r\n                let n = children[len-1];\r\n                if (n.box.id === id) {\r\n                    p = n;\r\n                    continue;\r\n                }\r\n            }\r\n            if (id > 0) {\r\n                children.push(p = this.createItem(p, tuidBox.tuid, val, i, row));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        let {_tuid} = keyField;\r\n        let {tuid, ownerField} = _tuid;\r\n        let cTuidSelect = this.cUq.cTuidSelect(tuid);\r\n        let callParam = param;\r\n        if (ownerField !== undefined) {\r\n            callParam = param[ownerField.name];\r\n            if (typeof callParam === 'object') {\r\n                callParam = callParam.id;\r\n            }\r\n        }\r\n        let ret = await cTuidSelect.call(callParam);\r\n        return _tuid.getIdFromObj(ret);\r\n    }\r\n\r\n    addClick = async(item:MapItem) => {\r\n        let {keyIndex, children} = item;\r\n        let keysLen = this.keyFields.length;\r\n        let keysLast = keysLen-1;\r\n        let idx = keyIndex + 1;\r\n        if (idx >= keysLen) return;\r\n        let keyField = this.keyFields[idx];\r\n        let kn = keyField.name;\r\n        let tuid = keyField._tuid;\r\n        let searchParam = {} as any;\r\n        let data = {} as any;\r\n        for (let p=item;p!==undefined;p=p.parent) {\r\n            let {keyIndex:ki, box} = p;\r\n            let kn = this.keyFields[ki].name;\r\n            //searchParam[kn] = data['_' + kn] = box.id;\r\n            searchParam[kn] = data[kn] = box.id;\r\n        }\r\n\r\n        let id = await this.searchOnKey(keyField, searchParam);\r\n        if (id === undefined || id <= 0) return;\r\n        tuid.useId(id);\r\n        let idBox = tuid.boxId(id);\r\n        let arr1 = {} as any;\r\n        let values:any = {};\r\n        if (keyIndex+1===keysLast) {\r\n            tuid.useId(id);\r\n            //values[kn] = arr1['_' + kn] = idBox;\r\n            values[kn] = arr1[kn] = idBox;\r\n            if (this.entity.fields.length > 0) {\r\n                let ret = await this.vCall(VInputValues, data);\r\n                for (let i in ret) {\r\n                    //values[i] = arr1['_' + i] = ret[i];\r\n                    values[i] = arr1[i] = ret[i];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //values[kn] = data['_' + kn] = idBox;\r\n            values[kn] = data[kn] = idBox;\r\n            for (let i=idx+1;i<keysLast;i++) {\r\n                //data['_' + this.keyFields[i].name] = 0;\r\n                data[this.keyFields[i].name] = 0;\r\n            }\r\n            // 填map的key field 0 值\r\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\r\n            arr1[this.keyFields[keysLast].name] = 0;\r\n            let {fields} = this.entity;\r\n            for (let f of fields) {\r\n                let {type, null:nullable} = f;\r\n                if (!(nullable === true)) {\r\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\r\n                    arr1[f.name] = fieldDefaultValue(type);\r\n                }\r\n            }\r\n        }\r\n        data.arr1 = [arr1];\r\n        await this.entity.actions.add.submit(data);\r\n        let rowIndex = children.findIndex(v => v.box.id === id);\r\n        if (rowIndex < 0) {\r\n            children.push(this.createItem(item, tuid.tuid, idBox, idx, values));\r\n        }\r\n        else {\r\n            let {fields} = this.entity;\r\n            if (fields !== undefined && fields.length > 0) {\r\n                let row = children[rowIndex];\r\n                children.splice(rowIndex, 1);\r\n                row.values = values;\r\n                /*\r\n                for (let f of fields) {\r\n                    let {name:fn} = f;\r\n                    row.values[fn] = values[fn];\r\n                }*/\r\n                children.splice(rowIndex, 0, row);\r\n            }\r\n        }\r\n        this.removeCeased();\r\n    }\r\n\r\n    removeClick = async(item:MapItem) => {\r\n        let keyField = this.keyFields[item.keyIndex];\r\n        let tuid = keyField._tuid;\r\n        let cTuidMain = this.cUq.cTuidMain(tuid.tuid);\r\n        let label = cTuidMain.getLable(tuid.tuid);\r\n        let confirmDelete:_.TemplateExecutor = \r\n            this.res.confirmDelete \r\n            || _.template('do you really want to remove ${label}?');\r\n        if (window.confirm(confirmDelete({label:label})) === false) return;\r\n        let map:Map = this.entity;\r\n        let data = {} as any;\r\n        let arr1 = data['arr1'] = [];\r\n        let v0 = {} as any;\r\n        arr1.push(v0);\r\n        for (let p=item; p!==undefined;p=p.parent) {\r\n            let ki=p.keyIndex;\r\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\r\n            v0[this.keyFields[ki].name] = p.box.id;\r\n        }\r\n        let len = this.keyFields.length;\r\n        for (let i=item.keyIndex+1; i<len; i++) {\r\n            let k = this.keyFields[i];\r\n            //v0['_'+k.name] = -1;\r\n            v0[k.name] = -1;\r\n        }\r\n        await map.actions.del.submit(data);\r\n        let children = item.parent.children;\r\n        let index = children.findIndex(v => v === item);\r\n        if (index >= 0) children.splice(index, 1);\r\n    }\r\n\r\n    protected get VMapMain():typeof VMapMain {return VMapMain}\r\n}\r\n","export * from './cMap';\r\nexport * from './vMain';\r\n","import * as React from 'react';\r\nimport { Page } from '../../components';\r\nimport { jsonStringify } from '../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CAction, ActionUI } from './cAction';\r\nimport { Action } from '../../uq';\r\n\r\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\r\n    protected vForm: VForm;\r\n    protected returns: any;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.mainPage);\r\n    }\r\n\r\n    private onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        this.returns = await this.controller.submit(values);\r\n        this.closePage();\r\n        this.openPage(this.resultPage);\r\n    }\r\n\r\n    protected mainPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label}>\r\n            {this.vForm.render('mx-3 my-2')}\r\n        </Page>;\r\n    }\r\n\r\n    protected resultPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label} back=\"close\">\r\n            完成！\r\n            <pre>\r\n                {jsonStringify(this.returns)}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { Action } from '../../uq';\r\nimport { VActionMain } from './vActionMain';\r\n\r\nexport interface ActionUI extends EntityUI {\r\n    CAction?: typeof CAction;\r\n    //main: typeof VActionMain,\r\n}\r\n\r\nexport class CAction extends CEntity<Action, ActionUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VActionMain);\r\n    }\r\n\r\n    protected get VActionMain():typeof VActionMain {return VActionMain}\r\n\r\n    async submit(values:any) {\r\n        return this.entity.submit(values);\r\n    }\r\n\r\n    async submitReturns(values:any) {\r\n        return this.entity.submitReturns(values);\r\n    }\r\n}\r\n","export * from './cAction';\r\nexport * from './vActionMain';\r\n","import * as React from 'react';\r\nimport { History } from '../../uq';\r\nimport { Page } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CHistory, HistoryUI } from './cHistory';\r\n\r\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        History\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { History } from '../../uq';\r\nimport { VHistoryMain } from './vHistoryMain';\r\n\r\nexport interface HistoryUI extends EntityUI {\r\n    CHistory?: typeof CHistory;\r\n    main: typeof VHistoryMain,\r\n}\r\n\r\nexport class CHistory extends CEntity<History, HistoryUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VHistoryMain);\r\n    }\r\n\r\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\r\n}\r\n","export * from './cHistory';\r\nexport * from './vHistoryMain';\r\n","import * as React from 'react';\r\nimport { Pending } from '../../uq';\r\nimport { Page } from '../../components';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CPending, PendingUI } from './cPending';\r\n\r\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        pending\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from '../CVEntity';\r\nimport { Pending } from '../../uq';\r\nimport { VPendingMain } from './vPendingMain';\r\n\r\nexport interface PendingUI extends EntityUI {\r\n    CPending?: typeof CPending;\r\n    main: typeof VPendingMain,\r\n}\r\n\r\nexport class CPending extends CEntity<Pending, PendingUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VPendingMain);\r\n    }\r\n\r\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\r\n}\r\n","export * from './cPending';\r\nexport * from './vPendingMain';\r\n","\r\nimport {setCenterToken} from './uqApi';\r\nimport {WSChannel} from './wsChannel';\r\n\r\nexport const netToken = {\r\n    set(userId:number, token:string) {\r\n        setCenterToken(userId, token);\r\n        WSChannel.setCenterToken(token);\r\n    },\r\n    clear() {\r\n        setCenterToken(0, undefined);\r\n        WSChannel.setCenterToken(undefined);\r\n    }\r\n};\r\n","import * as React from 'react';\r\n//import _ from 'lodash';\r\nimport {nav} from './nav';\r\nimport {Page} from './page';\r\nimport { User, env } from '../tool';\r\n\r\nexport abstract class Controller {\r\n    readonly res: any;\r\n    readonly x: any;\r\n    icon: string|JSX.Element;\r\n    label:string;\r\n    readonly isDev:boolean = env.isDevelopment;\r\n    get user():User {return nav.user}\r\n    get isLogined():boolean {\r\n        let {user} = nav;\r\n        if (user === undefined) return false;\r\n        return user.id > 0;\r\n    }\r\n    constructor(res:any) {\r\n        this.res = res || {};\r\n        this.x = this.res.x || {};\r\n    }\r\n\r\n    private receiveHandlerId:number;\r\n    private disposer:()=>void;\r\n\r\n    private dispose() {\r\n        // message listener的清理\r\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\r\n        this.onDispose();\r\n    }\r\n\r\n    protected onDispose() {\r\n    }\r\n\r\n    protected async openVPage<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp((this as any) as C)).open(param);\r\n    }\r\n\r\n    protected renderView<C extends Controller>(view: new (controller: C)=>View<C>, param?:any) {\r\n        return (new view((this as any) as C)).render(param);\r\n    }\r\n\r\n    async event(type:string, value:any) {\r\n        await this.onEvent(type, value);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n    }\r\n\r\n    protected msg(text:string) {\r\n        alert(text);\r\n    }\r\n    protected errorPage(header:string, err:any) {\r\n        this.openPage(<Page header=\"App error!\">\r\n            <pre>\r\n                {typeof err === 'string'? err : err.message}\r\n            </pre>\r\n        </Page>);\r\n    }\r\n\r\n    protected onMessage(message:any):Promise<void> {\r\n        return;\r\n    }\r\n\r\n    private onMessageReceive = async (message:any):Promise<void> => {\r\n        await this.onMessage(message);\r\n    }\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        /*\r\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n        console.log('return true');\r\n        */\r\n        return true;\r\n    }\r\n    protected registerReceiveHandler() {\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n    }\r\n\r\n    protected abstract internalStart(param?:any, ...params:any[]):Promise<void>;\r\n    async start(param?:any, ...params:any[]):Promise<void> {\r\n        this.disposer = this.dispose.bind(this);\r\n        this.registerReceiveHandler();\r\n        let ret = await this.beforeStart();\r\n        if (ret === false) return;\r\n        await this.internalStart(param, ...params);\r\n    }\r\n\r\n    get isCalling():boolean {return this._resolve_$ !== undefined}\r\n\r\n    private _resolve_$:((value:any) => void)[];\r\n    async call<T>(param?:any, ...params:any[]):Promise<T> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<T> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await this.start(param, ...params);\r\n        });\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await (new vp(this as any)).open(param);\r\n        });\r\n    }\r\n\r\n    returnCall(value:any) {\r\n        if (this._resolve_$ === undefined) return;\r\n        let resolve = this._resolve_$.pop();\r\n        if (resolve === undefined) {\r\n            alert('the Controller call already returned, or not called');\r\n            return;\r\n        }\r\n        resolve(value);\r\n    }\r\n\r\n    openPage(page:JSX.Element) {\r\n        nav.push(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    replacePage(page:JSX.Element) {\r\n        nav.replace(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    backPage() {\r\n        nav.back();\r\n    }\r\n\r\n    closePage(level?:number) {\r\n        nav.pop(level);\r\n    }\r\n\r\n    ceasePage(level?:number) {\r\n        nav.ceaseTop(level);\r\n    }\r\n\r\n    removeCeased() {\r\n        nav.removeCeased();\r\n    }\r\n\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        nav.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\n\r\nexport abstract class View<C extends Controller> {\r\n    protected controller: C;\r\n    protected readonly res: any;\r\n    protected readonly x: any;\r\n\r\n    constructor(controller: C) {\r\n        this.controller = controller;\r\n        this.res = controller.res;\r\n        this.x = controller.x;\r\n    }\r\n\r\n    protected get isDev() {return  env.isDevelopment}\r\n\r\n    abstract render(param?:any): JSX.Element;\r\n\r\n    protected renderVm(vm: new (controller: C)=>View<C>, param?:any) {\r\n        return (new vm(this.controller)).render(param);\r\n    }\r\n\r\n    protected async openVPage(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp(this.controller)).open(param);\r\n    }\r\n\r\n    protected async event(type:string, value?:any) {\r\n        /*\r\n        if (this._resolve_$_ !== undefined) {\r\n            await this._resolve_$_({type:type, value:value});\r\n            return;\r\n        }*/\r\n        await this.controller.event(type, value);\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        return await this.controller.vCall(vp, param);\r\n    }\r\n\r\n    protected returnCall(value:any) {\r\n        this.controller.returnCall(value);\r\n    }\r\n\r\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.openPage(React.createElement(view, param));\r\n    }\r\n\r\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.replacePage(React.createElement(view, param));\r\n    }\r\n\r\n    protected openPageElement(page: JSX.Element) {\r\n        this.controller.openPage(page);\r\n    }\r\n\r\n    protected replacePageElement(page: JSX.Element) {\r\n        this.controller.replacePage(page);\r\n    }\r\n\r\n    protected backPage() {\r\n        this.controller.backPage();\r\n    }\r\n\r\n    protected closePage(level?:number) {\r\n        this.controller.closePage(level);\r\n    }\r\n\r\n    protected ceasePage(level?:number) {\r\n        this.controller.ceasePage(level);\r\n    }\r\n\r\n    protected removeCeased() {\r\n        this.controller.removeCeased();\r\n    }\r\n\r\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.controller.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\nexport abstract class VPage<C extends Controller> extends View<C> {\r\n    abstract open(param?:any):Promise<void>;\r\n\r\n    render(param?:any):JSX.Element {return null;}\r\n}\r\n\r\nexport type TypeVPage<C extends Controller> = new (controller: C)=>VPage<C>;\r\n\r\n","export * from './schema';\r\nexport * from './uiSchema';\r\nexport * from './toUiSelectItems';","\r\nexport const mobileRegex = /^[0-9]*$/;\r\nexport const emailRegex = /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\r\n// /^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/\r\n\r\nexport const EmailFieldRule = (value:any): string|string[] => {\r\n    if (emailRegex.test(value as string) === false) return '电子邮件格式错误';\r\n}\r\n\r\nexport const MobileFieldRule = (value:any): string|string[] => {\r\n    if (emailRegex.test(value as string) === false) return '手机格式错误';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport interface DropdownAction {\r\n    icon?: string;\r\n    caption?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface DropdownActionsProps {\r\n    icon?: string;\r\n    actions: DropdownAction[];\r\n    isRight?: boolean;\r\n}\r\n\r\nexport interface DropdownActionsState {\r\n    dropdownOpen: boolean;\r\n}\r\n\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    private menu: HTMLDivElement;\r\n    private button: HTMLElement;\r\n    constructor(props:DropdownActionsProps) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('click', this.handleDocumentClick);\r\n        document.addEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleDocumentClick);\r\n        document.removeEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    private handleDocumentClick = (evt:any) => {\r\n        if (this.state.dropdownOpen === false) return;\r\n        if (this.button && this.button.contains(evt.target)) return;\r\n        if (!this.menu) return;\r\n        //if (!this.menu.contains(evt.target)) \r\n        this.toggle();\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        let {dropdownOpen} = this.state;\r\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\r\n        return <div className=\"dropdown\">\r\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={dropdownOpen}\r\n                onClick={this.toggle}>\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </button>\r\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\r\n                {\r\n                    actions.map((v,index) => {\r\n                        let {icon, caption, action} = v;\r\n                        if (icon === undefined && caption === undefined) \r\n                            return <div className=\"dropdown-divider\" />;\r\n                        let i:any;\r\n                        if (hasIcon === true) {\r\n                            if (icon !== undefined) icon = 'fa-' + icon;\r\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                        }\r\n                        if (action === undefined) \r\n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                        // eslint-disable-next-line\r\n                        return <a className=\"dropdown-item\" key={index} href=\"#/\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n/*\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right={isRight}>\r\n                {actions.map((v,index) => {\r\n                    let {icon, caption, action} = v;\r\n                    if (icon === undefined && caption === undefined) \r\n                        return <div className=\"dropdown-divider\" />;\r\n                    let i;\r\n                    if (hasIcon === true) {\r\n                        if (icon !== undefined) icon = 'fa-' + icon;\r\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                    }\r\n                    if (action === undefined) \r\n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\r\n                })}\r\n            </DropdownMenu>\r\n        </UncontrolledButtonDropdown>\r\n    }\r\n}\r\n*/","import * as React from 'react';\r\n\r\nexport interface EasyDateProps {\r\n    date: Date | number;\r\n}\r\n\r\nfunction renderDate(vDate:Date|number, withTime:boolean) {\r\n    if (!vDate) return null;\r\n    let date: Date;\r\n    switch (typeof vDate) {\r\n        default: date = vDate as Date; break;\r\n        case 'string': date = new Date(vDate); break;\r\n        case 'number': date = new Date((vDate as number)*1000); break;\r\n    }\r\n\r\n    let now = new Date();\r\n    let tick:number, nDate:number, _date:number, month:number, year:number, hm:string, nowYear:number;\r\n    let d = date;\r\n    tick = now.getTime() - d.getTime();\r\n    let hour=d.getHours(), minute=d.getMinutes();\r\n    nDate=now.getDate();\r\n    _date=d.getDate();\r\n    month=d.getMonth()+1;\r\n    year=d.getFullYear();\r\n    nowYear = now.getFullYear();\r\n    hm = withTime === true? ' ' + hour + ((minute<10?':0':':') + minute) : '';\r\n\r\n    if (tick < -24*3600*1000) {\r\n        if (year === nowYear)\r\n            return month+'月'+_date+'日' + hm;\r\n        else\r\n            return year+'年'+month+'月'+_date+'日' + hm;\r\n    }\r\n    if (tick < 24*3600*1000) {\r\n        return _date!==nDate? \r\n            (tick < 0? '明天 ' : '昨天 ') + hm \r\n            : withTime===true? hm : '今天';\r\n    }\r\n    if (year === nowYear) {\r\n        return month+'月'+_date+'日';\r\n    }\r\n    return year+'年'+month+'月'+_date+'日';\r\n}\r\n\r\n\r\nexport class EasyDate extends React.Component<EasyDateProps> {\r\n    render() {\r\n        return renderDate(this.props.date, false);\r\n    }\r\n}\r\n\r\nexport class EasyTime extends React.Component<EasyDateProps> {\r\n    render() {\r\n        return renderDate(this.props.date, true);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Image } from '.';\r\n\r\nexport interface MediaProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    discription?: string | JSX.Element;\r\n    px?: number;\r\n    py?: number;\r\n}\r\n\r\nexport class Media extends React.Component<MediaProps> {\r\n    render() {\r\n        let {icon, main, discription, px, py} = this.props;\r\n        let disp:any;\r\n        if (typeof discription === 'string')\r\n            disp = <div>{discription}</div>;\r\n        else\r\n            disp = discription;\r\n        let cn = classNames(\r\n            'media', \r\n            px===undefined? 'px-0':'px-'+px, \r\n            py===undefined? 'py-2':'py-'+py);\r\n        return <div className={cn}>\r\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\r\n            <div className=\"media-body\">\r\n                <h5 className=\"mt-0\">{main}</h5>\r\n                {disp}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\n\r\nexport interface SearchBoxProps {\r\n    className?: string;\r\n    label?: string;\r\n    initKey?: string;\r\n    placeholder?: string;\r\n    buttonText?: string;\r\n    maxLength?: number;\r\n    size?: 'sm' | 'md' | 'lg';\r\n    inputClassName?: string;\r\n    onSearch: (key:string)=>Promise<void>;\r\n    onFocus?: ()=>void;\r\n    allowEmptySearch?: boolean;\r\n}\r\n\r\n/*\r\nexport interface SearchBoxState {\r\n    disabled: boolean;\r\n}*/\r\n\r\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\r\n    private input: HTMLInputElement;\r\n    private key: string = null;\r\n    @observable private disabled: boolean;\r\n\r\n    private onChange = (evt: React.ChangeEvent<any>) => {\r\n        this.key = evt.target.value;\r\n        if (this.key !== undefined) {\r\n            this.key = this.key.trim();\r\n            if (this.key === '') this.key = undefined;\r\n        }\r\n        if (this.props.allowEmptySearch !== true) {\r\n            this.disabled = !this.key;\r\n        }\r\n    }\r\n    private onSubmit = async (evt: React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n        if (this.key === null) this.key = this.props.initKey || '';\r\n        if (this.props.allowEmptySearch !== true) {\r\n            if (!this.key) return;\r\n            if (this.input) this.input.disabled = true;\r\n        }\r\n        await this.props.onSearch(this.key);\r\n        if (this.input) this.input.disabled = false;\r\n    }\r\n    clear() {\r\n        if (this.input) this.input.value = '';\r\n    }\r\n    render() {\r\n        let {className, inputClassName, onFocus,\r\n            label, placeholder, buttonText, maxLength, size} = this.props;\r\n        let inputSize:string;\r\n        switch (size) {\r\n            default:\r\n            case 'sm': inputSize = 'input-group-sm'; break;\r\n            case 'md': inputSize = 'input-group-md'; break;\r\n            case 'lg': inputSize = 'input-group-lg'; break;\r\n        }\r\n        let lab:any;\r\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\r\n        return <form className={className} onSubmit={this.onSubmit} >\r\n            <div className={classNames(\"input-group\", inputSize)}>\r\n                {lab}\r\n                <input ref={v=>this.input=v} onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"key\"\r\n                    onFocus={onFocus}\r\n                    className={classNames('form-control', inputClassName || 'border-primary')}\r\n                    placeholder={placeholder}\r\n                    defaultValue={this.props.initKey}\r\n                    maxLength={maxLength} />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        disabled={this.disabled}>\r\n                        <i className='fa fa-search' />\r\n                        <i className=\"fa\"/>\r\n                        {buttonText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n","import { UqMan, TuidModify } from '../uqMan';\r\nimport { Tuid } from \"./tuid\";\r\n\r\ninterface Modify {\r\n    id: number;\r\n    entity: string;\r\n    key: string;\r\n}\r\n\r\nexport class TuidsCache {\r\n    private readonly uq: UqMan;\r\n    //private readonly uqApi: UqApi;\r\n    //private readonly tuids: {[name:string]: Tuid};\r\n    private modifyMax: TuidModify;\r\n    private cacheTimer: any;\r\n    constructor(uq: UqMan) {\r\n        this.uq = uq;\r\n        //this.uqApi = uq.uqApi;\r\n        //this.tuids = uq.tuids;\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.clearCacheTimer();\r\n        this.cacheTimer = setTimeout(this.loadIds, defer);\r\n    }\r\n    private clearCacheTimer() {\r\n        if (this.cacheTimer === undefined) return;\r\n        clearTimeout(this.cacheTimer);\r\n        this.cacheTimer = undefined;\r\n    }\r\n    private loadIds = () => {\r\n        this.clearCacheTimer();\r\n        let {tuids} = this.uq;\r\n        for (let i in tuids) {\r\n            let tuid = tuids[i];\r\n            tuid.cacheIds();\r\n        }\r\n    }\r\n    \r\n    pullModify(modifyMax:number) {\r\n        if (modifyMax === undefined) return;\r\n        let now = Math.floor(Date.now() / 1000);\r\n        if (this.modifyMax === undefined) {\r\n            this.modifyMax = this.uq.localModifyMax.get();\r\n            if (this.modifyMax === undefined) {\r\n                this.modifyMax = {\r\n                    max: modifyMax,\r\n                    seconds: now,\r\n                };\r\n                this.uq.localModifyMax.set(this.modifyMax);\r\n            }\r\n        }\r\n        let {max, seconds} = this.modifyMax;\r\n        let lockGap = 3600;\r\n        if (now - seconds < lockGap) return;\r\n        if (modifyMax <= max) return;\r\n        let tuidCached:string[] = [];\r\n        let {tuids} = this.uq;\r\n        for (let i in tuids) {\r\n            //if (tuids[i].cached === true) \r\n            tuidCached.push(i);\r\n        }\r\n        if (tuidCached.length === 0) return;\r\n        this.modifyMax.seconds = now;\r\n        this.innerPullModify(tuidCached.join('\\t'));\r\n    }\r\n\r\n    private async innerPullModify(tuidLists:string):Promise<void> {\r\n        let {uqApi, tuids} = this.uq;\r\n        let {max} = this.modifyMax;\r\n        let ret:{queue:Modify[], queueMax:number} = await uqApi.queueModify(max, 30, tuidLists);\r\n        let group:{[entity:string]: {tuid:Tuid; ids: string[]}} = {};\r\n        let modifyMax:number = 0;\r\n        for (let modify of ret.queue) {\r\n            let {id, entity, key} = modify;\r\n            let tuid = tuids[entity];\r\n            if (tuid === undefined) continue;\r\n            let item = group[entity];\r\n            if (item === undefined) {\r\n                item = group[entity] = {tuid: tuid, ids:[]};\r\n            }\r\n            item.ids.push(key);\r\n            if (id > modifyMax) modifyMax = id;\r\n        }\r\n        for (let i in group) {\r\n            let {tuid, ids} = group[i];\r\n            await tuid.modifyIds(ids);\r\n        }\r\n        let now = Math.floor(Date.now() / 1000);\r\n        this.modifyMax = {\r\n            max: modifyMax,\r\n            seconds: now,\r\n        }\r\n        this.uq.localModifyMax.set(this.modifyMax);\r\n    }\r\n}\r\n","import { LocalMap, LocalCache, env } from '../tool';\r\nimport { UqData } from '../net';\r\nimport { UqMan } from './uqMan';\r\nimport { TuidImport, TuidInner } from './tuid';\r\n\r\nexport interface TVs {\r\n    [uqName:string]: {\r\n        [tuidName: string]: (values: any) => JSX.Element;\r\n    }\r\n}\r\n\r\nexport class UQsMan {\r\n    private collection: {[uqName: string]: UqMan};\r\n    private readonly tvs: TVs;\r\n\r\n    readonly name: string;\r\n    readonly appOwner: string;\r\n    readonly appName: string;\r\n    readonly localMap: LocalMap;\r\n    readonly localData: LocalCache;\r\n    id: number;\r\n\r\n    constructor(tonvaAppName:string, tvs:TVs) {\r\n        this.tvs = tvs || {};\r\n        this.buildTVs();\r\n        this.collection = {};\r\n        let parts = tonvaAppName.split('/');\r\n        if (parts.length !== 2) {\r\n            throw new Error('tonvaApp name must be / separated, owner/app');\r\n        }\r\n        this.appOwner = parts[0];\r\n        this.appName = parts[1];\r\n        this.localMap = env.localDb.map(tonvaAppName);\r\n        this.localData = this.localMap.child('uqData');\r\n    }\r\n\r\n    // to be removed in the future\r\n    addUq(uq: UqMan) {\r\n        this.collection[uq.name] = uq;\r\n    }\r\n\r\n    private buildTVs() {\r\n        for (let i in this.tvs) {\r\n            let uqTVs = this.tvs[i];\r\n            if (uqTVs === undefined) continue;\r\n            let l = i.toLowerCase();\r\n            if (l === i) continue;\r\n            this.tvs[l] = uqTVs;\r\n            for (let j in uqTVs) {\r\n                let en = uqTVs[j];\r\n                if (en === undefined) continue;\r\n                let lj = j.toLowerCase();\r\n                if (lj === j) continue;\r\n                uqTVs[lj] = en;\r\n            }\r\n        }\r\n    }\r\n\r\n    async init(uqsData:UqData[]):Promise<void> {\r\n        let promiseInits: PromiseLike<void>[] = [];\r\n        for (let uqData of uqsData) {\r\n            let {uqOwner, uqName} = uqData;\r\n            let uqFullName = uqOwner + '/' + uqName;\r\n            //let uqUI = this.ui.uqs[uqFullName] as UqUI || {};\r\n            //let cUq = this.newCUq(uqData, uqUI);\r\n            //this.cUqCollection[uqFullName] = cUq;\r\n            //this.uqs.addUq(cUq.uq);\r\n            let uq = new UqMan(this, uqData, undefined, this.tvs[uqFullName] || this.tvs[uqName]);\r\n            this.collection[uqFullName] = uq;\r\n            let lower = uqFullName.toLowerCase();\r\n            if (lower !== uqFullName) {\r\n                this.collection[lower] = uq;\r\n            }\r\n            promiseInits.push(uq.init());\r\n        }\r\n        await Promise.all(promiseInits);\r\n    }\r\n\r\n    async load(): Promise<string[]> {\r\n        let retErrors:string[] = [];\r\n        let promises: PromiseLike<string>[] = [];\r\n        for (let i in this.collection) {\r\n            let uq = this.collection[i];\r\n            promises.push(uq.loadEntities());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        return retErrors;\r\n    }\r\n\r\n    buildUQs(): any {\r\n        let uqs = {};\r\n        for (let i in this.collection) {\r\n            let uqMan = this.collection[i];\r\n            //let n = uqMan.name;\r\n            let uqName = uqMan.uqName;\r\n            let l = uqName.toLowerCase();\r\n            let entities = uqMan.entities;\r\n            let keys = Object.keys(entities);\r\n            for (let key of keys) {\r\n                let entity = entities[key];\r\n                let {name, sName} = entity;\r\n                if (name !== sName) entities[sName] = entity;\r\n            }\r\n            uqs[i] = entities;\r\n            uqs[uqName] = entities;\r\n            if (l !== uqName) uqs[l] = entities;\r\n        }\r\n        return uqs;\r\n    }\r\n\r\n    setTuidImportsLocal():string[] {\r\n        let ret:string[] = [];\r\n        for (let i in this.collection) {\r\n            let uq = this.collection[i];\r\n            for (let tuid of uq.tuidArr) {\r\n                if (tuid.isImport === true) {\r\n                    let error = this.setInner(tuid as TuidImport);\r\n                    if (error) ret.push(error);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private setInner(tuidImport: TuidImport):string {\r\n        let {from} = tuidImport;\r\n        let fromName = from.owner + '/' + from.uq;\r\n        let uq = this.collection[fromName];\r\n        if (uq === undefined) {\r\n            //debugger;\r\n            return `setInner(tuidImport: TuidImport): uq ${fromName} is not loaded`;\r\n        }\r\n        let iName = tuidImport.name\r\n        let tuid = uq.tuid(iName);\r\n        if (tuid === undefined) {\r\n            //debugger;\r\n            return `setInner(tuidImport: TuidImport): uq ${fromName} has no Tuid ${iName}`;\r\n        }\r\n        if (tuid.isImport === true) {\r\n            //debugger;\r\n            return `setInner(tuidImport: TuidImport): uq ${fromName} Tuid ${iName} is import`;\r\n        }\r\n        tuidImport.setFrom(tuid as TuidInner);\r\n    }\r\n}\r\n","export * from './app';\r\nexport * from './startApp';\r\nexport * from './cUq';\r\nexport * from './action';\r\nexport * from './tuid';\r\nexport * from './sheet';\r\nexport * from './query';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './form/viewModel';\r\nexport * from './form';\r\nexport * from './formUI';\r\nexport * from './ControllerUq';\r\nexport * from './CVEntity';\r\nexport * from './link';\r\nexport * from './icons';\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {FormView, FormProps} from './formView';\r\n\r\nexport function tonvaDebug() {\r\n    let a = 0;\r\n}\r\n\r\nexport interface TonvaFormProps extends FormProps {\r\n    className?: string;\r\n    initValues?: any;\r\n}\r\n\r\n@observer \r\nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\r\n    formView: FormView;\r\n    constructor(props:TonvaFormProps) {\r\n        super(props);\r\n        this.formView = new FormView(this.props);\r\n    }\r\n    componentWillMount() {\r\n        this.formView.setInitValues(this.props.initValues);\r\n    }\r\n    debug() {\r\n        let s = null;\r\n    }\r\n    render() {\r\n        let {className, children, initValues} = this.props;\r\n        return <div className={className}>\r\n            {\r\n                children === undefined? \r\n                    this.formView.render() : \r\n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport className from 'classnames';\r\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\r\n\r\nexport interface Step {\r\n    formRows: FormRow[];\r\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\r\n    ex?: any;                                   // 每一步额外的参数\r\n}\r\n\r\nexport interface MultiStepProps {\r\n    className?: string;\r\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    steps: {[name:string]: Step};\r\n    first: string;         // 第一步的名字\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n}\r\n\r\nexport interface StepView {\r\n    stepName: string;\r\n    step: Step;\r\n    props: FormProps;\r\n    //view: JSX.Element;\r\n}\r\nexport interface MultiStepState {\r\n    //num: number;\r\n    //step: Step;\r\n    //formView: FormView;\r\n    topView: StepView;\r\n    stepViews: StepView[];\r\n}\r\n\r\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\r\n    private values: any = {};\r\n    private stepViews: StepView[] = [];\r\n    private topView: StepView;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topView: undefined,\r\n            stepViews: [],\r\n        }\r\n        this.onPrev = this.onPrev.bind(this);\r\n        this.onNext = this.onNext.bind(this);\r\n    }\r\n    \r\n    private setStep(stepName: string) {\r\n        let step = this.props.steps[stepName];\r\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\r\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\r\n        let otherButton, onOther;\r\n        if (this.stepViews.length > 0) {\r\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\r\n            onOther = this.onPrev;\r\n        }\r\n        let {header, footer} = this.props;\r\n        let btnContent = step.next === undefined?\r\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\r\n            {suffix: 'arrow-right', text: '下一步'}\r\n        let formProps = {\r\n            formRows: step.formRows,\r\n            submitButton: <ButtonConten {...btnContent} />,\r\n            onSubmit: this.onNext,\r\n            otherButton: otherButton,\r\n            onOther: onOther,\r\n        };\r\n        let num = this.stepViews.length + 1;\r\n        this.topView = {\r\n            stepName: stepName,\r\n            step: step,\r\n            props: formProps,\r\n        };\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        this.setStep(this.props.first);\r\n    }\r\n    private onPrev(values:any) {\r\n        _.assign(this.values, values);\r\n        this.topView = this.stepViews.pop();\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    private onNext(values:any): Promise<SubmitResult|undefined> {\r\n        _.assign(this.values, values);\r\n        //let {num, step} = this.state;\r\n        let {next} = this.topView.step;\r\n        if (next === undefined) {\r\n            return this.props.onSubmit(this.values)\r\n        }\r\n        let nextStepName:string;\r\n        if (typeof next === 'string') {\r\n            nextStepName = next;\r\n        }\r\n        else {\r\n            nextStepName = next(this.values);\r\n        }\r\n        this.setStep(nextStepName);\r\n    }\r\n    render() {\r\n        let {className, header, footer} = this.props;\r\n        let {topView, stepViews} = this.state;\r\n        let {stepName, step} = topView;\r\n        let hidden = {visibility: 'hidden'};\r\n        let num = stepViews.length + 1;\r\n        return <div className={className}>\r\n            <div>\r\n                {header && header(step, num)}\r\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\r\n                {footer && footer(step, num)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\r\n    let {prefix, text, suffix} = props;\r\n    let pIcon, sIcon;\r\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\r\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\r\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\r\n}\r\n    \r\n","import _ from 'lodash';\r\nimport { Context } from '../context';\r\nimport { FormRes } from '../formRes';\r\n\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any):void;\r\n}\r\n\r\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\r\nexport type FieldRule = (value:any) => string[] | string;\r\n\r\nexport class RuleCustom extends Rule {\r\n    private func: FieldRule;\r\n    constructor(func: FieldRule) {\r\n        super();\r\n        this.func = func;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        let ret = this.func(value);\r\n        if (ret === undefined) return;\r\n        switch (typeof ret) {\r\n            case 'undefined': return;\r\n            case 'string': defy.push(ret as string); return;\r\n            default: defy.push(...ret); return;\r\n        }        \r\n    }\r\n}\r\n\r\nexport abstract class RulePredefined extends Rule {\r\n    protected res: FormRes;\r\n    constructor(res: FormRes) {\r\n        super();\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class RuleRequired extends RulePredefined {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if (isNaN(value as number) === false) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push(this.res.required);\r\n    }\r\n}\r\n\r\nexport class RuleNum extends RulePredefined {\r\n    private minMsg: _.TemplateExecutor;\r\n    private maxMsg: _.TemplateExecutor;\r\n    protected min: number;\r\n    protected max: number\r\n    constructor(res: FormRes, min?: number, max?: number) {\r\n        super(res);\r\n        this.minMsg = _.template(res.min);\r\n        this.maxMsg = _.template(res.max);\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (isNaN(n) === true) {\r\n            defy.push(this.res.number);\r\n        }\r\n        else {\r\n            this.checkMore(defy, n);\r\n        }\r\n    }\r\n\r\n    protected checkMore(defy:string[], value: number) {\r\n        if (this.min !== undefined && Number(value) < this.min) {\r\n            defy.push(this.minMsg({min:this.min}));\r\n        }\r\n        if (this.max !== undefined && Number(value) > this.max) {\r\n            defy.push(this.maxMsg({max:this.max}));\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleInt extends RuleNum {\r\n    protected checkMore(defy:string[], n: number) {\r\n        super.checkMore(defy, n);\r\n        if (Number.isInteger(n) === false) {\r\n            defy.push(this.res.integer);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { ItemSchema } from '../../schema';\r\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\r\nimport { computed, observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Widget {\r\n    name: string;\r\n    protected context: Context;\r\n    protected fieldProps:FieldProps;\r\n    protected children: React.ReactNode;\r\n    protected _itemSchema: ItemSchema;\r\n    protected _ui: UiItem;\r\n    protected defaultValue: any;\r\n    protected value: any;\r\n    protected rules: Rule[];\r\n    @observable errors: string[] = [];\r\n    @observable protected contextErrors: string[] = [];\r\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\r\n    protected readOnly:boolean;\r\n    protected disabled:boolean;\r\n    @observable visible:boolean;\r\n\r\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\r\n        this.context = context;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this._itemSchema = itemSchema;\r\n        this.fieldProps = fieldProps;\r\n        this.children = children;\r\n        this._ui = context.getUiItem(name);\r\n        if (this.ui === undefined) {\r\n            this.readOnly = false;\r\n            this.disabled = false;\r\n            this.visible = true;\r\n        }\r\n        else {\r\n            let {readOnly, disabled, visible} = this.ui;\r\n            this.readOnly = (readOnly === true);\r\n            this.disabled = (disabled === true);\r\n            this.visible = !(visible === false);            \r\n        }\r\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\r\n        this.init();\r\n    }\r\n\r\n    protected get itemSchema(): ItemSchema {return this._itemSchema};\r\n    protected get ui(): UiItem {return this._ui};\r\n\r\n    protected init() {\r\n        this.rules = [];\r\n        if (this.itemSchema.required === true) {\r\n            this.rules.push(new RuleRequired(this.context.form.res));\r\n        }\r\n        this.buildRules();\r\n        if (this.ui === undefined) return;\r\n        let {rules} = this.ui;\r\n        if (rules === undefined) return;\r\n        if (Array.isArray(rules) === false) {\r\n            this.rules.push(new RuleCustom(rules as FieldRule));\r\n            return;\r\n        }\r\n        for (let rule of rules as FieldRule[]) {\r\n            this.rules.push(new RuleCustom(rule));\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n    }\r\n\r\n    checkRules() {\r\n        let defy:string[] = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        if (defy.length === 0) {\r\n            this.context.removeErrorWidget(this);\r\n        }\r\n        else {\r\n            this.context.addErrorWidget(this);\r\n            this.errors.push(...defy);\r\n        }\r\n    }\r\n\r\n    @computed get isOk() {\r\n        return this.errors.length ===0;\r\n    }\r\n\r\n    setError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.errors.push(err);\r\n        else this.errors.push(...err);\r\n    }\r\n\r\n    setContextError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.contextErrors.push(err);\r\n        else this.contextErrors.push(...err);\r\n    }\r\n\r\n    clearError() {\r\n        this.errors.splice(0);\r\n    }\r\n\r\n    clearContextError() {\r\n        this.contextErrors.splice(0);\r\n    }\r\n\r\n    protected parse(value:any):any {return value}\r\n\r\n    protected setElementValue(value:any) {}\r\n    protected setDataValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        this.context.initData[this.name] = this.value = this.parse(value);\r\n    }\r\n\r\n    setValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        //this.setDataValue(value);\r\n        //this.setElementValue(value);\r\n        this.changeValue(value, false);\r\n    }\r\n\r\n    getValue() {\r\n        return this.context.getValue(this.name);\r\n    }\r\n\r\n    getReadOnly():boolean {return this.readOnly}\r\n    getDisabled():boolean {return this.disabled}\r\n    getVisible():boolean {return this.visible}\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}\r\n    setVisible(value:boolean) {this.visible = value}\r\n\r\n    private isChanging: boolean;\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n\r\n    protected changeValue(newValue: any, fromElement: boolean) {\r\n        let prev = this.value;\r\n        let onChanging: ChangingHandler;\r\n        let onChanged: ChangedHandler;\r\n        if (this.ui !== undefined) {\r\n            onChanging = this.ui.onChanging;\r\n            onChanged = this.ui.onChanged;\r\n        }\r\n        let allowChange = true;\r\n        if (onChanging !== undefined) {\r\n            this.isChanging = true;\r\n            allowChange = onChanging(this.context, this.value, prev);\r\n            this.isChanging = false;\r\n        }\r\n        if (allowChange === true) {\r\n            this.setDataValue(newValue);\r\n            if (fromElement !== true) this.setElementValue(newValue);\r\n            if (onChanged !== undefined) {\r\n                this.isChanging = true;\r\n                onChanged(this.context, this.value, prev);\r\n                this.isChanging = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get className():string {\r\n        let fieldClass:string;\r\n        if (this.context.inNode === false) fieldClass = 'form-control';\r\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\r\n    }\r\n\r\n    protected abstract render():JSX.Element;\r\n\r\n    protected renderBody():JSX.Element {\r\n        let elDiscription;\r\n        if (this.hasError === false && this.ui) {\r\n            let {discription, discriptionClassName} = this.ui;\r\n            if (discriptionClassName === undefined) discriptionClassName = 'small text-muted';\r\n            elDiscription = <span className={discriptionClassName}>\r\n                {discription}\r\n            </span>;\r\n        }\r\n        return <>\r\n            {this.render()}\r\n            {elDiscription}\r\n        </>;\r\n    }\r\n\r\n    container = observer(():JSX.Element => {\r\n        if (this.visible === false) return null;\r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        let label:any = this.label;\r\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\r\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\r\n        }\r\n        return form.FieldContainer(label, this.renderBody());\r\n    })\r\n\r\n    protected get label():string {\r\n        let label:any;\r\n        if (this.ui === undefined) {\r\n            label = this.name;\r\n        }\r\n        else {\r\n            let uiLabel = this.ui.label;\r\n            if (uiLabel === null) label = null;\r\n            else label = uiLabel || this.name;\r\n        }\r\n        return label;\r\n    }\r\n\r\n    protected renderTemplet():JSX.Element | undefined {\r\n        if (this.children !== undefined) {\r\n            return <>{this.children}</>;\r\n        }\r\n        if (this.ui === undefined) return undefined;\r\n        let {Templet} = this.ui;\r\n        if (typeof Templet === 'function') return Templet(this.value);\r\n        return Templet;\r\n    }\r\n\r\n    protected renderErrors() {\r\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\r\n        if (errorList.length === 0) return null;\r\n        let {inNode} = this.context;\r\n        let tag = inNode === true? 'span' : 'div';\r\n        return errorList.map(err => React.createElement(tag, \r\n            {\r\n                key: err, \r\n                className: 'text-danger d-inline-block my-2 ml-3'\r\n            },\r\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\r\n        ));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextItem, StringSchema } from '../../schema';\r\n\r\nexport class TextWidget extends Widget {\r\n    protected inputType = 'text';\r\n    protected get ui(): UiTextItem {return this._ui as UiTextItem};\r\n    protected input: HTMLInputElement;\r\n\r\n    protected setElementValue(value:any) {\r\n        if (this.input === null) return;\r\n        this.input.value = value;\r\n    }\r\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\r\n    protected onKeyDown = async (evt:React.KeyboardEvent<HTMLInputElement>) => {\r\n        this.internalOnKeyDown(evt);\r\n        if (evt.keyCode !== 13) return;\r\n        let {onEnter} = this.context.form.props;\r\n        if (onEnter === undefined) return;\r\n\r\n        this.changeValue(evt.currentTarget.value, true);\r\n\r\n        //this.checkRules();\r\n        //this.context.checkContextRules();\r\n        this.input.blur();\r\n\r\n        let ret = await onEnter(this.name, this.context);\r\n        if (ret !== undefined) {\r\n            this.context.setError(this.name, ret);\r\n        }\r\n    }\r\n\r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n    }\r\n\r\n    protected onBlur(evt: React.FocusEvent<any>) {\r\n        this.onInputChange(evt);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n    }\r\n    protected onFocus(evt: React.FocusEvent<any>) {\r\n        this.clearError();\r\n        this.context.removeErrorWidget(this);\r\n        this.context.clearErrors();\r\n    }\r\n    protected onChange(evt: React.ChangeEvent<any>) {\r\n    }\r\n\r\n    setReadOnly(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.readOnly = this.readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.disabled = this.disabled = value;\r\n    }\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {\r\n            //'form-control': true,\r\n        };\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, cn)}\r\n            type={this.inputType}\r\n            defaultValue={this.value}\r\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\r\n            placeholder={this.placeholder}\r\n            readOnly={this.readOnly}\r\n            disabled={this.disabled}\r\n            onKeyDown = {this.onKeyDown}\r\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\r\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\r\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","//import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\nimport { RuleNum, RuleInt } from '../rules';\r\nimport { NumBaseSchema } from '../../schema';\r\n\r\nexport class NumberWidget extends TextWidget {\r\n    protected inputType = 'number';\r\n    protected get itemSchema(): NumBaseSchema {return this._itemSchema as NumBaseSchema};\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        let res = this.context.form.res;\r\n        let {min, max} = this.itemSchema;\r\n        this.rules.push(\r\n            this.itemSchema.type === 'integer'?\r\n                new RuleNum(res, min, max) :\r\n                new RuleInt(res, min, max)\r\n        );\r\n        /*\r\n        if (this.itemSchema.type === 'integer') {\r\n            this.rules.push(new RuleInt);\r\n        }\r\n        let {min, max} = this.itemSchema;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n        */\r\n    }\r\n\r\n    protected parse(value:any):any {\r\n        if (value === undefined || value === null) return;\r\n        return Number(value);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { NumberWidget } from './numberWidget';\r\n\r\nexport class UpdownWidget extends NumberWidget {\r\n    protected inputType = 'number';\r\n\r\n    protected isValidKey(key:number):boolean {\r\n        return key===46 || key===8 || key===37 || key===39\r\n            || (key>=48 && key<=57)\r\n            || (key>=96 && key<=105)\r\n            || key===109 || key===189;\r\n    }\r\n    \r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n        let key = evt.keyCode;\r\n        window.event.returnValue = this.isValidKey(key);\r\n    }\r\n}\r\n","//import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class DateWidget extends TextWidget {\r\n    protected inputType = 'date';\r\n}\r\n\r\nexport class DateTimeWidget extends TextWidget {\r\n    protected inputType = 'datetime';\r\n}\r\n\r\nexport class TimeWidget extends TextWidget {\r\n    protected inputType = 'time';\r\n}\r\n\r\nexport class MonthWidget extends TextWidget {\r\n    protected inputType = 'month';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiCheckItem } from '../../schema';\r\n\r\nexport class CheckBoxWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected get ui(): UiCheckItem {return this._ui as UiCheckItem};\r\n    protected trueValue: any;\r\n    protected falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        if (this.ui !== undefined) {\r\n            let {trueValue, falseValue} = this.ui;\r\n            if (trueValue === undefined) this.trueValue = true;\r\n            else this.trueValue = trueValue;\r\n            if (falseValue === undefined) this.falseValue = false;\r\n            else this.falseValue = falseValue;\r\n        }\r\n        else {\r\n            this.trueValue = true;\r\n            this.falseValue = false;\r\n        }\r\n    }\r\n    protected setElementValue(value:any) {\r\n        this.input.checked = value === this.trueValue;\r\n    }\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\r\n    }\r\n\r\n    protected onClick = () => {\r\n        this.context.clearErrors();\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames(this.className, 'form-check-inline p-0');\r\n        let input = <input\r\n            ref={(input)=>this.input = input}\r\n            className={'align-self-center'}\r\n            type=\"checkbox\"\r\n            defaultChecked={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            onClick={this.onClick} />;\r\n        if (this.context.inNode === true) {\r\n            return <label className={cn}>\r\n                {input} {(this.ui&&this.ui.label) || this.name}\r\n            </label>\r\n        }\r\n        else {\r\n            return <div className={cn}>\r\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\r\n            </div>;\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { Widget } from './widget';\r\nimport { UiSelect } from '../../schema';\r\n\r\nexport class SelectWidget extends Widget {\r\n    protected select: HTMLSelectElement;\r\n    protected get ui(): UiSelect {return this._ui as UiSelect};\r\n    @observable protected readOnly: boolean;\r\n\r\n    protected setElementValue(value:any) {this.select.value = value}\r\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setDataValue(evt.target.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\r\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        if (this.readOnly === true) {\r\n            let option = this.ui.list.find(v => v.value === this.value);\r\n            let title = (option === undefined)? '(???)' : option.title;\r\n            return <span className=\"form-control w-min-6c\">{title}</span>;\r\n        }\r\n        return <select\r\n            ref={(select)=>this.select = select}\r\n            className={classNames(this.className, 'form-control')}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}>\r\n            {this.ui.list.map((v,index) => {\r\n                let {title, value} = v;\r\n                let cn:string;\r\n                //if (value === undefined || value === null) cn = 'text-light small';\r\n                //else cn = 'text-danger';\r\n                return <option className={cn} key={index} value={value}>{title || value}</option>\r\n            })}\r\n        </select>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n//import { TextWidget } from './textWidget';\r\nimport { Widget } from './widget';\r\nimport { UiRadio } from '../../schema';\r\nimport { RowContext } from '../context';\r\n\r\n\r\nconst radioStyle:React.CSSProperties = {height: 'auto'};\r\n\r\nexport class RadioWidget extends Widget {\r\n    protected inputs: {[index:number]: HTMLInputElement} = {};\r\n    protected get ui(): UiRadio {return this._ui as UiRadio};\r\n\r\n    protected setElementValue(value:any) {\r\n        for (let i in this.inputs) {\r\n            let input = this.inputs[i];\r\n            input.checked = value === input.value;\r\n        }\r\n    }\r\n    setReadOnly(value:boolean) {\r\n        this.readOnly = value;\r\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        this.disabled = value;\r\n        for (let i in this.inputs) this.inputs[i].disabled = value\r\n    }\r\n\r\n    /*\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n    */\r\n\r\n    render() {\r\n        let {defaultValue, list} = this.ui;\r\n        let {isRow} = this.context;\r\n        let rowKey:number;\r\n        if (isRow === true) {\r\n            rowKey = (this.context as RowContext).rowKey;\r\n        }\r\n        let cn = classNames(this.className, 'py-0');\r\n        return <span className={cn} style={radioStyle}>\r\n                {list.map((v,index) => {\r\n                    let {value, title} = v;\r\n                    let name = this.name;\r\n                    if (rowKey !== undefined) name += '-' + rowKey;\r\n                    return <label key={index} className=\"form-radio-inline\">\r\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\r\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value}\r\n                            onChange={this.onInputChange} />\r\n                        {title || value}\r\n                    </label>;\r\n                    //</span>\r\n                })}\r\n            </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiIdItem, TempletType } from '../../schema';\r\nimport { observable } from 'mobx';\r\n\r\nexport class IdWidget extends Widget {\r\n    protected get ui(): UiIdItem {return this._ui as UiIdItem};\r\n    @observable protected value:number;\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}    \r\n\r\n    protected onClick = async () => {\r\n        let pickId = this.ui && this.ui.pickId;\r\n        if (pickId === undefined) {\r\n            alert('no pickId defined!');\r\n            return;\r\n        }\r\n        let id = await pickId(this.context, this.name, this.value);        \r\n        this.setDataValue(id);\r\n        this.clearError();\r\n        this.clearContextError();\r\n        this.checkRules();\r\n    }\r\n\r\n    render() {\r\n        let placeholder:string|JSX.Element, Templet: TempletType;\r\n        if (this.ui !== undefined) {\r\n            placeholder = this.ui.placeholder;\r\n            Templet = this.ui.Templet;\r\n        }\r\n        let cn = {\r\n            'form-control': true,\r\n            'required-item': this.itemSchema.required === true,\r\n            'cursor-pointer': true,\r\n            'is-invalid': this.hasError,\r\n        };\r\n        let content;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = placeholder || 'placeholder';\r\n            cn['text-muted'] = true;\r\n        }\r\n        else if (Templet === undefined) {\r\n            content = <>{this.value}</>;\r\n        }\r\n        else if (typeof Templet === 'function') {\r\n            content = Templet(this.value);\r\n        }\r\n        else {\r\n            content = Templet;\r\n        }\r\n        return <>\r\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DataType } from '../../schema';\r\nimport { UiType } from '../../schema';\r\n\r\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\r\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\r\n};\r\n","import * as React from 'react';\r\nimport { UiButton, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { Widget } from './widget';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class ButtonWidget extends Widget {\r\n    protected get ui(): UiButton {return this._ui as UiButton};\r\n\r\n    protected onClick = async () => {\r\n        this.clearError();\r\n        this.clearContextError();\r\n        let {name, type} = this.itemSchema;\r\n        if (type === 'submit') {\r\n            await this.context.submit(name);\r\n        }\r\n        /*\r\n        let {onButtonClick} = this.context.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${name} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(name, this.context);\r\n        if (ret === undefined) return;\r\n        this.context.setError(name, ret);\r\n        */\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let {name, type} = this.itemSchema;\r\n        let Templet:TempletType, cn:string, caption:string;\r\n        if (this.ui !== undefined) {\r\n            let {widget:widgetType} = this.ui;\r\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\r\n            Templet = this.ui.Templet;\r\n            cn = this.ui.className;\r\n            caption = this.ui.label;\r\n        }\r\n        let {form, hasError} = this.context;\r\n        let context = this.context;\r\n        let disabled = type==='submit' && hasError;\r\n        let content:any;\r\n        if (this.children !== undefined) content = this.children;\r\n        else if (typeof Templet === 'function') content = Templet();\r\n        else if (Templet !== undefined) content = Templet;\r\n        else content = caption; \r\n        let button = <button \r\n            className={cn} \r\n            type=\"button\"\r\n            disabled={disabled}\r\n            onClick={this.onClick}>\r\n            {content || name}\r\n        </button>;\r\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\r\n        return <div className={form.ButtonClass}>\r\n            <div>{this.renderErrors()}</div>\r\n            {button}\r\n        </div>;\r\n    });\r\n    \r\n    protected get label():string {return null}\r\n\r\n    render() {\r\n        return <this.observerRender />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Form } from './form';\r\nimport { UiSchema, UiArr, UiItem } from '../schema';\r\nimport { ArrSchema, ItemSchema } from '../schema';\r\nimport { Widget } from './widgets/widget';\r\n//import { ArrRow } from './arrRow';\r\nimport { observable, computed } from 'mobx';\r\nimport { ContextRule } from './rules';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Context {\r\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\r\n    readonly form: Form;\r\n    readonly uiSchema: UiSchema;\r\n    readonly initData: any;\r\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\r\n    readonly widgets: {[name:string]: Widget} = {};\r\n    readonly rules: ContextRule[];\r\n    readonly isRow: boolean;\r\n    @observable errors: string[] = [];\r\n    @observable errorWidgets:Widget[] = [];\r\n\r\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\r\n        this.form = form;\r\n        this.uiSchema = uiSchema;\r\n        this.initData = data;\r\n        this.inNode = inNode;\r\n        this.isRow = isRow;\r\n        if (uiSchema !== undefined) {\r\n            let {rules} = uiSchema;\r\n            if (rules !== undefined) {\r\n                this.rules = [];\r\n                if (Array.isArray(rules) === false)\r\n                    this.rules.push(rules as ContextRule);\r\n                else\r\n                    this.rules.push(...rules as ContextRule[]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getArrRowContexts(arrName: string) {\r\n        if (this.subContexts === undefined) this.subContexts = {};\r\n        let arrRowContexts = this.subContexts[arrName];\r\n        if (arrRowContexts === undefined) this.subContexts[arrName] = arrRowContexts = {};\r\n        return arrRowContexts;\r\n    }\r\n\r\n    abstract get data():any;\r\n    abstract getItemSchema(itemName:string):ItemSchema;\r\n    abstract getUiItem(itemName:string):UiItem;\r\n    get arrName():string {return undefined}\r\n    getValue(itemName:string):any {return this.initData[itemName]}\r\n    setValue(itemName:string, value:any) {\r\n        this.initData[itemName] = value;\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setValue(value);\r\n    }\r\n    getDisabled(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) return widget.getDisabled();\r\n        return undefined;\r\n    }\r\n    setDisabled(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setDisabled(value);\r\n    }\r\n    getReadOnly(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getReadOnly();\r\n        return undefined;\r\n    }\r\n    setReadOnly(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setReadOnly(value);\r\n    }\r\n    getVisible(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getVisible();\r\n        return undefined;\r\n    }\r\n    setVisible(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setVisible(value);\r\n    }\r\n\r\n    async submit(buttonName: string) {\r\n        this.checkRules()\r\n        if (this.hasError === true) {\r\n            let err = '';\r\n            for (let ew of this.errorWidgets) {\r\n                err += ew.name + ':\\n' + ew.errors.join('\\n');\r\n            }\r\n            console.error(err);\r\n            return;\r\n        }\r\n        let {onButtonClick} = this.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${buttonName} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this);\r\n        if (ret === undefined) return;\r\n        this.setError(buttonName, ret);\r\n\r\n    }\r\n\r\n    checkFieldRules() {\r\n        for (let i in this.widgets) {\r\n            this.widgets[i].checkRules();\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                arrRowContexts[j].checkFieldRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    checkContextRules() {\r\n        this.clearErrors();\r\n        if (this.rules === undefined) return;\r\n        for (let rule of this.rules) {\r\n            let ret = rule(this);\r\n            if (ret === undefined) continue;\r\n            if (Array.isArray(ret) === true) {\r\n                this.errors.push(...ret as string[]);\r\n            }\r\n            else if (typeof ret === 'string') {\r\n                this.errors.push(ret as string);\r\n            }\r\n            else {\r\n                for (let i in ret as object) this.setError(i, ret[i]);\r\n            }\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                let rowContext = arrRowContexts[j];\r\n                rowContext.clearErrors();\r\n                rowContext.checkContextRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    setError(itemName:string, error:string) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget === undefined) return;\r\n        widget.setContextError(error);\r\n        this.addErrorWidget(widget);\r\n    }\r\n\r\n    clearContextErrors() {\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearContextError();\r\n        }\r\n    }\r\n\r\n    clearWidgetsErrors() {\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearError();\r\n        }\r\n    }\r\n\r\n    checkRules() {\r\n        this.clearErrors();\r\n        this.clearWidgetsErrors();\r\n        this.checkFieldRules();\r\n        if (this.hasError === true) return;\r\n        this.checkContextRules();\r\n    }\r\n\r\n    addErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos < 0) this.errorWidgets.push(widget);\r\n    }\r\n    removeErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\r\n    }\r\n\r\n    protected checkHasError():boolean {\r\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\r\n        if (ret === true) return true;\r\n        if (this.subContexts === undefined) return false;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                if (arrRowContexts[j].hasError === true) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        return this.checkHasError();\r\n    };\r\n\r\n    clearErrors() {\r\n        this.errors.splice(0);\r\n        this.errorWidgets.splice(0);\r\n        this.clearContextErrors();\r\n    }\r\n\r\n    renderErrors = observer((): JSX.Element => {\r\n        let {errors} = this;\r\n        if (errors.length === 0) return null;\r\n        return <>\r\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\r\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\r\n            </span>)}\r\n        </>\r\n    });\r\n}\r\n\r\nlet rowKeySeed:number = 1;\r\nexport class RowContext extends Context {\r\n    readonly parentContext: Context;\r\n    readonly arrSchema: ArrSchema;\r\n    readonly uiSchema: UiArr;\r\n    //readonly row: ArrRow;\r\n    readonly rowKey: number;\r\n    readonly data: any;\r\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\r\n        let uiArr:UiArr;\r\n        let {uiSchema} = parentContext;\r\n        if (uiSchema !== undefined) {\r\n            let {items} = uiSchema;\r\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\r\n        }\r\n        super(parentContext.form, uiArr, data, inNode, true);\r\n        this.parentContext = parentContext;\r\n        this.arrSchema = arrSchema;\r\n        this.rowKey = rowKeySeed++;\r\n        this.data = data;\r\n    }\r\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        if (this.uiSchema === undefined) return undefined;\r\n        let {items} = this.uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n    get arrName():string {return this.arrSchema.name}\r\n    clearErrors() {\r\n        super.clearErrors();\r\n        this.parentContext.clearErrors();\r\n    }\r\n\r\n    get parentData():any {return this.parentContext.data;}\r\n}\r\n\r\nexport class FormContext extends Context {\r\n    constructor(form:Form, inNode:boolean) {\r\n        super(form, form.uiSchema, form.data, inNode, false);\r\n    }\r\n    get data():any {return this.form.data}\r\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        let {uiSchema} = this.form;\r\n        if (uiSchema === undefined) return undefined;\r\n        let {items} = uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName];\r\n    }\r\n}\r\n\r\nexport const ContextContainer = React.createContext<Context>({} as any);\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\n//import { ArrRow } from '../arrRow';\r\nimport { Context, RowContext, ContextContainer } from '../context';\r\nimport { ArrSchema } from '../../schema';\r\nimport { UiArr, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { factory } from './factory';\r\n\r\nexport const ArrComponent = observer((\r\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \r\n{\r\n    let {name, arr} = arrSchema;\r\n    let data = parentContext.initData[name] as any[];\r\n    let {form} = parentContext;\r\n    let arrRowContexts = parentContext.getArrRowContexts(name);\r\n    let ui = parentContext.getUiItem(name) as UiArr;\r\n    let arrLabel = name;\r\n    let Templet:TempletType;\r\n    let selectable:boolean, deletable:boolean, restorable:boolean;\r\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\r\n    if (uiSchema !== undefined) {\r\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\r\n        if (selectable !== true) selectable = formSelectable;\r\n        if (deletable !== true) deletable = formDeletable;\r\n        if (restorable !== true) restorable = formRestorable;\r\n    }\r\n    if (ui !== undefined) {\r\n        let {widget:widgetType, label, \r\n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\r\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\r\n        } = ui;\r\n        if (arrSelectable !== undefined) selectable = arrSelectable;\r\n        if (arrDeletable !== undefined) deletable = arrDeletable;\r\n        if (arrRestorable !== undefined) restorable = arrRestorable;\r\n        if (ac !== undefined) ArrContainer = ac;\r\n        if (rc !== undefined) RowContainer = rc;\r\n        if (rs !== undefined) RowSeperator = rs;\r\n        Templet = ui.Templet;\r\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\r\n        arrLabel = label || arrLabel;\r\n    }\r\n    let first = true;\r\n    return ArrContainer(arrLabel, <>\r\n        {data.map((row:any, index) => {\r\n            let rowContext: RowContext;\r\n            let rowContent: JSX.Element;\r\n            let sep = undefined;\r\n            if (first === false) sep = RowSeperator;\r\n            else first = false;\r\n            if (children !== undefined) {\r\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                rowContent = <>{children}</>;\r\n            }\r\n            else {\r\n                let typeofTemplet = typeof Templet;\r\n                if (typeofTemplet === 'function') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\r\n                }\r\n                else if (typeofTemplet === 'object') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = Templet as JSX.Element;\r\n                }\r\n                else {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\r\n                    rowContent = <>{\r\n                        arr.map((v, index) => {\r\n                            return <React.Fragment key={v.name}>\r\n                                {factory(rowContext, v, undefined)}\r\n                            </React.Fragment>\r\n                        })}\r\n                    </>;\r\n                }\r\n            }\r\n            let {rowKey} = rowContext;\r\n            arrRowContexts[rowKey] = rowContext;\r\n\r\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\r\n            if (selectable === true) {\r\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\r\n                    let {checked} = (evt.target as HTMLInputElement);\r\n                    row.$isSelected = checked;\r\n                    let {$source} = row;\r\n                    if ($source !== undefined) $source.$isSelected = checked;\r\n                    rowContext.clearErrors();\r\n                }\r\n                selectCheck = <div className=\"form-row-checkbox\">\r\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\r\n                </div>;\r\n            }\r\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\r\n            if (deletable === true) {\r\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\r\n                let onDelClick = () => {\r\n                    if (restorable === true) {\r\n                        row.$isDeleted = !isDeleted;\r\n                        let {$source} = row;\r\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\r\n                    }\r\n                    else {\r\n                        let p = data.indexOf(row);\r\n                        if (p>=0) data.splice(p, 1);\r\n                    }\r\n                    rowContext.clearErrors();\r\n                }\r\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\r\n                    <i className={classNames('fa', icon, 'fa-fw')} />\r\n                </div>;\r\n            }\r\n            let editContainer = selectable===true || deletable===true?\r\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\r\n                    {selectCheck}\r\n                    <div className={selectable===true && deletable===true? \"form-row-content\":\"form-row-content-1\"}>{content}</div>\r\n                    {deleteIcon}\r\n                </div></fieldset>\r\n                :\r\n                (content:any) => content;\r\n\r\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\r\n                {sep}\r\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\r\n            </ContextContainer.Provider>;\r\n        })}\r\n    </>);\r\n});\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiImageItem } from '../../schema';\r\nimport { Image } from '../../image';\r\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class ImageWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected get ui(): UiImageItem {return this._ui as UiImageItem};\r\n    @observable private imageSrc: string;\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.imageSrc = this.value;\r\n    }\r\n\r\n    protected onClick = async () => {\r\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\r\n        let ret = await edit.start();\r\n        if (ret !== null) {\r\n            this.setValue(ret);\r\n            this.imageSrc = ret;\r\n        }\r\n        await edit.end();\r\n    }\r\n\r\n    render() {\r\n        return <this.observerRender />;\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let cn = [\r\n            'bg-white p-1 d-flex justify-content-center',\r\n        ];\r\n        let onClick: any;\r\n        if (!this.readOnly && !this.disabled) {\r\n            cn.push('cursor-pointer');\r\n            onClick = this.onClick;\r\n        }\r\n        return <div className={classNames(cn)} onClick={onClick}>\r\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\r\n        </div>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { ArrSchema, DataType, ItemSchema } from '../../schema';\r\nimport { TypeWidget, UiCustom } from '../../schema';\r\nimport { TextWidget } from './textWidget';\r\nimport { TextAreaWidget } from './textareaWidget';\r\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nimport { UpdownWidget } from './updownWidget';\r\nimport { NumberWidget } from './numberWidget';\r\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nimport { CheckBoxWidget } from './checkBoxWidget';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { SelectWidget } from './selectWidget';\r\nimport { RadioWidget } from './radioWidget';\r\nimport { RangeWidget } from './rangeWidget';\r\nimport { IdWidget } from './idWidget';\r\nimport { ButtonWidget } from './buttonWidget';\r\nimport { ArrComponent } from './arrComponent';\r\nimport { ImageWidget } from './imageWidget';\r\n\r\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\r\n    id: {\r\n        dataTypes: ['id'],\r\n        widget: IdWidget,\r\n    },\r\n    text: {\r\n        dataTypes: ['integer', 'number', 'string'],\r\n        widget: TextWidget\r\n    },\r\n    textarea: {\r\n        dataTypes: ['string'],\r\n        widget: TextAreaWidget\r\n    },\r\n    password: {\r\n        dataTypes: ['string'],\r\n        widget: PasswordWidget\r\n    },\r\n    date: {\r\n        dataTypes: ['date'],\r\n        widget: DateWidget\r\n    },\r\n    datetime: {\r\n        dataTypes: ['date'],\r\n        widget: DateTimeWidget\r\n    },\r\n    time: {\r\n        dataTypes: ['date'],\r\n        widget: TimeWidget\r\n    },\r\n    month: {\r\n        dataTypes: ['date'],\r\n        widget: MonthWidget\r\n    },\r\n    select: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: SelectWidget\r\n    },\r\n    url: {\r\n        dataTypes: ['string'],\r\n        widget: UrlWidget\r\n    },\r\n    email: {\r\n        dataTypes: ['string'],\r\n        widget: EmailWidget\r\n    },\r\n    number: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: NumberWidget\r\n    },\r\n    updown: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: UpdownWidget\r\n    },\r\n    color: {\r\n\r\n    },\r\n    checkbox: {\r\n        dataTypes: ['boolean', 'integer', 'number'],\r\n        widget: CheckBoxWidget\r\n    },\r\n    image: {\r\n        dataTypes: ['string'],\r\n        widget: ImageWidget,\r\n    },\r\n    checkboxes: {\r\n\r\n    },\r\n    radio: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: RadioWidget\r\n    },\r\n    range: {\r\n        dataTypes: ['integer'],\r\n        widget: RangeWidget,\r\n    },\r\n    button: {\r\n        dataTypes: ['button', 'submit'],\r\n        widget: ButtonWidget,\r\n    }\r\n}\r\n\r\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\r\n    if (context === undefined) {\r\n        debugger;\r\n        return null;\r\n    }\r\n    if (itemSchema === undefined) return undefined;\r\n    let {name, type} = itemSchema;\r\n    switch (type) {\r\n    case 'arr':\r\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\r\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\r\n    default:\r\n        break;\r\n    }\r\n\r\n    let typeWidget: TypeWidget;\r\n    let ui = context.getUiItem(name);\r\n    function getTypeWidget(t:DataType): TypeWidget {\r\n        switch(t) {\r\n        default: return TextWidget; \r\n        case 'id': return IdWidget;\r\n        case 'integer': return UpdownWidget;\r\n        case 'number': return NumberWidget; \r\n        case 'string': return TextWidget; \r\n        case 'date': return DateWidget; \r\n        case 'boolean': return CheckBoxWidget; \r\n        case 'button':\r\n        case 'submit': return ButtonWidget;\r\n        }\r\n    }\r\n    if (ui === undefined) { \r\n        typeWidget = getTypeWidget(type);\r\n    }\r\n    else {\r\n        let {widget:widgetType} = ui;\r\n        switch (widgetType) {\r\n        default:\r\n            if (widgetType !== undefined) {\r\n                let widgetFactory = widgetsFactory[widgetType];\r\n                typeWidget = widgetFactory.widget;\r\n            }\r\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\r\n            break;\r\n        case 'custom':\r\n            typeWidget = (ui as UiCustom).WidgetClass;\r\n            break;\r\n        case 'group':\r\n            return <span>impletment group</span>;\r\n        }\r\n        //label = uiLabel || name;\r\n    }\r\n    \r\n    let {widgets} = context;\r\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\r\n    widgets[name] = widget;\r\n\r\n    return <widget.container />;\r\n    /*\r\n    if (isRow === false) {\r\n        let WidgetElement = observer(() => widget.container());\r\n        return <WidgetElement />;\r\n    }\r\n    else {\r\n        let widgetElement = widget.container();\r\n        return widgetElement;\r\n    }\r\n    */\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextAreaItem } from '../../schema';\r\nimport { StringSchema } from '../../schema';\r\n\r\nexport class TextAreaWidget extends Widget {\r\n    protected get itemSchema(): StringSchema {return this._itemSchema as StringSchema};\r\n    protected input: HTMLTextAreaElement;\r\n    protected get ui(): UiTextAreaItem {return this._ui as UiTextAreaItem};\r\n\r\n    protected setElementValue(value:any) {this.input.value = value}\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {};\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <textarea ref={(input) => this.input=input} \r\n            className={classNames(this.className, cn)}\r\n            rows={this.ui && this.ui.rows}\r\n            maxLength={this.itemSchema.maxLength}\r\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\r\n    }\r\n}\r\n","//import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class PasswordWidget extends TextWidget {\r\n    protected inputType = 'password';\r\n}\r\n\r\nexport class UrlWidget extends TextWidget {\r\n    protected inputType = 'url';\r\n}\r\n\r\nexport class EmailWidget extends TextWidget {\r\n    protected inputType = 'email';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiRange } from '../../schema';\r\nimport { Widget } from './widget';\r\n\r\nexport class RangeWidget extends Widget {\r\n    protected inputType = 'range';\r\n    protected input: HTMLInputElement;\r\n    protected get ui(): UiRange {return this._ui as UiRange};\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let {min, max, step} = this.ui;\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\r\n            type={this.inputType}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            max={max}\r\n            min={min}\r\n            step={step}\r\n            />\r\n        </>;\r\n    }\r\n}\r\n","//import _ from 'lodash';\r\nimport { KeyValueRes, Res } from '../res';\r\n\r\nexport interface FormRes extends KeyValueRes {\r\n    required: string;\r\n    number: string;\r\n    integer: string;\r\n    min: string;\r\n    max: string;\r\n}\r\n\r\n/*eslint no-template-curly-in-string: 0*/\r\nexport const formRes:Res<FormRes> = {\r\n    _: {\r\n        required: 'required',\r\n        number: 'not valid number',\r\n        integer: 'not valid integer',\r\n        min: 'min value is ${min}',\r\n        max: 'max value is ${max}',\r\n    },\r\n    zh: {\r\n        _: {\r\n            required: '必须填',\r\n            number: '需要数字',\r\n            integer: '需要整数',\r\n            min: '不能小于${min}',\r\n            max: '不能大于${max}',\r\n        }\r\n    },\r\n}\r\n","import * as React from 'react';\r\nimport {observable, IReactionDisposer, autorun} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\r\nimport { UiSchema, TempletType } from '../schema';\r\nimport { factory } from './widgets';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { ContextContainer, FormContext, Context } from './context';\r\nimport { FormRes, formRes } from './formRes';\r\nimport { resLang } from '../res';\r\n\r\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\r\nexport type InputEnter = (name:string, context: Context) => Promise<any>;\r\n\r\nexport interface FormProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    uiSchema?: UiSchema;\r\n    formData?: any;\r\n    onButtonClick?: FormButtonClick;\r\n    onEnter?: InputEnter;\r\n    fieldLabelSize?: number;            // col-sm-2 for label\r\n    requiredFlag?: boolean;             // default=true\r\n    beforeShow?: (formContext:FormContext) => void;\r\n    res?: FormRes;\r\n\r\n    Container?: (content:JSX.Element) => JSX.Element;\r\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\r\n    FieldClass?: string;\r\n    ButtonClass?: string;\r\n}\r\n\r\nexport class Form extends React.Component<FormProps> {\r\n    readonly schema: Schema;\r\n    readonly itemSchemas: {[name:string]: ItemSchema};\r\n    readonly uiSchema: UiSchema;\r\n    readonly res?: FormRes;\r\n    protected formContext: FormContext;\r\n    //private content: any;\r\n    //private formData: any;\r\n    private disposer: IReactionDisposer;\r\n    //@observable \r\n    readonly data:any;\r\n\r\n    readonly Container: (content:JSX.Element) => JSX.Element;\r\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    readonly FieldClass: string;\r\n    readonly ButtonClass: string;\r\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\r\n    //readonly RowSeperator: JSX.Element;\r\n\r\n    constructor(props:FormProps) {\r\n        super(props);\r\n        let {schema, uiSchema, \r\n            Container, FieldContainer, FieldClass, \r\n            ButtonClass, res,\r\n        } = props;\r\n        this.Container = Container || this.DefaultContainer;\r\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\r\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\r\n        this.res = res || this.DefaultRes;\r\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\r\n\r\n        this.schema = schema;\r\n        this.itemSchemas = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.itemSchemas[itemSchema.name] = itemSchema;\r\n        }\r\n        this.uiSchema = uiSchema;\r\n\r\n        //this.formData = formData;\r\n        this.disposer = autorun(this.watch);\r\n        this.data = {};\r\n        // this.initRender();\r\n    }\r\n\r\n    private renderContent():any {\r\n        this.initData(this.props.formData);\r\n        let {children} = this.props;\r\n        if (children !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return <>{children}</>;\r\n        }\r\n\r\n        let Templet: TempletType;\r\n        if (this.uiSchema !== undefined) {\r\n            Templet = this.uiSchema.Templet;\r\n        }\r\n        if (Templet !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return typeof(Templet) === 'function'? Templet(this.data) : Templet;\r\n        }\r\n\r\n        this.formContext = new FormContext(this, false);\r\n        return <>{this.schema.map((v, index) => {\r\n            return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\r\n        })}</>;\r\n    }\r\n\r\n    private initData(formData: any) {\r\n        if (formData === undefined) formData = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.initDataItem(itemSchema, this.data, formData);\r\n        }\r\n    }\r\n\r\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\r\n        let {name, type} = itemSchema;\r\n        if (type === 'button') return;\r\n        if (type !== 'arr') {\r\n            data[name] = formData[name];\r\n            return;\r\n        }\r\n\r\n        let arrItem:ArrSchema = itemSchema as ArrSchema;\r\n        let {arr:arrItems} = arrItem;\r\n        if (arrItems === undefined) return;\r\n        let arrDict = arrItem.itemSchemas = {};\r\n        for (let item of arrItems) {\r\n            arrDict[item.name] = item;\r\n        }\r\n        let val:any[] = formData[name];\r\n        if (val === undefined) val = [];\r\n        else if (Array.isArray(val) === false) val = [val];\r\n        let arr:any[] = [];\r\n        for (let row of val) {\r\n            let {$isSelected, $isDeleted} = row;\r\n            let r = {\r\n                $source: row,\r\n                $isSelected: $isSelected,\r\n                $isDeleted: $isDeleted,\r\n            };\r\n            for (let item of arrItems) {\r\n                this.initDataItem(item, r, row);\r\n                /*\r\n                let {name:nm} = item;\r\n                let v = row[nm];\r\n                if (v === undefined) v = null;\r\n                r[nm] = v;\r\n                */\r\n            }\r\n            arr.push(r);\r\n        }\r\n        // 如果没有observable，行删除标志点击不管用\r\n        // 不知道这里为什么要去掉observable。有可能会有别的问题\r\n        data[name] = observable(arr);\r\n        //data[name] = arr;\r\n        return;\r\n    }\r\n\r\n    private watch = () => {\r\n        let {formData} = this.props;\r\n        if (formData === undefined) return;\r\n        //this.initData(formData);\r\n        this.calcSelectOrDelete();\r\n    }\r\n    private calcSelectOrDelete() {\r\n        for (let itemSchema of this.schema) {\r\n            this.arrItemOperated(itemSchema);\r\n        }\r\n    }\r\n\r\n    private arrItemOperated(itemSchema: ItemSchema) {\r\n        let {name, type} = itemSchema;\r\n        if (type !== 'arr') return;\r\n        if (this.data === undefined) return;\r\n        let formArrVal = this.data[name];\r\n        if (formArrVal === undefined) return;\r\n        let {arr: arrItems} = itemSchema as ArrSchema;\r\n        for (let row of formArrVal) {\r\n            let {$source} = row;\r\n            if ($source === undefined) continue;\r\n            let {$isSelected, $isDeleted} = $source;\r\n            row.$isSelected = $isSelected;\r\n            row.$isDeleted = $isDeleted;\r\n            //console.log($isSelected, $isDeleted);\r\n            for (let item of arrItems) {\r\n                this.arrItemOperated(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {beforeShow} = this.props;\r\n        if (beforeShow !== undefined) beforeShow(this.formContext);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.disposer !== undefined) this.disposer();\r\n    }\r\n\r\n    render() {\r\n        let content = this.renderContent();\r\n        return <ContextContainer.Provider value={this.formContext}>\r\n            <this.formContext.renderErrors />\r\n            {this.Container(content)}\r\n        </ContextContainer.Provider>;\r\n    }\r\n\r\n    async buttonClick(buttonName:string) {\r\n        this.formContext.checkRules()\r\n        if (this.formContext.hasError === true) return;\r\n\r\n        let {onButtonClick} = this.formContext.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this.formContext);\r\n        if (ret === undefined) return;\r\n        this.formContext.setError(buttonName, ret);\r\n    }\r\n\r\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\r\n        return <form className={classNames(this.props.className)} onSubmit={e=>e.preventDefault()}>\r\n            {content}\r\n        </form>;\r\n    }\r\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\r\n        let {fieldLabelSize} = this.props;\r\n\r\n        if (fieldLabelSize > 0) {\r\n            let labelView:any;\r\n            if (label === null) {\r\n                fieldLabelSize = 0;\r\n            }\r\n            else {\r\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\r\n            }\r\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\r\n            return <div className=\"form-group row\">\r\n                {labelView}\r\n                <div className={fieldCol}>{content}</div>\r\n            </div>;\r\n        }\r\n        return <div className=\"form-group\">\r\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\r\n            {content}\r\n        </div>;\r\n    }\r\n    protected DefaultFieldClass:string = undefined;\r\n    protected DefaultButtonClass = 'text-center py-2';\r\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\r\n\r\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\r\n        return <div>\r\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\r\n            {content}\r\n        </div>;\r\n    }\r\n    RowContainer = (content:JSX.Element): JSX.Element => {\r\n        let cn = classNames({\r\n            'py-3': true\r\n        });\r\n        return <div className={cn}>{content}</div>\r\n    }\r\n    RowSeperator = <div className=\"border border-gray border-top\" />;\r\n}\r\n","import * as React from 'react';\r\nimport { factory } from './widgets';\r\nimport { ContextContainer, Context } from './context';\r\n\r\nexport interface FieldProps {\r\n    name: string;\r\n}\r\n\r\nexport class FormField extends React.Component<FieldProps> {\r\n    static contextType = ContextContainer;\r\n    render() {\r\n        let {name, children } = this.props;\r\n        let context:Context = this.context;\r\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\r\n        let itemSchema = context.getItemSchema(name);\r\n        let content = factory(context, itemSchema, children, this.props);\r\n        if (content === undefined) {\r\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\r\n        }\r\n        return content;\r\n    }\r\n}\r\n","export {Form} from './form';\r\nexport {FormField} from './field';\r\nexport {Context, RowContext} from './context';\r\nexport * from './widgets';\r\n","import * as React from 'react';\r\nimport { UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class StringItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.newValue = evt.target.value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue !== preValue);\r\n    }\r\n\r\n    private onBlur = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.verifyValue();\r\n    }\r\n\r\n    private onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>{\r\n                this.verifyValue();\r\n                if (this.error === undefined) resolve(this.newValue);\r\n            }}>保存</button>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">\r\n                <input type=\"text\" \r\n                    onChange={this.onChange}\r\n                    onBlur={this.onBlur}\r\n                    onFocus={this.onFocus}\r\n                    className=\"form-control\" \r\n                    defaultValue={this.value} />\r\n                {\r\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\r\n                }\r\n                {this.error && <div className=\"text-danger\">{this.error}</div>}\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { ItemSchema, UiRadio } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class RadioItemEdit extends ItemEdit {\r\n    protected uiItem: UiRadio;\r\n\r\n    constructor(itemSchema: ItemSchema, uiItem:UiRadio, label:string, value: any) {\r\n        super(itemSchema, uiItem, label, value);\r\n        if (this.value === undefined) {\r\n            this.value = uiItem.defaultValue;\r\n        }\r\n    }\r\n\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (value: any) => {\r\n        this.newValue = value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue !== preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let {name} = this.itemSchema;\r\n        let {list} = this.uiItem;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>{\r\n                this.verifyValue();\r\n                if (this.error === undefined) resolve(this.newValue);\r\n            }}>保存</button>;\r\n        let content = list?\r\n            list.map((v, index:number) => {\r\n                let {title, value} = v;\r\n                return <label key={index} className=\"px-3 py-2 cursor-pointer\">\r\n                    <input name={name} type=\"radio\" value={value} \r\n                        onClick={()=>this.onChange(value)} \r\n                        defaultChecked={value === this.value} /> {title || value} &nbsp;\r\n                </label>;\r\n            })\r\n            :\r\n            <>no list defined</>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">{content}</div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { UiSelect } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class SelectItemEdit extends ItemEdit {\r\n    protected uiItem: UiSelect;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (value:any) => {\r\n        this.newValue = value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue !== preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let {list} = this.uiItem;\r\n        let content = list?\r\n            list.map((v, index:number) => {\r\n                let {title, value} = v;\r\n                return <div key={index} className=\"px-3 py-2 cursor-pointer bg-white mb-1\" onClick={()=>{this.onChange(value); resolve(this.newValue)}}>\r\n                    {title || value}\r\n                </div>;\r\n            })\r\n            :\r\n            <>no list defined</>;\r\n        return <Page header={'更改' + this.label}>\r\n            <div className=\"my-3\">\r\n                {content}\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { UiIdItem } from '../schema';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class IdItemEdit extends ItemEdit {\r\n    protected uiItem: UiIdItem;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>(async (resolve, reject) => {\r\n            //let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            //nav.push(element,reject);\r\n\r\n            let {pickId} = this.uiItem;\r\n            if (pickId === undefined) {\r\n                alert('IdItemEdit.pickId = undefined');\r\n                return;\r\n            }\r\n            let boxId = await pickId(undefined, undefined, this.value);\r\n            //if (typeof id === 'object') {\r\n            //    id = (id as any).id;\r\n            //}\r\n            this.onChange(boxId.id);\r\n            resolve(boxId);\r\n            //this.newValue = id;\r\n        });\r\n    }\r\n\r\n    protected async internalEnd():Promise<void> {}\r\n\r\n    private onChange = (value:any) => {\r\n        this.newValue = value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue !== preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        /*\r\n        let {resolve, reject} = props;\r\n        let {list} = this.uiItem;\r\n        let content = list?\r\n            list.map((v, index:number) => {\r\n                let {title, value} = v;\r\n                return <div key={index} className=\"px-3 py-2 cursor-pointer bg-white mb-1\" onClick={()=>{this.onChange(value); resolve(this.newValue)}}>\r\n                    {title || value}\r\n                </div>;\r\n            })\r\n            :\r\n            <>no list defined</>;\r\n        return <Page header={'更改' + this.label}>\r\n            <div className=\"my-3\">\r\n                {content}\r\n            </div>\r\n        </Page>;\r\n        */\r\n        return <Page header={'更改' + this.label}>\r\n            ddd\r\n        </Page>\r\n    })\r\n}\r\n","import * as React from 'react';\r\n//import _ from 'lodash';\r\nimport { observer } from 'mobx-react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiSelectBase, UiRadio } from '../schema';\r\nimport { ItemEdit } from './itemEdit';\r\nimport { StringItemEdit } from './stringItemEdit';\r\nimport { ImageItemEdit } from './imageItemEdit';\r\nimport { Image } from '../image';\r\nimport { RadioItemEdit } from './radioItemEdit';\r\nimport { SelectItemEdit } from './selectItemEdit';\r\nimport { IdItemEdit } from './idItemEdit';\r\n\r\nexport interface EditProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    data: any;\r\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\r\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\r\n    stopEdit?: boolean;\r\n    uiSchema?: UiSchema;\r\n    sepClassName?: string;\r\n    topBorderClassName?: string;\r\n    bottomBorderClassName?: string;\r\n    rowContainerClassName?: string;\r\n}\r\n\r\n@observer\r\nexport class Edit extends React.Component<EditProps> {\r\n    private defaultSepClassName = 'border-top edit-sep-light-gray';\r\n    private defaultRowContainerClassName = 'd-flex px-3 py-2 bg-white align-items-center';\r\n    private topBorder:JSX.Element;\r\n    private bottomBorder:JSX.Element;\r\n    private rowContainerClassName?: string;\r\n    private sep:JSX.Element;\r\n    private uiSchema: {[name:string]: UiItem};\r\n\r\n    constructor(props: EditProps) {\r\n        super(props);\r\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema, stopEdit} = props;\r\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\r\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\r\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\r\n        if (stopEdit !== true) this.rowContainerClassName += ' cursor-pointer';\r\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\r\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\r\n    }\r\n\r\n    render() {\r\n        let elItems:JSX.Element[] = [];\r\n        let {schema} = this.props;\r\n        let len = schema.length;\r\n\r\n        elItems.push(this.topBorder);\r\n        for (let i=0; i<len; i++) {\r\n            let itemSchema = schema[i];\r\n            if (i>0) elItems.push(this.sep);\r\n            let value = this.props.data[itemSchema.name];\r\n            elItems.push(this.renderRow(itemSchema, value));\r\n        }\r\n        elItems.push(this.bottomBorder);\r\n\r\n        return <div>\r\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\r\n        </div>;\r\n    }\r\n\r\n    private renderRow = (itemSchema: ItemSchema, value:any):JSX.Element => {\r\n        let {name, type, required} = itemSchema;\r\n        let divValue:any;\r\n        let uiItem = this.uiSchema[name];\r\n        let label:string;\r\n        if (uiItem === undefined) {\r\n            label = name;\r\n        }\r\n        else {\r\n            label = uiItem.label;\r\n            let templet = uiItem.Templet;\r\n            if (templet !== undefined) {\r\n                if (typeof templet === 'function')\r\n                    divValue = <b>{templet(value)}</b>;\r\n                else\r\n                    divValue = <b>{templet}</b>;\r\n            }\r\n            else if (value !== undefined) {\r\n                switch (uiItem.widget) {\r\n                    case 'radio':\r\n                    case 'select':\r\n                        let {list} = uiItem as UiSelectBase;\r\n                        divValue = <b>{list.find(v => v.value === value).title}</b>;\r\n                        break;\r\n                    case 'id':\r\n                        divValue = <b>no templet for {name}={value}</b>\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        //let value:any = this.props.data[name];\r\n        /*\r\n        if (uiItem !== undefined && value) {\r\n            switch (uiItem.widget) {\r\n                case 'radio':\r\n                case 'select':\r\n                    let {list} = uiItem as UiSelectBase;\r\n                    divValue = <b>{list.find(v => v.value === value).title}</b>;\r\n                    break;\r\n                case 'id':\r\n                    divValue = <b>no templet for {name}={value}</b>\r\n                    break;\r\n            }\r\n        }\r\n        */\r\n        if (divValue === undefined) {\r\n            switch (type) {\r\n                default:\r\n                    divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\r\n                    break;\r\n                case 'image':\r\n                    divValue = <Image className=\"w-4c h-4c\" src={value} />;\r\n                    break;\r\n            }\r\n        }\r\n        let requireFlag = required===true && <span className=\"text-danger\">*</span>;\r\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\r\n            <div className=\"w-6c\">{label} {requireFlag}</div>\r\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\r\n            {this.props.stopEdit!==true && <div className=\"w-2c text-right\"><i className=\"fa fa-angle-right\" /></div>}\r\n        </div>;\r\n    };\r\n\r\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\r\n        let {onItemChanged, onItemClick, stopEdit} = this.props;\r\n        if (stopEdit === true) return;\r\n        let changeValue:any;\r\n        if (onItemClick !== undefined) {\r\n            await onItemClick(itemSchema, uiItem, value);\r\n            return;\r\n        }\r\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\r\n        if (itemEdit === undefined) {\r\n            alert('undefined: let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);');\r\n            return;\r\n        }\r\n        try {\r\n            changeValue = await itemEdit.start();\r\n            if (changeValue !== value) {\r\n                if (onItemChanged === undefined) {\r\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\r\n                    this.props.data[itemSchema.name] = changeValue;\r\n                }\r\n                else {\r\n                    await onItemChanged(itemSchema, changeValue, value);\r\n                }\r\n            }\r\n            await itemEdit.end();\r\n        }\r\n        catch (err) {\r\n            // 如果直接back，会触发reject，就到这里了\r\n            console.log('no value changed');\r\n        }\r\n    }\r\n}\r\n\r\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\r\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\r\n    if (uiItem !== undefined) {\r\n        switch (uiItem.widget) {\r\n            default: break;\r\n            case 'id': itemEdit = IdItemEdit; break;\r\n            case 'text': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n            case 'select': itemEdit = SelectItemEdit; break;\r\n            case 'radio': \r\n                return new RadioItemEdit(itemSchema, uiItem as UiRadio, label, value);\r\n        }\r\n    }\r\n    if (itemEdit === undefined) {\r\n        switch (itemSchema.type) {\r\n            case 'string': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) return;\r\n    return new itemEdit(itemSchema, uiItem, label, value);\r\n}\r\n","export * from './edit';\r\n","import {CenterApiBase} from '../net';\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","import * as React from 'react';\r\nimport { IObservableArray, computed } from 'mobx';\r\nimport { PageItems } from '../../tool/pageItems';\r\nimport {List} from './index';\r\n\r\nexport abstract class ListBase {\r\n    protected list: List;\r\n    constructor(list: List) {\r\n        this.list = list;\r\n    }\r\n    get isPaged():boolean {\r\n        let items = this.list.props.items;\r\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\r\n    }\r\n    get items():any[]|IObservableArray<any> {\r\n        let items = this.list.props.items;\r\n        if (items === null) return null;\r\n        if (items === undefined) return undefined;\r\n        if (Array.isArray(items) === true)\r\n            return items as IObservableArray<any>;\r\n        else\r\n            return (items as PageItems<any>).items;\r\n    }\r\n    @computed get loading():boolean {\r\n        let items = this.list.props.items;\r\n        if (items === null) return false;\r\n        if (items === undefined) return true;\r\n        let pageItems = items as PageItems<any>;\r\n        if (pageItems.items === undefined) return false;\r\n        return pageItems.loading;\r\n    }\r\n    get selectedItems():any[] { return undefined; }\r\n    //updateProps(nextProps:any) {}\r\n    dispose() {};\r\n    abstract render: (item:any, index:number) => JSX.Element;\r\n    protected renderContent(item:any, index:number) {\r\n        let {render} = this.list.props.item;\r\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n        return render(item, index);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {ListBase} from './base';\r\n\r\nexport class Clickable extends ListBase {\r\n    render = (item:any, index:number):JSX.Element => {\r\n        let {className, key, onClick} = this.list.props.item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick && onClick(item)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { ListBase } from './base';\r\nimport { uid } from '../../tool/uid';\r\n\r\nexport class Static extends ListBase {\r\n    render = (item:any, index:number):JSX.Element => {\r\n        let {className, key} = this.list.props.item;\r\n        if (typeof item === 'string') {\r\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\r\n            return <li key={uid()} className={cn}>{item}</li>;\r\n        }\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, IObservableArray, autorun, IReactionDisposer} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport {uid} from '../../tool/uid';\r\nimport { PageItems } from '../../tool/pageItems';\r\nimport { List } from './index';\r\n\r\nexport interface SelectableItem {\r\n    selected: boolean;\r\n    item: any;\r\n    labelId: string;\r\n}\r\n\r\nexport class Selectable extends ListBase {\r\n    @observable private _items: SelectableItem[];\r\n    //private _selectedItems: any[];\r\n    private input: HTMLInputElement;\r\n    private disposer: IReactionDisposer;\r\n\r\n    constructor(list: List) {\r\n        super(list);\r\n        this.disposer = autorun(this.buildItems);\r\n        //this.buildItems();\r\n    }\r\n    dispose() {this.disposer()};\r\n    private buildItems = () => {\r\n        console.log('buildItems in selectable.tsx');\r\n        let {items, selectedItems, compare} = this.list.props;\r\n        let itemsArray:any[] | IObservableArray<any>;\r\n        if (items === undefined) {\r\n            this._items = undefined;\r\n            return;\r\n        }\r\n        if (items === null) {\r\n            this._items = null;\r\n            return;\r\n        }\r\n        if (Array.isArray(items) === true) {\r\n            itemsArray = items as any;\r\n        }\r\n        else {\r\n            itemsArray = (items as PageItems<any>).items;\r\n        }\r\n        //let items = this.items;\r\n        //this._selectedItems = selectedItems;\r\n\r\n        let comp: ((item:any, selectItem:any)=>boolean);\r\n        if (compare === undefined) {\r\n            comp = (item:any, selectItem:any) => item === selectItem;\r\n        }\r\n        else {\r\n            comp = compare;\r\n        }\r\n        let retItems = itemsArray.map(v => {\r\n            //let isObserved = isObservable(v);\r\n            //let obj = isObserved === true? toJS(v) : v;\r\n            //let obj = v;\r\n            let selected = selectedItems === undefined?\r\n                false\r\n                : selectedItems.find(si => comp(v, si)) !== undefined;\r\n            return {\r\n                selected: selected, \r\n                item: v, \r\n                labelId:uid()\r\n            };\r\n        });\r\n        this._items = retItems;\r\n    }\r\n\r\n    get items() {\r\n        //if (this._items === undefined) \r\n        //this.buildItems();\r\n        return this._items;\r\n    }\r\n    selectAll() {\r\n        if (this._items) this._items.forEach(v => v.selected = true);\r\n    }\r\n    unselectAll() {\r\n        if (this._items) this._items.forEach(v => v.selected = false);\r\n    }\r\n    /*\r\n    updateProps(nextProps:any) {\r\n        if (nextProps.selectedItems === this._selectedItems) return;\r\n        this.buildItems();\r\n    }\r\n    */\r\n    private onSelect(item:SelectableItem, selected:boolean) {\r\n        item.selected = selected;\r\n        let anySelected = this._items.some(v => v.selected);\r\n        this.list.props.item.onSelect(item.item, selected, anySelected);\r\n    }\r\n    \r\n    get selectedItems():any[] {\r\n        return this._items.filter(v => v.selected === true).map(v => v.item);\r\n    }\r\n    /*\r\n    set selectedItems(value: any[]) {\r\n        if (value === undefined) return;\r\n        if (this._items === undefined) return;\r\n        let sLen = this._items.length;\r\n        let list = value.slice();\r\n        for (let n=0; n<sLen; n++) {\r\n            let sItem = this._items[n];\r\n            let len = list.length;\r\n            if (len === 0) break;\r\n            let item = sItem.item;\r\n            for (let i=0; i<len; i++) {\r\n                let v = list[i];\r\n                if (item === v) {\r\n                    sItem.selected = true;\r\n                    value.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    */\r\n    //w-100 mb-0 pl-3\r\n    //m-0 w-100\r\n    render = (item:SelectableItem, index:number):JSX.Element => {\r\n        let {className, key} = this.list.props.item;\r\n        let {labelId, selected, item:obItem} = item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            <div className=\"d-flex align-items-center px-3\">\r\n                <input ref={input=>{\r\n                        if (!input) return;\r\n                        this.input = input; input.checked = selected;\r\n                    }}\r\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\r\n                    defaultChecked={selected}\r\n                    onChange={(e)=>{\r\n                        this.onSelect(item, e.target.checked)} \r\n                    }/>\r\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\r\n                    {this.renderContent(obItem, index)}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    }\r\n}\r\n/*\r\n<label>\r\n<label className=\"custom-control custom-checkbox\">\r\n    <input type='checkbox' className=\"custom-control-input\"\r\n        //checked={selected}\r\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\r\n    <span className=\"custom-control-indicator\" />\r\n</label>\r\n{this.renderContent(item.item, index)}\r\n</label>\r\n*/\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {PageItems} from '../../tool/pageItems';\r\nimport {ListBase} from './base';\r\nimport {Clickable} from './clickable';\r\nimport {Static} from './static';\r\nimport {Selectable} from './selectable';\r\nimport '../../css/va-list.css';\r\nimport { IObservableArray } from 'mobx';\r\n\r\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\r\n\r\nexport interface ListProps {\r\n    className?: string|string[];\r\n    items: any[] | IObservableArray<any> | PageItems<any>;\r\n    item: {\r\n        className?: string|string[];\r\n        render?: (item:any, index:number) => JSX.Element;\r\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\r\n        onClick?: (item:any)=>void;\r\n        key?: (item:any)=>string|number;\r\n    };\r\n    compare?:(item:any, selectItem:any)=>boolean;\r\n    selectedItems?:any[];\r\n    header?: StaticRow;\r\n    footer?: StaticRow;\r\n    before?: StaticRow;\r\n    loading?: StaticRow;\r\n    none?: StaticRow;\r\n}\r\n\r\n@observer\r\nexport class List extends React.Component<ListProps> {\r\n    private listBase: ListBase;\r\n    private selectable: Selectable;\r\n    constructor(props:ListProps) {\r\n        super(props);\r\n        this.buildBase();\r\n    }\r\n    _$scroll = (direct: 'top'|'bottom') => {\r\n        console.log('############### items scroll to ' + direct);\r\n    }\r\n    private buildBase() {\r\n        let {item} = this.props;\r\n        let {onClick, onSelect} = item;\r\n        if (onSelect !== undefined)\r\n            this.selectable = this.listBase = new Selectable(this);\r\n        else if (onClick !== undefined)\r\n            this.listBase = new Clickable(this);\r\n        else\r\n            this.listBase = new Static(this);\r\n    }\r\n    /*\r\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\r\n        //this.listBase.updateProps(nextProps);\r\n    }\r\n    */\r\n    componentWillUnmount() {\r\n        this.listBase.dispose();\r\n    }\r\n    selectAll() {\r\n        if (this.selectable) this.selectable.selectAll();\r\n    }\r\n    unselectAll() {\r\n        if (this.selectable) this.selectable.unselectAll();\r\n    }\r\n    get selectedItems():any[] {\r\n        return this.listBase.selectedItems;\r\n    }\r\n    render() {\r\n        let {className, header, footer, before, loading, none} = this.props;\r\n        if (before === undefined) before = '-';\r\n        if (loading === undefined) loading = () => <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />;\r\n        if (none === undefined) none = 'none';\r\n        //this.listBase.selectedItems = selectedItems;\r\n        let {items, loading:isLoading} = this.listBase;\r\n        function staticRow(row:StaticRow, type:string) {\r\n            if (!row) return;\r\n            switch (typeof row) {\r\n                default:\r\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\r\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\r\n                case 'object': return <li>{row}</li>\r\n            } \r\n        }\r\n        let content:any, waitingMore:any;\r\n        if (items === null)\r\n            content = staticRow(before, 'before');\r\n        else if (items === undefined)\r\n            content = staticRow(loading, 'loading');\r\n        else if (items.length === 0)\r\n            content = staticRow(none, 'none');\r\n        else {\r\n            content = items.map((item, index) => {\r\n                return this.listBase.render(item, index);\r\n            });\r\n        }\r\n        if (isLoading === true && items) {\r\n            waitingMore = staticRow(loading, 'loading');\r\n        }\r\n        return <ul className={classNames('va-list', className)}>\r\n            {staticRow(header, 'header')}\r\n            {content}\r\n            {waitingMore}\r\n            {staticRow(footer, 'footer')}\r\n        </ul>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport className from 'classnames';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\r\n\r\nexport abstract class PropRow {\r\n    setValues(values: any) {}\r\n    abstract render(key:string): any;\r\n}\r\n\r\nexport class PropBorder extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div key={'_b_' + key} className=\"\">\r\n            <div className=\"w-100\">\r\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class PropGap extends PropRow {\r\n    private param: string;\r\n    constructor(param?: string) {\r\n        super();\r\n        this.param = param;\r\n    }\r\n    render(key:string): JSX.Element {\r\n        let w: string;\r\n        switch (this.param) {\r\n            default: w = 'py-2'; break;\r\n            case '=': w = 'py-1'; break;\r\n            case '-': w = 'pb-1'; break;\r\n        }\r\n        let cn = className(w);\r\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\r\n    }\r\n}\r\n\r\nconst valueAlignStart = 'justify-content-start';\r\nconst valueAlignCenter = 'justify-content-center';\r\nconst valueAlignEnd = 'justify-content-end';\r\nexport abstract class LabeledPropRow extends PropRow {\r\n    protected gridProps: PropGridProps;\r\n    protected prop: LabeledProp;\r\n    protected content: any;\r\n    protected col: string;\r\n    //protected values: any;\r\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\r\n        super();\r\n        this.gridProps = gridProps;\r\n        this.prop = prop;\r\n        this.col = gridProps.labelFixLeft === true? 'col' : 'col-sm';\r\n        //this.values = values;\r\n    }\r\n    render(key:string):any {\r\n        let {onClick, bk} = this.prop;\r\n        let cn = className({\r\n            \"cursor-pointer\": onClick !== undefined,\r\n            \"bg-white\": bk === undefined, \r\n            \"row\": true\r\n        });\r\n        return <div key={key} className={cn} onClick={onClick}>\r\n            {this.renderLabel()}\r\n            {this.renderProp()}\r\n        </div>;\r\n    }\r\n    protected renderLabel():any {\r\n        let {label} = this.prop;\r\n        if (label === undefined) return null;\r\n        return <label className={this.col + '-3 col-form-label'}>\r\n            {label}\r\n        </label>;\r\n    }\r\n    protected renderProp():any {\r\n        let {label} = this.prop;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string = this.col + (label===undefined? '-12':'-9');\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n    protected renderPropBody():any {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.renderPropContent()}\r\n        </div>;\r\n    }\r\n    protected renderPropContent():any {\r\n        return this.content;\r\n    }\r\n}\r\n\r\nexport class StringPropRow extends LabeledPropRow {\r\n    protected prop: StringProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class NumberPropRow extends LabeledPropRow {\r\n    protected prop: NumberProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class ListPropRow extends LabeledPropRow {\r\n    protected prop: ListProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else {\r\n            let list = this.prop.list;\r\n            if (typeof list === 'string') this.content = values[list];\r\n            else this.content = undefined;\r\n        }\r\n    }\r\n    protected renderPropBody() {\r\n        let {list, row} = this.prop;\r\n        let items:any[] = typeof list === 'string'? this.content : list;\r\n        if (items === undefined) return <div/>;\r\n        // new row(item)\r\n        return <div className=\"w-100\">\r\n            {\r\n                items.map((item, index) => <React.Fragment key={index}>\r\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\r\n                    {React.createElement(row, item)}\r\n                </React.Fragment>)\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ComponentPropRow extends LabeledPropRow {\r\n    protected prop: ComponentProp;\r\n    protected renderPropBody() {\r\n        let {component} = this.prop;\r\n        return component;\r\n    }\r\n    protected renderProp():any {\r\n        let {label, full} = this.prop;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string;\r\n        if (full !== true)\r\n            col = this.col + (label===undefined? '-12':'-9');\r\n        else\r\n            col = 'w-100';\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n}\r\n","import { PropGridProps } from './PropGrid';\r\nimport {\r\n    PropRow, PropBorder, PropGap, \r\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow\r\n} from './row';\r\n\r\nexport interface Format {\r\n\r\n}\r\n\r\nexport interface PropBase {\r\n    onClick?: () => void;\r\n}\r\n\r\nexport interface LabeledProp extends PropBase {\r\n    label?: string;\r\n    bk?: string;\r\n    vAlign?: 'top' | 'bottom' | 'center' | 'stretch';\r\n}\r\n\r\nexport interface StringProp extends LabeledProp {\r\n    type: 'string';\r\n    name: string;\r\n}\r\n\r\nexport interface NumberProp extends LabeledProp {\r\n    type: 'number';\r\n    name: string;\r\n}\r\n\r\nexport interface FormatProp extends LabeledProp {\r\n    type: 'format';\r\n    format: Format;\r\n}\r\n\r\nexport interface ListProp extends LabeledProp {\r\n    type: 'list';\r\n    list: string | any[];  // string 表示名字，否则就是值\r\n    row: new (props: any) => React.Component;\r\n}\r\n\r\nexport interface ComponentProp extends LabeledProp {\r\n    type: 'component';\r\n    full?: boolean;\r\n    component: any; //JSX.Element;\r\n}\r\n\r\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\r\n\r\nexport class PropView {\r\n    private gridProps: PropGridProps\r\n    private props: Prop[];\r\n    //private values:any;\r\n    private rows: PropRow[];\r\n\r\n    constructor(gridProps: PropGridProps, props: Prop[]) {\r\n        this.gridProps = gridProps;\r\n        this.props = props;\r\n        //this.values = values;\r\n        this.buildRows();\r\n    }\r\n\r\n    private buildRows() {\r\n        this.rows = [];\r\n        let isGap: boolean = true;\r\n        for (let prop of this.props) {\r\n            if (typeof prop === 'string') {\r\n                this.rows.push(new PropGap(prop));\r\n                isGap = true;\r\n            }\r\n            else {\r\n                if (!isGap) this.rows.push(new PropBorder());\r\n                let row;\r\n                switch (prop.type) {\r\n                    default: continue;\r\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\r\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\r\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\r\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\r\n                }\r\n                this.rows.push(row);\r\n                isGap = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    setValues(values: any) {\r\n        for (let r of this.rows) r.setValues(values);\r\n    }\r\n\r\n    render() {\r\n        return this.rows.map((row, index) => row.render(String(index)));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, PropView} from './propView';\r\n\r\nexport interface PropGridProps {\r\n    className?: string;\r\n    rows: Prop[];\r\n    values: any;\r\n    alignValue?: 'left'|'center'|'right';\r\n    labelFixLeft?: boolean;\r\n}\r\n\r\n@observer\r\nexport class PropGrid extends React.Component<PropGridProps> {\r\n    render() {\r\n        let {className, rows, values} = this.props;\r\n        let propView = new PropView(this.props, rows);\r\n        propView.setValues(values);\r\n        let cn = classNames('container-fluid', className);\r\n        return <div className={cn}>\r\n            {propView.render()}\r\n        </div>;\r\n    }\r\n}\r\n","export * from './propView';\r\nexport * from './row';\r\nexport * from './PropGrid';\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Page, ItemSchema, UiSchema, StringSchema, UiTextItem, Edit, ImageSchema, nav, UiImageItem } from '../components';\r\nimport { userApi } from './userApi';\r\n\r\nexport class EditMeInfo extends React.Component {\r\n    private schema:ItemSchema[] = [\r\n        {name:'nick', type:'string'} as StringSchema,\r\n        {name:'icon', type:'image'} as ImageSchema\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'头像'} as UiImageItem,\r\n        }\r\n    }\r\n    @observable private data:any;\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {nick, icon} = nav.user;\r\n        this.data = {\r\n            nick: nick,\r\n            icon: icon,\r\n        }\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        await userApi.userSetProp(name, newValue);\r\n        this.data[name] = newValue;\r\n        nav.user[name] = newValue;\r\n        nav.saveLocalUser();\r\n    }\r\n\r\n    render() {\r\n        return <Page header=\"个人信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={this.data}\r\n                onItemChanged={this.onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport { IObservableValue } from 'mobx/lib/internal';\r\nimport '../../css/va-tab.css';\r\n\r\nexport type TabCaption = (selected:boolean) => JSX.Element;\r\n\r\nexport interface TabProp {\r\n    name: string;\r\n    caption: TabCaption;\r\n    content: () => JSX.Element;\r\n    notify?: IObservableValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\n\r\nexport interface TabsProps {\r\n    tabs: TabProp[];\r\n    tabPosition?: 'top' | 'bottom';\r\n    size?: 'sm' | 'lg' | 'md';\r\n    tabBack?: string;\r\n    contentBack?: string;\r\n    sep?: string;\r\n    selected?: string;\r\n}\r\n\r\nclass Tab {\r\n    name: string;\r\n    @observable selected: boolean;\r\n    caption: TabCaption;\r\n    contentBuilder: ()=>JSX.Element;\r\n    notify: IObservableValue<number>;\r\n    load?: () => Promise<void>;\r\n\r\n    private _content: JSX.Element;\r\n    \r\n    get content(): JSX.Element {\r\n        if (this.selected !== true) return this._content;\r\n        if (this._content !== undefined) return this._content;\r\n        return this._content = this.contentBuilder();\r\n    }\r\n\r\n    async start() {\r\n        if (this._content !== undefined) return;\r\n        if (this.load === undefined) return;\r\n        await this.load();\r\n    }\r\n}\r\n\r\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \r\n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\r\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\r\n    <small>{label}</small>\r\n</div>;\r\n\r\n@observer export class Tabs extends React.Component<TabsProps> {\r\n    private size: string;\r\n    private tabBack: string;\r\n    private contentBack: string;\r\n    private sep: string;\r\n    @observable private selectedTab: Tab;\r\n    @observable private tabs: Tab[];\r\n\r\n    constructor(props: TabsProps) {\r\n        super(props);\r\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\r\n        this.size = size || 'md';\r\n        this.tabs = tabs.map(v => {\r\n            let tab = new Tab();\r\n            tab.name = v.name;\r\n            tab.selected = false;\r\n            tab.caption = v.caption;\r\n            tab.contentBuilder = v.content;\r\n            tab.notify = v.notify;\r\n            tab.load = v.load;\r\n            return tab;\r\n        });\r\n        this.tabBack = tabBack || 'bg-light';\r\n        this.contentBack = contentBack;\r\n        this.sep = sep || 'border-top border-gray';\r\n        if (selected !== undefined) {\r\n            this.selectedTab = this.tabs.find(v => v.name === selected);\r\n        }\r\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\r\n        this.selectedTab.selected = true;\r\n    }\r\n    /*\r\n    async componentWillMount() {\r\n        if (this.tabs === undefined) return;\r\n        if (this.tabs.length === 0) return;\r\n        let tab = this.tabs[0];\r\n        await tab.start();\r\n    }\r\n    */\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        if (this.tabs.length === 0) return;\r\n        let tab = this.tabs[0];\r\n        await tab.start();\r\n    }\r\n\r\n    private tabClick = async (tab:Tab) => {\r\n        await tab.start();\r\n        this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    showTab(tabName: string) {\r\n        let tab = this.tabs.find(v => v.name === tabName);\r\n        if (tab === undefined) return;\r\n        if (this.selectedTab !== undefined) this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames('tab', 'tab-' + this.size);\r\n        let content = <div className={classNames(this.contentBack, 'tab-content')}>\r\n            {this.tabs.map((v,index) => {\r\n                let style:React.CSSProperties={\r\n                    display: v.selected===true? undefined : 'none'};\r\n                return <div key={index} style={style}>{v.content}</div>;\r\n            })}\r\n        </div>;\r\n\r\n        let tabs = <div className={classNames(this.tabBack, this.sep, 'tab-tabs')}>\r\n            {this.tabs.map((v,index) => {\r\n                let {selected, caption, notify} = v;\r\n                let notifyCircle:any;\r\n                if (notify !== undefined) {\r\n                    let num = notify.get();\r\n                    if (num !== undefined) {\r\n                        if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\r\n                        else if (num < 0) notifyCircle = <u className=\"dot\" />;\r\n                    }\r\n                }\r\n                return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\r\n                    <div className=\"align-self-center\">\r\n                        {notifyCircle}\r\n                        {caption(selected)}\r\n                    </div>\r\n                </div>\r\n            })}\r\n        </div>;\r\n\r\n        return <div className={cn}>\r\n            {\r\n                this.props.tabPosition === 'top'? \r\n                    <>{tabs}{content}</> :\r\n                    <>{content}{tabs}</>\r\n            }\r\n        </div>\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport {FetchError} from '../net/fetchError';\r\nimport { refetchApi } from '../net';\r\n\r\nexport interface FetchErrorProps extends FetchError {\r\n    clearError: ()=>void\r\n}\r\n\r\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\r\n    private reApi = async () => {\r\n        this.props.clearError();\r\n        const {channel, url, options, resolve, reject} = this.props;\r\n        await refetchApi(channel, url, options, resolve, reject);\r\n    }\r\n    private close = async () => {\r\n        this.props.clearError();\r\n    }\r\n    render() {\r\n        let {error, url} = this.props;\r\n            //let errMsg = fetchError.errorMsg;\r\n        let errContent;\r\n        if (typeof error === 'object') {\r\n            let err = [];\r\n            for (let i in error) {\r\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\r\n            }\r\n            errContent = <ul>{err}</ul>;\r\n        }\r\n        else {\r\n            errContent = <div>{error}</div>;\r\n        }\r\n        return <li>\r\n            <article className=\"page-container\">\r\n                <section>\r\n                    <div  className=\"va-error\">\r\n                        <div>网络出现问题</div>\r\n                        <div>点击重新访问</div>\r\n                        <div>url: {url}</div>\r\n                        {errContent}\r\n                        <div className=\"p-3\">\r\n                            <button type='button' onClick={this.reApi}>重新API</button>\r\n                            <button type='button' onClick={this.close}>关闭</button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </article>\r\n        </li>;\r\n    }\r\n}\r\n","import {User, appInFrame, CenterApiBase} from 'tonva';\r\nimport { string } from 'prop-types';\r\n\r\nclass MainApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n    async stickies():Promise<any[]> {\r\n        return await this.get('sticky/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async ties():Promise<any[]> {\r\n        return await this.get('tie/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async apps(unit:number):Promise<any> {\r\n        return await this.get('tie/apps', {unit:unit});\r\n    }\r\n\r\n    async appApi(unit:number, app:number, apiName:string) {\r\n        return await this.get('tie/app-api', {unit:unit, app:app, apiName:apiName});\r\n    }\r\n\r\n    async userId(name:string):Promise<number> {\r\n        return await this.get('tie/user-id', {name:name});\r\n    }\r\n\r\n    async userAdminUnits():Promise<any[]> {\r\n        return await this.get('tie/user-admin-units', {});\r\n    }\r\n\r\n    async sendMessage(toUser:number, type:string, content:any) {\r\n        let {unit} = appInFrame;\r\n        let adminApp = 0;\r\n        return await this.post('tie/send-message', {\r\n            type: type, \r\n            fromUnit: unit, \r\n            fromApp: adminApp,\r\n            toUser: toUser, \r\n            content: content, \r\n        });\r\n    }\r\n\r\n    async unit(unit:number):Promise<any> {\r\n        return await this.get('unit/', {unit:unit});\r\n    }\r\n\r\n    async unitMemberCount(unit:number):Promise<number> {\r\n        return await this.get('unit/member-count', {unit:unit});\r\n    }\r\n\r\n    async unitAdmins(unit:number):Promise<any[]> {\r\n        return await this.get('unit/admins', {unit:unit});\r\n    }\r\n\r\n    async unitSetAdmin(fellow:number, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/set-admin', {fellow:fellow, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitAddAdmin(user:string, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/add-admin', {user:user, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitApps(unit:number):Promise<any[]> {\r\n        return await this.get('unit/apps', {unit:unit});\r\n    }\r\n\r\n    async unitAddApp(unit:number, app:number):Promise<number> {\r\n        let ret = await this.post('unit/add-app', {unit:unit, app:app});\r\n        return ret;\r\n    }\r\n\r\n    async unitDeleteApp(unit:number, app:number, deleted:number):Promise<void> {\r\n        await this.post('unit/delete-app', {unit:unit, app:app, deleted:deleted});\r\n    }\r\n\r\n    async unitChangeProp(unit:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-prop', {unit:unit, prop:prop, value:value});\r\n    }\r\n\r\n    async searchApp(unit:number, key:string, pageStart:any, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/search-app', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n\r\n    async unitRoles(unit:number):Promise<any[]> {\r\n        return await this.get('unit/roles', {unit:unit});\r\n    }\r\n\r\n    async unitAddRole(unit:number, name:string, discription:string):Promise<number> {\r\n        return await this.post('unit/add-role', {unit:unit, name:name, discription:discription});\r\n    }\r\n\r\n    async unitRoleChangeProp(unit:number, role:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-role-prop', {unit:unit, role:role, prop:prop, value:value});\r\n    }\r\n\r\n    async unitRoleApps(unit:number, role:number):Promise<any[]> {\r\n        return await this.get('unit/role-apps', {unit:unit, role:role});\r\n    }\r\n\r\n    async unitRoleSetApps(unit:number, role:number, apps:number[]):Promise<void> {\r\n        await this.post('unit/role-set-apps', {unit:unit, role:role, apps:apps});\r\n    }\r\n\r\n    async unitMembers(unit:number, role:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/members', {unit:unit, role:role, key, pageStart, pageSize});\r\n    }\r\n\r\n    async unitAssignMember(unit:number, member:number, assigned:string):Promise<void> {\r\n        await this.post('unit/assign-member', {unit:unit, member:member, assigned:assigned});\r\n    }\r\n\r\n    async unitMemberRoles(unit:number, member:number):Promise<any[]> {\r\n        return await this.get('unit/member-roles', {unit:unit, member:member});\r\n    }\r\n\r\n    async unitSetMemberRoles(unit:number, member:number, roles:number[]):Promise<void> {\r\n        await this.post('unit/member-set-roles', {unit:unit, member:member, roles:roles});\r\n    }\r\n\r\n    async unitUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/app-users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneAppUsers(unit:number, app:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-app-users', {unit: unit, app:app, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneUserApps(unit:number, user:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-user-apps', {unit: unit, user:user, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppEditUsers(unit:number, app:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/app-edit-users', {unit: unit, app:app, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitUserEditApps(unit:number, user:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/user-edit-apps', {unit: unit, user:user, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async bindAppUser(unit:number, app:number, user:number, bind:number):Promise<void> {\r\n        await this.post('unit/bind-app-user', {unit: unit, app:app, user:user, bind:bind});\r\n    }\r\n\r\n    async userFromKey(key:string):Promise<any> {\r\n        return await this.get('tie/user-from-key', {key:key});\r\n    }\r\n    async unitAddUser(unit:number, user:number) {\r\n        await this.post('unit/add-user', {unit:unit, user:user});\r\n    }\r\n}\r\n\r\nexport const mainApi = new MainApi('tv/', undefined);\r\n","import {CenterApiBase} from 'tonva';\r\n\r\nclass DevApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n    async uqBuilderUrl():Promise<any> {\r\n        let ret = await this.get('uq-builder-url', undefined);\r\n        return ret;\r\n    }    \r\n    async counts(unit:number):Promise<any> {\r\n        return await this.get('counts', {unit:unit});\r\n    }\r\n    async app(id:number):Promise<any> {\r\n        return await this.get('app', {id:id});\r\n    }\r\n    async uq(id:number):Promise<any> {\r\n        return await this.get('uq', {id:id});\r\n    }\r\n    async server(id:number):Promise<any> {\r\n        return await this.get('server', {id:id});\r\n    }\r\n    async apps(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('apps', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async buses(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('buses', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async servers(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('servers', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async services(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('services', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async saveApp(values:any):Promise<number> {\r\n        return await this.post('app-save', values);\r\n    }\r\n    async saveUq(values:any):Promise<number> {\r\n        return await this.post('uq-save', values);\r\n    }\r\n    async saveBus(values:any):Promise<number> {\r\n        return await this.post('bus-save', values);\r\n    }\r\n    async saveServer(values:any):Promise<number> {\r\n        return await this.post('server-save', values);\r\n    }\r\n    async saveService(values:any):Promise<number> {\r\n        return await this.post('service-save', values);\r\n    }\r\n    async delApp(unit:number,id:number):Promise<void> {\r\n        return await this.post('app-del', {unit:unit, id:id});\r\n    }\r\n    async delUq(unit:number,id:number):Promise<void> {\r\n        return await this.post('uq-del', {unit:unit, id:id});\r\n    }\r\n    async delBus(unit:number,id:number):Promise<void> {\r\n        return await this.post('bus-del', {unit:unit, id:id});\r\n    }\r\n    async delServer(unit:number,id:number):Promise<void> {\r\n        return await this.post('server-del', {unit:unit, id:id});\r\n    }\r\n    async delUqdb(unit:number,id:number):Promise<void> {\r\n        return await this.post('uqdb-del', {unit:unit, id:id});\r\n    }\r\n    async delService(unit:number,id:number):Promise<void> {\r\n        return await this.post('service-del', {unit:unit, id:id});\r\n    }\r\n    async loadAppUqs(app:number):Promise<any[]> {\r\n        return await this.get('app-uqs', {app: app});\r\n    }\r\n    async appBindUq(unit:number,app:number,uqs:{id:number, access:string[]}[]):Promise<void> {\r\n        let uqsText:string;\r\n        if (uqs !== undefined) {\r\n            uqsText = uqs.map(v => String(v.id)+'|'+v.access.join(',')).join(';');\r\n        }\r\n        await this.post('app-bind-uq', {unit:unit, app:app, uqs:uqsText});\r\n    }\r\n    async searchUq(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uq-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async getMyUqs(unit:number):Promise<any[]> {\r\n        return await this.get('my-uqs', {unit:unit});\r\n    }\r\n    async searchApp(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('app-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchServer(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('server-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchUqdb(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uqdb-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async loadUqServices(unit:number, uq:number):Promise<any[]> {\r\n        return await this.get('uq-services', {unit:unit, uq:uq});\r\n    }\r\n    async changeServiceProp(unit:number, service:number, prop:string, value:any):Promise<number> {\r\n        return await this.post('service-change-prop', {unit:unit, service:service, prop:prop, value:value});\r\n    }\r\n    async uqGetEntities(unit:number, uq:number):Promise<any[][]> {\r\n        return await this.get('uq-get-entities', {unit:unit, uq:uq});\r\n    }\r\n}\r\n\r\nexport const devApi = new DevApi('tv/dev/', undefined);\r\n","import {observable} from 'mobx';\r\nimport {UnitAdmin} from '../model';\r\nimport {mainApi} from '../api';\r\nimport {Store} from './index';\r\n\r\nexport class Admins {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n    }\r\n\r\n    @observable cur: UnitAdmin = undefined;\r\n    @observable owners: UnitAdmin[] = undefined;\r\n    @observable admins: UnitAdmin[] = undefined;\r\n    @observable fellows: UnitAdmin[] = undefined;\r\n    \r\n    async load(): Promise<void> {\r\n        let unit = this.store.unit;\r\n        if (unit === undefined) return;\r\n        if (unit.id === undefined) return;\r\n        if (this.admins !== undefined) return;\r\n        let all = await mainApi.unitAdmins(unit.id);\r\n        let owners:UnitAdmin[] = [];\r\n        let admins:UnitAdmin[] = [];\r\n        let fellows:UnitAdmin[] = [];\r\n        all.forEach(ua => {\r\n            let {isOwner, isAdmin} = ua;\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                fellows.push(ua);\r\n            else {\r\n                if (isOwner === 1) owners.push(ua);\r\n                if (isAdmin === 1) admins.push(ua);\r\n            }\r\n        });\r\n        this.owners = owners;\r\n        this.admins = admins;\r\n        this.fellows = fellows;\r\n    }\r\n\r\n    private removeCur(arr: UnitAdmin[]) {\r\n        let index = arr.findIndex(v => v.id===this.cur.id);\r\n        if (index >=0) arr.splice(index, 1);\r\n    }\r\n\r\n    async unitSetAdmin(isOwner:number, isAdmin:number) {\r\n        let cur = this.cur;\r\n        cur.isOwner = isOwner;\r\n        cur.isAdmin = isAdmin;\r\n        let fellowId = cur.id, unitId = this.store.unit.id;\r\n        await mainApi.unitSetAdmin(fellowId, unitId, isOwner, isAdmin);\r\n        this.removeCur(this.owners);\r\n        this.removeCur(this.admins);\r\n        this.removeCur(this.fellows);\r\n        if (isOwner === 0 && isAdmin === 0)\r\n            this.fellows.unshift(cur);\r\n        else {\r\n            if (isOwner === 1) this.owners.unshift(cur);\r\n            if (isAdmin === 1) this.admins.unshift(cur);\r\n        }\r\n    }\r\n\r\n    async addNew(user:string, isOwner:number, isAdmin:number):Promise<UnitAdmin> {\r\n        let admin = await mainApi.unitAddAdmin(user, this.store.unit.id, isOwner, isAdmin);\r\n        if (admin !== undefined) {\r\n            let cur = this.cur = admin;\r\n            this.removeCur(this.owners);\r\n            this.removeCur(this.admins);\r\n            this.removeCur(this.fellows);\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                this.fellows.unshift(cur);\r\n            else {\r\n                if (isOwner === 1) this.owners.unshift(cur);\r\n                if (isAdmin === 1) this.admins.unshift(cur);\r\n            }\r\n        }\r\n        return admin;\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {devApi} from '../api';\r\nimport {DevModel, Unit} from '../model';\r\nimport {Store} from './index';\r\n\r\ninterface Counts {\r\n    uq: number;\r\n    app: number;\r\n    bus: number;\r\n    server: number;\r\n    service: number;\r\n    //uqdb: number;\r\n}\r\n\r\nexport abstract class ObjItems<T extends DevModel.ObjBase> {\r\n    protected store:Store;\r\n    protected dev:Dev;\r\n    constructor(store:Store, dev:Dev) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    @observable cur: T = undefined;\r\n\r\n    async load():Promise<void> {\r\n         let ret = await this._load();\r\n         this.items = ret;\r\n    }\r\n    protected abstract _load():Promise<T[]>;\r\n    async saveCur(item:T):Promise<boolean> {\r\n        let values:any = {};\r\n        if (this.cur !== undefined) {\r\n            _.assign(values, this.cur, item);\r\n        }\r\n        else {\r\n            _.assign(values, item);\r\n        }\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (this.cur === undefined) {\r\n            if (id === 0) return false;\r\n            values.id = id;\r\n            if (this.items !== undefined) this.items.unshift(values);\r\n            this._inc();\r\n            this.cur = observable(values);\r\n        }\r\n        else {\r\n            _.assign(this.cur, values);\r\n        }\r\n        return true;\r\n    }\r\n    async check(item:T):Promise<boolean> {\r\n        return true;\r\n    }\r\n    async save(item:T):Promise<T> {\r\n        let values:any = {};\r\n        _.assign(values, item);\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (id === 0) return;\r\n        values.id = id;\r\n        return values;\r\n    }\r\n    protected abstract _save(item:T):Promise<number>;\r\n    async del():Promise<void> {\r\n        let c = this.cur;\r\n        if (c === undefined) return;\r\n        let id = c.id;\r\n        await this._del(c);\r\n        if (this.items === undefined) return;\r\n        let index = this.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.items.splice(index, 1);\r\n            this._dec();\r\n        }\r\n    }\r\n    protected abstract _del(item:T):Promise<void>;\r\n    protected abstract _inc();\r\n    protected abstract _dec();\r\n}\r\n\r\nclass Apps extends ObjItems<DevModel.App> {\r\n    @observable uqs: DevModel.UQ[] = undefined;\r\n    @observable searchedUqs: DevModel.UQ[] = undefined;\r\n    //@observable service: DevModel.Service = null;\r\n    protected async _load() {\r\n        return await devApi.apps(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.App):Promise<number> {\r\n        return await devApi.saveApp(item);\r\n    }\r\n    protected async _del(item:DevModel.App):Promise<void> {\r\n        await devApi.delApp(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.app++; }\r\n    protected _dec() { this.dev.counts.app--; }\r\n\r\n    public async loadCurUqs() {\r\n        let ret = await devApi.loadAppUqs(this.cur.id);\r\n        this.uqs = ret;\r\n    }\r\n    public async searchUq(key:string) {\r\n        this.searchedUqs = await devApi.searchUq(this.store.unit.id, key, 0, searchPageSize);\r\n    }\r\n    public async appBindUq(uqs:{id:number, access:string[]}[], bind:boolean) {\r\n        let allUqs:{id:number, access:string[]}[] = this.uqs.map(v => {\r\n            let {id, access} = v;\r\n            return {id: id, access: [access]};\r\n        });\r\n        for (let uq of uqs) {\r\n            let index = allUqs.findIndex(v => v.id === uq.id);\r\n            if (bind === true) {\r\n                if (index < 0) allUqs.unshift(uq);\r\n            }\r\n            else {\r\n                allUqs.splice(index, 1);\r\n            }\r\n        }\r\n        await devApi.appBindUq(this.store.unit.id, this.cur.id, allUqs);\r\n        for (let uq of uqs) {\r\n            let index = this.uqs.findIndex(a => a.id === uq.id);\r\n            if (index>=0) this.uqs.splice(index, 1);\r\n            if (bind === true) {\r\n                if (this.searchedUqs !== undefined) {\r\n                    let find = this.searchedUqs.find(a => a.id === uq.id);\r\n                    if (find !== undefined) this.uqs.unshift(find);\r\n                }\r\n            }\r\n            else {\r\n                // 已经删除，不需要处理\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Uqs extends ObjItems<DevModel.UQ> {\r\n    protected async _load() {\r\n        let ret = await devApi.uqs(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.UQ):Promise<number> {\r\n        //let {access} = item;\r\n        //if (!access) access = \"*';\r\n        //let parts = access.split(',').map(v => v.trim()).filter(v => v!=='');\r\n        //item.access = parts.join(',');\r\n        return await devApi.saveUq(item);\r\n    }\r\n    protected async _del(item:DevModel.UQ):Promise<void> {\r\n        await devApi.delUq(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uq++; }\r\n    protected _dec() { this.dev.counts.uq--; }\r\n}\r\n\r\nclass Buses extends ObjItems<DevModel.Bus> {\r\n    protected async _load() {\r\n        let ret = await devApi.buses(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.Bus):Promise<number> {\r\n        return await devApi.saveBus(item);\r\n    }\r\n    protected async _del(item:DevModel.Bus):Promise<void> {\r\n        await devApi.delBus(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.bus++; }\r\n    protected _dec() { this.dev.counts.bus--; }\r\n    async check(item:DevModel.Bus):Promise<boolean> {\r\n        let {schema} = item;\r\n        try {\r\n            let bus = JSON.parse(schema);\r\n            for (let i in bus) {\r\n                let face = bus[i];\r\n                if (face === null || face === undefined) {\r\n                    alert(`face ${i} is null，请设置内容`);\r\n                    return false;\r\n                }\r\n                switch (typeof face) {\r\n                    case 'function':\r\n                        alert(`face ${i} is function，不接受function`);\r\n                        return false;\r\n                    //case 'bigint':\r\n                    case 'boolean':\r\n                    case 'number':\r\n                    case 'string':\r\n                        alert(`face ${i} 应该是数组或者对象`);\r\n                        return false;\r\n                }\r\n                if (Array.isArray(face) === true) {\r\n                    if (checkBusFace(face, bus) === false) return false;\r\n                }\r\n                else {\r\n                    if (checkBusQuery(face, bus) === false) return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            alert(err.message);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nconst paramTypes = ['id', 'number', 'string'];\r\nconst busTypes = [...paramTypes, 'array'];\r\nfunction refNameOk(faceName:string, bus:any):boolean {\r\n    let face = bus[faceName];\r\n    if (face === undefined) {\r\n        alert(`face ${faceName} not defined`);\r\n        return false;\r\n    }\r\n    if (Array.isArray(face) === false) {\r\n        alert(`face ${faceName} is referenced, bus is not array`);\r\n        return false;\r\n    }\r\n    return refArrayOk(face as any[], bus);\r\n}\r\n\r\nfunction refArrayOk(items:any[], bus:any):boolean {\r\n    for (let item of items) {\r\n        let {type} = item;\r\n        if (['id', 'string', 'number', 'array'].indexOf(type) < 0) {\r\n            alert(`type ${type} out of ['id', 'string', 'number', 'array']`);\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction checkBusFace(face: any[], bus:any):boolean {\r\n    if (!face || typeof face !== 'object') {\r\n        alert('only object');\r\n        return false;\r\n    }\r\n    for (let field of face) {\r\n        let {type} = field;\r\n        if (type === undefined) {\r\n            alert('type not defined');\r\n            return false;\r\n        }\r\n        else if (type === 'array') {\r\n            let {fields} = field;\r\n            if (refNameOk(fields, bus) === false) {\r\n                return false;\r\n            }\r\n        }\r\n        if (busTypes.indexOf(type) < 0) {\r\n            if (type === 'date') {\r\n                alert('不再支持数据类型date，请用number unixtime作为媒介')\r\n            }\r\n            else {\r\n                alert(`不支持数据类型 ${type}`);\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction checkBusQuery(face: any, bus:any):boolean {\r\n    for (let i in face) {\r\n        let item = face[i];\r\n        switch (i) {\r\n            default:\r\n                alert(i + ': not allowed in bus query.');\r\n                return false;\r\n            case 'param':\r\n                if (checkBusQueryParam(item, bus) === false) return false;\r\n                break;\r\n            case 'returns':\r\n                let returns = item;\r\n                if (typeof item === 'string') {\r\n                    returns = bus[item];\r\n                    if (returns === undefined) {\r\n                        alert(item + ' is not defined');\r\n                        return false;\r\n                    }\r\n                }\r\n                if (checkBusFace(returns, bus) === false) return false;\r\n                break;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction checkBusQueryParam(param: any, bus:any):boolean {\r\n    if (param === null || param === undefined) return;\r\n    switch (typeof param) {\r\n        case 'string':\r\n            return refNameOk(param, bus);\r\n        default:\r\n            if (Array.isArray(param)) {\r\n                return refArrayOk(param, bus);\r\n            }\r\n            break;\r\n    }\r\n    alert('param of a query can only be string or array');\r\n    return false;\r\n}\r\n\r\nclass Servers extends ObjItems<DevModel.Server> {\r\n    protected async _load() {\r\n        return await devApi.servers(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Server):Promise<number> {\r\n        return await devApi.saveServer(item);\r\n    }\r\n    protected async _del(item:DevModel.Server):Promise<void> {\r\n        await devApi.delServer(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.server++; }\r\n    protected _dec() { this.dev.counts.server--; }\r\n}\r\nclass Services extends ObjItems<DevModel.Service> {\r\n    protected async _load() {\r\n        return await devApi.services(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Service):Promise<number> {\r\n        return await devApi.saveService(item);\r\n    }\r\n    protected async _del(item:DevModel.Service):Promise<void> {\r\n        await devApi.delService(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.service++; }\r\n    protected _dec() { this.dev.counts.service--; }\r\n    async changeProp(prop:string, value:any):Promise<number> {\r\n        let ret = await devApi.changeServiceProp(this.store.unit.id, this.cur.id, prop, value);\r\n        switch (prop) {\r\n            case 'url': this.cur.url = value; break;\r\n            case 'urlTest': this.cur.urlTest = value; break;\r\n            case 'server': this.cur.server = value; break;\r\n            case 'db': this.cur.db = value; break;\r\n            //case 'db_type': this.cur.db_type = value; break;\r\n            //case 'connection': this.cur.connection = value; break;\r\n        }\r\n        return ret;\r\n    }\r\n    async loadUqServices(uq:number):Promise<void> {\r\n        let ret = await devApi.loadUqServices(this.store.unit.id, uq);\r\n        this.items = ret[0];\r\n    }\r\n}\r\n\r\nconst searchPageSize = 50;\r\ntype Search = (unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\nclass SearchItems<T extends DevModel.ObjBase> {\r\n    private store:Store;\r\n    private dev:Dev;\r\n    private search:(unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\n\r\n    constructor(store:Store, dev:Dev, search:Search) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n        this.search = search;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    allLoaded: boolean = false;\r\n    private key: string;\r\n    private pageStart = 0;\r\n\r\n    async first(key:string) {\r\n        this.key = key;\r\n        this.items = undefined;\r\n        this.allLoaded = false;\r\n        this.pageStart = 0;\r\n        await this.more();\r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        let ret = await this.search(this.store.unit.id, this.key, this.pageStart, searchPageSize);\r\n        let len = ret.length;\r\n        if (len > searchPageSize) {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len > 0) {\r\n            this.pageStart = ret[len-1].id;\r\n            if (this.items === undefined)\r\n                this.items = ret;\r\n            else\r\n                this.items.push(...ret);\r\n        }\r\n        else {\r\n            this.items = [];\r\n        }\r\n    }\r\n}\r\n\r\nexport class Dev {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n        this.apps = new Apps(store, this);\r\n        this.uqs = new Uqs(store, this);\r\n        this.buses = new Buses(store, this);\r\n        this.servers = new Servers(store, this);\r\n        //this.uqdbs = new Uqdbs(store, this);\r\n        this.services = new Services(store, this);\r\n        this.searchApp = new SearchItems<DevModel.App>(store, this, devApi.searchApp.bind(devApi));\r\n        this.searchUq = new SearchItems<DevModel.UQ>(store, this, devApi.searchUq.bind(devApi));\r\n        this.searchServer = new SearchItems<DevModel.Server>(store, this, devApi.searchServer.bind(devApi));\r\n    }\r\n\r\n    @observable counts:Counts = undefined;\r\n    apps:Apps = undefined;\r\n    uqs:Uqs = undefined;\r\n    buses:Buses = undefined;\r\n    servers:Servers = undefined;\r\n    //uqdbs:Uqdbs = undefined;\r\n    services:Services = undefined;\r\n\r\n    searchApp:SearchItems<DevModel.App> = undefined;\r\n    searchUq:SearchItems<DevModel.UQ> = undefined;\r\n    searchServer:SearchItems<DevModel.Server> = undefined;\r\n    //searchUqdb:SearchItems<DevModel.Uqdb> = undefined;\r\n    \r\n    async loadCounts(): Promise<void> {\r\n        let {unit} = this.store;\r\n        this.counts = await devApi.counts(unit.id);\r\n    }\r\n}\r\n","import {CacheIds} from 'tonva';\r\nimport {Id, Unit, DevModel} from '../model';\r\nimport {mainApi, devApi} from '../api';\r\n\r\nexport class CacheUnits extends CacheIds<Unit> {\r\n    protected async _loadIds(ids:number[]):Promise<Unit[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<Unit> {\r\n        return await mainApi.unit(id);\r\n    }\r\n}\r\n\r\nexport class CacheUqs extends CacheIds<DevModel.UQ> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.UQ[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.UQ> {\r\n        return await devApi.uq(id);\r\n    }\r\n}\r\n\r\nexport class CacheApps extends CacheIds<DevModel.App> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.App[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.App> {\r\n        return await devApi.app(id);\r\n    }\r\n}\r\n\r\nexport class CacheServers extends CacheIds<DevModel.Server> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.Server[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.Server> {\r\n        return await devApi.server(id);\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {appInFrame, host} from 'tonva';\r\nimport {mainApi, devApi} from '../api';\r\nimport {Unit, UnitApps, App, Api, UnitAdmin, UnitApp, Role, RoleMember} from '../model';\r\nimport {Admins} from './admins';\r\nimport {Dev} from './dev';\r\nimport {CacheUnits, CacheUqs, CacheApps, CacheServers} from './cacheIds';\r\n\r\nexport class Store {\r\n    private get unitId():number {return appInFrame.unit;};\r\n    admins:Admins;\r\n    dev:Dev;\r\n    cacheUnits: CacheUnits;\r\n    cacheUqs: CacheUqs;\r\n    cacheApps: CacheApps;\r\n    cacheServers: CacheServers;\r\n    uqServer: string;\r\n\r\n    @observable unit: Unit;\r\n    @observable memberCount: number;\r\n    @observable apps: UnitApp[];\r\n    @observable role:Role;\r\n    @observable roles: Role[];\r\n    @observable roleApps: UnitApp[];\r\n    @observable roleMember: RoleMember;\r\n    @observable roleMembers: RoleMember[];\r\n    @observable memberRoles: Role[];\r\n\r\n    init() {\r\n        this.unit = undefined;\r\n        this.admins = new Admins(this);\r\n        this.dev = new Dev(this);\r\n        this.cacheUnits = new CacheUnits();\r\n        this.cacheUqs = new CacheUqs();\r\n        this.cacheApps = new CacheApps();\r\n        this.cacheServers = new CacheServers();\r\n    }\r\n\r\n    logout() {\r\n        //meInFrame.app = undefined;\r\n        appInFrame.hash = undefined;\r\n        //let unitId = process.env.REACT_APP_DEBUG_UNITID;\r\n        //if (unitId !== undefined)\r\n        //    meInFrame.unit = Number(unitId);\r\n        appInFrame.unit = undefined;\r\n        this.init();\r\n        this.memberCount = undefined;\r\n        this.apps = undefined;\r\n        this.role = undefined;\r\n        this.roles = undefined;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRole(role:Role) {\r\n        if (this.role === role) return;\r\n        this.role = role;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRoleUser(user:RoleMember) {\r\n        if (this.roleMember === user) return;\r\n        this.roleMember = user;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    async unitChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitChangeProp(this.unit.id, prop, value);\r\n        this.unit[prop] = value;\r\n    }\r\n\r\n    async loadApps(): Promise<void> {\r\n        if (this.apps !== undefined) return;\r\n        this.apps = await mainApi.unitApps(this.unitId);\r\n    }\r\n\r\n    async loadUnit(): Promise<void> {\r\n        if (this.unitId === undefined) return;\r\n        let ret = await mainApi.unit(this.unitId);\r\n        this.unit = ret;\r\n        console.log(\"loadUnit unit=%s\", ret);\r\n        this.memberCount = await mainApi.unitMemberCount(this.unitId);\r\n        let uqServer = await devApi.uqBuilderUrl();\r\n        let {url} = uqServer;\r\n        this.uqServer = host.getUrlOrDebug(url, 'uq-build');\r\n        console.log(\"uq-build: %s\", JSON.stringify(this.uqServer));\r\n    }\r\n\r\n    async stopUnitApp(appId:number): Promise<void> {\r\n        await mainApi.unitDeleteApp(this.unit.id, appId, 1);\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 0;\r\n    }\r\n\r\n    async restoreUnitApp(appId:number): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, appId);\r\n        if (ret <= 0) return ret;\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 1;\r\n        return 1;\r\n    }\r\n\r\n    async addUnitApp(app:UnitApp): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, app.id);\r\n        if (ret <= 0) return ret;\r\n        this.apps.push(app);\r\n        return 1;\r\n    }\r\n\r\n    async loadRoles(): Promise<void> {\r\n        if (this.roles !== undefined) return;\r\n        let ret = await mainApi.unitRoles(this.unit.id);\r\n        ret.forEach(v => {\r\n            switch (v.id) {\r\n                case 1: \r\n                    v.name= '访客';\r\n                    v.discription = '可以获取开放信息';\r\n                    break;\r\n                case 2: \r\n                    v.name= '普通';\r\n                    v.discription = '能访问最基本的功能';\r\n                    break;\r\n            }\r\n        });\r\n        this.roles = ret;\r\n    }\r\n\r\n    async unitAddRole(name:string, discription:string): Promise<number> {\r\n        let id = await mainApi.unitAddRole(this.unit.id, name, discription);\r\n        if (id > 0) {\r\n            this.roles.push({\r\n                id: id,\r\n                name: name,\r\n                discription: discription,\r\n                count: undefined,\r\n            });\r\n        }\r\n        return id;\r\n    }\r\n\r\n    async roleChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitRoleChangeProp(this.unit.id, this.role.id, prop, value);\r\n        this.role[prop] = value;\r\n    }\r\n\r\n    async loadRoleApps():Promise<void> {\r\n        let ret = await mainApi.unitRoleApps(this.unit.id, this.role.id);\r\n        this.roleApps = ret.map(v => {\r\n            return this.apps.find(app=>app.id === v.id);\r\n        });\r\n    }\r\n\r\n    async setRoleApps(apps:UnitApp[]) {\r\n        await mainApi.unitRoleSetApps(this.unit.id, this.role.id, apps.map(v=>v.id));\r\n        this.roleApps = apps;\r\n    }\r\n\r\n    async loadMembers():Promise<void> {\r\n        let ret = await mainApi.unitMembers(this.unit.id, this.role === undefined? 0:this.role.id, undefined, 0, 100);\r\n        this.roleMembers = ret;\r\n    }\r\n\r\n    async unitAssignMember(assigned:string):Promise<void> {\r\n        await mainApi.unitAssignMember(this.unit.id, this.roleMember.id, assigned);\r\n        this.roleMember.assigned = assigned;\r\n    }\r\n\r\n    async loadMemberRoles():Promise<void> {\r\n        let ret = await mainApi.unitMemberRoles(this.unit.id, this.roleMember.id);\r\n        let roles:Role[] = ret.map(v => {\r\n            let rId = v.id;\r\n            let role = this.roles.find(r => r.id === rId);\r\n            return _.clone(role);\r\n        });\r\n        this.memberRoles = roles;\r\n    }\r\n\r\n    async setMemberRoles(memberRoles:Role[]) {\r\n        await mainApi.unitSetMemberRoles(this.unit.id, this.roleMember.id, memberRoles.map(v=>v.id));\r\n        this.roles.forEach(role => {\r\n            let rId = role.id;\r\n            let org = this.memberRoles.find(v => v.id === rId);\r\n            let cur = memberRoles.find(v => v.id === rId);\r\n            if (org !== undefined) {\r\n                if (cur !== undefined) return;\r\n                role.count--;\r\n                return;\r\n            }\r\n            if (cur === undefined) return;\r\n            role.count++;\r\n        });\r\n        this.memberRoles = memberRoles;\r\n    }\r\n};\r\n\r\nexport const store = new Store();\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Context, Form, Schema, UiSchema, UiTextItem} from 'tonva';\r\nimport {store} from '../store';\r\n\r\n@observer\r\nexport default class NewFellowPage extends React.Component<{isOwner:boolean, isAdmin:boolean}> {\r\n    //private form: TonvaForm;\r\n    private schema: Schema = [\r\n        {name:'user', type:'string', required:true},\r\n        {name:'submit', type:'submit'}\r\n    ]\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            user: {widget:'text', maxLength: 100, placeholder: '用户名', label: '管理员'} as UiTextItem,\r\n            submit: {widget:'button', label: '添加', className: 'btn btn-primary'}\r\n        }\r\n    }\r\n    /*\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '用户名',\r\n            field: {\r\n                type: 'string',\r\n                name: 'user',\r\n                required: true,\r\n                maxLength: 100,\r\n            },\r\n            face: {\r\n                type: 'string',\r\n                placeholder: '用户名',\r\n            }\r\n        },\r\n    ];\r\n    private schema:FormSchema = new FormSchema({\r\n        fields: [\r\n            {\r\n                type: 'string',\r\n                name: 'user',\r\n                placeholder: '用户名',\r\n                label: '邀请成员',\r\n                rules: ['required', 'maxlength:100']\r\n            },\r\n        ],\r\n        onSumit: this.onSendInvitation,\r\n        submitText: '邀请'\r\n    });\r\n    */\r\n    private onSendInvitation = async (name:string, context:Context): Promise<string> => {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let user = context.form.data['user'];\r\n        let ret = await store.admins.addNew(user, isOwner?1:0, isAdmin?1:0);\r\n        if (ret !== undefined) {\r\n            nav.pop();\r\n            return;\r\n        }\r\n        return user + '没有关注小号';\r\n        /*\r\n        let msg = {a: 1, b: 'ddd'};\r\n        let toName = values['user'];\r\n        let userId = await mainApi.userId(toName);\r\n        if (userId === 0) {\r\n            this.form.formView.setError('user', '\\'' + toName +  '\\' 不存在');\r\n            return;\r\n        }\r\n        await mainApi.sendMessage(userId, 'unit-follow-invite', msg);\r\n        nav.replace(<Page header='完成' back=\"close\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>邀请成员</CardTitle>\r\n                    <CardText>已发送给{toName}，请等待确认。</CardText>\r\n                    <Button color='primary' onClick={()=>nav.back()}>完成</Button>\r\n                </CardBody>\r\n            </Card>\r\n        </Page>);\r\n        */\r\n    }\r\n    render() {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let caption = isOwner? \"高管\" : \"管理员\";\r\n        return <Page header={'新增' + caption}>\r\n            <div className=\"container\">\r\n                <div className='my-4 text-info'>\r\n                    只有关注本小号的用户，才能成为{caption}\r\n                </div>\r\n                <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSendInvitation}/>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n// <ValidForm formSchema={this.schema} />\r\n//<TonvaForm ref={f=>this.form=f} formRows={this.formRows} onSubmit={this.onSendInvitation} />\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Schema, UiSchema, ItemSchema, UiCheckItem, UiButton, ButtonSchema, Form, Context, Image} from 'tonva';\r\nimport {store} from '../store';\r\nimport { UnitAdmin } from '../model/index';\r\n//import {mainApi} from '../api';\r\n//, ValidForm, FormSchema, FormFields, Field\r\n\r\n@observer\r\nexport default class EditAdmin extends React.Component {\r\n    private onSubmit = async (name:string, context:Context) => {\r\n        let {isOwner, isAdmin} = context.form.data;\r\n        await store.admins.unitSetAdmin(isOwner, isAdmin);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit} = store;\r\n        let {isRoot, isOwner, isAdmin} = unit;\r\n        let unitAdmin = store.admins.cur;\r\n        let owner:ItemSchema = {name: 'isOwner', type: 'boolean'};\r\n        let admin:ItemSchema = {name: 'isAdmin', type: 'boolean'};\r\n        let submit:ButtonSchema = {name: 'submit', type: 'submit'};\r\n        let schema:ItemSchema[];\r\n        if (isRoot === 1) schema = [owner, admin, submit];\r\n        else if (isOwner === 1) schema = [admin, submit];\r\n        let data = {\r\n            isOwner: unitAdmin.isOwner,\r\n            isAdmin: unitAdmin.isAdmin,\r\n        };\r\n\r\n        let uiSchema = {\r\n            items: {\r\n                'isOwner': {widget: 'checkbox', label: '高管', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'isAdmin': {widget: 'checkbox', label: '管理员', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'submit': {widget: 'button', label: '提交', className: 'btn btn-primary'} as UiButton,\r\n            }\r\n        };\r\n\r\n        return <Page header='权限'>\r\n            <div className=\"px-3\">\r\n                <Fellow {...store.admins.cur} />\r\n                <Form schema={schema} uiSchema={uiSchema} formData={data} onButtonClick={this.onSubmit} />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nconst Fellow = (props:UnitAdmin) => {\r\n    let {name, nick, icon} = props;\r\n    //<img className='w-75' src={icon || process.env.REACT_APP_DEFAULT_ICON} />\r\n    return <div>\r\n        <div className='d-flex my-4'>\r\n            <Image className=\"w-3c h-3c mr-3\" src={icon} />\r\n            <div className=\"\">\r\n                <h4 className='text-dark'>{name}</h4>\r\n                {nick && <h6><small className='text-secondary'>{nick}</small></h6>}\r\n            </div>\r\n        </div>\r\n        <hr className='mb-4' />\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Image} from 'tonva';\r\nimport {UnitApps, UnitAdmin} from '../model';\r\nimport {store} from '../store';\r\nimport NewFellow from './NewFellow';\r\nimport EditAdmin from './EditAdmin';\r\nimport {LMR, Badge, List} from 'tonva';\r\n\r\n@observer\r\nexport default class AdministorsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.admins.load();\r\n    }\r\n\r\n    onNewFellow() {\r\n        //nav.push(<NewFellow />);\r\n    }\r\n    onItemClick(ua:UnitAdmin) {\r\n        store.admins.cur = ua;\r\n        nav.push(<EditAdmin />);\r\n    }\r\n    private row = ({icon, name, nick}:UnitAdmin) => {\r\n        let content = nick?\r\n            <><b>{nick}</b> &nbsp; <small className=\"text-muted\">{name}</small></>\r\n            :\r\n            <b>{name}</b>;\r\n        let left = <Image className=\"w-2-5c h-2-5c\" src={icon} />; \r\n        return <LMR className=\"py-2 px-3 align-items-stretch\" left={left}>\r\n            <div className=\"px-3\">{content}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    private onNewOwner = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, true, false);\r\n    }\r\n\r\n    private onNewAdmin = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, false, true);\r\n    }\r\n\r\n    private newAdmin(evt: React.MouseEvent<HTMLAnchorElement>, isOwner:boolean, isAdmin:boolean) {\r\n        evt.preventDefault();\r\n        nav.push(<NewFellow isOwner={isOwner} isAdmin={isAdmin} />);\r\n    } \r\n    render() {\r\n        //let n = nav;\r\n        //let me = n.local.user.get().id;\r\n        let {unit} = store;\r\n        if (unit === undefined) return;\r\n        let {owners, admins, fellows} = store.admins;\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.onNewFellow}>新增成员</button>;\r\n\r\n        let showOwners = false, showAdmins = false;\r\n        let ownersView, adminsView, fellowsView;\r\n        if (unit.isRoot === 1) {\r\n            showOwners = true;\r\n            showAdmins = true;\r\n        }\r\n        if (unit.isOwner === 1) showAdmins = true;\r\n        if (showOwners === true) {\r\n            let header = <LMR \r\n                className=\"px-3 py-1 small\"\r\n                left=\"高管\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewOwner}>新增</a>} />;\r\n            ownersView = <List \r\n                className=\"my-4\"\r\n                header={header} items={owners}\r\n                none=\"[无]\"\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        if (showAdmins === true) {\r\n            let header = <LMR \r\n                className=\"px-3 py-1 small\"\r\n                left=\"管理员\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewAdmin}>新增</a>} />;\r\n            adminsView = <List \r\n                className='my-4' \r\n                header={header} items={admins} \r\n                none='[无]'\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        return <Page header=\"管理员\" right={right}>\r\n            {ownersView}\r\n            {adminsView}\r\n            <div className=\"my-4 p-3\">\r\n                <div className=\"ml-2 mb-2\">说明</div>\r\n                <div className=\"\">\r\n                    <ul className=\"pl-2\">\r\n                        <li className=\"card-text\">管理组包括主人、高管、管理员</li>\r\n                        <li className=\"card-text\">小号主人可以增减高管</li>\r\n                        <li className=\"card-text\">高管可以增减管理员</li>\r\n                        <li className=\"card-text\">管理员可以管理小号，程序的开发，以及用户</li>\r\n                        <li className=\"card-text\">开发号高管可以增减编辑APP，UQ，Server，Service</li>\r\n                        <li className=\"card-text\">开发号管理员可以编译指定UQ，BUS</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {EasyDate, EasyTime} from 'tonva';\r\n\r\nexport interface IdDatesProps {\r\n    date_init: Date;\r\n    date_update: Date;\r\n}\r\n\r\nexport class IdDates extends React.Component<IdDatesProps> {\r\n    render() {\r\n        let {date_init, date_update} = this.props;\r\n        return <small className=\"text-muted\">\r\n            最新: <EasyTime date={date_update}/>\r\n            <i className=\"fa fa-fw\" />\r\n            创建: <EasyDate date={date_init}/>\r\n        </small>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport function span(\r\n    isLink:boolean,\r\n    className:string, \r\n    onClick:(evt:React.MouseEventHandler<HTMLElement>)=>void,\r\n    content:any): JSX.Element\r\n{\r\n    let tag:string;\r\n    let props:any;\r\n    if (isLink === true) {\r\n        tag = 'a';\r\n        props = {\r\n            className: classNames(className, 'cursor-pointer'),\r\n            onClick: onClick,\r\n            href: '#',\r\n        }\r\n    }\r\n    else {\r\n        tag = 'span';\r\n        props = {\r\n            className: className,\r\n        }\r\n    }\r\n    return React.createElement(tag, props, content);\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {store} from '../store';\r\nimport {span} from './span';\r\n\r\nexport interface UnitLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UnitSpan extends React.Component<UnitLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UnitInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let content;\r\n        let {name, nick, discription} = unit;\r\n        let disc = discription && '- ' + discription;\r\n        if (nick) {\r\n            content = <>{nick} &nbsp; <small className=\"text-muted\">{name} {disc}</small></>;\r\n        }\r\n        else if (name) {\r\n            content = <>{name} &nbsp; <small className=\"text-muted\">{disc}</small></>;\r\n        }\r\n        else {\r\n            content = id;\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nexport class UnitName extends React.Component<UnitLinkProps> {\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let {name} = unit;\r\n        return <>{name}</>;\r\n    }\r\n}\r\n\r\nclass UnitInfo extends React.Component<UnitLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let unit = store.cacheUnits.get(this.props.id);\r\n        let {name, nick, icon, discription} = unit;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={discription} />},\r\n            '',\r\n        ];\r\n        return <Page header={'小号 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","export const appIcon = process.env.REACT_APP_ICON;\r\nexport const appItemIcon = process.env.REACT_APP_ITEM_ICON;\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {appIcon, appItemIcon} from 'consts';\r\nimport {store} from 'store';\r\nimport {IdDates} from './idDates';\r\nimport {span} from './span';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface UqLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UqSpan extends React.Component<UqLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UqInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, className, isLink} = this.props;\r\n        let api = store.cacheUqs.get(id);\r\n        let content;\r\n        if (api === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, discription} = api;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nclass UqInfo extends React.Component<UqLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let uq = store.cacheUqs.get(this.props.id);\r\n        let {name, discription, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n        ];\r\n        return <Page header={'UQ - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {store} from '../store';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface AppSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class AppSpan extends React.Component<AppSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheApps.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<AppInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let app = store.cacheApps.get(id);\r\n        let content;\r\n        if (app === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, icon, discription} = app;\r\n            let isPublic = app.public;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n\r\n@observer\r\nclass AppInfo extends React.Component<AppSpanProps> {\r\n    private rows:Prop[];\r\n    @observable private apis:ListProp = {\r\n        label: '关联API', type: 'list', list: undefined, row: AppRow\r\n    };\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    async componentDidMount() {\r\n        this.apis.list = await devApi.loadAppUqs(this.props.id);\r\n    }\r\n    render() {\r\n        let app = store.cacheApps.get(this.props.id);\r\n        let {unit, name, discription, icon, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            this.apis,\r\n        ];\r\n        return <Page header={'APP - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass AppRow extends React.Component<any> {\r\n    render() {\r\n        let {name, discription} = this.props;\r\n        let disp;\r\n        if (discription) disp = <div className=\"small text-muted\">{discription}</div>;\r\n        return <div className='form-control-plaintext'>\r\n            <div>{name}</div>\r\n            {disp}\r\n        </div>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva';\r\nimport {nav, Page}  from 'tonva';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {store} from '../store';\r\nimport {DevModel} from '../model';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface ServerSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class ServerSpan extends React.Component<ServerSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheServers.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<ServerInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let server = store.cacheServers.get(id);\r\n        let content;\r\n        if (server === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {cloud, ip, discription} = server;\r\n            if (discription !== undefined) {\r\n                content = <React.Fragment>{discription} &nbsp; <small className=\"text-muted\">{ip}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\nclass ServerInfo extends React.Component<ServerSpanProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let server = store.cacheServers.get(this.props.id);\r\n        let {discription, cloud, ip, unit, date_init, date_update} = server;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={ip} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <Page header={'服务器 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva';\r\n\r\ninterface StringValueEditProps {\r\n    title: string;\r\n    onChanged:(value:any, orgValue:any)=>Promise<string|void>;\r\n    value?: any;\r\n    buttonText?: string;\r\n    info?: string;\r\n}\r\ninterface StringValueEditState {\r\n    disabled: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport class StringValueEdit extends React.Component<StringValueEditProps, StringValueEditState> {\r\n    //private input:HTMLInputElement;\r\n    protected value: string;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: true,\r\n        };\r\n    }\r\n    /*\r\n    private ref = (input:HTMLInputElement) => {\r\n        if (!input) return;\r\n        input.value = this.props.value || '';\r\n        this.input = input;\r\n    }*/\r\n    private onChange = (evt:React.FormEvent<HTMLInputElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        });\r\n        \r\n    }\r\n    protected onSubmit = async () => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        let v = this.value; // this.input.value.trim();\r\n        let onChanged = this.props.onChanged;\r\n        if (onChanged !== undefined) {\r\n            let ret = await onChanged(v, org);\r\n            if (typeof ret === 'string') {\r\n                this.setState({error: ret});\r\n                return;\r\n            }\r\n            nav.pop();\r\n        }\r\n    }\r\n    protected renderControl() {\r\n        return <input className=\"form-control w-100\" type=\"text\"\r\n            // ref={this.ref}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onChange} />\r\n    }\r\n    render() {\r\n        let {title, onChanged, buttonText, info, value} = this.props;\r\n        let {disabled, error} = this.state;\r\n        let right = <button\r\n            className=\"btn btn-success btn-sm\"\r\n            disabled={disabled}\r\n            onClick={this.onSubmit}\r\n        >\r\n            {buttonText||'保存'}\r\n        </button>;\r\n        let errorDiv;\r\n        if (error !== undefined) errorDiv = <div className='text-danger'>{error}</div>;\r\n        return <Page header={title} right={right}>\r\n            <div className=\"my-4 mx-3\">\r\n                {this.renderControl()}\r\n                {errorDiv}\r\n                <small className=\"d-block mt-2 text-muted\">{info}</small>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class TextValueEdit extends StringValueEdit {\r\n    /*\r\n    private textArea:HTMLTextAreaElement;\r\n    private refTextArea = (textArea:HTMLTextAreaElement) => {\r\n        if (!textArea) return;\r\n        textArea.value = this.props.value || '';\r\n        this.textArea = textArea;\r\n    }\r\n    */\r\n    private onTextAreaChange = (evt:React.FormEvent<HTMLTextAreaElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        })\r\n    }\r\n    protected renderControl() {\r\n        return <textarea className=\"form-control w-100\" rows={8}\r\n            // ref={this.refTextArea}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onTextAreaChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, Page } from 'tonva';\r\nimport { SearchBox, List } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport interface IdPickPageProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n    idFromItem: (item:any) => number;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\n\r\n@observer\r\nexport class IdPickPage extends React.Component<IdPickPageProps> {\r\n    @observable private items:any[];\r\n\r\n    async componentDidMount() {\r\n        let {candidateItems, params} = this.props;\r\n        this.items = Array.isArray(candidateItems)? \r\n            candidateItems \r\n            : await candidateItems(params, '');\r\n    }\r\n    private itemClick = (item:any):Promise<void> => {\r\n        let {resolve, idFromItem} = this.props;\r\n        resolve(idFromItem(item));\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private onSearch = async (key: string):Promise<void> => {\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.items = ret;\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid, FA} from 'tonva';\r\nimport {nav, Page, PageItems} from 'tonva';\r\nimport {IdDates, UnitSpan} from '../tools';\r\nimport {UnitApp, DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport { devApi } from 'api';\r\n\r\n@observer\r\nexport class Info extends React.Component<{app:UnitApp, appActed?:(appId:number, inUnit:number)=>void}> {\r\n    @observable private uqAccesses: any[];\r\n    async componentWillMount() {\r\n        this.uqAccesses = await devApi.loadAppUqs(this.props.app.id);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:any, index:number):JSX.Element => {\r\n        let {name, owner, unit, discription} = uqAccess;\r\n        return <LMR className=\"py-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            {owner} / {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private act = async () => {\r\n        let {app, appActed} = this.props;\r\n        let {id, unit, inUnit} = app;\r\n        let newInUnit:number = 1;\r\n        if (inUnit === 0) {\r\n            let ret = await store.restoreUnitApp(id);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        else if (inUnit === 1) {\r\n            await store.stopUnitApp(id);\r\n            newInUnit = 0;\r\n        }\r\n        else {\r\n            let newApp:UnitApp = _.clone(app);\r\n            newApp.id = id;\r\n            newApp.inUnit = 1;\r\n            let ret = await store.addUnitApp(newApp);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        if (appActed !== undefined) {\r\n            appActed(id, newInUnit);\r\n        }\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, icon, inUnit, date_init, date_update} = this.props.app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let faName:string, text:string, color:string;\r\n        if (inUnit === 1) {\r\n            faName = 'ban';\r\n            text = '停用APP';\r\n            color = 'btn-danger';\r\n        }\r\n        else if (inUnit === 0) {\r\n            faName = 'refresh';\r\n            text = '恢复APP';\r\n            color = 'btn-success';\r\n        }\r\n        else {\r\n            faName = 'plus';\r\n            text = '启用APP';\r\n            color = 'btn-primary';\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '关联UQ', \r\n                component: <List className=\"w-100\" items={this.uqAccesses} item={{render: this.renderUqRow}} />\r\n            },\r\n            '',\r\n            '',\r\n            {\r\n                type: 'component', \r\n                bk: '', \r\n                component: <button className={classNames('btn', 'w-100', color)} onClick={this.act}>\r\n                    <FA name={faName} size=\"lg\" /> {text}\r\n                </button>\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IObservableArray} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid} from 'tonva';\r\nimport {nav, Page, PageItems, Image} from 'tonva';\r\nimport {mainApi} from '../api';\r\nimport {store} from '../store';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\nclass PageApps extends PageItems<UnitApp> {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super();\r\n        this.unitId = unitId;\r\n    }\r\n    protected async load():Promise<UnitApp[]> {\r\n        return await mainApi.searchApp(this.unitId, this.param, this.pageStart, this.pageSize);\r\n    }\r\n    protected setPageStart(item:UnitApp) {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}\r\n\r\n@observer\r\nexport class NewApp extends React.Component {\r\n    private apps: PageApps;\r\n    constructor(props) {\r\n        super(props);\r\n        this.apps = new PageApps(store.unit.id);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.apps.first(key);\r\n    }\r\n    private appClick = (app:UnitApp) => {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} appActed={this.appActed}/>\r\n        </Page>);\r\n    }\r\n    private appActed = (appId:number, inUnit:number) => {\r\n        let apps = this.apps.items as IObservableArray<UnitApp>; //.replace .find(v => v.id === appId);\r\n        let app = apps.find(v => v.id === appId);\r\n        app.inUnit = inUnit;\r\n        apps.replace([app]);\r\n    }\r\n    private renderApp(app:UnitApp):JSX.Element {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let right;\r\n        if (inUnit === 1)\r\n            right = <small>已启用</small>;\r\n        else if (inUnit === 0)\r\n            right = <small>已停用</small>;\r\n        return <LMR className=\"px-3 py-2\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    render() {\r\n        let items = this.apps.items;\r\n        let center = <SearchBox onSearch={this.onSearch} \r\n            className=\"w-100 mx-1\" \r\n            placeholder=\"搜索App\" \r\n            maxLength={100} />;\r\n        return <Page header={center}>\r\n            <List\r\n                items={items}\r\n                item={{onClick:this.appClick, render:this.renderApp}}\r\n                before=\"搜索App名字\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, FA, LMR, Badge} from 'tonva';\r\nimport {nav, Page, Image} from 'tonva';\r\nimport {store} from '../store';\r\nimport {NewApp} from './new';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\n@observer\r\nexport default class AppsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n    }\r\n    private itemRender(app:UnitApp, index:number) {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let ban;\r\n        if (inUnit === 0)\r\n            ban = <FA className=\"text-danger\" name='ban' />;\r\n        return <LMR className=\"px-3 py-1\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={ban}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private appClick(app:UnitApp) {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} />\r\n        </Page>);\r\n    }\r\n    private newItem() {\r\n        nav.push(<NewApp {...this.props} />);\r\n    }\r\n    render() {\r\n        let right = <button \r\n            className='btn btn-secondary btn-sm' \r\n            onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"启停App\" right={right}>\r\n            <List items={store.apps} item={{render: this.itemRender, onClick: this.appClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {TonvaForm, SubmitResult, FormRow} from 'tonva-form';\r\nimport {nav, Page, ItemSchema, StringSchema, UiSchema, Form, Context} from 'tonva';\r\nimport {store} from '../store';\r\n\r\nexport class NewRole extends React.Component {\r\n    /*\r\n    private form:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n    ];*/\r\n    private schema: ItemSchema[] = [\r\n        {name: 'name', type: 'string', maxLength: 5, required: true} as StringSchema,\r\n        {name: 'discription', type: 'string', maxLength: 250},\r\n        {name: 'submit', type: 'button'},\r\n    ];\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'},\r\n            discription: {widget: 'textarea', label: '描述'},\r\n            submit: {widget:'button', label: '提交'}\r\n        }\r\n    }\r\n    private onSubmit = async (buttonName:string, context: Context):Promise<SubmitResult> => {\r\n        //let {name, discription} = values;\r\n        let {name, discription} = this.context.formData;\r\n        let id = await store.unitAddRole(name, discription);\r\n        if (id <= 0) {\r\n            this.context.setError('name', '角色名 ' + name + ' 已经存在');\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    render() {\r\n        return <Page header=\"新建角色\">\r\n            <Form className=\"m-3\" \r\n                schema={this.schema} uiSchema={this.uiSchema} \r\n                formData={{}}\r\n                onButtonClick={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n    /*\r\n    <TonvaForm className=\"m-3\" ref={tf => this.form = tf} \r\n    formRows={this.formRows} \r\n    onSubmit={this.onSubmit} />\r\n    */\r\n}\r\n","import * as React from 'react';\r\nimport {List, LMR} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\n\r\ninterface Props {\r\n    role: Role;\r\n}\r\ninterface State {\r\n    apps: UnitApp[]\r\n}\r\nexport class RoleApps extends React.Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {apps:undefined};\r\n    }\r\n    async componentDidMount() {\r\n        let ret = await mainApi.unitRoleApps(store.unit.id, this.props.role.id);\r\n        this.setState({\r\n            apps: ret,\r\n        });\r\n    }\r\n    private renderRoleApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    render() {\r\n        let {role} = this.props;\r\n        return <Page header={role.name + ' - 可用APP'}>\r\n            <List\r\n                items={this.state.apps}\r\n                item={{render: this.renderRoleApp}}\r\n                none=\"没有APP\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Media, Muted, PropGrid, Prop} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {StringValueEdit} from '../tools';\r\nimport {RoleApps} from './roleApps';\r\n\r\n@observer\r\nexport class MemberPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    async onAssigned(value:any, orgValue:any):Promise<void> {\r\n        await store.unitAssignMember(value);\r\n    }\r\n    private renderMemberRole = (role:Role) => {\r\n        let {name, discription} = role;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={name}\r\n                right={<Muted>{discription}</Muted>} />\r\n    }\r\n    private roleClick(role:Role) {\r\n        nav.push(<RoleApps role={role} />);\r\n    }\r\n    private setRole = () => {\r\n        nav.push(<SetRole />);\r\n    }\r\n    render() {\r\n        let roleUser = store.roleMember;\r\n        let {nick, name, assigned, icon} = roleUser;\r\n        let disp = <div>\r\n            <div><Muted>唯一名: </Muted> &nbsp; {name}</div>\r\n            <div><Muted>昵称: </Muted> &nbsp; {nick||<Muted>[无]</Muted>}</div>\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component',\r\n                component: <Media icon={icon||appIcon} main={roleUser.assigned||nick||name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                label: '备注名',\r\n                type: 'string',\r\n                name: 'assigned',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改备注名\"\r\n                    value={roleUser.assigned}\r\n                    onChanged={this.onAssigned} \r\n                    info=\"加一个备注，便于甄别用户\" />),\r\n            },\r\n            '',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.setRole}>修改角色</button>;\r\n        return <Page header=\"用户详情\" right={right}>\r\n            <PropGrid rows={rows} values={roleUser} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 所属角色</small></div>\r\n            <List\r\n                items={store.memberRoles} \r\n                item={{render: this.renderMemberRole, onClick: this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass SetRole extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    private renderRole(role:Role, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={role.name}\r\n                right={<small className=\"text-muted\">{role.discription}</small>} />\r\n    }\r\n    private roleSelect(role:Role, isSelected: boolean, anySelected: boolean) {\r\n    }\r\n    private async submit() {\r\n        await store.setMemberRoles(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let roles = store.roles;\r\n        let memberRoles = store.memberRoles;\r\n        return <Page header=\"修改角色\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={roles}\r\n                selectedItems={memberRoles}\r\n                compare={(role:Role, selectRole:Role)=>role.id === selectRole.id}\r\n                item={{render: this.renderRole, onSelect: this.roleSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, Badge, FA, Muted, SearchBox} from 'tonva';\r\nimport {nav, Page, Image} from 'tonva';\r\nimport {Role, RoleMember} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\nimport {MemberPage} from './memberPage';\r\n\r\n@observer\r\nexport class MembersPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadMembers();\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    private onSearch() {\r\n        let role = store.role;\r\n        let roleId = role === undefined? 0:role.id;\r\n        nav.push(<MemberSearch roleId={roleId} />);\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-sm\" onClick={this.onSearch}><FA name=\"search\" /></button>;\r\n        return <Page header=\"用户\" right={right}>\r\n            <List items={store.roleMembers} item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\nconst MemberRow = (member:RoleMember) => {\r\n    let {nick, name, assigned, icon} = member;\r\n    let content;\r\n    if (assigned)\r\n        content = <><div><b>{assigned}</b> <Muted>{nick}</Muted></div><Muted>{name}</Muted></>;\r\n    else if (nick)\r\n        content = <><div><b>{nick}</b></div><Muted>{name}</Muted></>;\r\n    else\r\n        content = <div><b>{name}</b></div>;\r\n    return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n        left={<Badge size=\"sm\"><Image src={icon} /></Badge>}>\r\n        <div className=\"px-3\">{content}</div>\r\n    </LMR>;\r\n};\r\n\r\ninterface SearchProps {\r\n    roleId: number;\r\n}\r\ninterface SearchState {\r\n    members: RoleMember[];\r\n}\r\nexport class MemberSearch extends React.Component<SearchProps, SearchState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.state = {\r\n            members: null,\r\n        }\r\n    }\r\n    private async onSearch(key:string) {\r\n        let ret = await mainApi.unitMembers(store.unit.id, this.props.roleId, key, 0, 100);\r\n        this.setState({members: ret});\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            maxLength={100}\r\n            placeholder=\"搜索用户\" />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.state.members}\r\n                item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, Media, LMR, FA, PropGrid, Prop} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {StringValueEdit} from '../tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {MembersPage} from './membersPage';\r\n\r\n@observer\r\nexport class RolePage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private editRole() {\r\n        nav.push(<EditRole />);\r\n    }\r\n    private renderRoleApp = (app:UnitApp, index:number) => {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private roleAppClick = (app:UnitApp) => {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private addRoleApp() {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private members() {\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let {name, discription, count} = store.role;\r\n        let onMembersClick, membersLeft, membersRight;\r\n        if (count===undefined || count===null || count===0) {\r\n            membersLeft = <small className=\"text-muted\">无用户</small>;\r\n        }\r\n        else {\r\n            membersLeft = `共有 ${count} 用户`;\r\n            membersRight = <div><FA name=\"chevron-right\" /></div>;\r\n            onMembersClick = this.members;\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={undefined} main={name} discription={discription} />,\r\n                onClick: this.editRole,\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\" left={membersLeft} right={membersRight} />,\r\n                onClick: onMembersClick,\r\n            },\r\n            '=',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={()=>this.addRoleApp()}><FA name=\"plus\" /> APP</button>;\r\n        return <Page header=\"角色\" right={right}>\r\n            <PropGrid rows={rows} values={{}} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 可用APP列表</small></div>\r\n            <List\r\n                items={store.roleApps} \r\n                item={{render: this.renderRoleApp, onClick:this.roleAppClick}}\r\n                none={<small className=\"text-muted px-3 py-1\">没有APP, 点击右上角按钮选择APP</small>} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass EditRole extends React.Component {\r\n    async onNameChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('name', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('discription', value);\r\n    }\r\n    render() {\r\n        let role = store.role;\r\n        let {id} = role;\r\n        let isSysRole = id === 1 || id === 2;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                label: '名称', \r\n                type: 'string',\r\n                name: 'name', \r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改名称\"\r\n                    value={role.name}\r\n                    onChanged={this.onNameChanged} \r\n                    info=\"好的名字便于理解\" />)\r\n            },\r\n            {\r\n                label: '描述',\r\n                type: 'string',\r\n                name: 'discription',\r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改描述\"\r\n                    value={role.discription}\r\n                    onChanged={this.onDiscriptionChanged} \r\n                    info=\"对角色做一个说明\" />)\r\n            },\r\n        ];\r\n        return <Page header=\"修改角色信息\">\r\n            <PropGrid rows={rows} values={role} alignValue=\"right\" />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass RoleApps extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private renderApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-1 px-2 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private appSelect(app:UnitApp, isSelected: boolean, anySelected: boolean) {\r\n\r\n    }\r\n    private async submit() {\r\n        await store.setRoleApps(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let apps = store.apps;\r\n        let roleApps = store.roleApps;\r\n        return <Page header=\"选择APP\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={apps}\r\n                selectedItems={roleApps}\r\n                item={{render: this.renderApp, onSelect: this.appSelect}} />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Muted} from 'tonva';\r\nimport {nav, Page} from 'tonva';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {NewRole} from './newRole';\r\nimport {RolePage} from './rolePage';\r\nimport {MembersPage} from './membersPage';\r\n\r\nconst midClassName = classNames('d-flex', 'h-100', 'align-items-center', 'px-5', 'small', 'text-muted');\r\n\r\n@observer\r\nexport class Members extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n    }\r\n    private renderRole = (role:Role, index:number) => {\r\n        let {name, discription, count} = role;\r\n        return <LMR\r\n            className=\"px-3 py-2\" \r\n            left={name}\r\n            right={String(count || '')}>\r\n            <div className={midClassName}>\r\n                {discription}\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private roleClick = (role:Role) => {\r\n        store.setRole(role);\r\n        nav.push(<RolePage />)\r\n    }\r\n    private newRole = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        evt.preventDefault();\r\n        nav.push(<NewRole />);\r\n    }\r\n    private allUsersClick = () => {\r\n        store.setRole(undefined);\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let right = <a className=\"small\" href='#' onClick={this.newRole}>新增</a>;\r\n        let header = <LMR className=\"px-3 small bg-light\" left=\"角色\" right={right} />;\r\n        return <Page header=\"用户角色\">\r\n            <LMR\r\n                className=\"my-3 px-3 py-2 bg-white\" \r\n                left={'用户'}\r\n                right={String(store.memberCount)}\r\n                onClick={this.allUsersClick}>\r\n                <div className={midClassName}>\r\n                    设置用户角色\r\n                </div>\r\n            </LMR>\r\n            <List\r\n                header={header}\r\n                items={store.roles}\r\n                none=\"[无]\"\r\n                item={{render:this.renderRole, onClick:this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { AppController } from '.';\r\nimport { VPage, nav, Page, ItemSchema, UiSchema, StringSchema, BoolSchema, \r\n    UiTextItem, UiTextAreaItem, UiCheckItem, Form, \r\n    ButtonSchema, Context, ImageSchema, UiImageItem, IdSchema, UiIdItem } from 'tonva';\r\nimport { createIdPick, IdPickProps } from 'createIdPick';\r\nimport { DevModel } from 'model';\r\nimport { store } from 'store';\r\nimport { IdPickPage, ServerSpan } from '../../tools';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst schema:ItemSchema[] = [\r\n    {name: 'name', type: 'string', maxLength: 100, required: true} as StringSchema,\r\n    {name: 'caption', type: 'string', maxLength: 100} as StringSchema,\r\n    {name: 'discription', type: 'string', maxLength: 250} as StringSchema,\r\n    {name: 'url', type: 'string', maxLength: 200} as StringSchema,\r\n    {name: 'public', type: 'boolean'} as BoolSchema,\r\n    {name: 'server', type: 'id'} as IdSchema,\r\n    {name: 'icon', type: 'image'} as ImageSchema,\r\n    {name: 'submit', type: 'submit'} as ButtonSchema,\r\n];\r\n\r\nexport abstract class EditBasePage extends VPage<AppController> {\r\n    private candidateItems = async (params:any, key:string):Promise<any[]> => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    }\r\n\r\n    private moreCandidates = async ():Promise<void> => {\r\n        await store.dev.searchServer.more();\r\n    }\r\n\r\n    private renderRow = (item:DevModel.Server, index:number): JSX.Element => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    }\r\n\r\n    private pickServerId = (context:Context, name:string, value:number): Promise<number> => {\r\n        return new Promise<number>((resolve, reject) => {\r\n            nav.push(<IdPickPage \r\n                caption=\"选择服务器\" \r\n                searchPlaceHolder=\"搜索服务器\"\r\n                candidateItems={this.candidateItems}\r\n                moreCandidates={this.moreCandidates}\r\n                row={this.renderRow}\r\n                idFromItem={(item:DevModel.Server) => item.id}\r\n                resolve={resolve} params={undefined} />, \r\n                ()=> {\r\n                    reject();\r\n                });\r\n        });\r\n    }\r\n\r\n    private renderServerInput = (itemId:number): JSX.Element => {\r\n        return <ServerSpan id={itemId} />;\r\n    };\r\n\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'} as UiTextItem,\r\n            caption: {widget: 'text', label: '标题'} as UiTextItem,\r\n            discription: {widget: 'textarea', label: '描述', rows: 5} as UiTextAreaItem,\r\n            url: {widget: 'text', label: 'URL', placeholder: 'http(s)://APP地址'} as UiTextItem,\r\n            'public': {widget: 'checkbox', label: '公开', } as UiCheckItem,\r\n            server: {widget: 'id', label: '服务器', pickId: this.pickServerId, Templet: this.renderServerInput} as UiIdItem,\r\n            icon: {widget: 'image', label: '标志图'} as UiImageItem,\r\n            submit: {widget: 'button', label: '提交', className: 'btn btn-primary'}\r\n        }\r\n    }\r\n    \r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onButtonClick = async (name:string, context: Context) => {\r\n        let {data} = context;\r\n        let app:DevModel.App = _.clone(this.controller.app) || {} as any;\r\n        _.merge(app, data);\r\n        await this.controller.saveApp(app);\r\n        nav.pop();\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form = observer(() => {\r\n        return <Form fieldLabelSize={2}\r\n            className=\"m-3\" \r\n            schema={schema} \r\n            uiSchema={this.uiSchema}\r\n            formData={this.initValues}\r\n            onButtonClick={this.onButtonClick} />\r\n    });\r\n    abstract get initValues():any;\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    get initValues():any {return this.controller.app}\r\n    protected page = () => {\r\n        let {app} = this.controller;\r\n        let {name} = app;\r\n        return <Page header={'修改APP - ' + name} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    get initValues():any {return {}}\r\n    protected page = () => {\r\n        return <Page header={'新建APP'} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, Image } from 'tonva';\r\nimport { AppController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class AppsPage extends VPage<AppController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {appList, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"App\" right={right}>\r\n            <List items={appList} item={{render: this.appRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private appRow = (item:DevModel.App):JSX.Element => {\r\n        let {name, caption, discription, icon, url, urlDebug} = item;\r\n        let left = <Badge size=\"sm\"><Image src={icon} /></Badge>;\r\n        let right = <div className=\"text-muted small text-right\">\r\n            {url || '-'}<br/>\r\n            {urlDebug}\r\n        </div>;\r\n        let spanCaption = caption?\r\n            <>{name}: <b>{caption}</b></> :\r\n            <b>{name}</b>;\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={left} right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{spanCaption}</div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { List, LMR, SearchBox } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { UnitSpan } from 'tools';\r\nimport { store } from 'store';\r\nimport { nav, Page, VPage } from 'tonva';\r\nimport { AppController } from '.';\r\n\r\nexport class SearchUqPage extends VPage<AppController> {\r\n    @observable private uqs: DevModel.UQ[];\r\n\r\n    async open() {\r\n        this.uqs = await this.controller.getMyUqs();\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.uqs = await this.controller.searchUq(key, pageStart, pageSize);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch}\r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={this.uqs} item={{render: this.row, onClick: this.controller.onUq}} />\r\n        </Page>;\r\n    });\r\n\r\n    private row = (uq: DevModel.UQ) => {\r\n        let {owner, name, discription} = uq;\r\n        return <LMR className=\"py-2 px-3\" right={discription}>\r\n            <div>{owner} / {name}</div>\r\n        </LMR>;\r\n    };\r\n}\r\n\r\n@observer\r\nexport class AppUqs extends React.Component {\r\n    @observable anySelected: boolean = false;\r\n    private list:List;\r\n    private onSelect = (item: DevModel.UQ, isSelected:boolean, anySelected:boolean) => {\r\n        this.anySelected = anySelected;\r\n    }\r\n    private row = (item: DevModel.UQ) => {\r\n        let {name, unit, discription} = item;\r\n        return <LMR className=\"p-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            <UnitSpan id={unit} />/{name}\r\n        </LMR>;\r\n    }\r\n    private removeBind = () => {\r\n        if (this.list === null) return;\r\n        let {selectedItems} = this.list;\r\n        if (selectedItems === undefined) return;\r\n        if (selectedItems.length === 0) return;\r\n        store.dev.apps.appBindUq(\r\n            selectedItems.map(v => {\r\n                return {id:v.id, access:['*']}\r\n            }), \r\n            false);\r\n    }\r\n    render() {\r\n        let btnProps = this.anySelected?\r\n            {color:'danger', onClick:this.removeBind, icon:'trash', text:'取消'}:\r\n            {color:'primary', onClick:()=>nav.push(<Uqs/>), icon:'plus', text:'新增'};\r\n        let btn = (p)=><button \r\n            className={classNames('btn', 'btn-outline-'+p.color, 'btn-sm')} \r\n            onClick={p.onClick}>\r\n            <i className={\"fa fa-\" + p.icon} /> {p.text}关联\r\n        </button>;\r\n        let listHeader = <div className=\"va-row py-1 justify-content-center\">{btn(btnProps)}</div>;\r\n        return <Page header=\"关联UQ\">\r\n            <List ref={list=>this.list=list} header={listHeader}\r\n                items={store.dev.apps.uqs}\r\n                item={{render: this.row, onSelect: this.onSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass Uqs extends React.Component {\r\n    onSearch = async (key:string) => {\r\n        await store.dev.apps.searchUq(key);\r\n    }\r\n    onBind(uq: DevModel.UQ, bind: boolean) {\r\n        store.dev.apps.appBindUq([{id:uq.id, access:['*']}], bind);\r\n    }\r\n    row = (uq: DevModel.UQ) => {\r\n        let isConnected = store.dev.apps.uqs.find(a => a.id === uq.id) !== undefined;\r\n        let cn = ['btn', 'btn-sm'];\r\n        let btnContent:any, onClick:any;\r\n        if (isConnected) {\r\n            cn.push('btn-success');\r\n            onClick = ()=>this.onBind(uq, false);\r\n            btnContent = \"已关联\";\r\n        }\r\n        else {\r\n            cn.push('btn-primary');\r\n            onClick = ()=>this.onBind(uq, true);\r\n            btnContent = <span><i className=\"fa fa-check\"/> 关联</span>;\r\n        }\r\n        return <div className=\"d-flex justify-content-start py-1 px-3\">\r\n            <div className=\"align-self-center\">{uq.name + ' - ' + uq.discription}</div>\r\n            <footer className=\"ml-auto\"><button className={classNames(cn)} onClick={onClick}>{btnContent}</button></footer>\r\n        </div>\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={store.dev.apps.searchedUqs} item={{render: this.row}} loading={null} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { AppController, UqAccess } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan, UnitName } from 'tools';\r\nimport { Prop, Media, PropGrid, ListProp, DropdownActions, List, LMR } from 'tonva';\r\nimport { EditPage } from './editPage';\r\nimport { AppUqs, SearchUqPage } from './appUqs';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class AppPage extends VPage<AppController> {\r\n    async open() {\r\n        //this.uqs.list = this.controller.uqs;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.controller.deleteApp();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let {app} = this.controller;\r\n        let {unit, name, caption, discription, icon, server, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            // {icon: 'cogs', caption:'设置关联UQ', action: ()=>nav.push(<AppUqs />)},\r\n            {caption:'修改App', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n\r\n        let right = <DropdownActions actions={menuItems} />;\r\n        let spanCaption = caption?\r\n            <>{name}: <b>{caption}</b></> :\r\n            <b>{name}</b>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={spanCaption} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n            /*\r\n            {\r\n                type: 'component', \r\n                label: 'Service',\r\n                vAlign: 'stretch',\r\n                component: <ServiceRow />,\r\n            },*/\r\n            {\r\n                label: 'URL',\r\n                name: 'url',\r\n                type: 'string',                \r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            '',\r\n            //this.uqs,\r\n        ];\r\n        let btnAddUq = <button className=\"btn btn-outline-primary btn-sm\" onClick={()=>this.openVPage(SearchUqPage)}>\r\n            增加关联\r\n        </button>;\r\n        return <Page header={'App - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={app} />\r\n            <LMR className=\"mx-3 mt-3 mb-1\" right={btnAddUq}>\r\n                关联UQ\r\n            </LMR>\r\n            <List items={this.controller.uqAccesses} item={{render:this.renderUqRow, onClick:this.uqClick}} />\r\n        </Page>\r\n    })\r\n\r\n    private uqClick = (uqAccess:UqAccess) => {\r\n        this.controller.onUq(uqAccess.uq);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:UqAccess, index:number):JSX.Element => {\r\n        let {uq, bind_access: access} = uqAccess;\r\n        let {name, discription, unit} = uq;\r\n        let disp: any;\r\n        let elAccess: any;\r\n        if (access && access.length > 0) {\r\n            elAccess = <> + {access.join(', ')} </>;\r\n        }\r\n        if (discription) disp = <div className=\"small text-muted\"> &nbsp; {discription}</div>;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={disp}>\r\n            <UnitName id={unit} /> / {name} {elAccess}\r\n        </LMR>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { AppController, UqAccess } from '.';\r\nimport { LMR } from 'tonva';\r\n\r\nexport class UqBindPage extends VPage<AppController> {\r\n    private uqAccess: UqAccess;\r\n    private accesses: string[];\r\n    private accessChecked:{[name:string]:boolean};\r\n    async open(uqAccess: UqAccess) {\r\n        this.uqAccess = uqAccess;\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {access} = uq;\r\n        if (access) {\r\n            this.accessChecked = {};\r\n            this.accesses = access.split(',');\r\n            for (let acc of this.accesses) {\r\n                this.accessChecked[acc] = (bind_access && bind_access.find(bc => bc === acc)) !== undefined;\r\n            }\r\n        }\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onCheckChanged = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let {target} = evt;\r\n        this.accessChecked[target.name] = target.checked;\r\n    }\r\n\r\n    private saveUqBind = async () => {\r\n        let acc:string[] = [];\r\n        if (this.accesses) {\r\n            for (let i in this.accessChecked) {\r\n                if (this.accessChecked[i] === true) acc.push(i);\r\n            }\r\n        }\r\n        await this.controller.saveUqBind(this.uqAccess.uq, acc);\r\n        nav.pop();\r\n    }\r\n\r\n    private removeUqBind = async () => {\r\n        await this.controller.removeUqBind(this.uqAccess.uq);\r\n        nav.pop();\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {owner, name, discription, access} = uq;\r\n        let btnDelete:any;\r\n        if (bind_access !== null && bind_access !== undefined) {\r\n            btnDelete = <button className=\"btn btn-outline-danger btn-sm\" onClick={this.removeUqBind}>取消关联</button>;\r\n        }\r\n        let checkAccessList:any;\r\n        if (this.accesses) {\r\n            checkAccessList = <div className=\"mt-3\">\r\n            {\r\n                this.accesses.map(v => {\r\n                    let checked = this.accessChecked[v];\r\n                    return <label key={v} className=\"d-inline-block mr-4\">\r\n                        <input onChange={this.onCheckChanged}\r\n                            style={{width:'1.1rem', height:'1.1rem'}} \r\n                            name={v} type=\"checkbox\" defaultChecked={checked} />&nbsp;{v}\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>;\r\n        }\r\n        return <Page header=\"关联UQ\">\r\n            <div className=\"m-3 py-3 px-3 bg-white border\">\r\n                <div>{owner} / {name}</div>\r\n                <div className=\"text-muted\">{discription}</div>\r\n                {checkAccessList}\r\n                <LMR className=\"pt-3\" right={btnDelete}>\r\n                    <button className=\"btn btn-primary btn-sm\" onClick={this.saveUqBind}>保存关联</button>\r\n                </LMR>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { Controller } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { devApi } from 'api';\r\nimport { AppsPage } from './appsPage';\r\nimport { AppPage } from './appPage';\r\nimport { UqBindPage } from './uqBindPage';\r\n\r\nexport interface UqAccess {\r\n    uq: DevModel.UQ;\r\n    bind_access: string[];\r\n}\r\n\r\nexport class AppController extends Controller {\r\n    private unitId: number;\r\n    app: DevModel.App;\r\n    @observable appList: DevModel.App[];\r\n    @observable uqAccesses: UqAccess[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.appList = await devApi.apps(this.unitId);\r\n        this.openVPage(AppsPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.App) => {\r\n        this.app = item;\r\n        let ret = await devApi.loadAppUqs(item.id);\r\n        this.uqAccesses = ret.map(v => {\r\n            let {owner, access, id, name, discription, unit, date_init, date_update, bind_access} = v;\r\n            return {\r\n                uq: {\r\n                    id: id,\r\n                    name: name,\r\n                    discription: discription,\r\n                    unit: unit,\r\n                    access: access,\r\n                    owner: owner,\r\n                    date_init: date_init,\r\n                    date_update: date_update, \r\n                    service_count: undefined,\r\n                },\r\n                uqOwner: owner,\r\n                bind_access: bind_access && bind_access.split(',')\r\n            }\r\n        });\r\n        this.openVPage(AppPage);\r\n    }\r\n\r\n    saveApp = async (values: DevModel.App) => {\r\n        let app: DevModel.App;\r\n        let now = new Date();\r\n        if (this.app === undefined) {\r\n            app = _.clone(values);\r\n            app.date_init = now;\r\n        }\r\n        else {\r\n            app = _.clone(this.app);\r\n            _.merge(app, values);\r\n        }\r\n        app.unit = this.unitId;\r\n        app.date_update = now;\r\n        let ret = await devApi.saveApp(app);\r\n        app.id = ret;\r\n        let org = this.appList.find(v => v.id === ret);\r\n        if (org !== undefined) {\r\n            _.merge(org, app);\r\n        }\r\n        else {\r\n            this.appList.push(app);\r\n        }\r\n    }\r\n\r\n    deleteApp = async () => {\r\n        await devApi.delApp(this.unitId, this.app.id);\r\n        let index = this.appList.findIndex(v => v.id === this.app.id);\r\n        if (index >= 0) this.appList.splice(index, 1);\r\n    }\r\n\r\n    searchUq = async (key:string, pageStart:number, pageSize:number) => {\r\n        return await devApi.searchUq(this.unitId, key, pageStart, pageSize);\r\n    }\r\n\r\n    getMyUqs = async () => {\r\n        return await devApi.getMyUqs(this.unitId);\r\n    }\r\n\r\n    onUq = (uq: DevModel.UQ) => {\r\n        let uqAccess:UqAccess = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n        if (uqAccess === undefined) {\r\n            uqAccess = {\r\n                uq: uq,\r\n                bind_access: undefined,\r\n            }\r\n        }\r\n        else {\r\n            let access = uqAccess.bind_access;\r\n            if (access === null || access === undefined) uqAccess.bind_access = [];\r\n        }\r\n        this.openVPage(UqBindPage, uqAccess);\r\n    }\r\n\r\n    // accesses = undefined, 表示删除\r\n    private buildBindUqs(uq: DevModel.UQ, accesses?:string[]) {\r\n        let uqs:{id:number, access:string[]}[] = [];\r\n        let isNew = true;\r\n        for (let ua of this.uqAccesses) {\r\n            let {uq:uaUq, bind_access} = ua;\r\n            if (uaUq.id === uq.id) {\r\n                if (accesses === undefined) continue;\r\n                bind_access = accesses;\r\n                isNew = false;\r\n            }\r\n            uqs.push({\r\n                id: uaUq.id,\r\n                access: bind_access || [],\r\n            });\r\n        }\r\n        if (accesses !== undefined && isNew === true) {\r\n            uqs.push({id: uq.id, access: accesses});\r\n        }\r\n        return uqs;\r\n    }\r\n\r\n    saveUqBind = async (uq: DevModel.UQ, accesses:string[]) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq, accesses);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        if (uqs.length > this.uqAccesses.length) {\r\n            this.uqAccesses.unshift({\r\n                uq: uq,\r\n                bind_access: accesses,\r\n            });\r\n        }\r\n        else {\r\n            let ua = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n            ua.bind_access = accesses;\r\n        }\r\n    }\r\n\r\n    removeUqBind = async (uq: DevModel.UQ) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        let index = this.uqAccesses.findIndex(v => v.uq.id === uq.id);\r\n        if (index>=0) this.uqAccesses.splice(index, 1);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst groupStart = '///++++++';\r\nconst groupEnd = '------///';\r\n\r\nexport abstract class Section {\r\n    rowId: number;\r\n    render: () => JSX.Element;\r\n}\r\n\r\nclass StringSection extends Section {\r\n    text: string;\r\n    constructor(text:string) {\r\n        super(); \r\n        this.text = text;\r\n    }\r\n    render = (): JSX.Element => {\r\n        if (this.text.trim().length === 0) return null;\r\n        let parts = this.text.split('\\n');\r\n        return <>{parts.map((v, i) => v.length === 0?\r\n            <div key={i}>&nbsp;</div> :\r\n            <div key={i}>{v}</div>\r\n        )}</>;\r\n    }\r\n}\r\n\r\nclass GroupSection extends Section {\r\n    group: string[];\r\n    @observable collaps: boolean;\r\n    constructor(group:string[]) {\r\n        super();\r\n        this.group = group;\r\n        this.collaps = true;\r\n    }\r\n    render = observer(():JSX.Element => {\r\n        //let groupId = 'text-group-' + index;\r\n        let line = this.group[0];\r\n        let title: string;\r\n        let p0 = 0, p = line.indexOf('\\n');\r\n        if (p < 0) p = undefined;\r\n        else {\r\n            let l = line.indexOf('(');\r\n            if (l < p) p = l;\r\n        }\r\n        title = line.substring(p0, p);\r\n\r\n        let onClick = () => {\r\n            let c = this.collaps;\r\n            if (c === false) c = true;\r\n            else c = false;\r\n            this.collaps = c;\r\n            /*\r\n            this.setState(prevState => ({\r\n                collaps: {\r\n                    ...prevState.collaps,\r\n                    [index]: c,\r\n                },\r\n            }));*/\r\n        }\r\n        let titleIcon:any, content:any;\r\n        if (this.collaps===false) {\r\n            titleIcon = <FA name='arrow-circle-up' className='text-success' />;\r\n            content = <div>\r\n                {\r\n                    this.group.map((v, i) => {\r\n                        if (v.trim().length === 0) return null;\r\n                        return <pre style={{whiteSpace: 'pre-wrap'}} key={i}>{v}</pre>\r\n                    })\r\n                }\r\n            </div>;\r\n        }\r\n        else {\r\n            titleIcon = <FA name='arrow-circle-down' className='text-success' />;\r\n        }\r\n        return <>\r\n            <div className=\"cursor-pointer text-primary\" onClick={onClick}>{titleIcon} <u>{title}</u></div>\r\n            {content}\r\n        </>;\r\n    });\r\n}\r\n\r\nclass ErrorSection extends Section {\r\n    error: string[];\r\n    constructor(error:string[]) {super(); this.error = error}\r\n    render = ():JSX.Element => {\r\n        return <div className=\"text-danger\">\r\n            <FA name=\"exclamation-circle\" />&nbsp;\r\n            {this.error.join().split('\\n').map((v, index)=><React.Fragment key={index}>{v}<br/></React.Fragment>)}\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ResultSections {\r\n    private text: string;\r\n    private p: number;\r\n    private group: string[];\r\n    private stop: boolean;\r\n    @observable hasError: boolean = false;\r\n    @observable seconds: number;\r\n    //readonly sections: (string | string[])[] = [];\r\n    private sectionId: number = 1;\r\n    @observable readonly sections: Section[] = [];\r\n\r\n    add(text:string):void {\r\n        this.stop = false;\r\n        if (this.text === undefined) {\r\n            this.p = 0;\r\n            this.text = text;\r\n        }\r\n        else {\r\n            this.text = this.text + text;\r\n        }\r\n        if (this.text.length < 10) return;\r\n        while (this.stop === false) {\r\n            this.addToGroup();\r\n            this.addText();\r\n        }\r\n    }\r\n\r\n    private addSection(section:Section) {\r\n        section.rowId = this.sectionId;\r\n        this.sectionId++;\r\n        this.sections.push(section);\r\n        let len = this.sections.length;\r\n        if (len > 500) {\r\n            this.sections.splice(0, len - 500);\r\n        }\r\n    }\r\n\r\n    private mayStart(token:string):boolean {\r\n        let len = this.text.length - token.length;\r\n        if (this.p < len) return false;\r\n        for (let i=0; i<len; i++) {\r\n            if (this.text.charCodeAt(this.p + i) !== token.charCodeAt(i)) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private parse():Section {\r\n        let type: string = '';\r\n        let len = this.group.length;\r\n        for (let i=0; i<len; i++) {\r\n            let ln = this.group[i];\r\n            let pos = ln.indexOf('\\n');\r\n            if (pos < 0) {\r\n                type += ln;\r\n                continue;\r\n            }\r\n            type += ln.substr(0, pos);\r\n            for (let s=0; s<i+1; s++) this.group.shift();\r\n            this.group.unshift(ln.substr(pos+1));\r\n            switch (type) {\r\n                default:\r\n                case '': \r\n                    return new GroupSection(this.group);\r\n                case 'error': \r\n                    this.hasError = true;\r\n                    return new ErrorSection(this.group);\r\n            }            \r\n        }\r\n    }\r\n\r\n    private addToGroup():void {\r\n        if (this.group === undefined) return;\r\n        if (this.text === undefined) return;\r\n        let p = this.text.indexOf(groupEnd, this.p);\r\n        if (p < 0) {\r\n            if (this.mayStart(groupEnd) === true) return;\r\n            this.group.push(this.p === 0? this.text : this.text.substr(this.p));\r\n            this.p = 0;\r\n            this.text = undefined;\r\n            this.stop = true;\r\n            return;\r\n        }\r\n        this.group.push(this.text.substring(this.p, p));\r\n        this.addSection(this.parse());\r\n        this.group = undefined;\r\n        this.p = p + 9;\r\n    }\r\n\r\n    private addText():void {\r\n        if (this.text === undefined) return;\r\n        let p = this.text.indexOf(groupStart, this.p);\r\n        if (p < 0) {\r\n            if (this.mayStart(groupStart) === true) return;\r\n            this.addSection(new StringSection(this.p === 0? this.text : this.text.substr(this.p)));\r\n            this.p = 0;\r\n            this.text = undefined;\r\n            this.stop = true;\r\n            return;\r\n        }\r\n        this.addSection(new StringSection(this.text.substring(this.p, p)));\r\n        this.p = p + 9;\r\n        this.group = [];\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page, FA} from 'tonva';\r\nimport {List, EasyDate, LMR, Muted} from 'tonva';\r\nimport {DevModel} from '../../model';\r\nimport {store} from '../../store';\r\nimport { ResultSections, Section } from './resultSections';\r\nimport { observer } from 'mobx-react';\r\n\r\ninterface State {\r\n    files: any[];\r\n    compiled?: string;\r\n    text?: string;\r\n}\r\n\r\nexport interface UqActionProps {\r\n    uq: DevModel.UQ;\r\n    action?: 'upload' | 'test' | 'deploy';\r\n    services: DevModel.Service[];\r\n}\r\n\r\n//const fastUpload = '快速测试';\r\n//const thoroughlyUpload = '完全测试';\r\nexport class UqUpload extends React.Component<UqActionProps, State> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    constructor(props:UqActionProps) {\r\n        super(props);\r\n        this.state = {\r\n            files: undefined,\r\n        }\r\n    }\r\n\r\n    private onFilesChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let upFiles:any[] = [];\r\n        let {files} = evt.target;\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            upFiles.push(files[i]);\r\n        }\r\n        this.setState({\r\n            files: upFiles,\r\n        });\r\n    }\r\n    fileRender(file:any, index:number):JSX.Element {\r\n        let {name, size, lastModifiedDate} = file;\r\n        function sz():string {\r\n            let n:number, u:string;\r\n            if (size < 1024) {\r\n                n = size; u = 'b';\r\n            }\r\n            else if (size < 1024*1024) {\r\n                n = Math.trunc((size / 1024) * 100)/100; u = 'k';\r\n            }\r\n            else {\r\n                n = Math.trunc((size / 1024 / 1024) * 100)/100; u = 'm';\r\n            }\r\n            return n + ' ' + u;\r\n        }\r\n        return <LMR className=\"px-2 py-1\" right={<Muted>{sz()}</Muted>}>\r\n            <div>{name}</div>\r\n            <div><Muted>修改日期: <EasyDate date={lastModifiedDate} /></Muted></div>\r\n        </LMR>;\r\n    }\r\n    private fileClick = (file:any) => {\r\n        let fr = new FileReader();\r\n        fr.onload = function(f) {\r\n            //alert(this.result);\r\n            nav.push(<UqPage name={file.name} content={this.result} />)\r\n        }\r\n        fr.readAsText(file, \"utf8\");\r\n    }\r\n    private onSubmit = (evt:React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n    private async upload() {\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        let url = store.uqServer + 'uq-compile/' + this.props.uq.id + '/upload';\r\n        /*\r\n        let actionName:string;\r\n        if (thoroughly === true) {\r\n            actionName = thoroughlyUpload;\r\n            url += '-thoroughly';\r\n        }\r\n        else {\r\n            actionName = fastUpload;\r\n        }\r\n        */\r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            nav.push(<CompileResult {...this.props} \r\n                actionName=\"上传\" \r\n                action=\"upload\"\r\n                res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n    private onUpload = async () => {\r\n        nav.ceaseTop();\r\n        await this.upload();\r\n    }\r\n    render() {\r\n        let {files} = this.state;\r\n        let fileList:any;\r\n        if (files !== undefined) {\r\n            fileList = <List \r\n                className=\"my-3\" \r\n                items={files} \r\n                item={{render: this.fileRender, onClick: this.fileClick}}/>;\r\n        }\r\n        let button:any;\r\n        if (files !== undefined && files.length > 0) {\r\n            button = <div className=\"my-2 d-flex\">\r\n                <button className=\"btn btn-success\" type=\"submit\" onClick={this.onUpload}>提交</button>\r\n            </div>;\r\n        }\r\n        return <Page header={'测试 - ' + this.props.uq.name}>\r\n            <div className=\"py-2 px-3\">\r\n                <div>请选择UQ源代码文件</div>\r\n                <form className=\"my-1\" encType=\"multipart/form-data\" onSubmit={this.onSubmit}>\r\n                    <div className=\"my-1\">\r\n                        <input ref={(fileInput) => this.fileInput=fileInput}type=\"file\" id=\"photo\" \r\n                            className=\"w-100 form-control-file\" name=\"files\" multiple={true} \r\n                            onChange={this.onFilesChange} />\r\n                    </div>\r\n                    {fileList}\r\n                    {button}\r\n                </form>\r\n                <pre>{this.state.compiled}</pre>\r\n                <div>{this.state.text}</div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n\r\ninterface Options {\r\n    action: 'test' | 'deploy';\r\n    caption: string;\r\n    fast: string;\r\n    thoroughly: string;\r\n    description: any;\r\n}\r\nconst test:Options = {\r\n    action: 'test',\r\n    caption: '测试',\r\n    fast: '快速测试',\r\n    thoroughly: '完全测试',\r\n    description: <>\r\n        <li>用上传的UQ代码，生成测试数据库</li>\r\n        <li>优化测试快速比较代码，仅仅根据修改代码的部分修改数据库</li>\r\n        <li>彻底测试仅用于底层代码有突破性变化时</li>\r\n    </>\r\n}\r\n\r\nconst deploy:Options = {\r\n    action: 'deploy',\r\n    caption: '发布',\r\n    fast: '快速发布',\r\n    thoroughly: '完全发布',\r\n    description: <>\r\n        <li>将已经编译测试过的代码，发布到生产服务器</li>\r\n        <li>优化发布快速比较代码，仅仅对修改代码的部分发布</li>\r\n        <li>彻底发布仅用于底层代码有突破性变化时</li>\r\n    </>\r\n}\r\n\r\nexport class UqDeploy extends React.Component<UqActionProps> {\r\n    readonly options: Options;\r\n    constructor(props: UqActionProps) {\r\n        super(props);\r\n        switch (props.action) {\r\n            case 'test':\r\n                this.options = test;\r\n                break;\r\n            case 'deploy':\r\n                this.options = deploy;\r\n                break;\r\n        }\r\n    }\r\n\r\n    private onCompile = async () => {\r\n        nav.ceaseTop();\r\n        let thoroughly = false;\r\n        await this.compile(thoroughly);\r\n    }\r\n    private onCompileThoroughly = async () => {\r\n        nav.ceaseTop();\r\n        let thoroughly = true;\r\n        await this.compile(thoroughly);\r\n    }\r\n    private async compile(isThoroughly:boolean) {\r\n        let {action, thoroughly, fast} = this.options;\r\n        let url = store.uqServer + 'uq-compile/' + this.props.uq.id + '/' + action;\r\n        let actionName:string;\r\n        if (isThoroughly === true) {\r\n            actionName = thoroughly;\r\n            url += '-thoroughly';\r\n        }\r\n        else {\r\n            actionName = fast;\r\n        }\r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                signal: abortController.signal,\r\n            });\r\n            nav.push(<CompileResult {...this.props} \r\n                action={action}\r\n                actionName={actionName}\r\n                res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n    render() {\r\n        let {caption, fast, thoroughly, description} = this.options;\r\n        return <Page header={caption + ' - ' + this.props.uq.name}>\r\n            <div className=\"m-3 bg-white p-3\">\r\n                <ul className=\"my-3\">{description}</ul>\r\n                <div className=\"d-flex p-3\">\r\n                    <button className=\"btn btn-success\" type=\"submit\" onClick={this.onCompile}>{fast}</button>\r\n                    <div className=\"py-2 flex-grow-1\" />\r\n                    <button className=\"btn btn-outline-warning\"\r\n                        type=\"submit\" onClick={this.onCompileThoroughly}>{thoroughly}</button>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\ninterface UqPgeProps {\r\n    name: string;\r\n    content: string|ArrayBuffer;\r\n}\r\nclass UqPage extends React.Component<UqPgeProps> {\r\n    render() {\r\n        return <Page header={this.props.name}>\r\n            <pre className=\"px-3 py-2\">{this.props.content}</pre>\r\n        </Page>;\r\n    }\r\n}\r\n\r\ninterface CompileResultProps extends UqActionProps {\r\n    uq: DevModel.UQ;\r\n    action: 'upload' | 'test' | 'deploy';\r\n    actionName: string;\r\n    res: Response;\r\n    abortController: AbortController;\r\n}\r\n\r\n@observer\r\nexport class CompileResult extends React.Component<CompileResultProps> {\r\n    private resultSections: ResultSections;\r\n    private timeHandler:any;\r\n    constructor(props:CompileResultProps) {\r\n        super(props);\r\n        this.resultSections = new ResultSections();\r\n    }\r\n    componentWillMount() {\r\n        nav.regConfirmClose(async ():Promise<boolean>=>{\r\n            if (this.resultSections.seconds>=0) return true;\r\n            return new Promise<boolean>((resolve, reject) => {\r\n                try {\r\n                    if (confirm(`正在${this.props.actionName}中，真的要中止吗？`) === true) {\r\n                        try {\r\n                            this.props.abortController.abort();\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err);\r\n                        }\r\n                        resolve(true);\r\n                    }\r\n                    else {\r\n                        resolve(false);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            })\r\n        });\r\n    }\r\n    private autoScrollEnd:boolean = false;\r\n    private startAutoScrollToBottom() {\r\n        if (this.autoScrollEnd === true) return;\r\n        this.timeHandler = setInterval(() => {\r\n            var pane = document.getElementById('bottomDiv');\r\n            pane && pane.scrollIntoView();\r\n        }, 100);\r\n    }\r\n    private clearAutoScrollToBottom = () => {\r\n        if (this.timeHandler === undefined) return;\r\n        clearInterval(this.timeHandler);\r\n        this.timeHandler = undefined;\r\n}\r\n    private endAutoScrollToBottom() {\r\n        this.autoScrollEnd = true;\r\n        setTimeout(this.clearAutoScrollToBottom, 300);\r\n    }\r\n    private getParent(el:HTMLElement):HTMLElement {\r\n        if (!el) return;\r\n        if (el.tagName === 'MAIN') return el;\r\n        return this.getParent(el.parentElement);\r\n    }\r\n    private topIntoView() {\r\n        var pane = document.getElementById('topDiv');\r\n        pane && pane.scrollIntoView();\r\n    }\r\n    private bottomIntoView() {\r\n        var pane = document.getElementById('bottomDiv');\r\n        pane && pane.scrollIntoView();\r\n    }\r\n    private doubleClick = () => {\r\n        var pane = document.getElementById('scrollDiv');\r\n        let main = this.getParent(pane);\r\n        if (!main) return;\r\n        if (main.scrollTop >= main.scrollHeight / 2) {\r\n            this.topIntoView();\r\n        }\r\n        else {\r\n            this.bottomIntoView();\r\n        }\r\n    }\r\n    private lastScrollTop = 0;\r\n    private onScroll = (e:any) => {\r\n        let el = e.target as HTMLBaseElement;\r\n        \r\n        let {scrollTop, scrollHeight, offsetHeight} = el;\r\n        if (scrollTop < this.lastScrollTop) {\r\n            //this.clearAutoScrollToBottom();\r\n        }\r\n        else if (scrollTop + offsetHeight > scrollHeight - 30) {\r\n            if (this.timeHandler === undefined) {\r\n                this.startAutoScrollToBottom();\r\n            }\r\n        }\r\n\r\n        this.lastScrollTop = scrollTop;\r\n    }\r\n\r\n    private uintToString(uintArray:number[]):string {\r\n        let encodedString = String.fromCharCode(...uintArray);\r\n        try {\r\n            return decodeURIComponent(escape(encodedString));\r\n        }\r\n        catch (err) {\r\n            return encodedString;\r\n        }\r\n    }\r\n\r\n    private startTime: Date;\r\n    private reader: ReadableStreamReader;\r\n    private total: number;\r\n    private async pump():Promise<boolean> {\r\n        let ret = await this.reader.read();\r\n        let {done, value} = ret;\r\n        if (done) {\r\n            this.resultSections.seconds = (new Date().getTime() - this.startTime.getTime());\r\n            let {action, services} = this.props;\r\n            if (services !== undefined) {\r\n                let now = Date.now() / 1000;\r\n                for (let service of services) {\r\n                    switch (action) {\r\n                        case 'test': service.compile_time = now; break;\r\n                        case 'deploy': service.deploy_time = now; break;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        let text = this.uintToString(value);\r\n        this.resultSections.add(text);\r\n        this.total += value.byteLength;\r\n        //await pump();\r\n        return false;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        /*\r\n        let that = this;\r\n        let time = new Date();\r\n        function consume(reader: ReadableStreamReader) {\r\n            let total = 0;\r\n            return new Promise(async (resolve, reject) => {\r\n                async function pump() {\r\n                    let ret = await reader.read();\r\n                    let {done, value} = ret;\r\n                    try {\r\n                        function uintToString(uintArray:number[]):string {\r\n                            let encodedString = String.fromCharCode.apply(null, uintArray);\r\n                            try {\r\n                                return decodeURIComponent(escape(encodedString));\r\n                            }\r\n                            catch (err) {\r\n                                return encodedString;\r\n                            }\r\n                        }\r\n                        if (done) {\r\n                            that.resultSections.seconds = (new Date().getTime() - time.getTime());\r\n                            let {action, services} = that.props;\r\n                            let now = Date.now() / 1000;\r\n                            for (let service of services) {\r\n                                switch (action) {\r\n                                    case 'test': service.compile_time = now; break;\r\n                                    case 'deploy': service.deploy_time = now; break;\r\n                                }\r\n                            }\r\n                            resolve();\r\n                            return;\r\n                        }\r\n                        let text = uintToString(value);\r\n                        that.resultSections.add(text);\r\n                        total += value.byteLength;\r\n                        await pump();\r\n                    }\r\n                    catch (err) {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                await pump();\r\n            });\r\n        }\r\n        */\r\n        this.startAutoScrollToBottom();\r\n        try {\r\n            //await consume(this.props.res.body.getReader());\r\n            this.reader = this.props.res.body.getReader();\r\n            this.startTime = new Date;\r\n            this.total = 0;\r\n            while (true) {\r\n                if (await this.pump() === true) break;\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n        finally {\r\n            this.endAutoScrollToBottom();\r\n        }\r\n    }\r\n    private renderText = (section:Section, index:number):JSX.Element => {\r\n        return <section.render key={section.rowId} />;\r\n    }\r\n    render() {\r\n        let {uq, actionName} = this.props;\r\n        let {seconds, sections, hasError} = this.resultSections;\r\n        let finish = hasError === true? '发生错误' : '完成';\r\n        let header = actionName + (seconds>=0? finish : \"中...\");\r\n        if (uq !== undefined) header = uq.name + ' - ' + header;\r\n        return <Page header={header} back=\"close\" onScroll={this.onScroll}>\r\n            <div id='topDiv' />\r\n            <div id='scrollDiv'\r\n                onDoubleClick={this.doubleClick} \r\n                className='py-2 px-3' \r\n                style={{wordWrap: 'break-word', whiteSpace: 'normal'}}>\r\n                {sections.map(this.renderText)}\r\n            </div>\r\n            {seconds>=0? <div className='px-3 pb-3' style={{color: 'red', fontWeight: 'bold'}}>\r\n                {actionName}完成。共计用时{Math.floor(seconds/1000)}秒\r\n            </div> : undefined}\r\n            <div id='bottomDiv' />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport {nav, Page} from 'tonva';\r\nimport {IdPick, IdPickFace} from 'tonva-form';\r\nimport {List, SearchBox} from 'tonva';\r\n\r\nexport interface IdPickProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n}\r\n\r\nexport function createIdPick(props: IdPickProps):IdPick {\r\n    return function(face: IdPickFace, params: any):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            nav.push(<IdPickPage resolve={resolve} face={face} params={params} {...props} />);\r\n        });\r\n    }\r\n}\r\n\r\ninterface IdPickPageProps extends IdPickProps {\r\n    face: IdPickFace;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\ninterface IdPickPageState {\r\n    items?: any[];\r\n}\r\n\r\nclass IdPickPage extends React.Component<IdPickPageProps, IdPickPageState> {\r\n    private items:any[];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: null,\r\n        }\r\n        this.itemClick = this.itemClick.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        let {face, candidateItems, params} = this.props;\r\n        this.setState({\r\n            items: Array.isArray(candidateItems)? candidateItems : await candidateItems(params, ''),\r\n        });\r\n    }\r\n    itemClick(item:any) {\r\n        let {resolve} = this.props;\r\n        resolve(item);\r\n        nav.pop();\r\n    }\r\n    async onSearch(key: string) {\r\n        //alert('search ' + key);\r\n        //await store.dev.searchServer.first(key)\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.setState({items: ret});\r\n        }\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.state.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DevModel } from 'model';\r\nimport { IdPickProps, createIdPick } from 'createIdPick';\r\nimport { store } from 'store';\r\nimport { Field, FormRow, StringFace, TextAreaFace, TonvaForm, SubmitResult } from 'tonva-form';\r\nimport { UQController } from './uqController';\r\nimport { VPage, nav, Page } from 'tonva';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst urlTestField:Field = {name: 'urlTest', type: 'string', required:false, maxLength:200};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst dbTypeField:Field = {name: 'db_type', type: 'string', maxLength:20, defaultValue:'mysql'};\r\nconst dbField:Field = {name: 'db', type: 'string', maxLength:50, required: true};\r\nconst connectionField:Field = {name:'connection', type:'string', maxLength:250};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\n\r\nconst urlRowTest = {\r\n    label: 'URL-Test',\r\n    field: urlTestField,\r\n    face: {placeholder:'如果同URL，请不要输入'}\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: <ServerCaption {...item} />,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n/*\r\nconst dbTypeRow:FormRow = {\r\n    label: '数据库类型',\r\n    field: dbTypeField,\r\n    face: {\r\n        type: 'string',\r\n        readonly: true,\r\n    } as StringFace\r\n};\r\n*/\r\nconst dbRow = {\r\n    label: '数据库名字',\r\n    field: dbField,\r\n};\r\n/*\r\nconst connectionRow = {\r\n    label: '连接字符串',\r\n    field: connectionField,\r\n    face: {\r\n        type: 'textarea',\r\n        maxLength: 250,\r\n        rows: 8,\r\n    } as TextAreaFace,\r\n};\r\n*/\r\nexport class NewServicePage extends VPage<UQController> {\r\n    private tonvaForm:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        urlRow,\r\n        urlRowTest,\r\n        serverRow,\r\n        //dbTypeRow,\r\n        dbRow,\r\n        //connectionRow\r\n    ];\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onSubmit = async (values:any):Promise<SubmitResult | undefined> => {\r\n        /*\r\n        if (values.url.indexOf('/uq/')<0) {\r\n            this.tonvaForm.formView.setError('url', 'service url 必须包含/uq/');\r\n            return;\r\n        }\r\n        */\r\n        values.type = 2; // uq type, to be removed\r\n        values.bindId = this.controller.uq.id;\r\n        let ret = await this.controller.saveService(values);\r\n        if (ret === 0) {\r\n            /*\r\n            if (this.tonvaForm !== undefined) {\r\n                this.tonvaForm.formView.setError('url', '已经有Service使用这个url');\r\n            }\r\n            */\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private page = () => {\r\n        return <Page header=\"新建Service\">\r\n            <TonvaForm ref={t=>this.tonvaForm=t} className=\"m-3\" formRows={this.formRows} onSubmit={this.onSubmit} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Page, VPage, nav } from 'tonva';\r\nimport { UQController } from './uqController';\r\nimport { DevModel } from 'model';\r\nimport { Prop, PropGrid } from 'tonva';\r\nimport { StringValueEdit, ServerSpan, TextValueEdit } from 'tools';\r\n\r\nexport class ServicePage extends VPage<UQController> {\r\n    @observable private service: DevModel.Service;\r\n    async open(service: DevModel.Service) {\r\n        this.service = service;\r\n        this.openPage(this.page);\r\n    }\r\n    private async changeProp(prop:string, value:any):Promise<any> {\r\n        return await this.controller.changeServiceProp(this.service, prop, value);\r\n    }\r\n    private onUrlChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        /*\r\n        if ((value as string).indexOf('/uq/')<0) {\r\n            return 'URL必须包含/uq/';\r\n        }\r\n        */\r\n        let ret = await this.changeProp('url', value);\r\n        if (ret === 0) {\r\n            //return 'URL已经被使用了';\r\n            return;\r\n        }\r\n        this.service.url = value;\r\n    }\r\n    private onUrlTestChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        /*\r\n        if ((value as string).indexOf('/uq/')<0) {\r\n            return 'URL必须包含/uq/';\r\n        }\r\n        */\r\n        let ret = await this.changeProp('urlTest', value);\r\n        if (ret === 0) {\r\n            //return 'URL已经被使用了';\r\n            return;\r\n        }\r\n        this.service.urlTest = value;\r\n    }\r\n    private onDbChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        let ret = await this.changeProp('db', value);\r\n        if (ret === 0) {\r\n            return 'Db已经被使用了';\r\n        }\r\n        this.service.db = value;\r\n    }\r\n    /*\r\n    private onDbTypeChanged = async (value:string, orgValue:any):Promise<string|void> => {\r\n        if (value === undefined || value === null) return;\r\n        if (value.toLowerCase().trim() !== 'mysql') return '目前只支持mysql';\r\n        let ret = await this.changeProp('db_type', value);\r\n        this.service.db_type = value;\r\n    }\r\n    private onConnectionChanged = async (value:string, orgValue:any):Promise<string|void> => {        \r\n        await this.changeProp('connection', value);\r\n        this.service.connection = value;\r\n    }\r\n    */\r\n    private onDeleteClick = async () => {\r\n        if (confirm(\"真的要删除Service吗？删除了不可恢复，需要重新录入。\")!==true) return;\r\n        await this.controller.delService(this.service);\r\n        nav.pop();\r\n    }\r\n    private page = () => {\r\n        let {uq} = this.controller;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'string',\r\n                name: 'url',\r\n                label: 'URL',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改URL\"\r\n                    value={this.service.url}\r\n                    onChanged={this.onUrlChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'urlTest',\r\n                label: 'URL-Test',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改URL-Test\"\r\n                    value={this.service.urlTest}\r\n                    onChanged={this.onUrlTestChanged} />)\r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={this.service.server} />\r\n            },\r\n            /*\r\n            {\r\n                type: 'string',\r\n                name: 'db_type',\r\n                label: '数据库类型',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库类型\"\r\n                    value={this.service.db_type}\r\n                    onChanged={this.onDbTypeChanged} />)\r\n            },\r\n            */\r\n            {\r\n                type: 'string',\r\n                name: 'db',\r\n                label: '数据库名',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库名字\"\r\n                    value={this.service.db}\r\n                    onChanged={this.onDbChanged} />)\r\n            },\r\n            /*\r\n            {\r\n                type: 'string',\r\n                name: 'connection',\r\n                label: '连接字符串',\r\n                onClick: ()=>nav.push(<TextValueEdit\r\n                    title=\"连接字符串\"\r\n                    value={this.service.connection}\r\n                    onChanged={this.onConnectionChanged} />)\r\n            },\r\n            */\r\n        ];\r\n        let right = <button onClick={this.onDeleteClick} className=\"btn btn-success\">删除</button>;\r\n        return <Page header={'UQ - ' + uq.name} right={right}>\r\n            <PropGrid rows={rows} values={this.service} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { UQController } from './uqController';\r\nimport { VPage, nav, Page } from 'tonva';\r\nimport { SubmitResult, TonvaForm } from 'tonva-form';\r\n\r\nconst formRows = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    //{\r\n    //    label: '入口',\r\n    //    field: {name: 'access', type: 'string', maxLength: 250},\r\n    //    face: {type: 'textarea', placeholder: '逗号分隔的入口名'}\r\n    //},\r\n];\r\n\r\n\r\nexport abstract class EditBasePage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveUq(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form(initValues:any):JSX.Element {\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n    }\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    protected page = () => {\r\n        let {uq} = this.controller;\r\n        let {name} = uq;\r\n        return <Page header={'修改UQ - ' + name} back=\"close\">\r\n            {this.form(uq)}\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    protected page = () => {\r\n        return <Page header={'新建UQ'} back=\"close\">\r\n            {this.form({})}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav, EasyTime } from 'tonva';\r\nimport { UQController } from './uqController';\r\nimport { IdDates, UnitSpan, ServerSpan } from 'tools';\r\nimport { Prop, Media, LMR, FA, PropGrid, Muted, List, EasyDate, DropdownActions } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { EditPage } from './editPage';\r\nimport { store } from 'store';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class UQPage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除UQ吗？') === true) {\r\n            await this.controller.deleteUq();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {onUqUpload, onUqTest, onUqDeploy, serviceClick, uq, services} = this.controller;\r\n        let {isOwner} = store.unit;\r\n        let {id, name, discription, access, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            {caption:'修改UQ', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n        let right = isOwner>0 && <DropdownActions actions={menuItems} />;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\"\r\n                    left={<FA name=\"database\" className=\"text-primary fa-2x mr-3\" />}>\r\n                    <div><b>{name}</b></div>\r\n                    {disp}\r\n                </LMR>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n            '',\r\n            {\r\n                type: 'component',\r\n                label: '上传UQ', \r\n                component: <LMR onClick={onUqUpload} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"上传提交UQ代码\" right={<FA className=\"align-self-center\" name=\"chevron-right\" />} />\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '测试UQ', \r\n                component: <LMR onClick={onUqTest} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"升级UQ测试数据库\" right={<FA className=\"align-self-center\" name=\"chevron-right\" />} />\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '发布UQ', \r\n                component: <LMR onClick={onUqDeploy} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"升级UQ生产数据库\" right={<FA className=\"align-self-center\" name=\"chevron-right\" />} />\r\n            },\r\n        ];\r\n        let btnAddService = isOwner>0 && <button\r\n            className=\"btn btn-outline-primary btn-sm\"\r\n            onClick={()=>this.controller.showNewServicePage()}>\r\n            增加\r\n        </button>;\r\n        \r\n        let onServiceClick:any;\r\n        if (isOwner>0) onServiceClick = serviceClick;\r\n\r\n        return <Page header={'UQ - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={uq} />\r\n            <div className=\"d-flex mx-3 mt-3 mb-1 align-items-end\">\r\n                <Muted style={{display:'block', flex:1}}>Service</Muted>\r\n                {btnAddService}\r\n            </div>\r\n            <List items={services} item={{\r\n                render:(service:DevModel.Service, index:number)=><this.renderService service={service} index={index} />, \r\n                onClick:onServiceClick\r\n            }} />\r\n        </Page>;\r\n    }\r\n    private renderService = observer((props: {service:DevModel.Service; index:number}):JSX.Element => {\r\n        let {service, index} = props;\r\n        let {url, server, db, compile_time, deploy_time} = service;\r\n        let compile = !compile_time?\r\n            <Muted>未测试</Muted> \r\n            :\r\n            <><Muted>测试: </Muted><EasyTime date={compile_time}/></>;\r\n        let deploy = !deploy_time?\r\n            <Muted>未发布</Muted> \r\n            :\r\n            <><Muted>发布: </Muted><EasyTime date={deploy_time}/></>;\r\n\r\n        return <LMR className=\"d-flex w-100 align-items-center cursor-pointer py-2 px-3\"\r\n            right={<small>{compile}<br/>{deploy}</small>}\r\n            >\r\n            <div>\r\n                <div>{url}</div>\r\n                <Muted><ServerSpan id={server} /></Muted>\r\n            </div>\r\n        </LMR>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, EasyDate, EasyTime, DropdownActions, DropdownAction, nav } from 'tonva';\r\nimport { UQController } from './uqController';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\nimport { store } from 'store';\r\nimport { CompileResult } from './uqUpload';\r\n\r\nexport class ListPage extends VPage<UQController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.controller.uq = undefined;\r\n        this.openVPage(NewPage);\r\n    }\r\n    private batchCompile = () => {\r\n        this.openPage(this.batchCompilePage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {uqList: list, listRowClick} = this.controller;\r\n        let {isOwner} = store.unit;\r\n        let actions:DropdownAction[] = [\r\n            {icon:'plus', caption:'新增UQ', action: this.newItem},\r\n            {icon:'plus', caption:'批量编译', action: this.batchCompile},\r\n        ];\r\n        let right = isOwner>0 && \r\n            <DropdownActions icon=\"bars\" actions={actions}>\r\n                <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>\r\n            </DropdownActions>\r\n        return <Page header=\"UQ\" right={right}>\r\n            <List items={list} item={{render: this.listRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private listRow = (item:DevModel.UQ):JSX.Element => {\r\n        let {name, discription, service_count, date_init, date_update} = item;\r\n        return <LMR className=\"py-1 px-3 align-items-center\"\r\n            left={<FA name=\"database\" className=\"text-primary fa-lg\" />}\r\n            right={<div className=\"text-right\">\r\n                <div><small className=\"text-muted\">服务数:</small> {service_count}</div>\r\n                <div className=\"small text-muted\"><EasyTime date={date_update} /></div>\r\n            </div>}>\r\n            <div className=\"py-2 px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n\r\n    private onSelect = (item:DevModel.UQ, isSelected:boolean, anySelected:boolean) => {\r\n        //alert('ok');\r\n    }\r\n\r\n    private listCompileRow = (item:DevModel.UQ):JSX.Element => {\r\n        let {name, discription, service_count, date_init, date_update} = item;\r\n        return <LMR className=\"py-1 px-3 align-items-center\"\r\n            left={<FA name=\"database\" className=\"text-info fa-lg\" />}\r\n            right={<div className=\"text-right\">\r\n                <div className=\"small text-muted\"><EasyTime date={date_update} /></div>\r\n            </div>}>\r\n            <div className=\"py-2 px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n\r\n    private list:List;\r\n    private selectAll = () => {\r\n        this.list.selectAll();\r\n    }\r\n    private unselectAll = () => {\r\n        this.list.unselectAll();\r\n    }\r\n    private test = () => {\r\n        this.compile('test', false);\r\n    }\r\n    private testThoroughly = () => {\r\n        this.compile('test', true);\r\n    }\r\n    private deploy = () => {\r\n        this.compile('deploy', false);\r\n    }\r\n    private deployThoroughly = () => {\r\n        this.compile('deploy', true);\r\n    }\r\n    private async compile(action:'test'|'deploy', thoroughly: boolean) {\r\n        let selectItems = this.list.selectedItems;\r\n        //let {action, thoroughly, fast} = this.options;\r\n        let url = store.uqServer + 'uq-compile/batch';\r\n        let actionName:string;\r\n        switch (action) {\r\n            case 'test': actionName = '测试'; break;\r\n            case 'deploy': actionName = '发布'; break;\r\n        }\r\n        try {\r\n            let abortController = new AbortController();\r\n            let body = {\r\n                test: action === 'test',\r\n                thoroughly: thoroughly,\r\n                uqs: selectItems.map(v => v.id)\r\n            };\r\n            //let data = new FormData();\r\n            //data.append( \"json\", JSON.stringify(body) );\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                signal: abortController.signal,\r\n                headers: {\r\n                    //'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(body)\r\n            });\r\n            nav.push(<CompileResult uq={undefined} services={undefined}\r\n                action={action}\r\n                actionName={actionName}\r\n                res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n\r\n    private batchCompilePage = ():JSX.Element => {\r\n        let {uqList: list} = this.controller;\r\n        let right = <span>\r\n            <button className=\"btn btn-sm btn-link\" onClick={this.selectAll}>全选</button> \r\n            <button className=\"btn btn-sm btn-link\" onClick={this.unselectAll}>全清</button>\r\n        </span>;\r\n        let cnBtn = 'btn btn-sm btn-outline-primary mr-3';\r\n        let bar = <span className=\"px-3 py-1 d-flex w-100\">\r\n            <span className=\"flex-grow-1\">\r\n                <button className={cnBtn} onClick={this.test}>测试</button>\r\n                <button className={cnBtn} onClick={this.deploy}>发布</button>\r\n                <button className={cnBtn} onClick={this.testThoroughly}>彻底测试</button>\r\n                <button className={cnBtn} onClick={this.deployThoroughly}>彻底发布</button>\r\n            </span>\r\n            {right}\r\n        </span>;\r\n\r\n        return <Page header=\"批量编译\" footer={bar}>\r\n            <List ref={list=>this.list = list} items={list} item={{render: this.listCompileRow, onSelect: this.onSelect}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { nav, Controller } from 'tonva';\r\nimport { DevModel } from '../../model';\r\nimport { UqUpload, UqActionProps, UqDeploy } from './uqUpload';\r\nimport { devApi } from 'api';\r\nimport { NewServicePage } from './newServicePage';\r\nimport { ServicePage } from './servicePage';\r\nimport { UQPage } from './uqPage';\r\nimport { ListPage } from './listPage';\r\n\r\nexport class UQController extends Controller {\r\n    private unitId: number;\r\n    uq: DevModel.UQ;\r\n    access: string;\r\n    entities: string;\r\n    @observable uqList: DevModel.UQ[];\r\n    @observable services: DevModel.Service[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.uqList = await devApi.uqs(this.unitId);\r\n        this.openVPage(ListPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.UQ) => {\r\n        this.uq = item;\r\n        await this.loadUqEntities(item.id);\r\n        this.openVPage(UQPage);\r\n    }\r\n\r\n    private async loadUqEntities(uqId: number) {\r\n        let ret = await devApi.uqGetEntities(this.unitId, uqId);\r\n        let r0 = ret[0][0];\r\n        this.access = r0.access;\r\n        this.entities = r0.entities;\r\n        this.services = ret[1];\r\n    }\r\n\r\n    serviceClick = (service: DevModel.Service) => {\r\n        this.openVPage(ServicePage, service);\r\n    }\r\n\r\n    onUqUpload = async() => {\r\n        let onDispose = () => {}\r\n        nav.push(<UqUpload uq={this.uq} services={this.services} />, onDispose);\r\n    }\r\n\r\n    onUqTest = async() => {\r\n        let onDispose = () => {}\r\n        nav.push(<UqDeploy uq={this.uq} action=\"test\" services={this.services} />, onDispose);\r\n    }\r\n\r\n    onUqDeploy = async() => {\r\n        let onDispose = () => {}\r\n        nav.push(<UqDeploy uq={this.uq} action=\"deploy\" services={this.services} />, onDispose);\r\n    }\r\n\r\n    saveUq = async (values: DevModel.UQ) => {\r\n        let uq: DevModel.UQ;\r\n        if (this.uq === undefined) {\r\n            uq = _.clone(values);\r\n        }\r\n        else {\r\n            uq = _.clone(this.uq);\r\n            _.merge(uq, values);\r\n        }\r\n        uq.unit = this.unitId;\r\n        let ret = await devApi.saveUq(uq);\r\n        uq.id = ret;\r\n        this.uqList.push(uq);\r\n    }\r\n\r\n    deleteUq = async () => {\r\n        await devApi.delUq(this.unitId, this.uq.id);\r\n        let index = this.uqList.findIndex(v => v.id === this.uq.id);\r\n        if (index >= 0) this.uqList.splice(index);\r\n    }\r\n\r\n    async changeServiceProp(service: DevModel.Service, prop:string, value:any):Promise<any> {\r\n        return await devApi.changeServiceProp(this.unitId, service.id, prop, value);\r\n    }\r\n\r\n    async saveService(service: DevModel.Service):Promise<number> {\r\n        let svc = _.clone(service);\r\n        svc.unit = this.unitId;\r\n        if (!svc.urlTest) svc.urlTest = '-';\r\n        let ret = await devApi.saveService(svc);\r\n        svc.id = ret;\r\n        this.services.push(svc);\r\n        return ret;\r\n    }\r\n\r\n    async delService(service: DevModel.Service) {\r\n        await devApi.delService(this.unitId, service.id);\r\n        let index = this.services.findIndex(v => v.id == service.id);\r\n        if (index >= 0) this.services.splice(index);\r\n    }\r\n\r\n    showNewServicePage = async () => {\r\n        await this.openVPage(NewServicePage);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport _ from 'lodash';\r\nimport {EasyDate, Media, \r\n    Prop, ListProp, PropGrid, List, SearchBox, LMR, Badge, Muted, FA} from 'tonva';\r\nimport {UnitSpan, IdDates, ServerSpan} from '../tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {Row} from './row';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\n\r\nconst busIcon = 'cogs';\r\n\r\n@observer\r\nclass Info extends React.Component<DevModel.Bus> {\r\n    async componentDidMount() {\r\n        //await store.dev.buses.loadCurApis();\r\n    }\r\n    render() {\r\n        let {unit, owner, name, discription, mine, schema, version, date_init, date_update} = this.props;\r\n        let disp = <small>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </small>;\r\n        let caption:any = owner + ' / ' + name;\r\n        if (mine === 1) {\r\n            caption = <b>{caption}</b>;\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <LMR className=\"py-2\"\r\n                left={<FA className=\"pt-2 pr-1 text-primary\" name={busIcon} size=\"3x\" />}>\r\n                <div className=\"pl-3\">\r\n                    <div className=\"mb-2\">{caption}</div>\r\n                    {disp}\r\n                </div>\r\n            </LMR>},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {\r\n                type: 'component', \r\n                label: '版本号', \r\n                component: <LMR className=\"py-2 w-100\" right={<small className=\"text-muted\"><EasyDate date={date_update}/></small>} >{version}</LMR> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n\r\n@observer\r\nexport class SchemaView extends React.Component {\r\n    render() {\r\n        let bus = store.dev.buses.cur;\r\n        if (bus === null) return '...';\r\n        let content = bus.schema;\r\n        return <div className=\"d-flex py-2 w-100 align-items-center\" style={{flex:1}}>\r\n            <pre>\r\n                {content}\r\n            </pre>\r\n        </div>;\r\n\r\n    }\r\n}\r\n\r\nconst busesProps:ObjViewProps<DevModel.Bus> = {\r\n    title: 'BUS',\r\n    formRows: [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n        {\r\n            label: 'Schema',\r\n            field: {name: 'schema', type: 'string', maxLength: 2500},\r\n            face: {type: 'textarea', rows: 8}\r\n        },\r\n    ],\r\n    row: (item:DevModel.Bus):JSX.Element => {\r\n        let {owner, name, discription, mine} = item;\r\n        let icon = appIcon;\r\n        let main = owner + ' / ' + name;\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={<FA className=\"pt-2 pr-1 text-primary\" name='cogs' size=\"lg\" />}>\r\n            <div className=\"px-3\">\r\n                <div>{mine===1? <b>{main}</b> : main}</div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    },\r\n    items: ()=>store.dev.buses,\r\n    repeated: {\r\n        name: 'name',\r\n        err: '跟已有的名称重复',\r\n    },\r\n    info: Info,\r\n    canEdit: bus => bus.mine === 1,\r\n};\r\n\r\nexport default busesProps;\r\n","import * as React from 'react';\r\nimport {Prop, PropGrid, LMR, Muted, FA} from 'tonva';\r\nimport {UnitSpan, IdDates} from '../tools';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\nclass Info extends React.Component<DevModel.Server> {\r\n    render() {\r\n        let {discription, cloud, ip, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;        \r\n        //<Media icon={appIcon} main={discription} discription={ip} />},\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <LMR className=\"py-2\"\r\n                left={<FA name=\"server\" className=\"text-primary fa-2x mr-3\" />}>\r\n                <div><b>{ip}</b></div>\r\n                {disp}\r\n            </LMR>},\r\n            '',\r\n            {type: 'component', label: '开发号', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst serversProps:ObjViewProps<DevModel.Server> = {\r\n    title: 'Server',\r\n    info: Info,\r\n    formRows: [\r\n        {\r\n            label: '描述', \r\n            field: {name: 'discription', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '云服务商', \r\n            field: {name: 'cloud', type: 'string', maxLength: 20, required: true},\r\n        },\r\n        {\r\n            label: 'IP地址', \r\n            field: {name: 'ip', type: 'string', maxLength: 20},\r\n        },\r\n    ],\r\n    row: (item: DevModel.Server):JSX.Element => {\r\n        let {discription, cloud} = item;\r\n        //return <Row main={item.discription} vice={<>{item.cloud}  {item.ip}</>} />;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n            left={<FA name=\"server\" className=\"text-primary fa-lg\" />}>\r\n            <div className=\"px-3\">\r\n                <div><b>{discription}</b></div>\r\n                <div><Muted>{cloud}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    },\r\n    items: ()=>store.dev.servers,\r\n    repeated: {\r\n        name: 'discription',\r\n        err: '重复的描述',\r\n    }\r\n};\r\n\r\nexport default serversProps;\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page} from 'tonva';\r\nimport {FormRow, TonvaForm, Step, MultiStep, SubmitResult} from 'tonva-form';\r\nimport {DropdownActions, Action, List, FA} from 'tonva';\r\nimport {DevModel} from '../model';\r\nimport { ObjViewProps } from './ObjViewProps';\r\nimport { store } from 'store';\r\n\r\n@observer\r\nexport class ObjView<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    async componentDidMount() {\r\n        await this.props.items().load();\r\n    }\r\n    //converter(item:T):ListItem {\r\n    //    return this.props.converter(item);\r\n    //}\r\n    newItem() {\r\n        this.props.items().cur = undefined;\r\n        nav.push(<New {...this.props} />);\r\n    }\r\n    itemClick = (item:T) => {\r\n        this.props.items().cur = observable(item);\r\n        nav.push(<Info {...this.props} />);\r\n    }\r\n    render() {\r\n        let {title, items} = this.props;\r\n        let {isOwner} = store.unit;\r\n        let right = isOwner>0 && <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header={title} right={right}>\r\n            <List items={items().items}\r\n                item={{render: this.props.row, onClick: this.itemClick}}\r\n                />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass New<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        if (await this.props.items().check(values) === false) return;\r\n        let ret = await this.props.items().saveCur(values);\r\n        if (ret === true) {\r\n            nav.pop();\r\n        }\r\n        else {\r\n            let repeated = this.props.repeated;\r\n            //this.formView.setError(repeated.name, repeated.err);\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let content;\r\n        let {title, steps, stepHeader} = this.props;\r\n        let {formRows, items} = this.props;\r\n        if (steps !== undefined) {\r\n            content = <MultiStep className=\"mt-4\" header={stepHeader} steps={steps} first=\"step1\" onSubmit={this.onSubmit} />;\r\n        }\r\n        else if (formRows !== undefined) {\r\n            content = <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={formRows} \r\n                onSubmit={this.onSubmit} initValues={items().cur} />;\r\n        }\r\n        else {\r\n            content = 'ObjViewProps: no steps and no formRows';\r\n        }\r\n        return <Page header={'新增'+title}>\r\n            {content}\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass Info<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private menuItems = [\r\n        {caption:'修改' + this.props.title, action:this.editItem.bind(this), icon:'edit' },\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    editItem() {\r\n        nav.push(<Edit {...this.props} />);\r\n    }\r\n    render() {\r\n        let item = this.props.items().cur;\r\n        let actions = [];\r\n        let ex = this.props.extraMenuActions;\r\n        if (ex !== undefined) actions.push(...ex);\r\n        actions.push(...this.menuItems);\r\n        let canEdit = this.props.canEdit;\r\n        let right:any;\r\n        if (canEdit && canEdit(item) === true) {\r\n            right = <DropdownActions actions={actions} />;\r\n        }\r\n        return <Page header={this.props.title + ' - 详细资料'} right={right}>\r\n            <this.props.info {...item} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass Edit<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private actions = [\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    constructor(props: ObjViewProps<T>) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentWillMount() {\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        if (await this.props.items().check(values) === false) return;\r\n        await this.props.items().saveCur(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    render() {\r\n        let right = <DropdownActions actions={this.actions} />\r\n        return <Page header={'修改 '+this.props.title} right={right} back=\"close\">\r\n            <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={this.props.formRows} \r\n                onSubmit={this.onSubmit} initValues={this.props.items().cur} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR, FA } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers } from './cUsers';\r\n\r\nexport class VApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (appUsers: AppUsers, index:number):JSX.Element => {\r\n        let {app, more, users} = appUsers;\r\n        let {id, name, discription} = app;\r\n        let right = <small className=\"text-muted\">{discription}</small>;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <LMR className=\"mb-2\" right={right}>\r\n                <FA name=\"address-card-o\" className=\"text-primary mr-3\" />\r\n                <b>{name}</b>\r\n            </LMR>\r\n            <div>\r\n                <small className=\"text-muted\">用户: </small>\r\n                {users.length===0?\r\n                    '[无]':\r\n                    users.map(u => u.assigned || u.nick || u.name).join(', ') + (more===true? ' ...' : '')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {appUsersList, searchApp, onAppsClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchApp} \r\n            placeholder=\"搜索App\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={appUsersList} \r\n                item={{render: this.renderRow, onClick:onAppsClick,  key: (item=>item.app.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR, FA } from 'tonva';\r\nimport { UsersController, UserApps } from './cUsers';\r\n\r\nexport class VUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (userApps: UserApps, index:number):JSX.Element => {\r\n        let {user, apps} = userApps;\r\n        let {id, name, nick, icon, assigned} = user;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <div className=\"mb-2\">\r\n                <FA name=\"user-o\" className=\"text-primary mr-3\" />\r\n                <b>{assigned || nick || name}</b>\r\n            </div>\r\n            <div>\r\n                <small className=\"text-muted\">App: </small>\r\n                {apps.length===0?'[无]':apps.map(a => a.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {userAppsList, searchUser, onUsersClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchUser} \r\n            placeholder=\"搜索用户\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={userAppsList} \r\n                item={{render: this.renderRow, onClick:onUsersClick, key: (item=>item.user.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List } from 'tonva';\r\nimport { UsersController, User } from './cUsers';\r\n\r\nexport class VApp extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, curAppUsers, onAppEditUsers} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onAppEditUsers()}>增减用户</button>;\r\n        return <Page header={'App - ' + (curApp.name)} right={right}>\r\n            <List items={curAppUsers} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (user: User, index:number):JSX.Element => {\r\n        let {name, nick, assigned} = user;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <span>{assigned} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else if (nick)\r\n            content = <span>{nick} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else\r\n            content = <>{name}</>\r\n        return <div className=\"px-3 py-2\">{content}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers, App } from './cUsers';\r\n\r\nexport class VUser extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, curUserApps, onUserEditApps} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onUserEditApps()}>增减App</button>;\r\n        return <Page header={'用户 - ' + (curUser.assigned || curUser.nick || curUser.name)}\r\n            right={right}>\r\n            <List items={curUserApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (app: App, index:number):JSX.Element => {\r\n        let {name, discription} = app;\r\n        return <div className=\"px-3 py-2\">{name} {discription}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR, Muted, FA } from 'tonva';\r\nimport { UsersController, EditUser } from './cUsers';\r\n\r\nexport class VAppEditUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, appEditUsers, onAppEditUsers} = this.controller;\r\n        return <Page header={curApp.name + ' - 增减用户'} >\r\n            <List items={appEditUsers} item={{render:this.renderUser}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderUser = (editUser: EditUser, index:number):JSX.Element => {\r\n        let {name, nick, assigned, bind} = editUser;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <>{assigned} <Muted>{name}</Muted></>;\r\n        else if (nick)\r\n            content = <>{nick} <Muted>{name}</Muted></>;\r\n        else\r\n            content = <>{name}</>\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onUserChanged(editUser, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={right}>\r\n            {content}\r\n        </LMR>\r\n    }\r\n\r\n    private onUserChanged = async (editUser: EditUser, checked:boolean) => {\r\n        await this.controller.bindAppUser(editUser, checked);\r\n        editUser.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { List, SearchBox, LMR } from 'tonva';\r\nimport { UsersController, UserApps, AppUsers, App, EditApp } from './cUsers';\r\n\r\nexport class VUserEditApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, userEditApps, onUserEditApps} = this.controller;\r\n        return <Page header={'增减App - ' + (curUser.assigned || curUser.nick || curUser.name)}>\r\n            <List items={userEditApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (editApp: EditApp, index:number):JSX.Element => {\r\n        let {name, discription, bind} = editApp;\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onAppChanged(editApp, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2\" right={right}>\r\n            {name} {discription}\r\n        </LMR>\r\n    }\r\n\r\n    private onAppChanged = async (editApp: EditApp, checked:boolean) => {\r\n        await this.controller.bindUserApp(editApp, checked);\r\n        editApp.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, Image, nav } from 'tonva';\r\nimport { UsersController, User } from './cUsers';\r\nimport { SearchBox } from 'tonva';\r\nimport { mainApi } from 'api';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VAddUser extends VPage<UsersController> {\r\n    @observable private user: User = null;\r\n    //@observable private addedUser: User;\r\n    private searchBox: SearchBox;\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let searchBox = <SearchBox ref={v=>this.searchBox=v}\r\n            className=\"w-100\"\r\n            onSearch={this.onSearch}\r\n            onFocus={this.onSearchFocus}\r\n            placeholder=\"用户全名/手机号/邮箱\"\r\n             />;\r\n        let content:any;\r\n        if (this.user === null) {\r\n        }\r\n        else if (this.user === undefined) {\r\n            content = <div className=\"text-info p-3\">没有找到用户</div>;\r\n        }\r\n        else {\r\n            let {name, nick, icon} = this.user;\r\n            let divUser:any;\r\n            if (nick) {\r\n                divUser = <><div><b>{nick}</b></div><div>{name}</div></>;\r\n            }\r\n            else {\r\n                divUser = <div><b>{name}</b></div>;\r\n            }\r\n            content = <div>\r\n                <div className=\"m-3 p-3 d-flex bg-white\">\r\n                    <Image src={icon} />\r\n                    <div className=\"ml-3\">{divUser}</div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <button className=\"btn btn-success text-center\" onClick={this.onAddUser}>增加用户</button>\r\n                </div>\r\n            </div>;\r\n        }\r\n        /*\r\n        let divUserAdded:any;\r\n        if (this.addedUser) {\r\n            divUserAdded = <div className=\"p-3\">\r\n                <div>\r\n                    新增用户: {this.addedUser.name} &nbsp; &nbsp; \r\n                    <button className=\"btn btn-success\" \r\n                        onClick={()=>this.controller.onUserEditApps()}>\r\n                        为用户添加App\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        }\r\n        */\r\n        return <Page header={searchBox}>\r\n            {content}\r\n        </Page>;\r\n    })\r\n    //{divUserAdded}\r\n\r\n    private onSearch = async (key:string) => {\r\n        this.user = await mainApi.userFromKey(key);\r\n    }\r\n\r\n    private onAddUser = async () => {\r\n        await this.controller.addUser(this.user.id);\r\n        this.controller.curUser = this.user;\r\n        this.user = null;\r\n        this.searchBox.clear();\r\n        this.replacePage(this.addedPage);\r\n    }\r\n\r\n    private onSearchFocus = () => {\r\n        this.user = null;\r\n        //this.addedUser = null;\r\n        if (this.searchBox) this.searchBox.clear();\r\n    }\r\n\r\n    private onAddApps = () => {\r\n        this.closePage();\r\n        this.controller.onUserEditApps();\r\n    }\r\n\r\n    private onContinueAddUser = () => {\r\n        this.closePage();\r\n        this.controller.onAddUser();\r\n    }\r\n\r\n    private addedPage = () => {\r\n        return <Page header=\"添加成功\">\r\n            <div className=\"p-3 text-center\">\r\n                <div>\r\n                    新增用户: {this.controller.curUser.name}\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-success mr-3\" \r\n                        onClick={this.onAddApps}>\r\n                        为用户添加App\r\n                    </button>\r\n                    <button className=\"btn btn-outline-primary\"\r\n                        onClick={this.onContinueAddUser}>\r\n                        继续添加新用户\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Controller, VPage, Page } from 'tonva';\r\nimport { mainApi } from 'api';\r\nimport { LMR, FA } from 'tonva';\r\nimport { VApps } from './vApps';\r\nimport { VUsers } from './vUsers';\r\nimport { VApp } from './vApp';\r\nimport { VUser } from './vUser';\r\nimport { VAppEditUsers } from './vAppEditUsers';\r\nimport { VUserEditApps } from './vUserEditApps';\r\nimport { VAddUser } from './VAddUser';\r\nimport { Unit } from 'model';\r\n\r\nexport interface User {\r\n    id: number;\r\n    name: string;\r\n    nick: string;\r\n    icon: string;\r\n    assigned: string;\r\n}\r\nexport interface App {\r\n    id: number;\r\n    name: string;\r\n    discription: string;\r\n}\r\nexport interface UserApps {\r\n    user: User;\r\n    apps: App[];\r\n}\r\nexport interface AppUsers {\r\n    app: App;\r\n    users: User[];\r\n    more: boolean;\r\n}\r\nexport interface EditApp extends App {\r\n    bind: number;   // 0: not bind, 1: bind\r\n}\r\nexport interface EditUser extends User {\r\n    bind: number;  // 0: not bind, 1: bind\r\n}\r\n\r\nexport class UsersController extends Controller {\r\n    private unit: Unit;\r\n    @observable userAppsList: UserApps[];\r\n    @observable appUsersList: AppUsers[];\r\n    curUser: User;\r\n    @observable curUserApps: App[];\r\n    @observable userEditApps: EditApp[];\r\n    curApp: App;\r\n    @observable curAppUsers: User[];\r\n    @observable appEditUsers: EditUser[];\r\n\r\n    protected async internalStart(unit:Unit) {\r\n        this.unit = unit;\r\n        let cn = \"bg-white px-3 py-2 my-1\";\r\n        let appIcon = <FA name=\"columns\" className=\"text-primary mr-3\" />;\r\n        let userIcon = <FA name=\"user-plus\" className=\"text-primary mr-3\" />;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.onAddUser}><FA name=\"plus\" /></button>;\r\n        this.openPage(<Page header={'用户管理 - ' +  this.unit.name} right={right}>\r\n            <LMR className={cn} onClick={this.onAppUsers} left={appIcon}>App</LMR>\r\n            <LMR className={cn} onClick={this.onUserApps} left={userIcon}>用户</LMR>\r\n        </Page>);\r\n    }\r\n\r\n    private onAppUsers = async () => {\r\n        await this.loadAppUsers(undefined);\r\n        this.openVPage(VApps);\r\n    }\r\n\r\n    private onUserApps = async () => {\r\n        await this.loadUserApps(undefined);\r\n        this.openVPage(VUsers);\r\n    }\r\n\r\n    private async loadAppUsers(key:string) {\r\n        let list:AppUsers[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitAppUsers(this.unit.id, key, pageStart, pageSize);\r\n        let apps = ret[0];\r\n        let users = ret[1];\r\n        let coll: {[id:number]:AppUsers} = {}\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.id,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            };\r\n            list.push(coll[a.id] = {app:app, more:false, users:[]});\r\n        }\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.user,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            }\r\n            let item = coll[u.app];\r\n            let {users} = item;\r\n            if (users.length >= 5) {\r\n                item.more = true;\r\n            }\r\n            else {\r\n                users.push(user);\r\n            }\r\n        }\r\n        this.appUsersList = list;\r\n    }\r\n\r\n    private async loadUserApps(key:string) {\r\n        let list:UserApps[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitUsers(this.unit.id, key, pageStart, pageSize);\r\n        let users = ret[0];\r\n        let apps = ret[1];\r\n        let coll: {[id:number]:UserApps} = {}\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.id,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            };\r\n            list.push(coll[u.id] = {user:user, apps:[]});\r\n        }\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.app,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            }\r\n            coll[a.user].apps.push(app);\r\n        }\r\n        this.userAppsList = list;\r\n    }\r\n\r\n    searchUser = async(key:string) => {\r\n        await this.loadUserApps(key);\r\n    }\r\n\r\n    searchApp = async(key:string) => {\r\n        await this.loadAppUsers(key);\r\n    }\r\n\r\n    onAppsClick = async (appUsers: AppUsers) => {\r\n        this.curApp = appUsers.app;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curAppUsers = await mainApi.unitOneAppUsers(this.unit.id, this.curApp.id, pageStart, pageSize);\r\n        this.openVPage(VApp);\r\n    }\r\n\r\n    onUsersClick = async (userApps: UserApps) => {\r\n        this.curUser = userApps.user;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curUserApps = await mainApi.unitOneUserApps(this.unit.id, this.curUser.id, pageStart, pageSize);\r\n        this.openVPage(VUser);\r\n    }\r\n\r\n    onAppEditUsers = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.appEditUsers = await mainApi.unitAppEditUsers(this.unit.id, this.curApp.id, key, pageStart, pageSize);\r\n        this.openVPage(VAppEditUsers);\r\n    }\r\n\r\n    onAddUser = () => {\r\n        this.openVPage(VAddUser);\r\n    }\r\n\r\n    onUserEditApps = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.userEditApps = await mainApi.unitUserEditApps(this.unit.id, this.curUser.id, key, pageStart, pageSize);\r\n        this.openVPage(VUserEditApps);\r\n    }\r\n\r\n    bindAppUser = async(user:User, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, this.curApp.id, user.id, checked===true? 1:0);\r\n        let appUsers = this.appUsersList.find(v => v.app.id === this.curApp.id);\r\n        if (checked === true) {\r\n            this.curAppUsers.push(user);\r\n            if (appUsers) appUsers.users.push(user);\r\n        }\r\n        else {\r\n            let index = this.curAppUsers.findIndex(v => v.id === user.id);\r\n            if (index>=0) this.curAppUsers.splice(index, 1);\r\n            if (appUsers) {\r\n                index = appUsers.users.findIndex(v => v.id === user.id);\r\n                if (index>=0) appUsers.users.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    bindUserApp = async(app:App, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, app.id, this.curUser.id, checked===true? 1:0);\r\n        if (this.userAppsList === undefined) return;\r\n        let userApps = this.userAppsList.find(v => v.user.id === this.curUser.id);\r\n        if (checked === true) {\r\n            this.curUserApps.push(app);\r\n            if (userApps) userApps.apps.push(app);\r\n        }\r\n        else {\r\n            let index = this.curUserApps.findIndex(v => v.id === app.id);\r\n            if (index>=0) this.curUserApps.splice(index, 1);\r\n            if (userApps) {\r\n                index = userApps.apps.findIndex(v => v.id === app.id);\r\n                if (index>=0) userApps.apps.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    addUser = async (userId: number) => {\r\n        await mainApi.unitAddUser(this.unit.id, userId);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, appInFrame, Controller, \r\n    VPage, Image, Edit, ItemSchema, UiSchema, \r\n    StringSchema, ImageSchema, UiImageItem, UiTextItem} from 'tonva'; \r\nimport {List, LMR, FA} from 'tonva';\r\n//, StackedFA, PropGrid, Prop, Muted\r\n//import {StringValueEdit} from './tools';\r\nimport {Unit, UnitApps, UnitAdmin, DevModel} from './model';\r\nimport {store} from './store';\r\nimport Administors from './Administors';\r\nimport AppsPage from './Apps';\r\nimport {Members} from './Members';\r\nimport { mainApi } from 'api';\r\n//import { COrganization } from 'organization';\r\nimport {\r\n    ObjViewProps, ObjView,\r\n    //appsProps, \r\n    busesProps, \r\n    serversProps, /*uqdbsProps, servicesProps, */ UQController} from './Dev';\r\nimport { AppController } from './Dev';\r\nimport { UsersController } from 'Users';\r\n\r\nexport class CAdmin extends Controller {\r\n    isProduction: boolean;\r\n    adminUnits: UnitAdmin[]; // 仅仅为Admins调试用。从登录用户获取units\r\n\r\n    private async loadAdminUnits(): Promise<void> {        \r\n        let ret = await mainApi.userAdminUnits();\r\n        let adminUnits = this.adminUnits = ret[0];\r\n        console.log('loadAdminUnits', adminUnits);\r\n        if (adminUnits.length === 1) {\r\n            appInFrame.unit = adminUnits[0].id;\r\n            await store.loadUnit();\r\n        }\r\n    }\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        store.init();\r\n        \r\n        this.isProduction = document.location.hash.startsWith('#tv');\r\n        console.log('admins isProduction %s', this.isProduction);\r\n\r\n        if (this.isProduction === false) {\r\n            await this.loadAdminUnits();\r\n            this.openVPage(VAdmin);\r\n            return;\r\n        }\r\n        await store.loadUnit();\r\n        this.openVPage(VAdmin);\r\n    /*\r\n        let user = nav.user;\r\n        if (user === undefined) {\r\n            console.log('autorun: user has logged out');\r\n            return;\r\n        }\r\n    \r\n        console.log('autorun login');\r\n        */\r\n       /*\r\n        setTimeout(async () => {\r\n            // 等待 tonva-tools 里面的initSubWin的nav.user的赋值\r\n            // 这个地方实际上有问题的，不应该这么写。程序逻辑顺序逻辑错误。\r\n            // 2018-11-5: 临时凑合用延时的方式来解决。\r\n            await store.loadUnit();\r\n            this.showVPage(VAdmin);\r\n        }, 200);\r\n        */\r\n    }\r\n}\r\n\r\nexport class VAdmin extends VPage<CAdmin> {\r\n    async open() {\r\n        let {isProduction, adminUnits} = this.controller;\r\n        if (isProduction === false) {\r\n            switch (adminUnits.length) {\r\n                default: this.openPage(this.selectUnitPage); return;\r\n                case 0: this.openPage(this.noUnitPage); return;\r\n                case 1: this.openPageElement(<AdminPage />); return;\r\n            }\r\n        }\r\n\r\n        if (store.unit === undefined) {\r\n            this.openPage(this.noUnitPage);\r\n            return;\r\n        }\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n\r\n    private selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={logout}>\r\n            <List items={this.controller.adminUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>;\r\n    }\r\n\r\n    private noUnitPage = () => {\r\n        let {nick, name} = nav.user;\r\n        return <Page header=\"没有小号\" logout={logout}>\r\n            <div className=\"p-3 small text-info\">\r\n                {nick || name}: 没有需要管理的小号\r\n            </div>\r\n        </Page>\r\n    }\r\n\r\n    protected get view() {return undefined}\r\n\r\n    renderRow = (item: UnitAdmin, index: number):JSX.Element => {\r\n        return <LMR className=\"p-2\" right={'id: ' + item.id}>\r\n            <div>{item.nick || item.name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: UnitAdmin) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        store.init();\r\n        await store.loadUnit();\r\n        this.closePage();\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n}\r\n\r\nconst logout = async () => {\r\n    store.logout();\r\n}\r\n\r\ninterface ActionItem {\r\n    main: string | JSX.Element;\r\n    right?: string | JSX.Element;\r\n    icon: string|JSX.Element;\r\n    page?: new (props:any) => React.Component;\r\n    //onClick: () => nav.push(<Administors />),\r\n    controller?: Controller;\r\n}\r\n\r\ninterface DevItem<T extends DevModel.ObjBase> {\r\n    title: string;\r\n    count: number;\r\n    icon: string;\r\n    objProps?: ObjViewProps<T>;\r\n    onClick?: ()=>void;\r\n}\r\n\r\ntype Item = ActionItem|DevItem<DevModel.ObjBase>|string;\r\n\r\nconst rArrow = <FA name=\"chevron-right\" />;\r\nconst typeCaptions = {\r\n    1: '开发号',\r\n    2: '小号',\r\n    3: '系统号'\r\n}\r\n@observer\r\ndefault class AdminPage extends React.Component {\r\n    private caption:string;\r\n\r\n    async componentWillMount() {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        this.caption = typeCaptions[type];\r\n        if ((type & 1) !== 0) {\r\n            await store.dev.loadCounts();\r\n        }\r\n    }\r\n\r\n    private appsAction:ActionItem = {\r\n        main: '启停App',\r\n        right: rArrow, //'增减',\r\n        icon: 'play-circle-o',\r\n        page: AppsPage,\r\n    };\r\n    private usersAction:ActionItem = {\r\n        main: '用户角色',\r\n        right: rArrow,\r\n        icon: 'users',\r\n        page: Members,\r\n    };\r\n    private newUsersAction:ActionItem = {\r\n        main: '用户管理',\r\n        right: rArrow,\r\n        icon: 'user-o',\r\n        controller: new UsersController(undefined),\r\n    };\r\n    /*\r\n    private devAction:Item = {\r\n        main: <DevActions />,\r\n        right: '程序开发相关管理',\r\n        icon: 'laptop',\r\n        //page: Dev,\r\n    };*/\r\n    private adminsAction:ActionItem = {\r\n        main: '管理员',\r\n        right: rArrow,\r\n        icon: 'universal-access',\r\n        page: Administors,\r\n    };\r\n\r\n    /*\r\n    private cOrganization = new COrganization;\r\n    private organizeAction:ActionItem = {\r\n        main: this.cOrganization.label,\r\n        right: rArrow,\r\n        icon: this.cOrganization.icon,\r\n        controller: this.cOrganization\r\n    };\r\n    */\r\n\r\n    private noneAction:ActionItem = {\r\n        main: '请耐心等待分配任务',\r\n        icon: 'hourglass-start',\r\n    };\r\n\r\n    private buildItems():Item[] {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        let items:Item[] = [];\r\n        if (isOwner === 1) {\r\n            items.push(this.adminsAction);\r\n        }\r\n        console.log('unit:', unit);\r\n        if (isAdmin === 1) {\r\n            if ((type & 2) !== 0) {\r\n                // unit\r\n                items.push(\r\n                    '小号管理',\r\n                    this.appsAction, \r\n                    //this.usersAction, \r\n                    this.newUsersAction, \r\n                    //this.organizeAction\r\n                );\r\n            }\r\n            if ((type & 1) !== 0) {\r\n                // dev unit\r\n                let {counts} = dev;\r\n\r\n                let appAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'APP', \r\n                    count: counts && counts.app, \r\n                    icon: 'tablet', \r\n                    onClick: () => new AppController(undefined).start(unit.id),\r\n                };\r\n                let uqAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'UQ', \r\n                    count: counts && counts.uq, \r\n                    icon: 'database', \r\n                    onClick: () => new UQController(undefined).start(unit.id),\r\n                };\r\n                let busAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'BUS', \r\n                    count: counts && counts.bus, \r\n                    icon: 'cogs', \r\n                    objProps: busesProps,\r\n                };\r\n                let serverAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'Server', \r\n                    count: counts && counts.server, \r\n                    icon: 'server', \r\n                    objProps: serversProps,\r\n                };\r\n                items.push('开发号管理')\r\n                if (isOwner>0) items.push(appAction);\r\n                items.push(uqAction, busAction);\r\n                if (isOwner>0) items.push(serverAction);\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n    private row = (item:Item, index:number):JSX.Element => {\r\n        if (typeof item === 'string') {\r\n            return <div className=\"px-3 pt-3 pb-1 small text-muted\" style={{backgroundColor:'#f0f0f0'}}>{item}</div>;\r\n        }\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        let left:any, mid:any, r:any;\r\n        if (title !== undefined) {\r\n            let {icon, count} = item as DevItem<DevModel.ObjBase>;\r\n            left = <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" />;\r\n            mid = title;\r\n            r = count>0 && <span>{count}</span>;\r\n        }\r\n        else {\r\n            let {right, main, icon} = item as ActionItem;\r\n            left = typeof icon === 'string'? \r\n                <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" /> :\r\n                item.icon;\r\n            mid = main;\r\n            r = <span>{right}</span>;\r\n        }\r\n        return <LMR className=\"px-3 py-2 align-items-center\" left={left} right={r}>\r\n            <div className=\"px-3\"><b>{mid}</b></div>\r\n        </LMR>;\r\n    }\r\n    private rowClick = async (item:Item) => {\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        if (title !== undefined) {\r\n            let {objProps, onClick} = item as DevItem<DevModel.ObjBase>;\r\n            if (objProps !== undefined)\r\n                return nav.push(<ObjView {...objProps} />);\r\n            else {\r\n                onClick();\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            let {page:P, controller} = item as ActionItem;\r\n            if (P !== undefined)\r\n                nav.push(<P />);\r\n            else {\r\n                await controller.start(store.unit);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        if (unit === undefined) {\r\n            console.log(\"admin render without unit\");\r\n            return null;\r\n        }\r\n        console.log(\"admin render with unit\");\r\n        let items = this.buildItems();\r\n        if (items === undefined) {\r\n            return <Page header=\"\" />;\r\n        }\r\n        let header:any, top:any;\r\n        if (unit !== undefined) {\r\n            let {name, nick, icon, discription} = unit;\r\n            let title:string, vice:any;\r\n            if (nick) {\r\n                title = nick;\r\n                vice = <h6><small className='text-secondary'>{name}</small></h6>;\r\n            }\r\n            else {\r\n                title = name;\r\n            }\r\n            if (this.caption !== undefined) header = this.caption + ' - ' + title;\r\n            top = <LMR className='px-3 my-4 bg-white py-2 cursor-pointer' onClick={()=>nav.push(<UnitProps />)}\r\n                left={<div><Image className=\"w-3c h-3c\" src={icon} /></div>}>\r\n                <div className=\"px-3\">\r\n                    <LMR right={vice}><h6 className='text-dark font-weight-bold'>{title}</h6></LMR>\r\n                    <div className='small text-info'>{discription}</div>\r\n                </div>\r\n            </LMR>;\r\n        }\r\n        else {\r\n            header = '系统管理';\r\n        }\r\n        return <Page header={header} logout={logout}>\r\n            {top}\r\n            <List items={items} item={{render:this.row, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass UnitProps extends React.Component {\r\n    /*\r\n    private rows:Prop[] = [\r\n        '',\r\n        {label: '标志图', type: 'string', name: 'icon'},\r\n        '=',\r\n        {label: '唯一号', type: 'string', name: 'name'},\r\n        {\r\n            label: '名称', \r\n            type: 'string',\r\n            name: 'nick', \r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改名称\"\r\n                value={store.unit.nick}\r\n                onChanged={this.onNickChanged} \r\n                info=\"好的名字会提升接受度\" />)\r\n        },\r\n        {\r\n            label: '说明',\r\n            type: 'string',\r\n            name: 'discription',\r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改说明\"\r\n                value={store.unit.discription}\r\n                onChanged={this.onDiscriptionChanged} \r\n                info=\"对小号做一个说明\" />)\r\n        },\r\n    ];\r\n    */\r\n    private schema:ItemSchema[] =[\r\n        {name: 'icon', type: 'image'} as ImageSchema,\r\n        {name: 'nick', type: 'string'} as StringSchema,\r\n        {name: 'discription', type: 'string'} as StringSchema,\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'标志图'} as UiImageItem,\r\n            discription: {widget:'text', label:'描述', placeholder:'简短清晰的描述'} as UiTextItem,\r\n        }\r\n    }\r\n    /*\r\n    async onNickChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('nick', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('discription', value);\r\n    }\r\n    */\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        //await userApi.userSetProp(name, newValue);\r\n        await store.unitChangeProp(name, newValue);\r\n        //this.data[name] = newValue;\r\n        //nav.user[name] = newValue;\r\n        //nav.saveLocalUser();\r\n    }\r\n    //<PropGrid rows={this.rows} values={store.unit} alignValue=\"right\" />\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        let {isRoot, isOwner} = unit;\r\n        return <Page header=\"小号信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={store.unit}\r\n                onItemChanged={this.onItemChanged}\r\n                stopEdit={!(isRoot>0 && isOwner>0)} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, NavView } from 'tonva';\r\nimport { CAdmin } from './Admin';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n    async onLogined() {\r\n        let loc = document.location;\r\n        nav.clear();\r\n        //nav.push(<StartPage />);\r\n        let cAdmin = new CAdmin({});\r\n        await cAdmin.start();\r\n    }\r\n    render() {\r\n        return (\r\n            <NavView onLogined={this.onLogined} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}