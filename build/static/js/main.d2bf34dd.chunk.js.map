{"version":3,"sources":["tonva-tools/index.ts","tonva-react-form/index.ts","tonva-react-uq/controllers/CVEntity.tsx","tonva-tools/ui/nav.tsx","tonva-react-uq/controllers/form/viewModel.tsx","tonva-tools/net/guestApi.ts","tonva-tools/net/index.ts","tonva-react-uq/tools/jsonStringify.ts","tonva-react-uq/tools/tv.tsx","tonva-react-uq/tools/index.ts","tonva-tools/ui/index.ts","tonva-tools/net/appBridge.ts","tonva-tools/net/httpChannelUI.ts","tonva-tools/net/uqApi.ts","tonva-react-uq/controllers/link/cLink.tsx","tonva-react-uq/controllers/link/index.ts","tonva-tools/net/wsChannel.ts","tonva-tools/ui/page.tsx","tonva-react-form/uid.ts","tonva-tools/ui/image.tsx","tonva-tools/net/host.ts","tonva-tools/user.ts","tonva-tools/uid.ts","tonva-react-uq/controllers/tuid/vTuidMain.tsx","tonva-react-uq/controllers/tuid/vTuidEdit.tsx","tonva-react-uq/controllers/tuid/vTuidSelect.tsx","tonva-react-uq/controllers/tuid/vTuidView.tsx","tonva-react-uq/controllers/tuid/vTuidInfo.tsx","tonva-react-uq/controllers/tuid/pageItems.ts","tonva-react-uq/controllers/tuid/vTuidList.tsx","tonva-react-uq/controllers/tuid/cTuid.ts","tonva-react-uq/controllers/tuid/index.tsx","tonva-react-uq/controllers/form/vBand.tsx","tonva-react-uq/controllers/form/vSubmit.tsx","tonva-react-uq/controllers/form/rule.ts","tonva-react-uq/controllers/form/vField/vField.tsx","tonva-react-uq/controllers/form/vField/vComputeField.tsx","tonva-react-uq/controllers/form/vArr.tsx","tonva-react-uq/controllers/form/vField/vTuidField.tsx","tonva-react-uq/controllers/form/bandsBuilder.ts","tonva-react-uq/controllers/form/vField/buildVmField.ts","tonva-react-uq/controllers/form/vForm.tsx","tonva-react-uq/controllers/form/index.ts","tonva-tools/net/httpChannel.ts","tonva-tools/ui/res.ts","tonva-react-uq/controllers/index.ts","tonva-react-form/form/control/control.tsx","tonva-react-form/form/control/buttonsControl.tsx","tonva-react-form/form/control/charsControl.tsx","tonva-react-form/form/control/stringControl.tsx","tonva-react-form/form/control/numberControl.tsx","tonva-react-form/form/control/unknownControl.tsx","tonva-react-form/form/control/pickIdControl.tsx","tonva-react-form/form/control/pickTuidControl.tsx","tonva-react-form/form/control/pickControl.tsx","tonva-react-form/form/control/index.ts","tonva-react-form/form/control/checkControl.tsx","tonva-react-form/form/control/radioControl.tsx","tonva-react-form/form/control/selectControl.tsx","tonva-react-form/form/control/textAreaControl.tsx","tonva-react-uq/entities/entity.ts","tonva-react-uq/entities/tuid.ts","tonva-react-uq/entities/action.ts","tonva-react-uq/entities/sheet.ts","tonva-react-uq/entities/query.ts","tonva-react-uq/entities/book.ts","tonva-react-uq/entities/history.ts","tonva-react-uq/entities/map.ts","tonva-react-uq/entities/pending.ts","tonva-react-uq/entities/entities.ts","tonva-react-uq/entities/index.ts","tonva-react-form/form/rowContainer/index.tsx","tonva-tools/net/apiBase.ts","tonva-tools/ui/titleBar.tsx","tonva-react-uq/controllers/query/defaultRow.tsx","tonva-react-uq/controllers/query/vQueryMain.tsx","tonva-react-uq/controllers/query/vQuerySelect.tsx","tonva-react-uq/controllers/query/cQuery.ts","tonva-react-uq/controllers/query/index.ts","tonva-tools/ui/edit/imageItemEdit.tsx","tonva-tools/ui/loading.tsx","tonva-tools/ui/resUploader.tsx","tonva-react-form/form/index.ts","tonva-react-form/form/formView.tsx","tonva-react-uq/controllers/CApp.tsx","tonva-react-uq/controllers/icons.tsx","tonva-react-uq/controllers/ControllerUq.ts","tonva-react-uq/centerApi.ts","tonva-react-uq/controllers/sheet/vMain.tsx","tonva-react-uq/controllers/sheet/vNew.tsx","tonva-react-uq/controllers/sheet/vSheetView.tsx","tonva-react-uq/controllers/sheet/vEdit.tsx","tonva-react-uq/controllers/sheet/vSheetAction.tsx","tonva-react-uq/controllers/sheet/vSchema.tsx","tonva-react-uq/controllers/sheet/vArchives.tsx","tonva-react-uq/controllers/sheet/vList.tsx","tonva-react-uq/controllers/sheet/vArchived.tsx","tonva-react-uq/controllers/sheet/vSheet.tsx","tonva-react-uq/controllers/sheet/vSaved.tsx","tonva-react-uq/controllers/sheet/vSheetProcessing.tsx","tonva-react-uq/controllers/sheet/cSheet.ts","tonva-react-uq/controllers/sheet/index.ts","tonva-react-uq/controllers/book/vBookMain.tsx","tonva-react-uq/controllers/book/cBook.ts","tonva-react-uq/controllers/uq/vUq.tsx","tonva-react-uq/controllers/uq/cUq.tsx","tonva-react-uq/controllers/uq/index.ts","tonva-react-uq/controllers/map/vMain.tsx","tonva-react-uq/controllers/map/inputValues.tsx","tonva-react-uq/controllers/map/cMap.ts","tonva-react-uq/controllers/map/index.ts","tonva-react-uq/controllers/history/vHistoryMain.tsx","tonva-react-uq/controllers/history/cHistory.ts","tonva-react-uq/controllers/history/index.ts","tonva-react-uq/controllers/action/vActionMain.tsx","tonva-react-uq/controllers/action/cAction.ts","tonva-react-uq/controllers/action/index.ts","tonva-react-uq/controllers/pending/vPendingMain.tsx","tonva-react-uq/controllers/pending/cPending.ts","tonva-react-uq/controllers/pending/index.ts","tonva-tools/ui/edit/itemEdit.tsx","tonva-tools/net/netToken.ts","tonva-tools/entry/userApi.ts","tonva-tools/left0.ts","tonva-tools/ui/VM.tsx","tonva-tools/ui/schema/index.ts","tonva-tools/pageItems.ts","tonva-tools/cacheIds.ts","tonva-react-form/form/TonvaForm.tsx","tonva-react-form/dropDownActions/index.tsx","tonva-react-form/easyDate/index.tsx","tonva-react-form/media.tsx","tonva-react-form/searchBox.tsx","tonva-react-form/multiStep/index.tsx","tonva-tools/ui/form/rules/index.ts","tonva-tools/ui/form/widgets/widget.tsx","tonva-tools/ui/form/widgets/textWidget.tsx","tonva-tools/ui/form/widgets/numberWidget.tsx","tonva-tools/ui/form/widgets/updownWidget.tsx","tonva-tools/ui/form/widgets/dateWidget.tsx","tonva-tools/ui/form/widgets/checkBoxWidget.tsx","tonva-tools/ui/form/widgets/selectWidget.tsx","tonva-tools/ui/form/widgets/idWidget.tsx","tonva-tools/ui/form/widgets/unknown.tsx","tonva-tools/ui/form/widgets/buttonWidget.tsx","tonva-tools/ui/form/context.tsx","tonva-tools/ui/form/widgets/arrComponent.tsx","tonva-tools/ui/form/widgets/imageWidget.tsx","tonva-tools/ui/form/widgets/factory.tsx","tonva-tools/ui/form/widgets/textareaWidget.tsx","tonva-tools/ui/form/widgets/passwordWidget.tsx","tonva-tools/ui/form/widgets/radioWidget.tsx","tonva-tools/ui/form/widgets/rangeWidget.tsx","tonva-tools/ui/form/formRes.ts","tonva-tools/ui/form/form.tsx","tonva-tools/ui/form/field.tsx","tonva-tools/ui/form/index.ts","tonva-react-form/components/Badge.tsx","tonva-react-form/components/LMR.tsx","tonva-react-form/components/FA.tsx","tonva-react-form/components/Muted.tsx","tonva-react-form/components/index.ts","tonva-react-form/list/base.tsx","tonva-react-form/list/clickable.tsx","tonva-react-form/list/static.tsx","tonva-react-form/list/selectable.tsx","tonva-react-form/list/index.tsx","tonva-react-form/propGrid/row.tsx","tonva-react-form/propGrid/propView.tsx","tonva-react-form/propGrid/PropGrid.tsx","tonva-react-form/propGrid/index.tsx","tonva-tools/ui/edit/stringItemEdit.tsx","tonva-tools/ui/edit/edit.tsx","tonva-tools/ui/edit/index.tsx","tonva-react-form/listView/listRow.tsx","tonva-react-form/listView/listView.tsx","tonva-tools/ui/tabs/tabs.tsx","tonva-tools/entry/meInfo.tsx","tonva-tools/ui/fetchErrorView.tsx","tonva-tools/local.ts","tonva-tools/img/logo.svg","api/mainApi.ts","api/devApi.ts","store/admins.ts","store/dev.ts","store/cacheIds.ts","store/index.ts","Administors/NewFellow.tsx","Administors/EditAdmin.tsx","Administors/index.tsx","tools/idDates.tsx","tools/span.tsx","tools/unitSpan.tsx","consts.ts","tools/uqSpan.tsx","tools/appSpan.tsx","tools/serverSpan.tsx","tools/stringValueEdit.tsx","tools/idPickPage.tsx","Apps/info.tsx","Apps/new.tsx","Apps/index.tsx","Members/newRole.tsx","Members/roleApps.tsx","Members/memberPage.tsx","Members/membersPage.tsx","Members/rolePage.tsx","Members/index.tsx","organization/ui/map/teamPerson/index.tsx","organization/ui/index.ts","organization/ui/map/index.ts","organization/ui/tuid/index.ts","organization/ui/tuid/user.tsx","organization/ui/tuid/organization.tsx","organization/ui/query/index.ts","organization/ui/query/teamPosts.tsx","organization/ui/res/index.ts","organization/ui/res/zh/CN.tsx","organization/op/vOpBinding.tsx","organization/op/vAllPosts.tsx","organization/op/vFullFunction.tsx","organization/op/vSearchUser.tsx","organization/op/cOpBinding.tsx","organization/organization.tsx","Dev/apps/editPage.tsx","Dev/apps/appsPage.tsx","Dev/apps/appUqs.tsx","Dev/apps/appPage.tsx","Dev/apps/uqBindPage.tsx","Dev/apps/index.tsx","Dev/uqs/uqUpload.tsx","createIdPick.tsx","Dev/uqs/newServicePage.tsx","Dev/uqs/servicePage.tsx","Dev/uqs/editPage.tsx","Dev/uqs/uqPage.tsx","Dev/uqs/listPage.tsx","Dev/uqs/index.tsx","Dev/row.tsx","Dev/buses.tsx","Dev/servers.tsx","Dev/services.tsx","Dev/ObjView.tsx","Users/vApps.tsx","Users/vUsers.tsx","Users/vApp.tsx","Users/vUser.tsx","Users/vAppEditUsers.tsx","Users/vUserEditApps.tsx","Users/VAddUser.tsx","Users/cUsers.tsx","Admin.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["_left0__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_net__WEBPACK_IMPORTED_MODULE_2__","_ui__WEBPACK_IMPORTED_MODULE_3__","o","_pageItems__WEBPACK_IMPORTED_MODULE_5__","_cacheIds__WEBPACK_IMPORTED_MODULE_6__","_form__WEBPACK_IMPORTED_MODULE_0__","_list__WEBPACK_IMPORTED_MODULE_1__","_dropDownActions__WEBPACK_IMPORTED_MODULE_2__","_easyDate__WEBPACK_IMPORTED_MODULE_3__","_propGrid__WEBPACK_IMPORTED_MODULE_4__","_components__WEBPACK_IMPORTED_MODULE_5__","_media__WEBPACK_IMPORTED_MODULE_6__","_searchBox__WEBPACK_IMPORTED_MODULE_8__","_multiStep__WEBPACK_IMPORTED_MODULE_9__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_3__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_2__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_1__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","__awaiter","_ownerField","cTuidSelect","cSelectFrom","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","tonva_tools__WEBPACK_IMPORTED_MODULE_0__","controller","createForm","mobileHeaderStyle","RegExp","test","navigator","userAgent","minHeight","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_0__","props","waitCount","isHistoryBack","clearError","setState","fetchError","back","bind","navBack","stack","state","wait","window","addEventListener","nav","set","start","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","view","disposer","clear","push","history","pushState","key","ceased","refresh","item","pop","dispose","p","i","len","backLevel","popAndDispose","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","className","_loading__WEBPACK_IMPORTED_MODULE_10__","_fetchErrorView__WEBPACK_IMPORTED_MODULE_4__","assign","map","index","style","visibility","Nav","local","_local__WEBPACK_IMPORTED_MODULE_6__","user","lang","district","_res__WEBPACK_IMPORTED_MODULE_9__","language","culture","guest","g","get","handler","ws","onWsReceiveAny","handlerId","endWsReceive","msg","receive","unitRes","fetch","json","unit","unitName","_net__WEBPACK_IMPORTED_MODULE_7__","getPredefinedUnitName","unitId","unitFromName","hash","document","location","pos","_net_appBridge__WEBPACK_IMPORTED_MODULE_5__","hashParam","substring","startWait","url","resHost","centerHost","resUrl","wsHost","setGuest","exHash","appInFrame","parent","_net_wsChannel__WEBPACK_IMPORTED_MODULE_8__","predefinedUnit","loadPredefinedUnit","notLogined","logined","endWait","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_3__","token","callback","connect","JSON","stringify","saveLocalUser","showAppView","withBack","lv","e","then","loginView","default","_page__WEBPACK_IMPORTED_MODULE_2__","header","onClick","logout","logoutClear","cp","ChangePasswordPage","onError","show","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","open","date","Date","getTime","toTimeString","step","__decorate","mobx__WEBPACK_IMPORTED_MODULE_1__","ViewModel","PureJSONContent","JSONContent","RowContent","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","guestApi","uqApi","wsChannel","apiBase","appBridge","host","replacer","value","substr","jsonStringify","Tv","index_module","tuidValue","nullUI","ttv","react","bi","_$tuid","_$com","t","controllers","com","getTuidContent","val","valueFromId","boxIdContent","tv","_nav__WEBPACK_IMPORTED_MODULE_0__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_edit__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_image__WEBPACK_IMPORTED_MODULE_10__","uqTokens","logoutUqTokens","appsInFrame","_unit","isBridged","setAppInFrame","appHash","parts","split","Number","page","slice","getExHashPos","lastIndexOf","getExHash","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_2__","appUq","uq","uqOwner","uqName","uqToken","_uqApi__WEBPACK_IMPORTED_MODULE_3__","urlDebug","realUrl","_host__WEBPACK_IMPORTED_MODULE_5__","getUrlOrDebug","at","a","opener","apiName","evt","data","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_4__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_0___default","clone","_ui__WEBPACK_IMPORTED_MODULE_1__","subFrameStarted","onReceive","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","onReceiveAppApiMessage","action","onAppApiReturn","bridgeCenterApi","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqLocalEntities","localUqs","ls","localStorage","getItem","parse","uqs","loginedUserId","isNet","un","__loadAccess","saveLocal","lodash_default","cloneDeep","removeItem","accessValue","str","setItem","isMatch","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","channel","httpChannel","acc","join","loadAccess","checkAccess","names","post","params","owner","pageStart","pageSize","order","$order","ids","proxy","put","uqApi_UnitxApi","buildChannel","centerAppApi","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","setCenterToken","userId","uqApi_CenterApi","path","uqTokenApi","unitParam","nowTick","tick","callCenterapi","appUqs","appOwner","appName","rLs","rAppOwner","rAppName","uqsPure","obj","cachedUqs","cachedId","retId","retUqs","loadAppUqs","checkUqs","Link","cLink_CLink","classnames_default","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","lodash__WEBPACK_IMPORTED_MODULE_3___default","isSelected","isMounted","t0","onTabClick","load","footer","right","keepHeader","titleBar","title","redDot","img","redDotView","cn","classnames__WEBPACK_IMPORTED_MODULE_2___default","_titleBar__WEBPACK_IMPORTED_MODULE_4__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","Image","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","n","_nav__WEBPACK_IMPORTED_MODULE_2__","startsWith","isDevelopment","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","REACT_APP_ICON","REACT_APP_ITEM_ICON","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","fetchOptions","headers","Content-Type","tryLocal","getCenterHost","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","findIndex","fetchUrl","debugHostUrl","localCheck","results","all","j","hostString","indexOf","timeout","text","catch","Error","fetchLocalCheck","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","render","newButton","proxyLinks","isFrom","tonva_react_form","size","placeholder","entityRender","entityClick","tonva_tools","vTuidEdit_VTuidEdit","next","vTuidEdit_awaiter","vForm","reset","closePage","finish","getValues","save","unique","setError","isCalling","returnCall","openPageElement","editView","vTuidSelect_VTuidSelect","mainView","react_default","createElement","initKey","onSearchMain","PageItems","renderMainRow","clickMainRow","before","vTuidSelect_awaiter","searchMain","mainRowContent","ceasePage","showDiv","getIdFromObj","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divs","divItems","getDivItems","vTuidView_VTuidView","vTuidView_awaiter","alert","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","tuid","search","vTuidList_VTuidMainListBase","vTuidList_awaiter","renderRow","clickRow","callOnSelected","rowKey","ownerTop","ownerObj","ownerId","onSelected","VTuidMainList","cTuid_CTuid","buildPageItems","first","searchArr","cTuid_CTuidMain","proxies","linkFromName","cFrom","cUqFrom","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","VTuidList","schemaFrom","openVPage","edit","itemChanged","cTuidInfo","cTuid_CTuidInfo","merge","CTuidEdit","CTuidList","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","submit","isOk","disabled","caption","mobx_module","Rule","RuleRequired","defy","trim","NaN","RuleNum","RuleInt","isNaN","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","init","buildRules","rules","required","null","checkRules","r","errors","readonly","FormMode","editable","vField_decorate","vField_VInputControl","renderError","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","currentTarget","setValue","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","ch","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","vArr_awaiter","valueBoxs","onRowChanged","rowValues","$owner","list","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","vTuidField_awaiter","showInfo","boxId","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","build","band","getVFields","f","getVArr","getVSubmit","rows","row","fn","initValues","arrList","ctrl","fieldName","valueFromFieldName","propName","buildFieldValues","array","deep","buildObservableValues","vForm_decorate","HttpChannel","isCenter","hostUrl","apiToken","showError","_host__WEBPACK_IMPORTED_MODULE_2__","keys","k","buildOptions","innerFetch","buildError","timeOutHandler","encodeURI","ok","statusText","ct","retJson","toLowerCase","_ui_nav__WEBPACK_IMPORTED_MODULE_1__","_appBridge__WEBPACK_IMPORTED_MODULE_0__","Headers","append","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","_","l","languages","setResOptions","_CApp__WEBPACK_IMPORTED_MODULE_0__","_uq__WEBPACK_IMPORTED_MODULE_2__","_tuid__WEBPACK_IMPORTED_MODULE_4__","_query__WEBPACK_IMPORTED_MODULE_6__","_map__WEBPACK_IMPORTED_MODULE_7__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","_formUI__WEBPACK_IMPORTED_MODULE_12__","_ControllerUq__WEBPACK_IMPORTED_MODULE_13__","_link__WEBPACK_IMPORTED_MODULE_15__","_icons__WEBPACK_IMPORTED_MODULE_16__","control_ControlBase","formView","renderControl","hasError","filled","validate","control_Control","face","setProps","element","Array","isArray","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","rule","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","String","controlContent","component","pickIdControl_decorate","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickTuidControl_decorate","pickControl_PickControl","pickControl_awaiter","Content","pickControl_decorate","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","password","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","ln","Entity","entities","typeId","fieldMaps","sys","sName","jName","tvApi","returns","schema","setSchema","buildFieldTuid","buildArrFieldsTuid","getTuid","arrName","fieldArr","an","buildFieldsParams","arrResult","pa","rowResult","packRow","packArr","charCodeAt","escape","unpackRow","unpackArr","ch0","fLen","to","vals","maxCacheSize","tuid_Tuid","queue","waitingIds","cache","buildIdBoxer","BoxId","prototype","defineProperty","writable","enumerable","getObj","getCacheValue","toJSON","idName","splice","_id","delete","defer","util","has","cacheTuids","moveToHead","shift","proxied","cacheValue","api","getApiFrom","tuids","tuidIds","cacheTuidFieldValues","afterCacheId","cacheDivIds","tuidGet","divName","cacheFieldsInValue","arrValues","tuidDiv","getDiv","tuidSave","inId","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","showTuid","TuidMain","Main","TuidDiv","cacheIds","cApp","cUqFrm","getImportUq","retErrors","cTuidMainFromName","$proxy","action_Action","pack","sheet_Sheet","states","op","ops","actions","discription","appId","sheetSave","app","flow","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","getStateSheets","query_Query","isPaged","more","hasMore","startField","buildParams","unpackReturns","$page","query","table","book_Book","queryApiName","history_History","map_Map","queries","newAction","newQuery","add","del","pending_Pending","fieldDefaultValue","entities_Entities","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","loadIds","clearCacheTimer","accesses","buildEntities","loadEntities","buildTuids","buildAccess","div","tuidUrl","cacheTimer","proxyColl","newTuid","fromType","fromObj","book","pending","uqId","newBook","newMap","newHistory","newSheet","newPending","buildSheet","mainFields","ownerField","af","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","refetchApi","ApiBase","getHttpChannel","callFetch","TitleBar","logoutClick","_nav__WEBPACK_IMPORTED_MODULE_1__","showLogout","navChange","hasBack","href","debugLogout","rightView","b","nick","openWindow","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","vQuerySelect_awaiter","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","ImageItemEdit","_itemEdit__WEBPACK_IMPORTED_MODULE_7__","overSize","upload","resUploader","resId","isChanged","_page__WEBPACK_IMPORTED_MODULE_6__","_resUploader__WEBPACK_IMPORTED_MODULE_3__","multiple","maxSize","border","padding","_image__WEBPACK_IMPORTED_MODULE_4__","_nav__WEBPACK_IMPORTED_MODULE_5__","mobx__WEBPACK_IMPORTED_MODULE_2__","Loading","ResUploader","files","fileInput","FormData","file","abortController","AbortController","signal","onFilesChange","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_4__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_3__","buttons","CApp","tonva_tools__WEBPACK_IMPORTED_MODULE_2__","cImportUqs","cUqCollection","tonva_react_form__WEBPACK_IMPORTED_MODULE_3__","onRowClick","selectUnitPage","appUnits","tonvaApp","promiseChecks","roleAppUI","buildRoleAppUI","uqUI","newCUq","checks","retError","roles","lodash__WEBPACK_IMPORTED_MODULE_1___default","CUq","_uq__WEBPACK_IMPORTED_MODULE_4__","cUqArr","VAppMain","_centerApi__WEBPACK_IMPORTED_MODULE_5__","userAppUnits","showUnsupport","appUnit","loadUqs","clearPrevPages","showMainPage","beforeStart","renderView","userName","sheetTypeId","getCUqFromId","navSheet","appContent","appPage","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","tonva_react_form__WEBPACK_IMPORTED_MODULE_1__","fixWidth","ControllerUq","centerApi","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","getStateLabel","templet","statesCount","filter","isDev","vNew_VSheetNew","vNew_awaiter","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","vEdit_awaiter","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","vSheetAction_awaiter","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","vArchives_awaiter","processing","archiveRow","getArchives","vList_VSheetList","rowClick","vList_awaiter","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSaved_awaiter","vSheetProcessing_VSheetProcessing","cSheet_CSheet","cSheet_awaiter","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","schemaLoaded","CTuidMain","controllers_tuid","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","baseUrl","loadEntites","collection","warn","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityName","cTuidEdit","entityType","cFromName","tUI","cEntity","getUI","VUq","vMain_VMapMain","itemRender","ItemRow","remove","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","inputValues_awaiter","cMap_MapItem","cMap_CMap","cMap_awaiter","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","template","v0","q","retFields","newItem","addItem","VMapMain","callParam","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","ItemEdit","itemSchema","uiItem","internalStart","internalEnd","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","userApi","_net__WEBPACK_IMPORTED_MODULE_0__","_user__WEBPACK_IMPORTED_MODULE_1__","account","verify","prop","left0","zero","num","fix","Controller","_net__WEBPACK_IMPORTED_MODULE_3__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","_resolve_$","View","VPage","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","mobx__WEBPACK_IMPORTED_MODULE_0__","topDiv","_uid__WEBPACK_IMPORTED_MODULE_1__","bottomDiv","setPageStart","unshift","reverse","CacheIds","maxCount","dict","Map","loadId","_loadIds","_loadId","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_2__","DropdownActions","handleDocumentClick","dropdownOpen","contains","menu","toggle","removeEventListener","isRight","hasIcon","data-toggle","aria-expanded","dropdown-menu","dropdown-menu-right","aria-hidden","EasyDate","now","nDate","getDate","_date","hour","getHours","minute","getMinutes","month","getMonth","hm","getFullYear","Media","disp","px","py","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","MultiStep","lodash__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","_form__WEBPACK_IMPORTED_MODULE_3__","stepViews","topView","onPrev","onNext","stepName","steps","ButtonConten","prefix","btnContent","formProps","setStep","nextStepName","pIcon","sIcon","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","maxMsg","checkMore","integer","widget_Widget","context","fieldProps","contextErrors","onInputChange","changeValue","container","visible","inNode","requiredFlag","FieldContainer","getUiItem","removeErrorWidget","addErrorWidget","isChanging","initData","newValue","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","uiLabel","Templet","errorList","tag","textWidget_TextWidget","onKeyDown","internalOnKeyDown","keyCode","onEnter","checkContextRules","removeErrors","renderTemplet","renderErrors","numberWidget_NumberWidget","updownWidget_UpdownWidget","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","selectWidget_decorate","idWidget_IdWidget","idWidget_awaiter","pickId","clearContextError","required-item","cursor-pointer","idWidget_decorate","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","buttonWidget_awaiter","onButtonClick","observerRender","widget","widgetType","ButtonClass","context_Context","uiSchema","isRow","widgets","errorWidgets","subContexts","arrRowContexts","itemName","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","checkFieldRules","clearContextErrors","rowContext","setContextError","checkHasError","context_decorate","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","itemSchemas","parentData","FormContext","ContextContainer","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","imageWidget_ImageWidget","imageWidget_awaiter","imageItemEdit","imageSrc","end","ui_image","imageWidget_decorate","widgetsFactory","datetime","time","email","updown","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","formRes","zh","form_Form","watch","formData","calcSelectOrDelete","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","ui_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","arrItemOperated","formArrVal","beforeShow","buttonName","contextType","Badge_Badge","badgeAlign","badgeVertical","LMR_LMR","cursor","LMR_decorate","FA_FA","spin","pull","pulse","rotate","flip","inverse","Muted","base_ListBase","pageItems","selectedItems","nextProps","clickable_Clickable","static_Static","selectable_Selectable","itemsArray","compare","_selectedItems","selected","labelId","si","buildItems","anySelected","onSelect","flex","marginBottom","htmlFor","selectable_decorate","list_List","listBase","nextState","nextContext","updateProps","isLoading","staticRow","list_decorate","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","bk","bg-white","renderLabel","renderProp","align","vAlign","col","full","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","ComponentPropRow","propView_PropView","isGap","PropGrid_PropGrid","propView","stringItemEdit_StringItemEdit","edit_itemEdit","preValue","edit_Edit","defaultSepClassName","defaultRowContainerClassName","edit_awaiter","onItemChanged","onItemClick","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","rowContainerClassName","topBorder","bottomBorder","elItems","divValue","listRow_ListRow","pressed","isIcon","noteNum","mid","viceSpan","vice","middle","midSize","unread","uv","va-action","listView_ListView","elHeader","itemClick","converter","ex","listItem","listView_decorate","Tab","_content","contentBuilder","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","tabName","height","display","notifyCircle","userSetProp","FetchErrorView","reApi","_net__WEBPACK_IMPORTED_MODULE_1__","errContent","LocalData","Data","homeTabCur","module","exports","mainApi","toUser","fromUnit","fromApp","fellow","isOwner","isAdmin","apps","member","assigned","devApi","uqsText","service","admins_Admins","store","owners","admins","fellows","unitAdmins","ua","fellowId","unitSetAdmin","removeCur","admin","unitAddAdmin","dev_ObjItems","dev","_load","_save","_inc","_del","_dec","dev_decorate","dev_Apps","searchedUqs","saveApp","delApp","counts","searchUq","searchPageSize","allUqs","appBindUq","dev_Uqs","saveUq","delUq","dev_Buses","buses","saveBus","delBus","bus","dev_Servers","servers","saveServer","delServer","server","dev_Services","services","saveService","delService","changeServiceProp","db","db_type","connection","loadUqServices","SearchItems","dev_Dev","searchApp","searchServer","searchUqdb","cacheIds_CacheUnits","cacheIds_CacheUqs","cacheIds_CacheApps","cacheIds_CacheServers","store_Store","cacheUnits","cacheUqs","cacheApps","cacheServers","memberCount","roleApps","roleMember","roleMembers","memberRoles","unitChangeProp","unitApps","unitMemberCount","uqServer","uqBuilderUrl","unitDeleteApp","inUnit","unitAddApp","unitRoles","unitAddRole","unitRoleChangeProp","unitRoleApps","unitRoleSetApps","unitMembers","unitAssignMember","unitMemberRoles","rId","unitSetMemberRoles","org","store_decorate","store_store","NewFellow_NewFellowPage","onSendInvitation","NewFellow_awaiter","addNew","NewFellow","NewFellow_decorate","EditAdmin_EditAdmin","isRoot","Fellow","Administors_EditAdmin","EditAdmin_decorate","Administors_AdministorsPage","onNewOwner","newAdmin","onNewAdmin","ownersView","adminsView","onNewFellow","showOwners","showAdmins","Administors","Administors_decorate","idDates_IdDates","date_init","date_update","span","isLink","unitSpan_UnitSpan","unitSpan_UnitInfo","unitSpan_decorate","unitSpan_UnitName","consts_appIcon","appItemIcon","uqSpan_UqSpan","uqSpan_UqInfo","uqSpan_decorate","appSpan_AppSpan","appSpan_AppInfo","public","appSpan_decorate","apis","appSpan_AppRow","serverSpan_ServerSpan","serverSpan_ServerInfo","cloud","ip","serverSpan_decorate","stringValueEdit_StringValueEdit","stringValueEdit_awaiter","errorDiv","info","stringValueEdit_TextValueEdit","onTextAreaChange","idPickPage_IdPickPage","idPickPage_awaiter","candidateItems","searchPlaceHolder","idPickPage_decorate","info_Info","renderUqRow","uqAccess","act","info_awaiter","appActed","newInUnit","restoreUnitApp","stopUnitApp","newApp","addUnitApp","uqAccesses","faName","info_decorate","new_PageApps","new_NewApp","new_awaiter","appClick","renderApp","new_decorate","Apps_AppsPage","loadApps","ban","src_Apps","Apps_decorate","newRole_NewRole","newRole_awaiter","roleApps_RoleApps","renderRoleApp","memberPage_MemberPage","renderMemberRole","setRole","memberPage_SetRole","loadRoles","loadMemberRoles","orgValue","roleUser","onAssigned","roleClick","memberPage_decorate","setMemberRoles","selectRole","renderRole","roleSelect","membersPage_MembersPage","loadMembers","MemberRow","setRoleUser","roleId","membersPage_MemberSearch","renderMember","userClick","membersPage_decorate","members","rolePage_RolePage","roleAppClick","rolePage_RoleApps","loadRoleApps","rolePage_EditRole","onMembersClick","membersLeft","membersRight","editRole","addRoleApp","rolePage_decorate","roleChangeProp","isSysRole","onNameChanged","onDiscriptionChanged","setRoleApps","appSelect","midClassName","Members_Members","newRole","allUsersClick","Members_decorate","src_organization_ui","teamPerson","tonva_react_uq","_super","searchOnPost","querySelect","team","noStaff","staff","noPost","organization","teamPosts","CN","tuidNullCaption","arrNew","arrEdit","fromUser","subject","getMessage","newMessage","editSumbit","sectionTeam","teamOrganization","person","given","sur","gender","section","vOpBinding_VOpBinding","sheetOpsChanged","stateTosView","tosText","tos","organizationRow","teamRow","observableTeamRow","sectionRow","observableSectionRow","postRow","observablePostRow","stateView","vOpBinding_awaiter","saveOps","selectablePosts","teamsList","teams","defaultSelected","onPostSelectChanged","sections","onTeamSelectChanged","onSectionSelectChanged","organizations","posts","postTos","pid","pto","buildSelectablePost","buildSelectableTeams","teamTos","hasAllTeams","teamId","tto","teamTo0","teamTo0Sections","buildSelectableSections","teamTo","selectableTeam0","hasSection","selectableSection","selectableSections","stateTo","configable","stateClick","tosView","opTos","tosTexts","stateToName","toArr","sp","postId","teamCount","st","sectionCount","ss","sectionId","saveSheetStatePosts","vAllPosts_VAllPosts","onCheckChanged","def","saveChange","vAllPosts_awaiter","saveEntityOpForAll","pageRender","buttonSave","lineHeight","fontWeight","listStyleType","blocks","block","getEntityOpForAll","entityOpForAllResult","entityOpForAll","eaa","vAllPosts_decorate","vFullFunction_VFullFunction","users","onStopFully","vFullFunction_awaiter","onSumitStopFully","onCancelStop","_uq","_user","entityOpUserFully","callSearchUser","onUserSelected","renderUser","pageUsers","onSetFully","tuidUser","onCancelFully","renderSelectUser","usersView","vFullFunction_decorate","vSearchUser_VSearchUser","vSearchUser_PageUsers","onUserClick","vSearchUser_awaiter","cOpBinding_COpBinding","appRender","appView","appsView","cOpBinding_awaiter","entityPosts","opTo","postDict","teamDict","sectionDict","sheetClick","sheetClickOld","renderSetting","settingClick","V","uqRender","nameRender","sheetRender","buildPosts","buildAppsUqs","setUqEntities","queryAllTeams","organizationDict","tm","og","sec","lns","setEntities","setSheets","lines","actionSaveEntityOpPost","opName","organization_COrganization","links","organization_VOrganization","organization_awaiter","ServerCaption","editPage_schema","editPage_EditBasePage","editPage_awaiter","moreCandidates","pickServerId","renderServerInput","itemId","editPage_EditPage","editPage_NewPage","appsPage_AppsPage","appList","listRowClick","appRow","appUqs_SearchUqPage","appUqs_awaiter","onUq","getMyUqs","appUqs_decorate","appUqs_AppUqs","removeBind","btnProps","appUqs_Uqs","listHeader","btn","onBind","appPage_AppPage","editItem","appPage_awaiter","deleteItem","deleteApp","menuItems","btnAddUq","uqClick","elAccess","bind_access","uqBindPage_UqBindPage","accessChecked","saveUqBind","uqBindPage_awaiter","removeUqBind","btnDelete","checkAccessList","bc","apps_AppController","apps_awaiter","service_count","buildBindUqs","isNew","uaUq","apps_decorate","uqUpload_UqUpload","upFiles","fileClick","fr","FileReader","onload","uqUpload_UqPage","readAsText","onUpdate","uqUpload_awaiter","update","onUpdateThoroughly","lastModifiedDate","trunc","sz","thoroughly","uqUpload_CompileResult","fileList","fileRender","encType","compiled","doubleClick","pane","getParent","topIntoView","bottomIntoView","texts","seconds","abort","timeHandler","tagName","parentElement","clearTimeHandler","scrollIntoView","reader","getReader","pump","read","done","scrollToBottom","uintArray","encodedString","fromCharCode","apply","decodeURIComponent","uintToString","byteLength","onDoubleClick","wordWrap","whiteSpace","createIdPick","createIdPick_IdPickPage","newServicePage_ServerCaption","urlRow","serverRow","newServicePage_awaiter","dbTypeRow","dbRow","connectionRow","newServicePage_NewServicePage","bindId","tonvaForm","servicePage_ServicePage","onUrlChanged","servicePage_awaiter","changeProp","onDbChanged","onDbTypeChanged","onConnectionChanged","onDeleteClick","servicePage_decorate","editPage_formRows","uqs_editPage_EditBasePage","uqs_editPage_awaiter","uqs_editPage_EditPage","uqs_editPage_NewPage","uqPage_UQPage","uqPage_awaiter","deleteUq","onUqUpload","serviceClick","showNewServicePage","renderService","compile_time","compile","listPage_ListPage","uqList","uqs_UQController","uqs_awaiter","loadUqEntities","uqGetEntities","r0","svc","uqs_decorate","row_Row","buses_Info","buses_SchemaView","buses_decorate","repeated","idPickAppProps","services_awaiter","idPickUqProps","serviceTypeNames","bindIdField","services_urlRow","discriptionRow","services_serverRow","ObjView_ObjView","ObjView_Info","ObjView_New","ObjView_decorate","saveCur","stepHeader","ObjView_Edit","extraMenuActions","vApps_VApps","appUsers","appUsersList","onAppsClick","searchBox","vUsers_VUsers","userApps","userAppsList","searchUser","onUsersClick","vApp_VApp","curApp","curAppUsers","onAppEditUsers","vUser_VUser","curUser","curUserApps","onUserEditApps","vAppEditUsers_VAppEditUsers","appEditUsers","editUser","onUserChanged","vAppEditUsers_awaiter","bindAppUser","vUserEditApps_VUserEditApps","userEditApps","editApp","onAppChanged","vUserEditApps_awaiter","bindUserApp","VAddUser_VAddUser","onSearchFocus","divUser","onAddUser","VAddUser_awaiter","userFromKey","addUser","addedPage","onAddApps","onContinueAddUser","VAddUser_decorate","cUsers_UsersController","onAppUsers","cUsers_awaiter","loadAppUsers","onUserApps","loadUserApps","unitOneAppUsers","unitOneUserApps","unitAppEditUsers","unitUserEditApps","unitAddUser","appIcon","userIcon","unitAppUsers","coll","unitUsers","cUsers_decorate","Admin_CAdmin","userAdminUnits","adminUnits","loadUnit","isProduction","loadAdminUnits","Admin_VAdmin","noUnitPage","Admin_awaiter","Admin_AdminPage","rArrow","typeCaptions","1","2","3","appsAction","usersAction","newUsersAction","adminsAction","cOrganization","organizeAction","noneAction","objProps","P","loadCounts","devItems","Admin_UnitProps","Admin_decorate","src_App_0","cAdmin","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","origin","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d2bf34dd.chunk.js","sourcesContent":["export {left0} from './left0';\r\nexport * from './user';\r\nexport * from './net';\r\nexport * from './ui';\r\nexport * from './uid';\r\nexport {PageItems} from './pageItems';\r\nexport {CacheIds} from './cacheIds';\r\nexport * from './entry';\r\n\r\n","export * from './form';\r\nexport * from './list';\r\nexport * from './dropDownActions';\r\nexport * from './easyDate';\r\nexport * from './propGrid';\r\nexport * from './components';\r\nexport * from './media';\r\nexport * from './listView';\r\nexport * from './searchBox';\r\nexport * from './multiStep';\r\nexport * from './uid';\r\n","import * as React from 'react';\r\nimport { Controller, VPage, View } from 'tonva-tools';\r\nimport { Entity, Field, TuidMain } from '../entities';\r\nimport { CUq } from './uq/cUq';\r\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\r\nimport { CQuerySelect } from './query';\r\nimport { FormUI, FieldTuidUI } from './formUI';\r\nimport { entityIcons } from './icons';\r\nimport { ControllerUq } from './ControllerUq';\r\n\r\nexport interface EntityUI {\r\n    form?: FormUI;\r\n}\r\n\r\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\r\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\r\n        super(cUq, res);\r\n        Object.setPrototypeOf(this.x, cUq.x);\r\n        let {name, typeName} = entity;\r\n        this.entity = entity;\r\n        this.ui = ui; // || entityUI.ui;\r\n        this.label = this.res.label || name;\r\n        this.icon = entityIcons[typeName];\r\n    }\r\n    readonly entity: T;\r\n    readonly ui: UI;\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        return true;\r\n    }\r\n\r\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\r\n        let options = this.buildFormOptions(mode);\r\n        let ret = new VForm(options, onSubmit);\r\n        ret.setValues(values);\r\n        return ret;\r\n    }\r\n\r\n    private buildFormOptions(mode?:FormMode):FormOptions {\r\n        let {fields, arrFields} = this.entity;\r\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\r\n        if (this.res !== undefined) {\r\n            none = this.res['none'];\r\n            submitCaption = this.res['submit'];\r\n            arrNewCaption = this.res['arrNew'];\r\n            arrEditCaption = this.res['arrEdit'];\r\n            arrTitleNewButton = this.res['arrTitleNewButton'];\r\n        }\r\n        if (none === undefined) {\r\n            none = this.cUq.res['none'] || 'none';\r\n        }\r\n        if (submitCaption === undefined)\r\n            submitCaption = this.cUq.res['submit'] || 'Submit';\r\n        if (arrNewCaption === undefined)\r\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\r\n        if (arrEditCaption === undefined)\r\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\r\n        if (arrTitleNewButton === undefined)\r\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\r\n        if (mode === undefined) mode = FormMode.new;\r\n        let formUI = this.ui.form;\r\n        let ret:FormOptions = {\r\n            fields: fields,\r\n            arrs: arrFields,\r\n            ui: formUI,\r\n            res: this.res || {},\r\n            inputs: this.buildInputs(formUI),\r\n            none: none,\r\n            submitCaption: submitCaption,\r\n            arrNewCaption: arrNewCaption,\r\n            arrEditCaption: arrEditCaption,\r\n            arrTitleNewButton: arrTitleNewButton,\r\n            mode: mode,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildInputs(formUI: FormUI):FieldInputs {\r\n        let {fields, arrFields} = this.entity;\r\n        let ret:FieldInputs = {};\r\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\r\n        if (arrFields !== undefined) {\r\n            for (let arr of arrFields) {\r\n                let {name, fields} = arr;\r\n                let items = formUI && formUI.items;\r\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\r\n        if (arr !== undefined) {\r\n            let arrFieldInputs = ret[arr];\r\n            if (arrFieldInputs === undefined) {\r\n                ret[arr] = arrFieldInputs = {};\r\n                ret = arrFieldInputs;\r\n            }\r\n        }\r\n        for (let field of fields) {\r\n            let {name, _tuid} = field;\r\n            if (_tuid === undefined) continue;\r\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\r\n            ret[name] = {\r\n                select: this.buildSelect(field, arr, fieldUI),\r\n                content: this.buildContent(field, arr),\r\n                placeHolder: this.cUq.getTuidPlaceHolder(_tuid),\r\n            };\r\n        }\r\n    }\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\r\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n            let {_tuid, _ownerField} = field;\r\n            let cTuidSelect = await (_tuid as TuidMain).cSelectFrom();\r\n            let param:any = undefined;\r\n            if (_ownerField !== undefined) param = form.getValue(_ownerField.name);\r\n            if (fieldUI && fieldUI.autoList === true) {\r\n                console.log('select search set param=empty string');\r\n                param = '';\r\n            }\r\n            let ret = await cTuidSelect.call(param);\r\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\r\n            if (ret === undefined) return undefined;\r\n            let id = cTuidSelect.idFromItem(ret);\r\n            _tuid.useId(id);\r\n            return id;\r\n        };\r\n    }\r\n\r\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\r\n        return;\r\n    }\r\n\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        return this.cUq.cQuerySelect(queryName);\r\n    }\r\n}\r\n\r\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\r\n    protected readonly entity: T;\r\n    protected readonly ui: UI;\r\n    constructor(controller: C) {\r\n        super(controller);\r\n        this.entity = controller.entity;\r\n        this.ui = controller.ui;\r\n    }\r\n\r\n    get label():string {return this.controller.label}\r\n\r\n    //private _form_$: VForm;\r\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\r\n        //if (this._form_$ !== undefined) return this._form_$;\r\n        return this.controller.createForm(onSubmit, values, mode);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, has} from 'mobx';\r\nimport {User, Guest/*, UserInNav*/} from '../user';\r\nimport {Page} from './page';\r\nimport {netToken} from '../net/netToken';\r\nimport FetchErrorView from './fetchErrorView';\r\nimport {FetchError} from '../fetchError';\r\nimport {appUrl, setAppInFrame, logoutUqTokens, getExHash, getExHashPos} from '../net/appBridge';\r\nimport {LocalData} from '../local';\r\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, appInFrame, isDevelopment, host} from '../net';\r\nimport { WsBase, wsBridge } from '../net/wsChannel';\r\nimport { resOptions } from './res';\r\nimport { Loading } from './loading';\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../css/va-form.css';\r\nimport '../css/va.css';\r\nimport '../css/animation.css';\r\n\r\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\r\n    'BlackBerry|Windows Phone|'  +\r\n    'Opera Mini|IEMobile|Mobile' , \r\n    'i');\r\nconst isMobile = regEx.test(navigator.userAgent);\r\nexport const mobileHeaderStyle = isMobile? {\r\n    minHeight:  '3em'\r\n} : undefined;\r\n\r\nconst logo = require('../img/logo.svg');\r\nlet logMark: number;\r\nconst logs:string[] = [];\r\n\r\nexport interface Props //extends React.Props<Nav>\r\n{\r\n    //view: JSX.Element | (()=>JSX.Element);\r\n    //start?: ()=>Promise<void>;\r\n    onLogined: ()=>Promise<void>;\r\n    notLogined?: ()=>Promise<void>;\r\n};\r\nlet stackKey = 1;\r\nexport interface StackItem {\r\n    key: number;\r\n    view: JSX.Element;\r\n    ceased: boolean;\r\n    confirmClose?: ()=>Promise<boolean>;\r\n    disposer?: ()=>void;\r\n}\r\nexport interface State {\r\n    stack: StackItem[];\r\n    wait: 0|1|2;\r\n    fetchError: FetchError\r\n}\r\n\r\nexport class NavView extends React.Component<Props, State> {\r\n    private stack: StackItem[];\r\n    private htmlTitle: string;\r\n    private waitCount: number = 0;\r\n    private waitTimeHandler?: NodeJS.Timer;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.back = this.back.bind(this);\r\n        this.navBack = this.navBack.bind(this);\r\n        this.stack = [];\r\n        this.state = {\r\n            stack: this.stack,\r\n            wait: 0,\r\n            fetchError: undefined\r\n        };\r\n    }\r\n    async componentWillMount() {\r\n        window.addEventListener('popstate', this.navBack);\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        nav.set(this);\r\n        /*\r\n        let start = this.props.start;\r\n        if (start !== undefined) {\r\n            await start();\r\n        }\r\n        else {\r\n        */\r\n            await nav.start();\r\n        //}\r\n    }\r\n\r\n    get level(): number {\r\n        return this.stack.length;\r\n    }\r\n\r\n    startWait() {\r\n        if (this.waitCount === 0) {\r\n            this.setState({wait: 1});\r\n            this.waitTimeHandler = global.setTimeout(\r\n                () => {\r\n                    this.waitTimeHandler = undefined;\r\n                    this.setState({wait: 2});\r\n                },\r\n                1000) as NodeJS.Timer;\r\n        }\r\n        ++this.waitCount;\r\n        this.setState({\r\n            fetchError: undefined,\r\n        });\r\n    }\r\n\r\n    endWait() {\r\n        setTimeout(() => {\r\n            /*\r\n            this.setState({\r\n                fetchError: undefined,\r\n            });*/\r\n            --this.waitCount;\r\n            if (this.waitCount === 0) {\r\n                if (this.waitTimeHandler !== undefined) {\r\n                    clearTimeout(this.waitTimeHandler);\r\n                    this.waitTimeHandler = undefined;\r\n                }\r\n                this.setState({wait: 0});\r\n            }\r\n        },100);\r\n    }\r\n\r\n    async onError(fetchError: FetchError)\r\n    {\r\n        let err = fetchError.error;\r\n        if (err !== undefined && err.unauthorized === true) {\r\n            await nav.showLogin(undefined);\r\n            return;\r\n        }\r\n        this.setState({\r\n            fetchError: fetchError,\r\n        });\r\n    }\r\n\r\n    show(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.clear();\r\n        return this.push(view, disposer);\r\n    }\r\n\r\n    push(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.removeCeased();\r\n        if (this.stack.length > 0) {\r\n            window.history.pushState('forward', null, null);\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key,\r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        this.refresh();\r\n        //console.log('push: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    replace(view: JSX.Element, disposer?: ()=>void): number {\r\n        let item:StackItem = undefined;\r\n        let stack = this.stack;\r\n        if (stack.length > 0) {\r\n            item = stack.pop();\r\n            //this.popAndDispose();\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key, \r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        if (item !== undefined) this.dispose(item.disposer);\r\n        this.refresh();\r\n        //console.log('replace: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    ceaseTop(level:number = 1) {\r\n        let p = this.stack.length - 1;\r\n        for (let i=0; i<level; i++, p--) {\r\n            if (p < 0) break;\r\n            let item = this.stack[p];\r\n            item.ceased = true;\r\n        }\r\n    }\r\n\r\n    pop(level:number = 1) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        //console.log('pop start: %s pages level=%s', len, level);\r\n        if (level <= 0 || len <= 1) return;\r\n        if (len < level) level = len;\r\n        let backLevel = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            if (stack.length === 0) break;\r\n            //stack.pop();\r\n            this.popAndDispose();\r\n            ++backLevel;\r\n        }\r\n        if (backLevel >= len) backLevel--;\r\n        this.refresh();\r\n        if (this.isHistoryBack !== true) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(backLevel);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n        //console.log('pop: %s pages', stack.length);\r\n    }\r\n\r\n    popTo(key: number) {\r\n        if (key === undefined) return;\r\n        if (this.stack.find(v => v.key === key) === undefined) return;\r\n        while (this.stack.length >0) {\r\n            let len = this.stack.length;\r\n            let top = this.stack[len-1];\r\n            if (top.key === key) break;\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    topKey():number {\r\n        let len = this.stack.length;\r\n        if (len === 0) return undefined;\r\n        return this.stack[len-1].key;\r\n    }\r\n\r\n    removeCeased() {\r\n        for (;;) {\r\n            let p=this.stack.length-1;\r\n            if (p < 0) break;\r\n            let top = this.stack[p];\r\n            if (top.ceased === false) break;\r\n            let item = this.stack.pop();\r\n            let {disposer} = item;\r\n            this.dispose(disposer);\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    private popAndDispose() {\r\n        this.removeCeased();\r\n        let item = this.stack.pop();\r\n        if (item === undefined) return;\r\n        let {disposer} = item;\r\n        this.dispose(disposer);\r\n        this.removeCeased();\r\n        return item;\r\n    }\r\n\r\n    private dispose(disposer:()=>void) {\r\n        if (disposer === undefined) return;\r\n        let item = this.stack.find(v => v.disposer === disposer);\r\n        if (item === undefined) disposer();\r\n    }\r\n\r\n    clear() {\r\n        let len = this.stack.length;\r\n        while (this.stack.length > 0) this.popAndDispose();\r\n        //this.refresh();\r\n        if (len > 1) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(len-1);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n    }\r\n\r\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        let top = stack[len-1];\r\n        top.confirmClose = confirmClose;\r\n    }\r\n\r\n    private isHistoryBack:boolean = false;\r\n    navBack() {\r\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\r\n        this.isHistoryBack = true;\r\n        this.back(true);\r\n        this.isHistoryBack = false;\r\n    }\r\n\r\n    async back(confirm:boolean = true) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        if (len === 1) {\r\n            if (self != window.top) {\r\n                window.top.postMessage({type:'pop-app'}, '*');\r\n            }\r\n            return;\r\n        }\r\n        let top = stack[len-1];\r\n        if (confirm===true && top.confirmClose) {\r\n            if (await top.confirmClose()===true) this.pop();\r\n        }\r\n        else {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    confirmBox(message?:string): boolean {\r\n        return window.confirm(message);\r\n    }\r\n    clearError = () => {\r\n        this.setState({fetchError: undefined});\r\n    }\r\n    render() {\r\n        const {wait, fetchError} = this.state;\r\n        let stack = this.state.stack;\r\n        let top = stack.length - 1;\r\n        let elWait = null, elError = null;\r\n        switch (wait) {\r\n            case 1:\r\n                elWait = <li className=\"va-wait va-wait1\">\r\n                </li>;\r\n                break;\r\n            case 2:\r\n                elWait = <li className=\"va-wait va-wait2\">\r\n                    <Loading />\r\n                </li>;\r\n                break;\r\n                //<i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                //<span className=\"sr-only\">Loading...</span>\r\n        }\r\n        if (fetchError)\r\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\r\n        return (\r\n        <ul className='va'>\r\n            {\r\n                stack.map((item, index) => {\r\n                    let {key, view} = item;\r\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\r\n                        {view}\r\n                    </li>\r\n                })\r\n            }\r\n            {elWait}\r\n            {elError}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    private refresh() {\r\n        // this.setState({flag: !this.state.flag});\r\n        this.setState({stack: this.stack });\r\n        // this.forceUpdate();\r\n    }\r\n}\r\n\r\nexport class Nav {\r\n    private nav:NavView;\r\n    private ws: WsBase;\r\n    private wsHost: string;\r\n    private local: LocalData = new LocalData();\r\n    @observable user: User/*InNav*/ = undefined;\r\n    language: string;\r\n    culture: string;\r\n    resUrl: string;\r\n\r\n    constructor() {\r\n        let {lang, district} = resOptions;\r\n        this.language = lang;\r\n        this.culture = district;\r\n    }\r\n\r\n    get guest(): number {\r\n        let guest = this.local.guest;\r\n        if (guest === undefined) return 0;\r\n        let g = guest.get();\r\n        if (g === undefined) return 0;\r\n        return g.guest;\r\n    }\r\n\r\n    set(nav:NavView) {\r\n        //this.logo = logo;\r\n        this.nav = nav;\r\n    }\r\n\r\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\r\n        if (this.ws === undefined) return;\r\n        return this.ws.onWsReceiveAny(handler);\r\n    }\r\n\r\n    unregisterReceiveHandler(handlerId:number) {\r\n        if (this.ws === undefined) return;\r\n        if (handlerId === undefined) return;\r\n        this.ws.endWsReceive(handlerId);\r\n    }\r\n\r\n    async onReceive(msg:any) {\r\n        if (this.ws === undefined) return;\r\n        await this.ws.receive(msg);\r\n    }\r\n\r\n    private async getPredefinedUnitName() {\r\n        try {\r\n            let unitRes = await fetch('unit.json', {});\r\n            //if (unitRes)\r\n            let res = await unitRes.json();\r\n            return res.unit;\r\n        }\r\n        catch (err) {\r\n            this.local.unit.clear();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async loadPredefinedUnit() {\r\n        let unitName:string;\r\n        let unit = this.local.unit.get();\r\n        if (unit !== undefined) {\r\n            if (isDevelopment !== true) return unit.id;\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n            if (unit.name === unitName) return unit.id;\r\n        }\r\n        else {\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n        }\r\n        let unitId = await guestApi.unitFromName(unitName);\r\n        if (unitId !== undefined) {\r\n            this.local.unit.set({id: unitId, name: unitName});\r\n        }\r\n        return unitId;\r\n    }\r\n\r\n    hashParam: string;\r\n    private centerHost: string;\r\n    async start() {\r\n        try {\r\n            let hash = document.location.hash;\r\n            if (hash !== undefined && hash.length > 0) {\r\n                let pos = getExHashPos();\r\n                if (pos < 0) pos = undefined;\r\n                this.hashParam = hash.substring(1, pos);\r\n            }\r\n            nav.clear();\r\n            this.startWait();\r\n            await host.start();\r\n            let {url, ws, resHost} = host;\r\n            this.centerHost = url;\r\n            this.resUrl = 'http://' + resHost + '/res/';\r\n            this.wsHost = ws;\r\n            setCenterUrl(url);\r\n            \r\n            let guest:Guest = this.local.guest.get();\r\n            if (guest === undefined) {\r\n                guest = await guestApi.guest();\r\n            }\r\n            nav.setGuest(guest);\r\n\r\n            let exHash = getExHash();\r\n            let appInFrame = setAppInFrame(exHash);\r\n            if (exHash !== undefined && window !== window.parent) {\r\n                // is in frame\r\n                if (appInFrame !== undefined) {\r\n                    this.ws = wsBridge;\r\n                    console.log('this.ws = wsBridge in sub frame');\r\n                    //nav.user = {id:0} as User;\r\n                    if (self !== window.parent) {\r\n                        window.parent.postMessage({type:'sub-frame-started', hash: appInFrame.hash}, '*');\r\n                    }\r\n                    // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\r\n                    //await this.showAppView();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let predefinedUnit = await this.loadPredefinedUnit();\r\n            appInFrame.predefinedUnit = predefinedUnit;\r\n\r\n            let user: User = this.local.user.get();\r\n            if (user === undefined) {\r\n                let {notLogined} = this.nav.props;\r\n                if (notLogined !== undefined) {\r\n                    await notLogined();\r\n                }\r\n                else {\r\n                    await nav.showLogin(undefined);\r\n                }\r\n                return;\r\n            }\r\n\r\n            await nav.logined(user);\r\n        }\r\n        catch (err) {\r\n        }\r\n        finally {\r\n            this.endWait();\r\n        }\r\n    }\r\n\r\n    async showAppView() {\r\n        let {onLogined} = this.nav.props;\r\n        if (onLogined === undefined) {\r\n            nav.push(<div>NavView has no prop onLogined</div>);\r\n            return;\r\n        }\r\n        nav.clear();\r\n        await onLogined();\r\n        console.log('logined: AppView shown');\r\n    }\r\n\r\n    setGuest(guest: Guest) {\r\n        this.local.guest.set(guest);\r\n        netToken.set(0, guest.token);\r\n    }\r\n\r\n    saveLocalUser() {\r\n        this.local.user.set(this.user);\r\n    }\r\n\r\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\r\n        logoutApis();\r\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\r\n        ws.connect();\r\n\r\n        console.log(\"logined: %s\", JSON.stringify(user));\r\n        this.user = user;\r\n        this.saveLocalUser();\r\n        netToken.set(user.id, user.token);\r\n        if (callback !== undefined) //this.loginCallbacks.has)\r\n            callback(user);\r\n            //this.loginCallbacks.call(user);\r\n        else {\r\n            await this.showAppView();\r\n        }\r\n    }\r\n\r\n    async showLogin(callback?: (user:User)=>Promise<void>, top?:any, withBack?:boolean) {\r\n        let lv = await import('../entry/login');\r\n         let loginView = <lv.default withBack={withBack} callback={callback} top={top} />;\r\n        if (withBack !== true) {\r\n            this.nav.clear();\r\n            this.pop();\r\n        }\r\n        this.nav.push(loginView);\r\n    }\r\n\r\n    async showLogout(callback?: ()=>Promise<void>) {\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\r\n        appInFrame.unit = undefined;\r\n        this.local.logoutClear();\r\n        this.user = undefined; //{} as User;\r\n        logoutApis();\r\n        let guest = this.local.guest.get();\r\n        setCenterToken(0, guest && guest.token);\r\n        this.ws = undefined;\r\n        /*\r\n        if (this.loginCallbacks.has)\r\n            this.logoutCallbacks.call();\r\n        else {\r\n            if (notShowLogin === true) return;\r\n        }\r\n        await nav.start();\r\n        */\r\n        if (callback === undefined)\r\n            await nav.start();\r\n        else\r\n            await callback();\r\n    }\r\n\r\n    async changePassword() {\r\n        let cp = await import('../entry/changePassword');\r\n        nav.push(<cp.ChangePasswordPage />);\r\n    }\r\n\r\n    get level(): number {\r\n        return this.nav.level;\r\n    }\r\n    startWait() {\r\n        this.nav.startWait();\r\n    }\r\n    endWait() {\r\n        this.nav.endWait();\r\n    }\r\n    async onError(error: FetchError) {\r\n        await this.nav.onError(error);\r\n    }\r\n    show (view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.show(view, disposer);\r\n    }\r\n    push(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.push(view, disposer);\r\n    }\r\n    replace(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.replace(view, disposer);\r\n    }\r\n    pop(level:number = 1) {\r\n        this.nav.pop(level);\r\n    }\r\n    topKey():number {\r\n        return this.nav.topKey();\r\n    }\r\n    popTo(key:number) {\r\n        this.nav.popTo(key);\r\n    }\r\n    clear() {\r\n        this.nav.clear();\r\n    }\r\n    navBack() {\r\n        this.nav.navBack();\r\n    }\r\n    ceaseTop(level?:number) {\r\n        this.nav.ceaseTop(level);\r\n    }\r\n    removeCeased() {\r\n        this.nav.removeCeased();\r\n    }\r\n    async back(confirm:boolean = true) {\r\n        await this.nav.back(confirm);\r\n    }\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.nav.regConfirmClose(confirmClose);\r\n    }\r\n    confirmBox(message?:string): boolean {\r\n        return this.nav.confirmBox(message);\r\n    }\r\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\r\n            let uh = sheetId === undefined?\r\n                    appUrl(url, unitId) :\r\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\r\n            console.log('navToApp: %s', JSON.stringify(uh));\r\n            nav.push(<article className='app-container'>\r\n                <span id={uh.hash} onClick={()=>this.back()} style={mobileHeaderStyle}>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </span>\r\n                <iframe src={uh.url} />\r\n            </article>, \r\n            ()=> {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    navToSite(url: string) {\r\n        // show in new window\r\n        window.open(url);\r\n    }\r\n\r\n    get logs() {return logs};\r\n    log(msg:string) {\r\n        logs.push(msg);\r\n    }\r\n    logMark() {\r\n        let date = new Date();\r\n        logMark = date.getTime();\r\n        logs.push('log-mark: ' + date.toTimeString());\r\n    }\r\n    logStep(step:string) {\r\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\r\n    }\r\n}\r\nexport const nav: Nav = new Nav();\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport type TypeViewModel = typeof ViewModel;\r\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\r\nexport type TypeContent = React.StatelessComponent<any>;\r\n\r\nexport abstract class ViewModel {\r\n    protected abstract get view(): TypeView;\r\n    render(className?:string|string[]):JSX.Element {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view, {vm: this, className:className});\r\n    }\r\n}\r\n\r\nexport const PureJSONContent = (values, x?:any) => <>content: {jsonStringify(values)}</>;\r\nexport const JSONContent = observer(PureJSONContent);\r\nexport const RowContent = \r\n    (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\r\n;\r\n","import { decodeGuestToken } from '../user';\r\nimport { CenterApi } from './uqApi';\r\n\r\nexport class GuestApi extends CenterApi {\r\n    async guest(): Promise<any> {\r\n        //let guest = nav.local.guest.get();\r\n        let ret = await this.get('', {});\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeGuestToken(ret);\r\n            case 'object':\r\n                let guest = decodeGuestToken(ret.token);\r\n                return guest;\r\n        }\r\n    }\r\n\r\n    async unitFromName(unitName:string): Promise<number> {\r\n        let ret = await this.get(unitName);\r\n        return ret && ret.unit;\r\n    }\r\n}\r\n\r\nexport const guestApi = new GuestApi('tv/guest/', undefined);\r\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\r\nexport * from './apiBase';\r\nexport * from './guestApi';\r\nexport * from './uqApi';\r\nexport {appInFrame, isBridged, getExHash} from './appBridge';\r\nexport * from './host';\r\nexport {httpGet} from './httpChannel';\r\n","function replacer(key:string, value:any) {\r\n    let first = key.substr(0, 1);\r\n    switch (first) {\r\n        default: return value;\r\n        case '$':\r\n        case '_': return;\r\n    }\r\n}\r\n\r\nexport function jsonStringify(value:any) {\r\n    return JSON.stringify(value, replacer, ' ');\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { BoxId, Tuid } from \"../entities\";\r\nimport { PureJSONContent } from '../controllers';\r\n\r\ntype TvTemplet = (values?:any, x?:any) => JSX.Element;\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: TvTemplet,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\r\n    if (typeof bi === 'number') return <>{bi}</>;\r\n    let {id, _$tuid, _$com} = bi as BoxId;\r\n    let t:Tuid = _$tuid;\r\n    if (t === undefined) {\r\n        if (ui !== undefined) return ui(bi, x);\r\n        return PureJSONContent(bi, x);\r\n    }\r\n    let com = ui || _$com;\r\n    if (com === undefined) {\r\n        com = bi._$com = t.getTuidContent();\r\n    }\r\n    let val = t.valueFromId(id);\r\n    if (typeof val === 'number') val = {id: val};\r\n    if (ui !== undefined) {\r\n        let ret = ui(val, x);\r\n        if (ret !== undefined) return ret;\r\n        return <>{id}</>;\r\n    }\r\n    return React.createElement(com, val);\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else {\r\n                let ret = ui(tuidValue, x);\r\n                if (ret !== undefined) return ret;\r\n                return <>{tuidValue}</>;\r\n            }\r\n        case 'undefined':\r\n            break;\r\n        case 'object':\r\n            if (tuidValue !== null) return boxIdContent(tuidValue, ui, x);\r\n            break;\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }       \r\n    if (nullUI === undefined) return <>null</>;\r\n    return nullUI();\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n","export * from './jsonStringify';\r\nexport * from './tv';\r\n","export * from './nav';\r\nexport * from './titleBar';\r\nexport * from './page';\r\nexport * from './VM';\r\nexport * from './schema';\r\nexport * from './form';\r\nexport * from './edit';\r\nexport * from './res';\r\nexport * from './tabs';\r\nexport * from './loading';\r\nexport * from './image';\r\nexport * from './resUploader';","import _ from 'lodash';\r\nimport {nav} from '../ui';\r\nimport {uid} from '../uid';\r\nimport {uqTokenApi as uqTokenApi, callCenterapi, CenterAppApi, AppUq, centerToken, App, setCenterToken} from './uqApi';\r\nimport {setSubAppWindow} from './wsChannel';\r\nimport { host } from './host';\r\n\r\nexport interface UqToken {\r\n    name: string;\r\n    url: string;\r\n    urlDebug: string;\r\n    token: string;\r\n}\r\ninterface UqTokenAction extends UqToken {\r\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\r\n    reject: (reason?: any) => void;\r\n}\r\nconst uqTokens:{[uqName:string]: UqTokenAction}  = {};\r\nexport function logoutUqTokens() {\r\n    for (let i in uqTokens) uqTokens[i] = undefined;\r\n}\r\n\r\nexport interface AppInFrame {\r\n    hash: string;\r\n    unit: number;       // unit id\r\n    page?: string;\r\n    param?: string[];\r\n    predefinedUnit?: number;  // 比如像Cart这样的应用，直接让用户访问的，就需要在unit.json里面定义unitName\r\n}\r\nconst appsInFrame:{[key:string]:AppInFrame} = {};\r\n\r\nclass AppInFrameClass implements AppInFrame {\r\n    hash: string;\r\n    private _unit: number;\r\n    get unit(): number {return this._unit;}       // unit id\r\n    set unit(val:number) { this._unit=val;}\r\n    page?: string;\r\n    param?: string[];\r\n}\r\n\r\nexport let appInFrame:AppInFrame = new AppInFrameClass();\r\n/* {\r\n    hash: undefined,\r\n    get unit():number {return } undefined, //debugUnitId,\r\n    page: undefined;\r\n    param: undefined,\r\n}*/\r\n\r\nexport function isBridged():boolean {\r\n    return self !== window.parent;\r\n}\r\n\r\nwindow.addEventListener('message', async function(evt) {\r\n    var message = evt.data;\r\n    switch (message.type) {\r\n        case 'sub-frame-started':\r\n            subFrameStarted(evt);\r\n            break;\r\n        case 'ws':\r\n            //wsBridge.receive(message.msg);\r\n            await nav.onReceive(message.msg);\r\n            break;\r\n        case 'init-sub-win':\r\n            await initSubWin(message);\r\n            break;\r\n        case 'pop-app':\r\n            nav.navBack();\r\n            break;\r\n        case 'center-api':\r\n            await callCenterApiFromMessage(evt.source as Window, message);\r\n            break;\r\n        case 'center-api-return':\r\n            bridgeCenterApiReturn(message);\r\n            break;\r\n        case 'app-api':\r\n            console.log(\"receive PostMessage: %s\", JSON.stringify(message));\r\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\r\n            console.log(\"onReceiveAppApiMessage: %s\", JSON.stringify(ret));\r\n            (evt.source as Window).postMessage({\r\n                type: 'app-api-return', \r\n                apiName: message.apiName,\r\n                url: ret.url,\r\n                urlDebug: ret.urlDebug,\r\n                token: ret.token} as any, \"*\");\r\n            break;\r\n        case 'app-api-return':\r\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\r\n            console.log('await onAppApiReturn(message);');\r\n            await onAppApiReturn(message);\r\n            break;\r\n        default:\r\n            this.console.log('message: %s', JSON.stringify(message));\r\n            break;\r\n    }\r\n});\r\n\r\nfunction subFrameStarted(evt:any) {\r\n    var message = evt.data;\r\n    let subWin = evt.source as Window;\r\n    setSubAppWindow(subWin);\r\n    hideFrameBack(message.hash);\r\n    let msg:any = _.clone(nav.user);\r\n    msg.type = 'init-sub-win';\r\n    subWin.postMessage(msg, '*');\r\n}\r\nfunction hideFrameBack(hash:string) {\r\n    let el = document.getElementById(hash);\r\n    if (el !== undefined) el.hidden = true;\r\n}\r\nasync function initSubWin(message:any) {\r\n    console.log('initSubWin: set nav.user', message);\r\n    let user = nav.user = message; // message.user;\r\n    setCenterToken(user.id, user.token);\r\n    await nav.showAppView();\r\n}\r\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\r\n    let appInFrame = appsInFrame[hash];\r\n    if (appInFrame === undefined) return {name:apiName, url:undefined, urlDebug:undefined, token:undefined};\r\n    let {unit, predefinedUnit} = appInFrame;\r\n    let parts = apiName.split('/');\r\n    let ret = await uqTokenApi.uq({unit: unit||predefinedUnit, uqOwner: parts[0], uqName: parts[1]});\r\n    if (ret === undefined) {\r\n        console.log('apiTokenApi.api return undefined. api=%s, unit=%s', apiName, unit);\r\n        throw 'api not found';\r\n    }\r\n    return {name: apiName, url: ret.url, urlDebug:ret.urlDebug, token: ret.token};\r\n}\r\n\r\nasync function onAppApiReturn(message:any) {\r\n    let {apiName, url, urlDebug, token} = message;\r\n    let action = uqTokens[apiName];\r\n    if (action === undefined) {\r\n        throw 'error app api return';\r\n        //return;\r\n    }\r\n    let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n    console.log('onAppApiReturn(message:any): url=' + url + ', debug=' + urlDebug + ', real=' + realUrl);\r\n    action.url = realUrl;\r\n    action.token = token;\r\n    action.resolve(action);\r\n}\r\n\r\nexport function setAppInFrame(appHash: string):AppInFrame {\r\n    if (appHash) {\r\n        let parts = appHash.split('-');\r\n        let len = parts.length;\r\n        if (len > 0) {\r\n            let p = 1;\r\n            appInFrame.hash = parts[p++];\r\n            if (len>0) appInFrame.unit = Number(parts[p++]);\r\n            if (len>1) appInFrame.page = parts[p++];\r\n            if (len>2) appInFrame.param = parts.slice(p++);\r\n        }\r\n    }\r\n    return appInFrame;\r\n}\r\n\r\nexport function getExHashPos():number {\r\n    let hash = document.location.hash;\r\n    if (hash !== undefined && hash.length > 0) {\r\n        let pos = hash.lastIndexOf('#tv-');\r\n        if (pos < 0) pos = hash.lastIndexOf('#tvdebug-');\r\n        return pos;\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function getExHash():string {\r\n    let pos = getExHashPos();\r\n    if (pos < 0) return undefined;\r\n    return document.location.hash.substring(pos);\r\n}\r\n\r\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\r\n    let u:string;\r\n    for (;;) {\r\n        u = uid();\r\n        let a = appsInFrame[u];\r\n        if (a === undefined) {\r\n            appsInFrame[u] = {hash:u, unit:unitId};\r\n            break;\r\n        }\r\n    }\r\n    url += '#tv-' + u + '-' + unitId;\r\n    if (page !== undefined) {\r\n        url += '-' + page;\r\n        if (param !== undefined) {\r\n            for (let i=0; i<param.length; i++) {\r\n                url += '-' + param[i];\r\n            }\r\n        }\r\n    }\r\n    return {url: url, hash: u};\r\n}\r\n\r\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\r\n    let uqToken = uqTokens[uq];\r\n    if (uqToken !== undefined) return uqToken;\r\n    if (!isBridged()) {\r\n        let {unit, predefinedUnit} = appInFrame;\r\n        uqToken = await uqTokenApi.uq({unit: unit || predefinedUnit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken === undefined) {\r\n            let err = 'unauthorized call: uqTokenApi center return undefined!';\r\n            throw err;\r\n        }\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {url, urlDebug} = uqToken;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"appApi parent send: %s\", appInFrame.hash);\r\n    uqToken = {\r\n        name: uq,\r\n        url: undefined,\r\n        urlDebug: undefined,\r\n        token: undefined,\r\n        resolve: undefined,\r\n        reject: undefined,\r\n    };\r\n    uqTokens[uq] = uqToken;\r\n    return new Promise<UqToken>((resolve, reject) => {\r\n        uqToken.resolve = async (at) => {\r\n            let a = await at;\r\n            console.log('return from parent window: %s', JSON.stringify(a));\r\n            uqToken.url = a.url;\r\n            uqToken.urlDebug = a.urlDebug;\r\n            uqToken.token = a.token;\r\n            resolve(uqToken);\r\n        }\r\n        uqToken.reject = reject;\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: appInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n\r\ninterface BridgeCenterApi {\r\n    id: string;\r\n    resolve: (value?:any)=>any;\r\n    reject: (reason?:any)=>void;\r\n}\r\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\r\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\r\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\r\n    return await new Promise<any>(async (resolve, reject) => {\r\n        let callId:string;\r\n        for (;;) {\r\n            callId = uid();\r\n            let bca = brideCenterApis[callId];\r\n            if (bca === undefined) {\r\n                brideCenterApis[callId] = {\r\n                    id: callId,\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'center-api',\r\n            callId: callId,\r\n            url: url,\r\n            method: method,\r\n            body: body\r\n        }, '*');\r\n    });\r\n}\r\n\r\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\r\n    let {callId, url, method, body} = message;\r\n    let result = await callCenterapi.directCall(url, method, body);\r\n    from.postMessage({\r\n        type: 'center-api-return',\r\n        callId: callId,\r\n        result: result,\r\n    }, '*');\r\n}\r\n\r\nfunction bridgeCenterApiReturn(message:any) {\r\n    let {callId, result} = message;\r\n    let bca = brideCenterApis[callId];\r\n    if (bca === undefined) return;\r\n    brideCenterApis[callId] = undefined;\r\n    bca.resolve(result);\r\n}\r\n","import {nav} from '../ui/nav';\r\nimport {FetchError} from '../fetchError';\r\n\r\nexport interface HttpChannelUI {\r\n    startWait():void;\r\n    endWait():void;\r\n    showError(error:FetchError):Promise<void>;\r\n}\r\n\r\nexport class HttpChannelNavUI implements HttpChannelUI {\r\n    startWait() {\r\n        nav.startWait();\r\n    }\r\n    endWait() {\r\n        nav.endWait();\r\n    }\r\n    async showError(error:FetchError):Promise<void> {\r\n        nav.endWait();\r\n        /*\r\n        if (error.name === 'SyntaxError') {\r\n            error = {\r\n                name: error.name,\r\n                message: error.message,\r\n            }\r\n        }*/\r\n        await nav.onError(error);\r\n    }\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {HttpChannel} from './httpChannel';\r\nimport {HttpChannelUI, HttpChannelNavUI} from './httpChannelUI';\r\nimport {appUq, appInFrame, logoutUqTokens} from './appBridge';\r\nimport {ApiBase} from './apiBase';\r\nimport { host } from './host';\r\nimport { nav } from '../ui';\r\n\r\nlet channelUIs:{[name:string]: HttpChannel} = {};\r\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\r\n\r\nexport function logoutApis() {\r\n    channelUIs = {};\r\n    channelNoUIs = {};\r\n    logoutUnitxApis();\r\n    logoutUqTokens();\r\n}\r\n\r\ninterface UqLocal {\r\n    value: any;\r\n    tick?: number;\r\n    isNet?: boolean;\r\n}\r\ninterface UqLocals {\r\n    user: number;\r\n    unit: number;\r\n    uqs: {[uq:string]: UqLocal};\r\n}\r\n\r\nconst uqLocalEntities = 'uqLocalEntities';\r\nclass CacheUqLocals {\r\n    private local:UqLocals;\r\n\r\n    async loadAccess(uqApi: UqApi):Promise<any> {\r\n        try {\r\n            let {uqOwner, uqName} = uqApi;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqLocalEntities);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {user, uqs} = this.local;\r\n                if (user !== loginedUserId || uqs === undefined) {\r\n                    this.local = undefined;\r\n                }\r\n                else {\r\n                    for (let i in uqs) {\r\n                        let ul = uqs[i];\r\n                        ul.isNet = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: undefined,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let ret: any;\r\n            let un = uqOwner+'/'+uqName;\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {value} = uq;\r\n                ret = value;\r\n            }\r\n            if (ret === undefined) {\r\n                ret = await uqApi.__loadAccess();\r\n                this.saveLocal(un, ret);\r\n            }\r\n            return _.cloneDeep(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqLocalEntities);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private saveLocal(uqName:string, accessValue: any) {\r\n        this.local.uqs[uqName] = {\r\n            value: accessValue,\r\n            isNet: true,\r\n        }\r\n        let str = JSON.stringify(this.local);\r\n        localStorage.setItem(uqLocalEntities, str);\r\n    }\r\n\r\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\r\n        let {uqOwner, uqName} = uqApi;\r\n        let un = uqOwner+'/'+uqName;\r\n        let uq = this.local.uqs[un];\r\n        if (uq === undefined) return false;\r\n        let {isNet, value} = uq;\r\n        if (isNet === true) return true;\r\n        let ret = await uqApi.__loadAccess();\r\n        let isMatch = _.isMatch(value, ret);\r\n        if (isMatch === false) {\r\n            this.saveLocal(un, ret);\r\n            return false;\r\n        }\r\n        uq.isNet = true;\r\n        return true;\r\n    }\r\n}\r\n\r\nconst localUqs = new CacheUqLocals;\r\nexport class UqApi extends ApiBase {\r\n    private access:string[];\r\n    uqOwner: string;\r\n    uqName: string;\r\n    uq: string;\r\n\r\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\r\n        super(basePath, showWaiting);\r\n        if (uqName) {\r\n            this.uqOwner = uqOwner;\r\n            this.uqName = uqName;\r\n            this.uq = uqOwner + '/' + uqName;\r\n        }\r\n        this.access = access;\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channels: {[name:string]: HttpChannel};\r\n        let channelUI: HttpChannelNavUI;\r\n        if (this.showWaiting === true || this.showWaiting === undefined) {\r\n            channels = channelUIs;\r\n            channelUI = new HttpChannelNavUI();\r\n        }\r\n        else {\r\n            channels = channelNoUIs;\r\n        }\r\n        let channel = channels[this.uq];\r\n        if (channel !== undefined) return channel;\r\n        let uqToken = await appUq(this.uq, this.uqOwner, this.uqName);\r\n        this.token = uqToken.token;\r\n        channel = new HttpChannel(false, uqToken.url, uqToken.token, channelUI);\r\n        return channels[this.uq] = channel;\r\n    }\r\n\r\n\r\n    async update():Promise<string> {\r\n        return await this.get('update');\r\n    }\r\n\r\n    async __loadAccess():Promise<any> {\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        let ret = await this.get('access', {acc:acc});\r\n        return ret;\r\n    }\r\n\r\n    async loadAccess():Promise<any> {\r\n        return await localUqs.loadAccess(this);\r\n    }\r\n\r\n    async loadEntities():Promise<any> {\r\n        return await this.get('entities');\r\n    }\r\n\r\n    async checkAccess():Promise<boolean> {\r\n        return await localUqs.checkAccess(this);\r\n    }\r\n\r\n    async schema(name:string):Promise<any> {\r\n        return await this.get('schema/' + name);\r\n    }\r\n\r\n    async schemas(names:string[]):Promise<any[]> {\r\n        return await this.post('schema', names);\r\n    }\r\n\r\n    async tuidGet(name:string, id:number):Promise<any> {\r\n        return await this.get('tuid/' + name + '/' + id);\r\n    }\r\n\r\n    async tuidGetAll(name:string):Promise<any[]> {\r\n        return await this.get('tuid-all/' + name + '/');\r\n    }\r\n\r\n    async tuidSave(name:string, params):Promise<any> {\r\n        return await this.post('tuid/' + name, params);\r\n    }\r\n\r\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret = await this.post('tuids/' + name, {\r\n            arr: arr,\r\n            owner: owner,\r\n            key: key,\r\n            pageStart: pageStart,\r\n            pageSize: pageSize\r\n        });\r\n        return ret;\r\n    }\r\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\r\n    }\r\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\r\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\r\n    }\r\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\r\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\r\n    }\r\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\r\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\r\n            id: id,\r\n            $order: order\r\n        });\r\n    }\r\n\r\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\r\n        try {\r\n            let url = 'tuidids/' + name + '/';\r\n            if (arr !== undefined) url += arr;\r\n            else url += '$';\r\n            let ret = await this.post(url, ids);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async proxied(name:string, proxy:string, id:number):Promise<any> {\r\n        try {\r\n            let url = 'tuid-proxy/' + name + '/' + proxy + '/' + id;\r\n            let ret = await this.get(url);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async sheetSave(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name, data);\r\n    }\r\n\r\n    async sheetAction(name:string, data:object) {\r\n        return await this.put('sheet/' + name, data);\r\n    }\r\n\r\n    async stateSheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/states', data);\r\n    }\r\n\r\n    async stateSheetCount(name:string):Promise<any> {\r\n        return await this.get('sheet/' + name + '/statecount');\r\n    }\r\n\r\n    async getSheet(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/get/' + id);\r\n    }\r\n\r\n    async sheetArchives(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name + '/archives', data);\r\n    }\r\n\r\n    async sheetArchive(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/archive/' + id);\r\n    }\r\n\r\n    async action(name:string, data:object):Promise<any> {\r\n        return await this.post('action/' + name, data);\r\n    }\r\n\r\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p:any;\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return await this.post('query-page/' + name, p);\r\n    }\r\n\r\n    async query(name:string, params:any):Promise<any> {\r\n        let ret = await this.post('query/' + name, params);\r\n        return ret;\r\n    }\r\n/*\r\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n\r\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n*/\r\n    async user():Promise<any> {\r\n        return await this.get('user');\r\n    }\r\n}\r\n\r\nlet channels:{[unitId:number]: HttpChannel} = {};\r\n\r\nexport function logoutUnitxApis() {\r\n    channels = {};\r\n}\r\n\r\nexport class UnitxApi extends UqApi {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super('tv/', undefined, undefined, undefined, true);\r\n        this.unitId = unitId;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channel = channels[this.unitId];\r\n        if (channel !== undefined) return channel;\r\n        return channels[this.unitId] = await this.buildChannel();\r\n    }\r\n\r\n    private async buildChannel():Promise<HttpChannel> {\r\n        let channelUI = new HttpChannelNavUI();\r\n        let centerAppApi = new CenterAppApi('tv/', undefined);\r\n        let ret = await centerAppApi.unitxUq(this.unitId);\r\n        let {token, url, urlDebug} = ret;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        this.token = token;\r\n        return new HttpChannel(false, realUrl, token, channelUI);\r\n    }\r\n}\r\n\r\nlet centerHost:string;\r\n\r\nexport function setCenterUrl(url:string) {\r\n    console.log('setCenterUrl %s', url);\r\n    centerHost = url;\r\n    centerToken = undefined;\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nexport let centerToken:string|undefined = undefined;\r\n\r\nlet loginedUserId:number = 0;\r\nexport function setCenterToken(userId:number, t?:string) {\r\n    loginedUserId = userId;\r\n    centerToken = t;\r\n    console.log('setCenterToken %s', t);\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nlet centerChannelUI:HttpChannel;\r\nlet centerChannel:HttpChannel;\r\nfunction getCenterChannelUI():HttpChannel {\r\n    if (centerChannelUI !== undefined) return centerChannelUI;\r\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\r\n}\r\nfunction getCenterChannel():HttpChannel {\r\n    if (centerChannel !== undefined) return centerChannel;\r\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\r\n}\r\n\r\nexport abstract class CenterApi extends ApiBase {\r\n    constructor(path: string, showWaiting?: boolean) {\r\n        super(path, showWaiting);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        return (this.showWaiting === true || this.showWaiting === undefined)?\r\n            getCenterChannelUI():\r\n            getCenterChannel();\r\n    }\r\n}\r\n\r\nconst uqTokens = 'uqTokens';\r\nexport class UqTokenApi extends CenterApi {\r\n    private local: UqLocals;\r\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\r\n        try {\r\n            let {unit:unitParam, uqOwner, uqName} = params;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqTokens);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {unit, user} = this.local;\r\n                if (unit !== unitParam || user !== loginedUserId) this.local = undefined;\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: params.unit,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let un = uqOwner+'/'+uqName;\r\n            let nowTick = new Date().getTime();\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {tick, value} = uq;\r\n                if ((nowTick - tick) < 24*3600*1000) {\r\n                    return _.clone(value);\r\n                }\r\n            }\r\n            let ret = await this.get('app-uq', params);\r\n            this.local.uqs[un] = {\r\n                tick: nowTick,\r\n                value: ret,\r\n            }\r\n            localStorage.setItem(uqTokens, JSON.stringify(this.local));\r\n            return _.clone(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqTokens);\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\r\n\r\nexport class CallCenterApi extends CenterApi {\r\n    directCall(url:string, method:string, body:any):Promise<any> {\r\n        return this.call(url, method, body);\r\n    }\r\n}\r\nexport const callCenterapi = new CallCenterApi('', undefined);\r\n\r\nexport interface App {\r\n    id: number;\r\n    uqs: AppUq[];\r\n}\r\n\r\nexport interface AppUq {\r\n    id: number;\r\n    uqOwner: string;\r\n    uqName: string;\r\n    access: string;\r\n}\r\n\r\nexport interface UqService {\r\n    id: number;\r\n    url: string;\r\n    urlDebug: string;\r\n    token: string;\r\n}\r\n\r\nconst appUqs = 'appUqs';\r\n\r\nexport class CenterAppApi extends CenterApi {\r\n    private cachedUqs: App;\r\n    async uqs(appOwner:string, appName:string):Promise<App> {\r\n        let ret:any;\r\n        let ls = localStorage.getItem(appUqs);\r\n        if (ls !== null) {\r\n            let rLs = JSON.parse(ls);\r\n            let {appOwner:rAppOwner, appName:rAppName, value} = rLs;\r\n            if (appOwner === rAppOwner && appName === rAppName) ret = value;\r\n        }\r\n        if (ret === undefined) {\r\n            ret = await this.uqsPure(appOwner, appName);\r\n            let obj = {\r\n                appOwner:appOwner, \r\n                appName:appName, \r\n                value: ret,\r\n            }\r\n            localStorage.setItem(appUqs, JSON.stringify(obj));\r\n        }\r\n        return this.cachedUqs = _.cloneDeep(ret);\r\n    }\r\n    private async uqsPure(appOwner:string, appName:string):Promise<App> {\r\n        return await this.get('tie/app-uqs', {appOwner:appOwner, appName:appName});\r\n    }\r\n    async checkUqs(appOwner:string, appName:string):Promise<boolean> {\r\n        let ret = await this.uqsPure(appOwner, appName);\r\n        let {id:cachedId, uqs:cachedUqs} = this.cachedUqs;\r\n        let {id:retId, uqs:retUqs} = ret;\r\n        if (cachedId !== retId) return false;\r\n        if (cachedUqs.length !== retUqs.length) return false;\r\n        let len = cachedUqs.length;\r\n        for (let i=0; i<len; i++) {\r\n            if (_.isMatch(cachedUqs[i], retUqs[i]) === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    async unitxUq(unit:number):Promise<UqService> {\r\n        return await this.get('tie/unitx-uq', {unit:unit});\r\n    }\r\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\r\n        return await this.post('tie/reset-password', param);\r\n    }\r\n}\r\n\r\nexport async function loadAppUqs(appOwner:string, appName:string): Promise<App> {\r\n    let centerAppApi = new CenterAppApi('tv/', undefined);\r\n    //let unit = meInFrame.unit;\r\n    let ret = await centerAppApi.uqs(appOwner, appName);\r\n    centerAppApi.checkUqs(appOwner, appName).then(v => {\r\n        if (v === false) {\r\n            localStorage.removeItem(appUqs);\r\n            nav.start();\r\n        }\r\n    });\r\n    return ret;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Controller } from 'tonva-tools';\r\n\r\nexport abstract class Link {\r\n    abstract onClick: () => void;\r\n    abstract render(className?:string):JSX.Element;\r\n}\r\n\r\nexport class CLink extends Link {\r\n    private controller: Controller;\r\n    protected icon:string|JSX.Element;\r\n    protected label:string|JSX.Element;\r\n\r\n    constructor(controller:Controller) {\r\n        super();\r\n        this.controller = controller;\r\n        this.icon = controller.icon;\r\n        this.label = controller.label;\r\n    }\r\n\r\n    onClick = async () => {\r\n        await this.controller.start();\r\n    }\r\n\r\n    render(className?:string) {\r\n        return <div\r\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\r\n            onClick={this.onClick}>\r\n            {this.icon} &nbsp; {this.label}\r\n        </div>;\r\n        //return React.createElement(this.view, className);\r\n    }\r\n}\r\n","export * from './cLink';\r\n","\r\nlet subAppWindow:Window;\r\nfunction postWsToSubApp(msg:any) {\r\n    if (subAppWindow === undefined) return;\r\n    subAppWindow.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport function setSubAppWindow(win:Window) {\r\n    subAppWindow = win;\r\n}\r\n\r\nexport function postWsToTop(msg:any) {\r\n    window.top.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport abstract class WsBase {\r\n    wsBaseId:string;\r\n    private handlerSeed = 1;\r\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\r\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\r\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.anyHandlers[seed] = handler;\r\n        return seed;\r\n    }\r\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.msgHandlers[seed] = {type:type, handler: handler};\r\n        return seed;\r\n    }\r\n    endWsReceive(handlerId:number) {\r\n        delete this.anyHandlers[handlerId];\r\n        delete this.msgHandlers[handlerId];\r\n    }\r\n    async receive(msg:any) {\r\n        let {$type} = msg;\r\n        for (let i in this.anyHandlers) {\r\n            await this.anyHandlers[i](msg);\r\n        }\r\n        for (let i in this.msgHandlers) {\r\n            let {type, handler} = this.msgHandlers[i];\r\n            if (type !== $type) continue;\r\n            await handler(msg);\r\n        }\r\n    }\r\n}\r\n\r\nlet wsBaseSeed = 1;\r\nexport class WsBridge extends WsBase {\r\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\r\n}\r\n\r\nexport const wsBridge = new WsBridge();\r\n\r\nexport class WSChannel extends WsBase {\r\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\r\n    static centerToken:string;\r\n    private wsHost: string;\r\n    private token: string;\r\n    private ws: WebSocket;\r\n\r\n    constructor(wsHost: string, token: string) {\r\n        super();\r\n        this.wsHost = wsHost;\r\n        this.token = token;\r\n    }\r\n\r\n    static setCenterToken(token?: string) {\r\n        WSChannel.centerToken = token;\r\n    }\r\n    \r\n    connect():Promise<void> {\r\n        //this.wsHost = wsHost;\r\n        //this.token = token || WSChannel.centerToken;\r\n        if (this.ws !== undefined) return;\r\n        let that = this;\r\n        return new Promise((resolve, reject) => {\r\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\r\n            console.log('connect webSocket %s', this.wsHost);\r\n            ws.onopen = (ev) => {\r\n                console.log('webSocket connected %s', this.wsHost);\r\n                that.ws = ws;\r\n                resolve();\r\n            };\r\n            ws.onerror = (ev) => {\r\n                reject('webSocket can\\'t open!');\r\n            };\r\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\r\n            ws.onclose = (ev) => {\r\n                that.ws = undefined;\r\n                console.log('webSocket closed!');\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        if (this.ws !== undefined) {\r\n            this.ws.close();\r\n            this.ws = undefined;\r\n        }\r\n    }\r\n    private async wsMessage(event:any):Promise<void> {\r\n        try {\r\n            console.log('websocket message: %s', event.data);\r\n            let msg = JSON.parse(event.data);\r\n            postWsToSubApp(msg);\r\n            await this.receive(msg);\r\n        }\r\n        catch (err) {\r\n            console.log('ws msg error: ', err);\r\n        }\r\n    }\r\n    sendWs(msg:any) {\r\n        let netThis = this;\r\n        this.connect().then(() => {\r\n            netThis.ws.send(msg);\r\n        });\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport {TitleBar} from './titleBar';\r\n\r\nexport interface ScrollProps {\r\n    onScroll?: (e:any) => void;\r\n    onScrollTop?: () => void;\r\n    onScrollBottom?: () => void;\r\n}\r\ninterface ScrollViewProps extends ScrollProps {\r\n    className?: string;\r\n}\r\nconst scrollTimeGap = 100;\r\nclass ScrollView extends React.Component<ScrollViewProps, null> {\r\n    private bottomTime:number = 0;\r\n    private topTime:number = 0;\r\n\r\n    private onScroll = async (e) => {\r\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\r\n        if (onScroll) this.props.onScroll(e);\r\n        let el = e.target as HTMLBaseElement;\r\n        if (el.scrollTop < 30) {\r\n            //this.eachChild(this, 'top');\r\n            if (onScrollTop !== undefined) {\r\n                let topTime = new Date().getTime();\r\n                if (topTime-this.topTime > scrollTimeGap) {\r\n                    this.topTime = topTime;\r\n                    onScrollTop();\r\n                }\r\n            }\r\n        }\r\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\r\n            //this.eachChild(this, 'bottom');\r\n            if (onScrollBottom !== undefined) {\r\n                let bottomTime = new Date().getTime();\r\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\r\n                    this.bottomTime = bottomTime;\r\n                    onScrollBottom();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private eachChild(c:any, direct:'top'|'bottom') {\r\n        let { props } = c;\r\n        if (props === undefined)\r\n            return;\r\n        let { children } = props;\r\n        if (children === undefined)\r\n            return;\r\n        React.Children.forEach(children, (child, index) => {\r\n            let {_$scroll} = child as any;\r\n            if (_$scroll) _$scroll(direct);\r\n            console.log(child.toString());\r\n            this.eachChild(child, direct);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <main className={this.props.className} onScroll={this.onScroll}>\r\n                {this.props.children}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface Tab extends ScrollProps {\r\n    title: string;\r\n    icon?: string;\r\n    content?: JSX.Element | (()=>JSX.Element);\r\n    header?: string;\r\n    isSelected?: boolean;\r\n    redDot?: IComputedValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\nexport interface TabState extends Tab {\r\n    isMounted?: boolean;\r\n}\r\nexport interface PageProps extends ScrollProps {\r\n    back?: 'close' | 'back' | 'none';\r\n    header?: boolean | string | JSX.Element;\r\n    keepHeader?: boolean;\r\n    right?: JSX.Element;\r\n    sideBar?: JSX.Element;\r\n    footer?: JSX.Element;\r\n    tabs?: Tab[];\r\n    logout?: boolean | (()=>Promise<void>);\r\n}\r\nexport interface PageState {\r\n    cur?: Tab;\r\n    tabs?: TabState[];\r\n}\r\n\r\n@observer\r\nexport class Page extends React.Component<PageProps, PageState> {\r\n    private tabs:TabState[];\r\n    constructor(props: PageProps) {\r\n        super(props);\r\n        let {tabs} = props;\r\n        if (tabs === undefined || tabs.length === 0) return;\r\n        this.tabs = tabs;\r\n        let cur:Tab;\r\n        let tabStates:Tab[] = [];\r\n        for (let tab of tabs) {\r\n            let t:TabState = _.clone(tab);\r\n            if (cur === undefined) {\r\n                if (t.isSelected === true)\r\n                    cur = t;\r\n                else\r\n                    t.isSelected = false;\r\n            }\r\n            else {\r\n                t.isSelected = false;\r\n            }\r\n            t.isMounted = false;\r\n            tabStates.push(t);\r\n        }\r\n        this.state = {\r\n            cur: cur,\r\n            tabs: tabStates,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        let t0 = this.state.tabs[0];\r\n        if (t0 === undefined) return;\r\n        await this.onTabClick(t0);\r\n    }\r\n\r\n    private async onTabClick(tab: TabState) {\r\n        if (tab.isSelected === true) return;\r\n        let cur:TabState;\r\n        let tabs = this.state.tabs;\r\n        for (let t of tabs) {\r\n            if (t === tab) {\r\n                t.isSelected = true;\r\n                cur = t;\r\n            }\r\n            else\r\n                t.isSelected = false;\r\n        }\r\n        if (cur.isMounted !== true) {\r\n            let {load} = cur;\r\n            if (load !== undefined) {\r\n                await load();\r\n            }\r\n        }\r\n        this.setState({\r\n            cur: cur,\r\n            tabs: tabs\r\n        });\r\n    }\r\n\r\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\r\n    }\r\n\r\n    private renderTabs(footer: JSX.Element) {\r\n        const {header, back, right, keepHeader} = this.props;\r\n        let cur = this.state.cur;\r\n        let tabs = <div>{\r\n                this.state.tabs.map((tab, index) => {\r\n                    const {icon, isSelected, title, redDot} = tab;\r\n                    let img:any, redDotView:any, cn:any;\r\n                    if (icon !== undefined) img = <img src={icon} />;\r\n                    if (redDot !== undefined) {\r\n                        let v = redDot.get();\r\n                        if (v < 0) {\r\n                            cn = classNames('red-dot');\r\n                            redDotView = <u />;\r\n                        }\r\n                        else if (v > 0) {\r\n                            cn = classNames('red-dot', 'num');\r\n                            redDotView = <u>{v}</u>;\r\n                        }\r\n                    }\r\n                    return <div key={index}\r\n                        className= {classNames('va-tab', {cur: isSelected})}\r\n                        onClick={() => this.onTabClick(tab)}>\r\n                        {img}<div className={cn}>{title}{redDotView}</div>\r\n                    </div>\r\n                })\r\n            }</div>;\r\n        let titleBar;\r\n        if (header !== false) {\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\r\n                right={right} \r\n            />;\r\n        }\r\n\r\n        return <article className='page-container'>\r\n            {titleBar}\r\n            <section className=\"position-relative\">\r\n            {this.props.sideBar}\r\n            {\r\n                this.state.tabs.map((tab, index) => {\r\n                    let {isSelected, isMounted, content} = tab;\r\n                    if (isSelected === true || isMounted === true) {\r\n                        tab.isMounted = true;\r\n                        return <ScrollView key={index}\r\n                            className={classNames({invisible: isSelected===false})}\r\n                            onScroll={tab.onScroll}\r\n                            onScrollTop={tab.onScrollTop}\r\n                            onScrollBottom={tab.onScrollBottom}\r\n                        >\r\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\r\n                        </ScrollView>;\r\n                    }\r\n                })\r\n            }\r\n            </section>\r\n            {tabs}\r\n            {footer}\r\n        </article>;\r\n    }\r\n    private renderSingle(footer: JSX.Element) {\r\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children} = this.props;\r\n        let titleBar;\r\n        if (header !== false)\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={header as any}\r\n                right={right}\r\n                logout={this.props.logout}\r\n            />;\r\n        return (\r\n            <article className='page-container' onTouchStart={this.onTouchStart}>\r\n                {titleBar}\r\n                <section className=\"position-relative\">\r\n                    {this.props.sideBar}\r\n                    <ScrollView\r\n                        onScroll={onScroll}\r\n                        onScrollTop={onScrollTop}\r\n                        onScrollBottom={onScrollBottom}\r\n                    >\r\n                        {children}\r\n                    </ScrollView>\r\n                </section>\r\n                {footer}\r\n            </article>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {footer} = this.props;\r\n        let elFooter;\r\n        if (footer !== undefined) elFooter = <footer>{footer}</footer>;\r\n        if (this.tabs !== undefined)\r\n            return this.renderTabs(elFooter);\r\n        else\r\n            return this.renderSingle(elFooter);\r\n    }\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav } from './nav';\r\n\r\nexport interface ImageProps {\r\n    src: string;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nexport function Image(props: ImageProps) {\r\n    let {className, style, src} = props;\r\n    if (!src) {\r\n        return <div className={classNames(className, 'image-none')} style={style}>\r\n            <i className=\"fa fa-camera\" />\r\n        </div>;\r\n    }\r\n    if (src.startsWith(':') === true) {\r\n        src = nav.resUrl + src.substr(1);\r\n    }\r\n    return <img src={src} className={className} style={style} />;\r\n}\r\n","export const isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\r\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\r\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\r\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugBuilderHost = 'localhost:3009';\r\ninterface HostValue {\r\n    value: string;\r\n    local: boolean;\r\n}\r\nconst hosts:{[name:string]:HostValue} = {\r\n    centerhost: {\r\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \r\n        local: false\r\n    },\r\n    reshost: {\r\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\r\n        local: false\r\n    },\r\n    uqhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    unitxhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    \"uq-build\": {\r\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \r\n        local: false\r\n    }\r\n}\r\n\r\nfunction centerUrlFromHost(host:string) {return `http://${host}/`}\r\nfunction centerWsFromHost(host:string) {return `ws://${host}/tv/`}\r\n\r\nconst fetchOptions = {\r\n    method: \"GET\",\r\n    mode: \"no-cors\", // no-cors, cors, *same-origin\r\n    headers: {\r\n        \"Content-Type\": \"text/plain\"\r\n    },\r\n};\r\n\r\nclass Host {\r\n    url: string;\r\n    ws: string;\r\n    resHost: string;\r\n\r\n    async start() {\r\n        if (isDevelopment === true) {\r\n            await this.tryLocal();\r\n        }\r\n        let host = this.getCenterHost();\r\n        this.url = centerUrlFromHost(host);\r\n        this.ws = centerWsFromHost(host);\r\n        this.resHost = this.getResHost();\r\n    }\r\n\r\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\r\n    private async tryLocal() {\r\n        let promises:PromiseLike<any>[] = [];\r\n        let hostArr:string[] = [];\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            let {value} = hostValue;\r\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\r\n        }\r\n\r\n        for (let host of hostArr) {\r\n            let fetchUrl = this.debugHostUrl(host);\r\n            promises.push(localCheck(fetchUrl));\r\n        }\r\n        let results = await Promise.all(promises);\r\n        let len = hostArr.length;\r\n        for (let i=0; i<len; i++) {\r\n            let local = results[i];\r\n            let host = hostArr[i];\r\n            for (let j in hosts) {\r\n                let hostValue = hosts[j];\r\n                if (hostValue.value === host) {\r\n                    hostValue.local = local;\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        let p = 0;\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            hostValue.local = results[p];\r\n            ++p;\r\n        }\r\n        */\r\n    }\r\n\r\n    private getCenterHost():string {\r\n        let {value, local} = hosts.centerhost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return centerHost;\r\n    }\r\n\r\n    private getResHost():string {\r\n        let {value, local} = hosts.reshost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return resHost;\r\n    }\r\n\r\n    getUrlOrDebug(url:string, urlDebug:string):string {\r\n        if (isDevelopment !== true) return url;\r\n        if (!urlDebug) return url;\r\n        for (let i in hosts) {\r\n            let host = hosts[i];\r\n            let {value, local} = host;\r\n            let hostString = `://${i}/`;\r\n            let pos = urlDebug.indexOf(hostString);\r\n            if (pos > 0) {\r\n                if (local === false) return url;\r\n                urlDebug = urlDebug.replace(hostString, `://${value}/`);\r\n                return urlDebug;\r\n            }\r\n        }\r\n        return url;\r\n    }\r\n\r\n    async localCheck(urlDebug: string):Promise<boolean> {\r\n        return await localCheck(urlDebug);\r\n    }\r\n}\r\n\r\nexport const host:Host = new Host();\r\n\r\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\r\n// 网上找了上面的fetch timeout代码。\r\n// 尽管timeout了，fetch仍然继续，没有cancel\r\n\r\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\r\n//const timeout = 2000;\r\nconst timeout = 200;\r\n\r\nfunction fetchLocalCheck(url:string):Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url, fetchOptions as any)\r\n      .then(v => {\r\n          v.text().then(resolve).catch(reject);\r\n      })\r\n      .catch(reject);\r\n      const e = new Error(\"Connection timed out\");\r\n      setTimeout(reject, timeout, e);\r\n    });\r\n}\r\n\r\nasync function localCheck(url:string):Promise<boolean> {\r\n    try {\r\n        await fetchLocalCheck(url);\r\n        return true;\r\n    }\r\n    catch (err) {\r\n        return false;\r\n    }\r\n}\r\n","import jwtDecode from 'jwt-decode';\r\n\r\nexport interface Unit {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface Guest {\r\n    id: number;             // id = 0\r\n    guest: number;\r\n    token: string;\r\n}\r\n\r\nexport interface User extends Guest {\r\n    id: number;\r\n    name: string;\r\n    nick?: string;\r\n    icon?: string;\r\n}\r\n\r\n/*\r\nexport class UserInNav {\r\n    private user: User;\r\n    constructor(user: User) {\r\n        this.user = user;\r\n    }\r\n    get id():number {return this.user.id}\r\n    get name(): string {return this.user.name}\r\n    get nick(): string {return this.user.nick}\r\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\r\n    get guest(): number {return this.user.guest}\r\n    get token(): string {return this.user.token}\r\n}\r\n*/\r\nexport function decodeUserToken(token: string): User {\r\n    let ret:any = jwtDecode(token);\r\n    let user: User = {\r\n        id: ret.id,\r\n        name: ret.name,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return user;\r\n}\r\n\r\nexport function decodeGuestToken(token: string): Guest {\r\n    let ret:any = jwtDecode(token);\r\n    let guest: Guest = {\r\n        id: 0,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return guest;\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport { SearchBox, List, Muted, LMR } from 'tonva-react-form';\r\nimport { TuidMain, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { CLink } from '../link';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\n\r\nexport class VTuidMain extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected controller: CTuidMain;\r\n    onNew = () => this.event('new');\r\n    onList = () => this.event('list');\r\n    onSearch = async (key:string) => this.event('list', key);\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected entityRender(link: CLink, index: number): JSX.Element {\r\n        return link.render();\r\n    }\r\n\r\n    protected async entityClick(link: CLink) {\r\n        await link.onClick();\r\n    }\r\n\r\n    protected get view() {\r\n        let {label, proxyLinks, isFrom} = this.controller;\r\n        let newButton:any;\r\n        if (isFrom === false) newButton = <button className=\"btn btn-outline-success ml-2\" onClick={this.onNew}>新增</button>;\r\n        let content:any;\r\n        if (proxyLinks === undefined) {\r\n            let right = <>\r\n                {newButton}\r\n                <button className=\"btn btn-outline-info ml-2\" onClick={this.onList}>全部</button>\r\n            </>;\r\n            content = <LMR className='m-3' right={right}>\r\n                <SearchBox className=\"w-100\" size=\"md\"\r\n                    onSearch={this.onSearch} \r\n                    placeholder={'搜索'+label} />\r\n            </LMR>;\r\n        }\r\n        else {\r\n            content = <List className=\"my-2\"\r\n                header={<Muted>{label} 代理下列Tuid</Muted>}\r\n                items={proxyLinks}\r\n                item={{render: this.entityRender, onClick:this.entityClick}} />\r\n        }\r\n        return () => <Page header={label}>\r\n            {content}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\nimport { TuidMain, Tuid } from '../../entities';\r\n\r\nexport type TypeVTuidEdit = typeof VTuidEdit;\r\n\r\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    private vForm: VForm;\r\n    private id: number;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        if (param !== undefined) {\r\n            this.id = param.id;\r\n        }\r\n        this.openPage(this.editView);\r\n    }\r\n\r\n    protected get editView() {\r\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\r\n            {this.vForm.render('py-3')}\r\n        </Page>;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n        this.event('edit-end');\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.controller.entity.save(this.id, values);\r\n        let {id} = ret;\r\n        if (id < 0) {\r\n            let {unique} = this.controller.entity;\r\n            if (unique !== undefined) {\r\n                for (let u of unique) {\r\n                    this.vForm.setError(u, '不能重复');\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.controller.isCalling) {\r\n            this.returnCall(id);\r\n            this.closePage();\r\n            return;\r\n        }\r\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n\r\n        this.event('item-changed', {id: this.id, values: values});\r\n        return;\r\n    }\r\n\r\n    //protected view = TuidNewPage;\r\n}\r\n/*\r\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\r\n    let {label, id, vmForm} = vm;\r\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\r\n        {vmForm.render('mx-3 my-2')}\r\n    </Page>;\r\n});\r\n*/","import { nav, Page } from 'tonva-tools';\r\nimport { VTuidMainListBase, VTuidDivListBase } from './vTuidList';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../entities';\r\nimport { CTuid, TuidUI } from './cTuid';\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport React from 'react';\r\nimport { RowContent } from '../form/viewModel';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\r\n    protected mainRowContent: (row:any) => JSX.Element;\r\n    protected divRowContent: (row:any) => JSX.Element;\r\n\r\n    async open(param?:any): Promise<void> {\r\n        if (param === undefined)\r\n            await this.showMain(param);\r\n        else\r\n            await this.showDiv(param);\r\n    }\r\n\r\n    private async showMain(param) {\r\n        this.mainRowContent = this.ui.rowContent || RowContent;\r\n        await this.controller.searchMain(param);\r\n        this.openPage(this.mainView);\r\n    }\r\n\r\n    private async showDiv(ownerValue: any) {\r\n        let {divs} = this.ui;\r\n        if (divs !== undefined) {\r\n            this.divRowContent = divs[this.entity.name].rowContent;\r\n        }\r\n        if (this.divRowContent === undefined) {\r\n            this.divRowContent = RowContent;\r\n        }\r\n        let divItems = await this.controller.getDivItems(ownerValue);\r\n        this.openPage(this.divView, {items: divItems});\r\n    }\r\n\r\n    protected mainView = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header} back=\"close\">\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n\r\n    onSearchMain = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\r\n    clickMainRow = async (item:any) => {\r\n        this.ceasePage();\r\n        if (this.controller.entity.owner === undefined) {\r\n            this.returnCall(item);\r\n            return;\r\n        }\r\n        await this.showDiv(this.entity.getIdFromObj(item));\r\n    }\r\n\r\n    protected divView = (param:any) => {\r\n        return <Page header=\"选择Div\">\r\n            <List\r\n                items={param.items}\r\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\r\n        </Page>;\r\n    }\r\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\r\n    clickDivRow = (item:any) => {\r\n        this.ceasePage();\r\n        this.returnCall(item);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidMain } from '../../entities';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\n\r\nexport type TypeVTuidView = typeof VTuidView;\r\n\r\nexport class VTuidView extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    vForm: VForm;\r\n    id: number;\r\n\r\n    protected buildForm(param:any) {\r\n        this.vForm = this.createForm(undefined, param);\r\n    }\r\n\r\n    async open(param:any) {\r\n        this.buildForm(param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    render(param:any) {\r\n        this.buildForm(param);\r\n        return this.vForm.render();\r\n    }\r\n\r\n    async loadId(id: number) {\r\n        this.id = id;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.entity.save(this.id, values);\r\n        if (ret) {\r\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\r\n        }\r\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n            {this.vForm.render('py-3')}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport { VTuidView } from './vTuidView';\r\n\r\nexport class VTuidInfo  extends VTuidView {\r\n/*\r\n    async open(param?:any) {\r\n        this.open(this.view);\r\n    }\r\n*/\r\n/*\r\n    private view = () => {\r\n        return <Page>\r\n            TuidInfo\r\n        </Page>\r\n    }\r\n*/\r\n}\r\n","import { PageItems } from 'tonva-tools';\r\nimport { Tuid } from \"../../entities\";\r\n\r\nexport class TuidPageItems<T> extends PageItems<T> {\r\n    private tuid: Tuid;\r\n    constructor(tuid: Tuid) {\r\n        super(true);\r\n        this.tuid = tuid;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.tuid.search(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { TuidMain, Entity, Tuid, TuidDiv } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\r\nimport { JSONContent, RowContent } from '../form/viewModel';\r\n\r\nexport abstract class VTuidMainListBase  extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected rowContent: (row:any) => JSX.Element;\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        this.rowContent = this.ui.rowContent || RowContent;\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n    private rowKey = (item:any) => {\r\n        let {id} = item;\r\n        return id;\r\n    }\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidMainList extends VTuidMainListBase {\r\n    protected async onSelected(item:any) {\r\n        if (this.controller.isFrom === false)\r\n            this.event('edit', item.id);\r\n        else\r\n            this.event('info', item.id);\r\n    }\r\n}\r\n\r\nexport abstract class VTuidDivListBase  extends VEntity<TuidDiv, TuidUI, CTuidDiv> {\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        //this.PageItems = new TuidPageItems(this.entity);\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => {\r\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\r\n    }\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidDivList extends VTuidDivListBase {\r\n    protected async onSelected(item:any) {\r\n        this.event('edit', item.id);\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { TypeVPage, PageItems } from 'tonva-tools';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { TuidMain, Tuid, TuidDiv } from \"../../entities\";\r\nimport { VTuidMain } from './vTuidMain';\r\nimport { VTuidEdit } from './vTuidEdit';\r\nimport { VTuidSelect } from './vTuidSelect';\r\nimport { CUq } from \"../uq/cUq\";\r\nimport { CLink } from \"../link\";\r\nimport { VTuidInfo } from \"./vTuidInfo\";\r\nimport { TuidPageItems } from \"./pageItems\";\r\nimport { VTuidMainList } from './vTuidList';\r\n\r\nexport interface TuidUI extends EntityUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    content?: React.StatelessComponent<any>;\r\n    rowContent?: React.StatelessComponent<any>;\r\n    divs?: {\r\n        [div:string]: {\r\n            CTuidSelect?: typeof CTuidSelect;\r\n            content?: React.StatelessComponent<any>;\r\n            rowContent?: React.StatelessComponent<any>;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\r\n    PageItems:PageItems<any>;\r\n\r\n    protected buildPageItems():PageItems<any> {\r\n        return new TuidPageItems(this.entity.owner || this.entity);\r\n    }\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first(key);\r\n    }\r\n\r\n    async getDivItems(ownerId:number):Promise<any[]> {\r\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport class CTuidMain extends CTuid<TuidMain> {\r\n    constructor(cUq: CUq, entity: TuidMain, ui: TuidUI, res:any) {\r\n        super(cUq, entity, ui, res);\r\n        let tuid = this.entity;\r\n        this.proxies = tuid.proxies;\r\n        if (this.proxies !== undefined) {\r\n            this.proxyLinks = [];\r\n            for (let i in this.proxies) {\r\n                let link = this.cUq.linkFromName('tuid', i);\r\n                this.proxyLinks.push(link);\r\n            }\r\n        }\r\n    }\r\n\r\n    async from():Promise<CTuidMain> {\r\n        let ret = await this.entity.cFrom();\r\n        if (ret === undefined) return this;\r\n        return ret;\r\n    }\r\n\r\n    async cUqFrom():Promise<CUq> {\r\n        return await this.entity.cUqFrom();\r\n    }\r\n    async cEditFrom(): Promise<CTuidEdit> {\r\n        let cUq = await this.entity.cUqFrom();\r\n        return await cUq.cTuidEditFromName(this.entity.name);\r\n    }\r\n    async cInfoFrom(): Promise<CTuidInfo> {\r\n        let cUq = await this.entity.cUqFrom();\r\n        return await cUq.cTuidInfoFromName(this.entity.name);\r\n    }\r\n    async cSelectFrom(): Promise<CTuidSelect> {\r\n        let cUq = await this.entity.cUqFrom();\r\n        return await cUq.cTuidSelectFromName(this.entity.name);\r\n    }\r\n\r\n    getLable(tuid:Tuid):string {\r\n        if (tuid === this.entity) return this.label;\r\n        let {name} = tuid;\r\n        let {arrs} = this.res;\r\n        if (arrs !== undefined) {\r\n            let arr = arrs[name];\r\n            if (arr !== undefined) {\r\n                let label = arr.label;\r\n                if (label !== undefined) return label;\r\n            }\r\n        }\r\n        return name;\r\n    }\r\n\r\n    proxies: {[name:string]: TuidMain};\r\n    proxyLinks: CLink[];\r\n    isFrom: boolean;\r\n\r\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\r\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\r\n    protected get VTuidList():typeof VTuidMainList {return VTuidMainList}\r\n\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n        let v: TypeVPage<CTuidMain>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': v = this.VTuidEdit; break;\r\n            case 'list': v = this.VTuidList; break;\r\n            case 'edit': await this.edit(value); return;\r\n            case 'item-changed': this.itemChanged(value); return;\r\n            case 'info': \r\n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\r\n                await cTuidInfo.start(value);\r\n                return;\r\n        }\r\n        await this.openVPage(v, value);\r\n    }\r\n\r\n    protected async edit(id:number) {\r\n        let values:any = undefined;\r\n        if (id !== undefined) {\r\n            values = await this.entity.load(id);\r\n        }\r\n        let v = this.VTuidEdit;\r\n        await this.openVPage(v, values);\r\n    }\r\n\r\n    private itemChanged({id, values}:{id:number, values: any}) {\r\n        if (this.PageItems === undefined) return;\r\n        let items = this.PageItems.items;\r\n        let item = items.find(v => v.id === id);\r\n        if (item !== undefined) {\r\n            _.merge(item, values);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CTuidEdit extends CTuidMain {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        await this.edit(id);\r\n    }\r\n}\r\n\r\nexport class CTuidList extends CTuidMain {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        await this.openVPage(this.VTuidList);\r\n    }\r\n}\r\n\r\nexport class CTuidDiv extends CTuid<TuidDiv> {\r\n    protected async internalStart():Promise<void> {\r\n        alert('tuid div: ' + this.entity.name);\r\n    }\r\n}\r\n\r\nexport class CTuidSelect extends CTuid<Tuid> {\r\n    protected async internalStart(param?: any):Promise<void> {\r\n        await this.openVPage(this.VTuidSelect, param);\r\n    }\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        if (this.PageItems !== undefined) this.PageItems.reset();\r\n        return true;\r\n    }\r\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\r\n    idFromItem(item:any) {\r\n        return item.id;\r\n    }\r\n}\r\n\r\nexport class CTuidInfo extends CTuid<Tuid> {\r\n    protected async internalStart(id: any):Promise<void> {\r\n        let data = await this.entity.load(id)\r\n        await this.openVPage(this.VTuidInfo, data);\r\n    }\r\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\r\n}\r\n","export * from './cTuid';\r\nexport * from './vTuidMain';\r\nexport * from './vTuidEdit';\r\nexport * from './vTuidInfo';\r\nexport * from './vTuidView';\r\n","import * as React from 'react';\r\nimport { VField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VSubmit } from './vSubmit';\r\nimport { uid } from 'tonva-react-form';\r\n\r\nexport abstract class VBand {\r\n    protected label: string;\r\n    protected view = () => <div />;\r\n\r\n    constructor(label:string) {\r\n        this.label = label;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        //text-sm-right\r\n        return <div key={this.key} className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">\r\n                    {this.label}\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                    {this.renderContent()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {}\r\n    get key() {return this.label}\r\n    public getVFields():VField[] {return;}\r\n    public getVArr():VArr {return;}\r\n    public getVSubmit():VSubmit {return;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\r\n    }\r\n}\r\n\r\nexport interface FieldRes {\r\n    label: string;\r\n    placeHolder: string;\r\n    suffix: string;\r\n}\r\nexport class VFieldBand extends VBand {\r\n    protected vField:VField;\r\n    constructor(label:string, vField:VField) {\r\n        super(label);\r\n        this.vField = vField;\r\n    }\r\n\r\n    get key() {return this.vField.name}\r\n    public getVFields():VField[] {return [this.vField];}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return this.vField.render();\r\n        /*\r\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            {this.vField.render()}\r\n        </div>;*/\r\n    }\r\n}\r\n\r\nexport class VArrBand extends VBand {\r\n    protected vArr:VArr;\r\n    constructor(label:string, vArr:VArr) {\r\n        super(label);\r\n        this.vArr = vArr;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\r\n    get key() {return this.vArr.name}\r\n    public getVArr():VArr {return this.vArr;}\r\n\r\n    render():JSX.Element {\r\n        return <React.Fragment key={this.key}>\r\n            {this.vArr && this.vArr.render()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport class VFieldsBand extends VBand {\r\n    protected vFields: VField[];\r\n    constructor(label:string, vFields:VField[]) {\r\n        super(label);\r\n        this.vFields = vFields;\r\n    }\r\n\r\n    get key() {return this.vFields[0].name}\r\n    public getVFields():VField[] {return this.vFields;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            fields\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class VSubmitBand extends VBand {\r\n    protected vSubmit: VSubmit;\r\n    constructor(vSubmit:VSubmit) {\r\n        super(undefined);\r\n        this.vSubmit = vSubmit;\r\n    }\r\n\r\n    get key() {return '$submit'}\r\n\r\n    public getVSubmit():VSubmit {return this.vSubmit;}\r\n\r\n    render():JSX.Element {\r\n        return <div key=\"$submit\" className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <div className=\"offset-sm-2 col-sm-10\">\r\n                    {this.vSubmit.render()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames'\r\nimport { ViewModel } from \"./viewModel\";\r\nimport { VForm } from './vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VSubmit extends ViewModel {\r\n    private vForm: VForm;\r\n    constructor(vForm: VForm) {\r\n        super();\r\n        this.vForm = vForm;\r\n        this.caption = this.vForm.submitCaption;\r\n        this.className = 'btn btn-primary w-25';\r\n    }\r\n    @observable caption: string;\r\n    @observable className: string;\r\n\r\n    private onClickSubmit = async () => {\r\n        this.vForm.submit();\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let {isOk} = this.vForm;\r\n        return <button type=\"button\" \r\n            onClick={this.onClickSubmit}\r\n            className={this.className}\r\n            disabled={isOk === false}>\r\n            {this.caption}\r\n        </button>;\r\n    });\r\n}","\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any);\r\n}\r\n\r\nexport class RuleRequired extends Rule {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push('不能为空');\r\n    }\r\n}\r\n\r\nexport class RuleNum extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) defy.push('必须是数字');\r\n    }\r\n}\r\n\r\nexport class RuleInt extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\r\n            defy.push('必须是整数');\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleMin extends RuleNum {\r\n    constructor(min: number) {\r\n        super();\r\n        this.min = min;\r\n    }\r\n    min: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\r\n    }\r\n}\r\n\r\nexport class RuleMax extends RuleNum {\r\n    constructor(max: number) {\r\n        super();\r\n        this.max = max;\r\n    }\r\n    max: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { computed, action } from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { ViewModel } from \"../viewModel\";\r\nimport { VForm, FormMode } from '../vForm';\r\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\r\n\r\nexport abstract class VField extends ViewModel {\r\n    protected form: VForm;\r\n    protected fieldUI: FieldUI;\r\n    protected fieldRes:FieldRes;\r\n    protected field: Field;\r\n    protected rules: Rule[];\r\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super();\r\n        this.form = form;\r\n        this.field = field;\r\n        this.name = field.name;\r\n        this.fieldUI = fieldUI || {} as any;\r\n        this.fieldRes = fieldRes || {} as any;\r\n        this.init();\r\n    }\r\n\r\n    name: string;\r\n\r\n    protected init() {\r\n        this.buildRules();\r\n    }\r\n\r\n    protected buildRules() {\r\n        this.rules = [];\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field !== undefined && this.field.null === false) {\r\n            this.rules.push(new RuleRequired);\r\n        }\r\n    }\r\n\r\n    @computed get checkRules(): string[] {\r\n        let defy = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        return defy;\r\n    }\r\n\r\n    @computed get isOk() {\r\n        if (this.rules.length === 0) return true;\r\n        let defy = this.checkRules;\r\n        return defy.length === 0;\r\n    }\r\n\r\n    @computed get value() { return this.form.values[this.name]; }\r\n    setValue(v:any) {\r\n        this.form.values[this.name]=v; \r\n    }\r\n    get error() { return this.form.errors[this.name]; }\r\n    set error(err:any) { this.form.errors[this.name]=err; }\r\n    protected parse(str:string):any {return str;}\r\n    get readonly():boolean {\r\n        let {mode} = this.form;\r\n        return mode === FormMode.readonly || \r\n            mode === FormMode.edit && this.fieldUI.editable === false;\r\n    }\r\n}\r\n\r\nexport class VUnknownField extends VField {\r\n    protected view = () => {\r\n        //let {name, type} = this.fieldUI;\r\n        let type='', name = '';\r\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\r\n            placeholder={'unkown control: ' + type + '-' + name} />;\r\n    }\r\n}\r\n\r\nexport abstract class VInputControl extends VField {\r\n    protected fieldUI: FieldInputUI;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected inputType:string;\r\n    protected get maxLength():number {return}\r\n\r\n    protected renderError = (className:string) => {\r\n        let {errors} = this.form;\r\n        let error = errors[this.name];\r\n        if (error === undefined) return;\r\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\r\n    }\r\n\r\n    /*\r\n    get value() {\r\n        return super.value;\r\n    }*/\r\n    setValue(v:any) {\r\n        super.setValue(v); this.setInputValue(); \r\n    }\r\n\r\n    protected ref = (input:HTMLInputElement) => {\r\n        this.input = input;\r\n        this.setInputValue();\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    protected onBlur = () => {\r\n        let defy = this.checkRules;\r\n        if (defy.length > 0) {\r\n            this.error = defy[0];\r\n        }\r\n        this.form.computeFields();\r\n    }\r\n\r\n    protected onChange = (evt: React.ChangeEvent<any>) => {\r\n        let v = this.parse(evt.currentTarget.value);\r\n        if (v === null) {\r\n            return;\r\n        }\r\n        this.setValue(v);\r\n    }\r\n\r\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\r\n    \r\n    protected view = observer(() => {\r\n        let {required} = this.fieldUI;\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = ['form-control', 'form-control-input'];\r\n        let errCN = 'text-danger small mt-1 mx-2';\r\n    \r\n        let redDot;\r\n        let input;\r\n        if (this.readonly === true) {\r\n            input = <input className={classNames(ctrlCN, 'bg-light')}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                readOnly={true}\r\n            />;\r\n        }\r\n        else {\r\n            input = <input className={classNames(ctrlCN)}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                onFocus={this.onFocus}\r\n                onBlur={this.onBlur}\r\n                onChange={this.onChange}\r\n                placeholder={placeHolder}\r\n                readOnly={false}\r\n                maxLength={this.maxLength}\r\n                onKeyPress={this.onKeyPress}\r\n            />;\r\n            if (required === true || this.field.null === false) {\r\n                redDot = <RedMark />;\r\n            }\r\n        }\r\n\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n\r\n        return <>\r\n            {redDot}\r\n            {inputGroup}\r\n            {this.renderError(errCN)}\r\n        </>\r\n    });\r\n}\r\n\r\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\r\n\r\nexport class VStringField extends VInputControl {\r\n    protected fieldUI: FieldStringUI;\r\n    protected inputType:string = 'text';\r\n    protected get maxLength():number {return this.field.size}\r\n}\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport abstract class VNumberControl extends VInputControl {\r\n    protected fieldUI: FieldNumberUI;\r\n    protected extraChars: number[];\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        if (this.fieldUI !== undefined) {\r\n            let {min, max} = this.fieldUI;\r\n            if (min !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n            }\r\n            else {\r\n                this.extraChars.push(KeyCode_Neg);\r\n            }\r\n    \r\n            if (max !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n            }\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'bigint':\r\n            case 'int':\r\n            case 'smallint':\r\n            case 'tinyint':\r\n                this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleNum);\r\n        let {min, max} = this.fieldUI;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n    }\r\n\r\n    inputType:string = 'number';\r\n\r\n    protected parse(text:string):any {\r\n        try {\r\n            if (text.trim().length === 0) return undefined;\r\n            let ret = Number(text);\r\n            return (ret === NaN)? null : ret;\r\n        }\r\n        catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        if (this.parse(this.input.value) == v) return;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.input.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.input.value = v;\r\n    }\r\n}\r\n\r\nexport class VIntField extends VNumberControl {\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleInt);\r\n    }\r\n}\r\n\r\nexport class VDecField extends VNumberControl {\r\n}\r\n\r\nexport class VTextField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateTimeField extends VStringField {\r\n\r\n}\r\n","import React from 'react';\r\nimport { VField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { VForm } from '../vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { FieldRes } from '../vBand';\r\n\r\nexport class VComputeField extends VField {\r\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\r\n        super(form, field, undefined, fieldRes);\r\n    }\r\n    protected view = observer(() => {\r\n        let value = this.form.values[this.field.name];\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = 'form-control form-control-input bg-light';\r\n        if (value === null) value = '';\r\n        let input = <input className={ctrlCN}\r\n            type=\"text\"\r\n            placeholder={placeHolder}\r\n            readOnly={true}\r\n            value={value}/>\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n        return inputGroup;\r\n        /*\r\n            return <div \r\n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\r\n            {value} &nbsp;\r\n        </div>;\r\n        */\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { IObservableArray, observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { List, FA, Muted } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\r\nimport { ArrFields, Field } from '../../entities';\r\nimport { VForm, FieldInputs, FormMode } from './vForm';\r\nimport { FormArr } from '../formUI';\r\n\r\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\r\n\r\nexport class VArr extends ViewModel {\r\n    protected mode: FormMode;\r\n    protected label: any;\r\n    protected header: any;\r\n    protected footer: any;\r\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\r\n    protected onEditRow: ArrEditRow;\r\n    protected ownerForm:VForm;\r\n    protected vForm:VForm;\r\n    protected rowContent:TypeContent;\r\n    protected none: string;\r\n    protected newSubmitCaption: string;\r\n    protected editSubmitCaption: string;\r\n    protected addRow: ()=>Promise<void>;\r\n\r\n    name:string;\r\n    list: IObservableArray<any>;\r\n\r\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\r\n        super();\r\n        this.ownerForm = ownerForm;\r\n        let {name, fields} = arr;\r\n        this.name = name;\r\n        let {ui, res, mode, inputs, values} = ownerForm;\r\n        let arrsRes = res.arrs;\r\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\r\n        let {label, none, newSubmit, editSubmit} = arrRes;\r\n        this.none = none || ownerForm.none;\r\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\r\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\r\n        this.label = label || name;\r\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\r\n        this.rowContent = arrUI.rowContent;// || JSONContent;\r\n        this.mode = mode;\r\n        if (this.onEditRow === undefined) {\r\n            this.vForm = new VForm({\r\n                fields: fields,\r\n                arrs: undefined,\r\n                ui: arrUI,\r\n                res: arrRes,\r\n                inputs: inputs[name] as FieldInputs,\r\n                none: ownerForm.none,\r\n                submitCaption: 'submit',\r\n                arrNewCaption: undefined,\r\n                arrEditCaption: undefined,\r\n                arrTitleNewButton: undefined,\r\n                mode: mode,\r\n            }, \r\n            mode===FormMode.readonly? undefined: this.onSubmit);\r\n        }\r\n        else {\r\n            this.onEditRow = onEditRow;\r\n        }\r\n        this.list = values[name];\r\n    }\r\n\r\n    reset() {\r\n        this.vForm.reset();\r\n        this.list.clear();\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {\r\n        this.addRow = addRow;\r\n    }\r\n\r\n    protected rowPage = () => {\r\n        return <Page header={this.label} back=\"close\">\r\n            {this.vForm.render('py-3')}\r\n        </Page>\r\n    }\r\n    private onSubmit = async () => {\r\n        let {valueBoxs} = this.vForm;\r\n        await this.onRowChanged(valueBoxs);\r\n    }\r\n\r\n    private onRowChanged = async (rowValues:any) => {\r\n        if (this.rowValues === undefined) {\r\n            rowValues.$owner = this.ownerForm.values;\r\n            this.list.push(rowValues);\r\n            if (this.onEditRow === undefined)\r\n                this.vForm.reset();\r\n            else\r\n                await this.onEditRow(undefined, this.onRowChanged);\r\n        }\r\n        else {\r\n            _.merge(this.rowValues, rowValues);\r\n            if (this.onEditRow === undefined) nav.pop();\r\n        }\r\n    }\r\n\r\n    private renderItem = (item:any, index:number) => {\r\n        if (this.rowContent === undefined)\r\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\r\n        return <this.rowContent {...item} />;\r\n    }\r\n    private showRow = async (rowValues:any):Promise<any> => {\r\n        if (this.onEditRow !== undefined) {\r\n            await this.onEditRow(rowValues, this.onRowChanged);\r\n            return;\r\n        }\r\n        this.vForm.reset();\r\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\r\n        nav.push(<this.rowPage />);\r\n    }\r\n    private editRow = async (rowValues:any): Promise<void> => {\r\n        this.rowValues = rowValues;\r\n        let {vSubmit} = this.vForm;\r\n        if (vSubmit !== undefined) {\r\n            vSubmit.caption = this.editSubmitCaption;\r\n            vSubmit.className = 'btn btn-outline-success';\r\n        }\r\n        this.vForm.mode = this.ownerForm.mode;\r\n        await this.showRow(rowValues);\r\n    }\r\n    private internalAddRow = async () => {\r\n        this.rowValues = undefined;\r\n        let {vSubmit} = this.vForm;\r\n        vSubmit.caption = this.newSubmitCaption;\r\n        vSubmit.className = 'btn btn-outline-success';\r\n        this.vForm.reset();\r\n        this.vForm.mode = FormMode.new;\r\n        await this.showRow(undefined);\r\n    }\r\n\r\n    protected view = () => {\r\n        let button;\r\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\r\n            button = <button onClick={this.addRow || this.internalAddRow}\r\n                type=\"button\" \r\n                className=\"btn btn-link p-0\">\r\n                {this.ownerForm.arrTitleNewButton}\r\n            </button>;\r\n        }\r\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\r\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\r\n            {button}\r\n        </div>;\r\n        return <List className=\"pb-3\"\r\n            header={header}\r\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\r\n            items={this.list}\r\n            item={{render: this.renderItem, onClick: this.editRow}} />;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from '../../../tools';\r\nimport { Field, Tuid } from '../../../entities';\r\nimport { VField, RedMark } from \"./vField\";\r\nimport { FieldUI } from '../../formUI';\r\nimport { VForm, FieldInput, FormMode } from '../vForm';\r\nimport { FieldRes } from '../vBand';\r\n\r\nconst buttonStyle:React.CSSProperties = {\r\n    textAlign:'left', \r\n    paddingLeft:'0.75rem', \r\n    paddingRight:'0.75rem', \r\n    overflow: 'hidden'\r\n};\r\n\r\nexport class VTuidField extends VField {\r\n    protected vForm: VForm;\r\n    protected input: FieldInput;\r\n    protected tuid: Tuid;\r\n\r\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super(vForm, field, fieldUI, fieldRes);\r\n        this.tuid = field._tuid;\r\n        this.vForm = vForm;\r\n        this.input = vForm.inputs[field.name] as FieldInput;\r\n    }\r\n\r\n    onClick = async () => {\r\n        if (this.readonly === true) {\r\n            if (!this.value) return;\r\n            await this.tuid.showInfo(this.value.id);\r\n            return;\r\n        }\r\n        let id:number;\r\n        if (this.input !== undefined) {\r\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\r\n        }\r\n        else {\r\n            alert('call undefined');\r\n            id = 0;\r\n        }\r\n        this.setValue(this.tuid.boxId(id));\r\n    }\r\n    protected view = observer(() => {\r\n        let {placeHolder} = this.fieldRes;\r\n        let disabled:boolean = false;\r\n        let {_ownerField} = this.field;\r\n        if (_ownerField !== undefined) {\r\n            let {name, arr} = _ownerField;\r\n            disabled = this.vForm.getValue(name) === null;\r\n        }\r\n        let content;\r\n        if (this.value === null)\r\n            content = <>{placeHolder || this.input.placeHolder}</>;\r\n        else if (typeof this.value === 'object') {\r\n            content = tv(this.value);\r\n        }\r\n        else {\r\n            let idBox = this.tuid.boxId(this.value);\r\n            content = tv(idBox); // idBox.content();\r\n        }\r\n        if (this.readonly === true)\r\n        {\r\n            return <div \r\n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </div>;\r\n        }\r\n        let redDot;\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field.null === false) {\r\n            redDot = <RedMark />;\r\n        }\r\n        return <>\r\n            {redDot}\r\n            <button className=\"form-control btn btn-outline-info\"\r\n                type=\"button\"\r\n                disabled={disabled}\r\n                style={buttonStyle}\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </button>\r\n        </>;\r\n    })\r\n}\r\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from \"./vBand\";\r\nimport { Field, ArrFields } from \"../../entities\";\r\nimport { VForm, FormOptions } from \"./vForm\";\r\nimport { FormItems, FieldUI, FormItem } from \"../formUI\";\r\nimport { VSubmit } from \"./vSubmit\";\r\nimport { VField, buildVField, VComputeField } from \"./vField\";\r\nimport { VArr } from \"./vArr\";\r\nimport { VTuidField } from \"./vField/vTuidField\";\r\n\r\nexport class BandsBuilder {\r\n    private vForm: VForm;\r\n    private onSubmit: (values:any)=>Promise<void>;\r\n    private fields: Field[];\r\n    private arrs: ArrFields[];\r\n    private formItems: FormItems;\r\n    private layout: string[];\r\n    private res: any;\r\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.vForm = vForm;\r\n        this.onSubmit = onSubmit;\r\n        let {fields, arrs, ui, res} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        if (ui !== undefined) {\r\n            let {items, layout} = ui;\r\n            this.formItems = items;\r\n            this.layout = layout;\r\n        }\r\n        this.res = res;\r\n    }\r\n\r\n    build():VBand[] {\r\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\r\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\r\n    }\r\n\r\n    private resFromName(name:string, res:any):string|FieldRes {\r\n        if (res === undefined) return;\r\n        let {fields} = res;\r\n        if (fields === undefined) return;\r\n        return fields[name] || name;\r\n    }\r\n\r\n    private bandsOnFly():VBand[] {\r\n        let bands:VBand[] = [];\r\n        this.bandsFromFields(bands, this.fields, this.res);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\r\n        }\r\n        if (this.onSubmit !== undefined) {\r\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\r\n        }\r\n        return bands;\r\n    }\r\n\r\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\r\n        if (fields === undefined) return;\r\n        for (let field of fields) bands.push(this.bandFromField(field, res));\r\n    }\r\n\r\n    private bandsFromLayout():VBand[] {\r\n        let bands:VBand[] = [];\r\n        /*\r\n        for (let bandUI of this.bandUIs)  {\r\n            let band = this.bandFromUI(bandUI);\r\n            bands.push(band);\r\n        }\r\n        */\r\n        return bands;\r\n    }\r\n\r\n    /*\r\n    private bandFromUI(bandUI:BandUI):VBand {\r\n        let {band} = bandUI;\r\n        switch (band) {\r\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\r\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\r\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\r\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\r\n        }\r\n    }\r\n    \r\n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\r\n        let {label} = bandUI;\r\n        let vField = this.vFieldFromUI(bandUI);\r\n        return new VFieldBand(label, vField);\r\n    }\r\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\r\n        let {label, name} = bandUI;\r\n        let vArr = this.vArrFromUI(bandUI);\r\n        return new VArrBand(label, vArr);\r\n    }\r\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\r\n        let {label, fieldUIs} = bandUI;\r\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\r\n        return new VFieldsBand(label, vFields);\r\n    }\r\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\r\n        if (this.onSubmit === undefined) return;\r\n        let vSubmit = new VSubmit(this.vForm);\r\n        return new VSubmitBand(vSubmit);\r\n    }\r\n    */\r\n/*\r\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\r\n        let fieldUI:FieldUI = undefined;\r\n        if (formItem !== undefined) {\r\n            if (typeof formItem === 'function') {\r\n                return new VComputeField(this.vForm, field, fieldRes);\r\n            }\r\n        }\r\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\r\n        if (ret !== undefined) return ret;\r\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\r\n    }\r\n*/\r\n    private bandFromField(field:Field, res:any):VBand {\r\n        let {name} = field;\r\n        let fieldRes:FieldRes;\r\n        let rfn = this.resFromName(name, res);\r\n        let label:string;\r\n        if (typeof rfn === 'object') {\r\n            label = rfn.label;\r\n            fieldRes = rfn;\r\n        }\r\n        else {\r\n            label = rfn as string;\r\n            fieldRes = undefined;\r\n        }\r\n        let vField:VField;\r\n        let formItem:FormItem;\r\n        if (this.formItems !== undefined) formItem = this.formItems[name];\r\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\r\n        //let fieldUI:FieldUI = undefined;\r\n        if (typeof formItem === 'function') {\r\n            vField = new VComputeField(this.vForm, field, fieldRes);\r\n        }\r\n        else {\r\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        if (vField === undefined) {\r\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        return new VFieldBand(label || name, vField);\r\n    }\r\n\r\n    private bandFromArr(arr: ArrFields):VBand {\r\n        let {name, fields} = arr;\r\n        //let row = JSONContent;\r\n        //let bands:VBand[] = [];\r\n        //this.bandsFromFields(bands, fields, res);\r\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\r\n        return new VArrBand(name, vArr);\r\n    }\r\n\r\n    /*\r\n    private vFieldFromUI(fieldUI:FieldUI):VField {\r\n        return;\r\n    }\r\n\r\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\r\n        return;\r\n    }\r\n    */\r\n}\r\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { VForm } from '../vForm';\r\nimport { FieldUI } from '../../formUI';\r\n\r\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\r\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\r\n    switch (field.type) {\r\n        default: return;\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n            vField = VIntField;\r\n            break;\r\n        case 'bigint':\r\n            let {_tuid} = field;\r\n            if (_tuid !== undefined) return;\r\n            vField = VIntField;\r\n            break;\r\n        case 'dec':\r\n            vField = VDecField;\r\n            break;\r\n        case 'char':\r\n            vField = VStringField;\r\n            break;\r\n        case 'text':\r\n            vField = VTextField;\r\n            break;\r\n        case 'datetime':\r\n            vField = VDateTimeField;\r\n            break;\r\n    }\r\n    return new vField(form, field, fieldUI, fieldRes);\r\n}\r\n\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { observer } from \"mobx-react\";\r\nimport { VBand } from './vBand';\r\nimport { BandsBuilder } from './bandsBuilder';\r\nimport { Field, ArrFields } from '../../entities';\r\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\r\nimport { VArr } from './vArr';\r\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\r\nimport { VField } from './vField';\r\nimport { VSubmit } from './vSubmit';\r\nimport { IObservableArray } from 'mobx';\r\nimport { FA } from 'tonva-react-form';\r\n\r\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\r\nexport interface FieldInput {\r\n    select: FieldCall;\r\n    content: React.StatelessComponent<any>;\r\n    placeHolder: string;\r\n}\r\nexport interface FieldInputs {\r\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\r\n}\r\nexport enum FormMode {new, edit, readonly}\r\n\r\nexport interface FormOptions {\r\n    fields: Field[];\r\n    arrs?: ArrFields[];\r\n    ui: FormUIBase;\r\n    res: any;\r\n    inputs: FieldInputs;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n    none: string;\r\n    mode: FormMode;\r\n}\r\n\r\nexport class VForm {\r\n    protected fields: Field[];\r\n    protected arrs: ArrFields[];\r\n    protected bands: VBand[];\r\n    protected bandColl: {[key:string]: VBand};\r\n    protected onSubmit: ()=>Promise<void>;\r\n\r\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\r\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        this.ui = ui;\r\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\r\n        this.res = res;\r\n        this.inputs = inputs;\r\n        this.none = none;\r\n        this.submitCaption = submitCaption;\r\n        this.arrNewCaption = arrNewCaption;\r\n        this.arrEditCaption = arrEditCaption;\r\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\r\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\r\n        else this.mode = mode;\r\n        this.buildFormValues();\r\n        this.buildBands(options, onSubmit);\r\n        this.onSubmit = onSubmit;\r\n    }\r\n\r\n    ui: FormUI;\r\n    res: any;\r\n    values: any;\r\n    errors: any;\r\n    formItems: FormItems;\r\n    mode: FormMode;\r\n    vFields: {[name:string]:VField} = {};\r\n    vArrs: {[name:string]: VArr} = {};\r\n    vSubmit: VSubmit;\r\n    inputs: FieldInputs;\r\n    none: string;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n\r\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.bandColl = {};\r\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\r\n        this.bands = bandsBuilder.build();\r\n        for (let band of this.bands) {\r\n            this.bandColl[band.key] = band;\r\n            let vFields = band.getVFields();\r\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\r\n            let vArr = band.getVArr();\r\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\r\n            let vSubmit = band.getVSubmit();\r\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\r\n        }\r\n    }\r\n\r\n    private onFormSubmit = (event:React.FormEvent<any>) => {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    protected view = observer(({className}:{className:string}) => {\r\n        return <form className={className} onSubmit={this.onFormSubmit}>\r\n            {this.bands.map(v => v.render())}\r\n        </form>;\r\n    });\r\n\r\n    getBand(name:string) {\r\n        return this.bandColl[name];\r\n    }\r\n\r\n    computeFields() {\r\n        if (this.formItems === undefined) return;\r\n        let values = this.values;\r\n        for (let i in this.formItems) {\r\n            let item = this.formItems[i];\r\n            if (typeof item !== 'function') continue;\r\n            values[i] = item.call(this, values);\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.onSubmit === undefined) return;\r\n        await this.onSubmit();\r\n    }\r\n    \r\n    getValues() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name} = f;\r\n            let v = values[name]\r\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\r\n        }\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                let {name, fields, id, order} = arr;\r\n                let list = ret[name] = [];\r\n                let rows = this.vArrs[name].list;\r\n                for (let row of rows) {\r\n                    let item = {} as any;\r\n                    if (id !== undefined) item[id] = row[id];\r\n                    if (order !== undefined) item[order] = row[order];\r\n                    for (let f of fields) {\r\n                        let {name:fn} = f;\r\n                        let v = row[fn]\r\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\r\n                    }\r\n                    list.push(item);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    get valueBoxs() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name, _tuid} = f;\r\n            let v = values[name]\r\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n        }\r\n        if (this.arrs === undefined) return ret;\r\n        for (let arr of this.arrs) {\r\n            let {name, fields, id, order} = arr;\r\n            let list = ret[name] = this.vArrs[name].list.slice();\r\n            for (let row of list) {\r\n                for (let f of fields) {\r\n                    let {name:fn, _tuid} = f;\r\n                    let v = row[fn]\r\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setValues(initValues:any) {\r\n        if (initValues === undefined) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            errors[fn] = undefined;\r\n            let v =  initValues[fn];\r\n            values[fn] = v;\r\n        }\r\n        // 还要设置arrs的values\r\n        for (let i in this.vArrs) {\r\n            let list = initValues[i];\r\n            if (list === undefined) continue;\r\n            let arrList = values[i] as IObservableArray<any>;\r\n            arrList.clear();\r\n            arrList.push(...list);\r\n        }\r\n    }\r\n\r\n    @computed get isOk():boolean {\r\n        for (let i in this.vFields) {\r\n            if (this.vFields[i].isOk === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    reset() {\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\r\n            values[fn] = null;\r\n            errors[fn] = undefined;\r\n        }\r\n        for (let i in this.vFields) {\r\n            let ctrl = this.vFields[i];\r\n            let cn = ctrl.name;\r\n            if (cn === undefined) continue;\r\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\r\n            ctrl.setValue(null);\r\n        }\r\n        for (let i in this.vArrs) {\r\n            let vArr = this.vArrs[i];\r\n            vArr.reset();\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        return this.values[fieldName];\r\n    }\r\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\r\n\r\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\r\n\r\n    private buildFieldValues(fields: Field[]):any {\r\n        let v: {[p:string]: any} = {\r\n            valueFromFieldName: function(propName:string) {\r\n                return this[propName];\r\n            }\r\n        };\r\n        for (let f of fields) {\r\n            let fn = f.name;\r\n            v[fn] = null;\r\n        }\r\n        return v;\r\n    }\r\n    private buildObservableValues():IObservableObject {\r\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                v[arr.name] = observable.array([], {deep:true});\r\n            }\r\n        }\r\n        let ret = observable(v);\r\n        return ret;\r\n    }\r\n    private buildFormValues() {\r\n        this.values = this.buildObservableValues();\r\n        this.errors = observable(this.buildFieldValues(this.fields));\r\n    }\r\n\r\n    render(className:string = \"py-3\"):JSX.Element {\r\n        return <this.view className={className} />\r\n    }\r\n}\r\n","export * from './vForm';\r\n","import {bridgeCenterApi, isBridged} from './appBridge';\r\nimport {FetchError} from '../fetchError';\r\nimport {HttpChannelUI} from './httpChannelUI';\r\nimport {nav} from '../ui/nav';\r\nimport { isDevelopment } from './host';\r\n\r\nexport async function httpGet(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.get('', params);\r\n    return ret;\r\n}\r\n\r\nexport async function httpPost(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.post('', params);\r\n    return ret;\r\n}\r\n\r\nexport class HttpChannel {\r\n    private isCenter: boolean;\r\n    private hostUrl: string;\r\n    private apiToken: string;\r\n    private ui?: HttpChannelUI;\r\n    private timeout: number;\r\n\r\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\r\n        this.isCenter = isCenter;\r\n        this.hostUrl = hostUrl;\r\n        this.apiToken = apiToken;\r\n        this.ui = ui;\r\n        this.timeout = isDevelopment === true? 500000:5000;\r\n    }\r\n\r\n    private startWait = () => {\r\n        if (this.ui !== undefined) this.ui.startWait();\r\n    }\r\n\r\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\r\n        if (this.ui !== undefined) this.ui.endWait();\r\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\r\n    }\r\n\r\n    private showError = async (error:FetchError) => {\r\n        if (this.ui !== undefined) await this.ui.showError(error);\r\n    }\r\n\r\n    used() {\r\n        this.post('', {});\r\n    }\r\n\r\n    async get(url: string, params: any = undefined): Promise<any> {\r\n        if (params) {\r\n            let keys = Object.keys(params);\r\n            if (keys.length > 0) {\r\n                let c = '?';\r\n                for (let k of keys) {\r\n                    let v = params[k];\r\n                    if (v === undefined) continue;\r\n                    url += c + k + '=' + params[k];\r\n                    c = '&';\r\n                }\r\n            }\r\n        }\r\n        let options = this.buildOptions();\r\n        options.method = 'GET';\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async post(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'POST';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async put(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'PUT';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async delete(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'DELETE';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\r\n        let that = this;\r\n        this.startWait();\r\n        let path = url;\r\n        function buildError(err: string) {\r\n            return {\r\n                channel: that,\r\n                url: path,\r\n                options: options,\r\n                resolve: resolve,\r\n                reject: reject,\r\n                error: err,\r\n            }\r\n        }\r\n        try {\r\n            console.log('%s %s', options.method, path);\r\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\r\n            let res = await fetch(encodeURI(path), options);\r\n            if (res.ok === false) {\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                console.log('call error %s', res.statusText);\r\n                throw res.statusText;\r\n            }\r\n            let ct = res.headers.get('content-type');\r\n            if (ct && ct.indexOf('json')>=0) {\r\n                return res.json().then(async retJson => {\r\n                    clearTimeout(timeOutHandler);\r\n                    that.endWait();\r\n                    if (retJson.ok === true) {\r\n                        return resolve(retJson.res);\r\n                    }\r\n                    if (retJson.error === undefined) {\r\n                        await that.showError(buildError('not valid tonva json'));\r\n                    }\r\n                    else {\r\n                        await that.showError(buildError(retJson.error));\r\n                        reject(retJson.error);\r\n                    }\r\n                    //throw retJson.error;\r\n                }).catch(async error => {\r\n                    await that.showError(buildError(error.message));\r\n                });\r\n            }\r\n            else {\r\n                let text = await res.text();\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                resolve(text);\r\n            }\r\n        }\r\n        catch(error) {\r\n            if (typeof error === 'string') {\r\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\r\n                    nav.logout();\r\n                    return;\r\n                }\r\n            }\r\n            await this.showError(buildError(error.message));\r\n        };\r\n    }\r\n\r\n    private async innerFetch(url: string, options: any): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\r\n            return await bridgeCenterApi(u, options.method, options.body);\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    async callFetch(url:string, method:string, body:any):Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = method;\r\n        options.body = body;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(url, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    private buildOptions(): any {\r\n        let {language, culture} = nav;\r\n        let headers = new Headers();\r\n        //headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\r\n        let lang = language;\r\n        if (culture) lang += '-' + culture;\r\n        headers.append('Accept-Language', lang);\r\n        if (this.apiToken) { \r\n            headers.append('Authorization', this.apiToken); \r\n        }\r\n        let options = {\r\n            headers: headers,\r\n            // cache: 'no-cache',\r\n        };\r\n        return options;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport interface KeyValueRes {\r\n    [key:string]: any;\r\n}\r\n\r\nexport interface Res<T extends KeyValueRes> {\r\n    [lang:string]: T | {[district:string]: T};\r\n}\r\n\r\nexport const resOptions:{lang:string, district:string} = {\r\n    lang: undefined,\r\n    district: undefined,\r\n}\r\n\r\nexport function setResOptions(lang:string, district:string) {\r\n    resOptions.lang = lang;\r\n    resOptions.district = district;\r\n}\r\n\r\n(function() {\r\n    let lang: string, district: string;\r\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\r\n        navigator.language; // ||   // All browsers\r\n    //navigator.userLanguage; // IE <= 10\r\n    if (!language) {\r\n        lang = 'zh';\r\n        district = 'CN';\r\n    }\r\n    else {\r\n        let parts = language.split('-');\r\n        lang = parts[0];\r\n        if (parts.length > 1) district = parts[1];\r\n    }\r\n    setResOptions(lang, district);\r\n}());\r\n\r\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\r\n    let {lang, district} = resOptions;\r\n    let ret:T = {} as T;\r\n    if (res === undefined) return ret;\r\n    _.merge(ret, res._);\r\n    let l = res[lang];\r\n    if (l === undefined) return ret;\r\n    _.merge(ret, l._);\r\n    let d = l[district];\r\n    if (d === undefined) return ret;\r\n    _.merge(ret, d);\r\n    let {entity} = ret;\r\n    if (entity !== undefined) {\r\n        for (let i in entity) {\r\n            entity[i.toLowerCase()] = entity[i];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","export * from './CApp';\r\nexport * from './startApp';\r\nexport * from './uq';\r\nexport * from './action';\r\nexport * from './tuid';\r\nexport * from './sheet';\r\nexport * from './query';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './form/viewModel';\r\nexport * from './form';\r\nexport * from './formUI';\r\nexport * from './ControllerUq';\r\nexport * from './CVEntity';\r\nexport * from './link';\r\nexport * from './icons';\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Rule} from '../rule';\r\n\r\nexport abstract class ControlBase {\r\n    protected formView: FormView;\r\n    constructor(formView:FormView) {\r\n        this.formView = formView;\r\n    }\r\n    render():JSX.Element {\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n        </div>;\r\n    }\r\n    protected abstract renderControl():JSX.Element;\r\n    @computed get hasError():boolean {return false;}\r\n    @computed get filled():boolean {return false;}\r\n    clear() {}\r\n    clearErrors() {}\r\n    readValues(values:any):any {}\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    isOk():boolean {this.validate(); return !this.hasError;}\r\n    protected validate() {}\r\n}\r\n\r\nexport abstract class Control extends ControlBase {\r\n    protected field: Field;\r\n    protected face: Face;\r\n    protected props: any;\r\n    protected rules: Rule[];\r\n\r\n    protected element: HTMLElement;\r\n    @observable protected isOK?: boolean;\r\n    @observable protected error: string;\r\n    @observable protected value: any;\r\n\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView);\r\n        this.field = field;\r\n        this.face = face;\r\n        this.init();\r\n        this.setProps();\r\n    }\r\n    protected ref(element: HTMLElement) {\r\n        this.element = element;\r\n    }\r\n    protected init() {\r\n        this.rules = [];\r\n        let r = this.field.rules;\r\n        if (r !== undefined) {\r\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\r\n            else this.rules.push(r as Rule);\r\n        }\r\n    };\r\n    protected setProps():any {\r\n        return this.props = {\r\n            ref: this.ref.bind(this),\r\n            name: this.field.name,\r\n        }\r\n    };\r\n    @computed get hasError():boolean {return this.error !== undefined;}\r\n    @computed get filled():boolean {\r\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\r\n        return ret;\r\n    }\r\n    clearValue() { this.value = undefined; }\r\n    clear() { this.clearErrors(); this.clearValue(); }\r\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\r\n    readValues(values:any):any {\r\n        values[this.field.name] = this.value;\r\n    }\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    protected getValueFromElement():any {return this.value;}\r\n    protected validate() {\r\n        try {\r\n            let v = this.getValueFromElement();\r\n            if (this.rules.length > 0) {\r\n                let isOk:boolean;\r\n                for (let rule of this.rules) {\r\n                    console.log('validate: %s', v);\r\n                    let err = rule(v);\r\n                    console.log('validate: %s err: %s', v, err);\r\n                    if (err === true) {\r\n                        this.error = undefined;\r\n                        isOk = true;\r\n                    }\r\n                    else if (err !== undefined) {\r\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \r\n                        //    this.field.name, JSON.stringify(v), rule, err);\r\n                        this.error = err;\r\n                        this.isOK = false;\r\n                        return;\r\n                    }\r\n                }\r\n                this.isOK = isOk;\r\n            }\r\n            this.value = v;\r\n        }\r\n        catch (e) {\r\n            this.error = e.message;\r\n        }\r\n    }\r\n    render():JSX.Element {\r\n        let n;\r\n        if (this.face !== undefined) {\r\n            let {notes} = this.face;\r\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\r\n        }\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n            {n}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {ControlBase} from './control';\r\n\r\nexport class ButtonsControl extends ControlBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.otherClick = this.otherClick.bind(this);\r\n    }\r\n    private otherClick() {\r\n        let onOther = this.formView.props.onOther;\r\n        if (onOther === undefined) return;\r\n        let values = this.formView.readValues();\r\n        onOther(values);\r\n    }\r\n    renderControl():JSX.Element {\r\n        console.log('buttons.renderControl');\r\n        let nothing = this.formView.nothing;\r\n        let hasError = this.formView.hasError;\r\n        let props = this.formView.props;\r\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\r\n        let {submitButton, otherButton, onOther} = props;\r\n        let btnOther;\r\n        if (otherButton !== undefined) {\r\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\r\n                {otherButton}\r\n            </button>\r\n        }\r\n        return <div className=\"d-flex justify-content-start\">\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\" \r\n                disabled={nothing || hasError}>\r\n                {submitButton || '提交'}\r\n            </button>\r\n            {btnOther}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, Placeholder} from '../face';\r\nimport {Control} from './control';\r\n\r\nconst TxtRequired = '必须填入要求内容';\r\n\r\nexport abstract class CharsControl extends Control {\r\n    protected init() {\r\n        super.init();\r\n        if (this.field.required === true) {\r\n            this.rules.push((v) => {\r\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected element: HTMLInputElement;\r\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onBlur: this.onBlur.bind(this),\r\n            onFocus: this.onFocus.bind(this),\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n        let face = this.face as Placeholder;\r\n        if (face !== undefined) {\r\n            _.assign(this.props, {\r\n                placeholder: face.placeholder,\r\n            });\r\n        }\r\n        return this.props;\r\n    };\r\n    protected parseValue(value?:string):any {return value;}\r\n    private onBlur() {\r\n        //console.log('field %s onBlure', this.field.name);\r\n        this.validate();\r\n    }\r\n    private onChange() {\r\n        console.log('onChange');\r\n        this.validate();\r\n    }\r\n    private onFocus() {\r\n        this.clearErrors();\r\n        //this.error = undefined;\r\n        //this.formView.clearErrors();\r\n    }\r\n    protected className() {\r\n        return classNames({\r\n            \"form-control\": true,\r\n            \"has-success\": this.isOK === true,\r\n            \"is-invalid\": this.error !== undefined,\r\n            \"is-valid\": this.error === undefined && this.isOK === true,\r\n        });\r\n    }\r\n    protected renderInput():JSX.Element {\r\n        return <input className={this.className()} {...this.props} />;\r\n    }\r\n    protected ref(element: HTMLInputElement) {\r\n        super.ref(element);\r\n        if (element) {\r\n            element.value = this.value === undefined? '':this.value;\r\n        }\r\n    }\r\n    protected renderError():JSX.Element {\r\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\r\n        if (this.error === undefined) return null;\r\n        return <div className=\"invalid-feedback\">{this.error}</div>\r\n    }\r\n    clearValue() { super.clearValue(); this.element.value = ''; }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.field.name === fieldName) this.error = error;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) return;\r\n        //this.element.value = v;\r\n        this.value = v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <React.Fragment>\r\n            {this.renderInput()}\r\n            {this.renderError()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\n\r\nexport class StringControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'text',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class PasswordControl extends StringControl {\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'password',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {IntField, DecField, NumberField} from '../field';\r\nimport {CharsControl} from './charsControl';\r\n\r\nconst ErrInvalidNumber = '无效的数字';\r\nconst ErrMin = '最小值为';\r\nconst ErrMax = '最大值为';\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport class NumberControl extends CharsControl {\r\n    protected field: IntField | DecField | NumberField;\r\n    protected value: number;\r\n    protected extraChars: number[];\r\n    \r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        let {min, max} = this.field;\r\n        if (min !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n        }\r\n        else {\r\n            this.extraChars.push(KeyCode_Neg);\r\n        }\r\n\r\n        if (max !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        let n = Number.parseFloat(value);\r\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\r\n        return n;\r\n    }\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            type: 'number',\r\n            step: (this.field as DecField).step,\r\n            onKeyPress: this.onKeyPress.bind(this),\r\n        });\r\n    }\r\n\r\n    onKeyPress(event:KeyboardEvent) {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.element.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.element.value = v;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Control, ControlBase} from './control';\r\nimport {FormView} from '../formView';\r\n\r\nexport class UnknownControl extends Control {\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n            don't know how to create control<br/>\r\n            field: {JSON.stringify(this.field)} must be object <br/>\r\n            face: {JSON.stringify(this.face)} must be object <br/>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class EmptyControl extends ControlBase {\r\n    private element:JSX.Element;\r\n    constructor(formView:FormView, element:JSX.Element) {\r\n        super(formView);\r\n        this.element = element;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.element}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, IdPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickIdControl extends Control {\r\n    protected face: IdPickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    onPicked = (value: any) => {\r\n        this.value = value.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private controlContent():string|JSX.Element {\r\n        let {itemFromId, fromPicked, initCaption} = this.face;\r\n        if (this.value === undefined) {\r\n            return initCaption || '请选择Id';\r\n        }\r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        if (itemFromId !== undefined) {\r\n            if (fromPicked !== undefined) {\r\n                let item = itemFromId(this.value);\r\n                if (item) {\r\n                    let ret = fromPicked(item);\r\n                    if (ret !== undefined) return ret.caption;\r\n                }\r\n            }\r\n        }\r\n        return String(this.value);\r\n    }\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {this.controlContent()}\r\n            </div>;\r\n        }\r\n        return <div className=\"form-control-static \">\r\n            <input.component id={this.value} \r\n                ui={tuid}\r\n                //input={input}\r\n                //entitiesUI={this.formView.props.context} \r\n                //params={this.formView.readValues()}\r\n                //onPicked={this.onPicked}\r\n                />\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, TuidPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickTuidControl extends Control {\r\n    protected face: TuidPickFace;\r\n    // protected value: number;\r\n    @observable private caption: string|JSX.Element;\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.onIdChanged = this.onIdChanged.bind(this);\r\n        //this.onClick = this.onClick.bind(this);\r\n    }\r\n    /*\r\n    private async onClick() {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }*/\r\n    onIdChanged(id: any) {\r\n        this.value = id.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private buildContent():JSX.Element {\r\n        //let {tuid, input} = this.face;\r\n        return <this.face.input.component \r\n            {...this.face}\r\n            id={this.value}\r\n            //ui={this.face.ui}\r\n            //input={input}\r\n            //entitiesUI={this.formView.props.context} \r\n            onFormValues={()=>this.formView.readValues()}\r\n            onIdChanged={this.onIdChanged} />;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static \">\r\n            {this.buildContent()}\r\n        </div>;\r\n    }\r\n}\r\n/*\r\n<button className=\"form-control btn btn-outline-info\"\r\ntype=\"button\"\r\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\r\nonClick={this.onClick}>\r\n{this.buildContent()}\r\n</button>\r\n*/","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, PickFace} from '../face';\r\nimport {Control} from './control';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class PickControl extends Control {\r\n    protected face: PickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    /*\r\n    private controlContent():string|JSX.Element {\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined) {\r\n            return '请选择';\r\n        }\r\n        \r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        return <Content id={this.value} />;\r\n    }*/\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        return <this.view />;\r\n        /*\r\n        let {content:Content} = this.face;\r\n        //if (this.value === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n        //}\r\n        //return <div className=\"form-control-static \">\r\n        //    <Content />\r\n        //</div>;\r\n        */\r\n    }\r\n\r\n    private view = observer(() => {\r\n        let content;\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = '请选择';\r\n        }\r\n        /*\r\n        else if (this.caption !== undefined) {\r\n            content = this.caption;\r\n        }*/\r\n        else {\r\n            content = <Content id={this.value} />;\r\n        } \r\n        return <div\r\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\r\n            onClick={this.onClick}>\r\n            {content}\r\n        </div>\r\n    });\r\n}\r\n","export * from './control';\r\nexport * from './buttonsControl';\r\nexport * from './stringControl';\r\nexport * from './numberControl';\r\n\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Control, ControlBase} from './control';\r\nimport {ButtonsControl} from './buttonsControl';\r\nimport {CheckControl} from './checkControl';\r\nimport {RadioControl} from './radioControl';\r\nimport {TextAreaControl} from './textAreaControl';\r\nimport {SelectControl} from './selectControl';\r\nimport {UnknownControl, EmptyControl} from './unknownControl';\r\nimport {StringControl, PasswordControl} from './stringControl';\r\nimport {NumberControl} from './numberControl';\r\n\r\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\r\nimport { PickIdControl } from './pickIdControl';\r\nimport { PickTuidControl } from './pickTuidControl';\r\nimport { PickControl } from './pickControl';\r\n\r\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\r\n\r\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\r\n    let label = row.label;\r\n    if ((<GroupRow>row).group !== undefined)\r\n        return createGroupControl(form, label, row as GroupRow);\r\n    if ((<FieldRow>row).field !== undefined)\r\n        return createFieldControl(form, label, row as FieldRow);\r\n    return new EmptyControl(form, row.help);\r\n}\r\n\r\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\r\n    \"string\": StringControl,\r\n    \"password\": PasswordControl,\r\n    \"number\": NumberControl,\r\n    \"checkbox\": CheckControl,\r\n    \"radiobox\": RadioControl,\r\n    \"select\": SelectControl,\r\n    \"pick-id\": PickIdControl,\r\n    \"pick-tuid\": PickTuidControl,\r\n    \"textarea\": TextAreaControl,\r\n    \"pick\": PickControl,\r\n};\r\nconst defaultFaces:{[type:string]: Face} = {\r\n    \"string\": {type:'string'},\r\n    \"number\": {type:'number'},\r\n    \"int\": {type:'number'},\r\n    \"dec\": {type:'number'},\r\n    \"bool\": {type:'checkbox'},\r\n}\r\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\r\n    let {field, face} = fieldRow;\r\n    switch (typeof field) {\r\n        case 'string':\r\n            field = {\r\n                name: (field as any) as string,\r\n                type: 'string',\r\n            }\r\n            break;\r\n        case 'object':\r\n            break;\r\n        default:\r\n            return new UnknownControl(form, field, face);\r\n    }\r\n    let fieldType = field.type || 'string';\r\n    if (face === undefined) {\r\n        face = defaultFaces[fieldType];\r\n        if (face === undefined) return new UnknownControl(form, field, face);\r\n    }\r\n    else if (face.type === undefined) {\r\n        let f = defaultFaces[fieldType];\r\n        face.type = f===undefined? 'string' : f.type;\r\n    }\r\n    let control = controls[face.type || fieldType] || UnknownControl;\r\n    return new control(form, field, face);\r\n}\r\n\r\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\r\n    return new UnknownControl(form, groupRow as any, undefined);\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field, BoolField} from '../field';\r\nimport {Face, CheckBoxFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class CheckControl extends Control {    \r\n    protected element: HTMLInputElement;\r\n    protected field: BoolField;\r\n    protected face: CheckBoxFace;\r\n    private trueValue: any;\r\n    private falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        let {trueValue, falseValue} = this.field;\r\n        if (trueValue === undefined) this.trueValue = 1;\r\n        if (falseValue === undefined) this.falseValue = 0;\r\n    }\r\n\r\n    setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n    }\r\n\r\n    clearValue() {\r\n        this.element.checked = this.field.defaultValue === this.trueValue;\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) {\r\n            v = this.field.defaultValue;\r\n        }\r\n        if (v !== undefined) {\r\n            //this.element.checked = v === this.trueValue;\r\n            //this.value = this.getValueFromElement();\r\n        }\r\n    }\r\n\r\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\r\n\r\n    private onChange() {\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <label className=\"form-control\">\r\n                <label className=\"custom-control custom-checkbox mb-0\">\r\n                    <input type='checkbox'\r\n                        name={this.field.name}\r\n                        ref={this.props.ref}\r\n                        onChange={this.props.onChange}\r\n                        className=\"custom-control-input\" />\r\n                    <span className=\"custom-control-indicator\" />\r\n                    <span className=\"custom-control-description\">{this.face.label}</span>\r\n                </label>\r\n            </label>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, RadioFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class RadioControl extends Control {\r\n    protected face: RadioFace;\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <div className=\"form-control\">\r\n            {\r\n                this.face.list.map((item, index) => {\r\n                    let t, v;\r\n                    if (typeof item !== 'object') t = v = item;\r\n                    else {\r\n                        t = item.text;\r\n                        v = item.value;\r\n                    }\r\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\r\n                        <input type='radio'\r\n                            name={this.field.name} \r\n                            className=\"custom-control-input\" />\r\n                        <span className=\"custom-control-indicator\"></span>\r\n                        <span className=\"custom-control-description\">{t}</span>\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, SelectFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class SelectControl extends Control {\r\n    constructor (formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.ref = this.ref.bind(this);\r\n    }\r\n    protected face: SelectFace;\r\n    protected element: HTMLSelectElement;\r\n    protected getValueFromElement():any {\r\n        let {selectedIndex, selectedOptions} = this.element;\r\n        let v:any = selectedOptions[0].value;\r\n        switch (this.field.type) {\r\n            case 'number': v = Number(v); break;\r\n            case 'date': v = new Date(v); break;\r\n            case 'bool': \r\n                if (typeof v === 'string') {\r\n                    v = ((v as string).toLowerCase() === 'true');\r\n                }\r\n                break;\r\n        }\r\n        return v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        let {list} = this.face;\r\n        let def = this.face.default;\r\n        let options: any[] = [];\r\n        if (def === undefined)\r\n            options.push(<option key={-1} value={undefined}>请选择</option>);\r\n        options.push(...list.map((item, index) => {\r\n            let t, v;\r\n            if (typeof item !== 'object') t = v = item;\r\n            else {\r\n                t = item.text;\r\n                v = item.value;\r\n            }\r\n            return <option key={index} value={v}>{t}</option>;\r\n        }));\r\n        return <div className=\"form-control-static\">\r\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\r\n                {options}\r\n            </select>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\nimport {TextAreaFace} from '../face';\r\n\r\nexport class TextAreaControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected face: TextAreaFace;\r\n    private el: HTMLTextAreaElement;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        let {maxLength} = this.field;\r\n        let {rows} = this.face;\r\n        _.assign(p, {\r\n            maxLength: maxLength,\r\n            rows: rows,\r\n        });\r\n        return p;\r\n    };\r\n    protected renderInput():JSX.Element {\r\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\r\n    }\r\n}\r\n","import { Entities, Field, ArrFields, FieldMap } from './entities';\r\nimport { TuidMain, Tuid } from './tuid';\r\n\r\nconst tab = '\\t';\r\nconst ln = '\\n';\r\n\r\nexport abstract class Entity {\r\n    protected entities: Entities;\r\n    protected schema: any;\r\n    private jName: string;\r\n    sys?: boolean;\r\n    readonly name: string;\r\n    readonly typeId: number;\r\n    abstract get typeName(): string;\r\n    get sName():string {return this.jName || this.name}\r\n    fields: Field[];\r\n    arrFields: ArrFields[];\r\n    returns: ArrFields[];\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        this.entities = entities;\r\n        this.name = name;\r\n        this.typeId = typeId;\r\n        this.sys = this.name.indexOf('$') >= 0;\r\n    }\r\n\r\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\r\n\r\n    protected get tvApi() {return this.entities.uqApi;}\r\n    async getApiFrom() {return this.entities.uqApi;}\r\n\r\n    private fieldMaps: {[arr:string]: FieldMap} = {};\r\n    fieldMap(arr?:string): FieldMap {\r\n        if (arr === undefined) arr = '$';\r\n        let ret = this.fieldMaps[arr];\r\n        if (ret === undefined) {\r\n            let fields:Field[];\r\n            if (arr === '$') fields = this.fields;\r\n            else if (this.arrFields !== undefined) {\r\n                let arrFields = this.arrFields.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            else if (this.returns !== undefined) {\r\n                let arrFields = this.returns.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            if (fields === undefined) return {};\r\n            ret = {};\r\n            for (let f of fields) ret[f.name] = f;\r\n            this.fieldMaps[arr] = ret;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public async loadSchema():Promise<void> {\r\n        if (this.schema !== undefined) return;\r\n        let schema = await this.entities.uqApi.schema(this.name);\r\n        this.setSchema(schema);\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        if (schema === undefined) return;\r\n        if (this.schema !== undefined) return;\r\n        this.schema = schema;\r\n        let {name, fields, arrs, returns} = schema;\r\n        if (name !== this.name) this.jName = name;\r\n        this.entities.buildFieldTuid(this.fields = fields);\r\n        this.entities.buildArrFieldsTuid(this.arrFields = arrs, fields);\r\n        this.entities.buildArrFieldsTuid(this.returns = returns, fields);\r\n        //this.newMain = this.buildCreater(fields);\r\n        //this.newArr = this.buildArrCreater(arrs);\r\n        //this.newRet = this.buildArrCreater(returns);\r\n    }\r\n\r\n    schemaStringify():string {\r\n        return JSON.stringify(this.schema, (key:string, value:any) => {\r\n            if (key === '_tuid') return undefined;\r\n            return value;\r\n        }, 4);\r\n    }\r\n\r\n    tuidFromField(field:Field):Tuid {\r\n        let {_tuid, tuid} = field;\r\n        if (tuid === undefined) return;\r\n        if (_tuid !== undefined) return _tuid;\r\n        return field._tuid = this.entities.getTuid(tuid, undefined);\r\n    }\r\n\r\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\r\n        if (this.schema === undefined) return;\r\n        let {fields, arrs} = this.schema;\r\n        let entities = this.entities;\r\n        function getTuid(fn:string, fieldArr:Field[]) {\r\n            if (fieldArr === undefined) return;\r\n            let f = fieldArr.find(v => v.name === fn);\r\n            if (f === undefined) return;\r\n            return entities.getTuid(f.tuid, undefined);\r\n        }\r\n        let fn = fieldName.toLowerCase();\r\n        if (arrName === undefined) return getTuid(fn, fields);\r\n        if (arrs === undefined) return;\r\n        let an = arrName.toLowerCase();\r\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\r\n        if (arr === undefined) return;\r\n        return getTuid(fn, arr.fields);\r\n    }\r\n\r\n    protected buildParams(params:any):any {\r\n        let result = {};\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\r\n        let arrs = this.arrFields; \r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                let {name, fields} = arr;\r\n                let paramsArr:any[] = params[name];\r\n                if (paramsArr === undefined) continue;\r\n                let arrResult = [];\r\n                result[name] = arrResult;\r\n                for (let pa of params) {\r\n                    let rowResult = {};\r\n                    this.buildFieldsParams(rowResult, fields, pa);\r\n                    arrResult.push(rowResult);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\r\n        for (let field of fields) {\r\n            let {name} = field;\r\n            let d = params[name];\r\n            let val:any;\r\n            switch (typeof d) {\r\n                default: val = d; break;\r\n                case 'object':\r\n                    let tuid = field._tuid;\r\n                    if (tuid === undefined) val = d.id;\r\n                    else val = tuid.getIdFromObj(d);\r\n                    break;\r\n            }\r\n            result[name] = val;\r\n        }\r\n    }\r\n\r\n    pack(data:any):string {\r\n        let ret:string[] = [];\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.packRow(ret, fields, data);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                this.packArr(ret, arr.fields, data[arr.name]);\r\n            }\r\n        }\r\n        return ret.join('');\r\n    }\r\n    \r\n    private escape(row:any, field:Field):any {\r\n        let d = row[field.name];\r\n        switch (typeof d) {\r\n            default: return d;\r\n            case 'object':\r\n                let tuid = field._tuid;\r\n                if (tuid === undefined) return d.id;\r\n                return tuid.getIdFromObj(d);\r\n            case 'string':\r\n                let len = d.length;\r\n                let r = '', p = 0;\r\n                for (let i=0;i<len;i++) {\r\n                    let c = d.charCodeAt(i);\r\n                    switch(c) {\r\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\r\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\r\n                    }\r\n                }\r\n                return r + d.substring(p);\r\n            case 'undefined': return '';\r\n        }\r\n    }\r\n    \r\n    private packRow(result:string[], fields:Field[], data:any) {\r\n        let len = fields.length;\r\n        if (len === 0) return;\r\n        let ret = '';\r\n        ret += this.escape(data, fields[0]);\r\n        for (let i=1;i<len;i++) {\r\n            let f = fields[i];\r\n            ret += tab + this.escape(data, f);\r\n        }\r\n        result.push(ret + ln);\r\n    }\r\n    \r\n    private packArr(result:string[], fields:Field[], data:any[]) {\r\n        if (data !== undefined) {\r\n            for (let row of data) {\r\n                this.packRow(result, fields, row);\r\n            }\r\n        }\r\n        result.push(ln);\r\n    }\r\n    \r\n    unpackSheet(data:string):any {\r\n        let ret = {} as any; //new this.newMain();\r\n        //if (schema === undefined || data === undefined) return;\r\n        let fields = this.fields;\r\n        let p = 0;\r\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    \r\n    unpackReturns(data:string):any {\r\n        let ret = {} as any;\r\n        //if (schema === undefined || data === undefined) return;\r\n        //let fields = schema.fields;\r\n        let p = 0;\r\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\r\n        let arrs = this.returns; //schema['returns'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                //let creater = this.newRet[arr.name];\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    \r\n    private unpackRow(ret:any, fields:Field[], data:string, p:number):number {\r\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\r\n        for (;p<len;p++) {\r\n            ch0 = ch;\r\n            ch = data.charCodeAt(p);\r\n            if (ch === 9) {\r\n                let f = fields[i];\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[f.name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[f.name] = null;\r\n                }\r\n                c = p+1;\r\n                ++i;\r\n                if (i>=fLen) break;\r\n            }\r\n            else if (ch === 10) {\r\n                let f = fields[i];\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[f.name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[f.name] = null;\r\n                }\r\n                ++p;\r\n                ++i;\r\n                break;\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n\r\n    private to(ret:any, v:string, f:Field):any {\r\n        switch (f.type) {\r\n            default: return v;\r\n            case 'datetime':\r\n            case 'date':\r\n            case 'time':\r\n                let date = new Date(Number(v));\r\n                return date;\r\n            case 'tinyint':\r\n            case 'smallint':\r\n            case 'int':\r\n            case 'dec': return Number(v);\r\n            case 'bigint':\r\n                let id = Number(v);\r\n                let {_tuid} = f;\r\n                if (_tuid === undefined) return id;\r\n                _tuid.useId(id, true);\r\n                return _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\r\n        let vals:any[] = [], len = data.length;\r\n        let {name, fields} = arr;\r\n        while (p<len) {\r\n            let ch = data.charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let val = {} as any; //new creater();\r\n            vals.push(val);\r\n            p = this.unpackRow(val, fields, data, p);\r\n        }\r\n        ret[name] = vals;\r\n        return p;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Entity } from './entity';\r\nimport { Entities, Field, ArrFields } from './entities';\r\nimport { isNumber } from 'util';\r\nimport { CUq, CTuidMain, CTuidEdit, CTuidInfo, CTuidSelect } from '../controllers';\r\n\r\nexport class BoxId {\r\n    id: number;\r\n    obj?: any;\r\n    content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\r\n    valueFromFieldName: (fieldName:string)=>BoxId|any;\r\n    _$com?: any;\r\n    _$tuid?: Tuid;\r\n    getObj: ()=>any;\r\n}\r\n\r\nconst maxCacheSize = 1000;\r\nexport abstract class Tuid extends Entity {\r\n    private BoxId: ()=>void;\r\n    get typeName(): string { return 'tuid';}\r\n    private queue: number[] = [];               // 每次使用，都排到队头\r\n    private waitingIds: number[] = [];          // 等待loading的\r\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\r\n    idName: string;\r\n    owner: TuidMain;                    // 用这个值来区分是不是TuidArr\r\n    unique: string[];\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        super(entities, name, typeId);\r\n        this.buildIdBoxer();\r\n    }\r\n\r\n    abstract get Main():Tuid;\r\n\r\n    private buildIdBoxer() {\r\n        this.BoxId = function():void {};\r\n        let prototype = this.BoxId.prototype;\r\n        Object.defineProperty(prototype, '_$tuid', {\r\n            value: this,\r\n            writable: false,\r\n            enumerable: false,\r\n        })\r\n        Object.defineProperty(prototype, 'obj', {\r\n            enumerable: false,\r\n            get: function() {\r\n                if (this.id === undefined || this.id<=0) return undefined;\r\n                return this._$tuid.valueFromId(this.id);\r\n            }\r\n        })\r\n        prototype.valueFromFieldName = function(fieldName:string):BoxId|any {\r\n            let t:Tuid = this._$tuid;\r\n            return t.valueFromFieldName(fieldName, this.obj);\r\n        }\r\n        prototype.getObj = function():any {\r\n            if (this._$tuid !== undefined) {\r\n                return this._$tuid.getCacheValue(this.id);\r\n            }\r\n        }\r\n        prototype.toJSON = function() {return this.id}\r\n    }\r\n    boxId(id:number):BoxId {\r\n        this.useId(id);\r\n        let ret:BoxId = new this.BoxId();\r\n        ret.id = id;\r\n        return ret;\r\n    }\r\n    getTuidContent() {\r\n        return this.entities.cUq.getTuidContent(this);\r\n    }\r\n    getIdFromObj(item:any):number {\r\n        return item[this.idName];\r\n    }\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {id, unique} = schema;\r\n        this.idName = id;\r\n        this.unique = unique;\r\n        this.schemaFrom = this.schema.from;\r\n    }\r\n\r\n    private moveToHead(id:number) {\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.queue.push(id);\r\n    }\r\n\r\n    valueFromId(id:number|BoxId):any {\r\n        let _id:number;\r\n        let tId = typeof id;\r\n        switch (typeof id) {\r\n            case 'object': _id = (id as BoxId).id; break;\r\n            case 'number': _id = id as number; break;\r\n            default: return;\r\n        }\r\n        return this.getCacheValue(_id);\r\n    }\r\n    getCacheValue(id:number) {\r\n        let v = this.cache.get(id);\r\n        if (this.owner !== undefined && typeof v === 'object') {\r\n            v.$owner = this.owner.boxId(v.owner); // this.owner.valueFromId(v.owner);\r\n        }\r\n        return v;\r\n    }\r\n    valueFromFieldName(fieldName:string, obj:any):BoxId|any {\r\n        if (obj === undefined) return;\r\n        let f = this.fields.find(v => v.name === fieldName);\r\n        if (f === undefined) return;\r\n        let v = obj[fieldName];\r\n        let {_tuid} = f;\r\n        if (_tuid === undefined) return v;\r\n        return _tuid.valueFromId(v);\r\n    }\r\n    resetCache(id:number) {\r\n        this.cache.delete(id);\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.useId(id);\r\n    }\r\n    useId(id:number, defer?:boolean) {\r\n        if (id === undefined || id === 0) return;\r\n        if (isNumber(id) === false) return;\r\n        if (this.cache.has(id) === true) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n        this.entities.cacheTuids(defer===true?70:20);\r\n        //let idVal = this.createID(id);\r\n        this.cache.set(id, id);\r\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n\r\n        if (this.queue.length >= maxCacheSize) {\r\n            // 缓冲已满，先去掉最不常用的\r\n            let r = this.queue.shift();\r\n            if (r === id) {\r\n                // 如果移除的，正好是现在用的，则插入\r\n                this.queue.push(r);\r\n                return;\r\n            }\r\n\r\n            //let rKey = String(r);\r\n            if (this.cache.has(r) === true) {\r\n                // 如果移除r已经缓存\r\n                this.cache.delete(r);\r\n            }\r\n            else {\r\n                // 如果移除r还没有缓存\r\n                let index = this.waitingIds.findIndex(v => v === r);\r\n                this.waitingIds.splice(index, 1);\r\n            }\r\n        }\r\n        this.waitingIds.push(id);\r\n        this.queue.push(id);\r\n        return;\r\n    }\r\n    async proxied(name:string, id:number):Promise<any> {\r\n        let proxyTuid = this.entities.getTuid(name, undefined);\r\n        proxyTuid.useId(id);\r\n        let proxied = await this.tvApi.proxied(this.name, name, id);\r\n        this.cacheValue(proxied);\r\n        return proxied;\r\n    }\r\n    cacheValue(val:any):boolean {\r\n        if (val === undefined) return false;\r\n        let id = this.getIdFromObj(val);\r\n        if (id === undefined) return false;\r\n        let index = this.waitingIds.findIndex(v => v === id);\r\n        if (index>=0) this.waitingIds.splice(index, 1);\r\n        //let cacheVal = this.createID(id, val);\r\n        this.cache.set(id, val);\r\n        // 下面的代码应该是cache proxy id, 需要的时候再写吧\r\n        /*\r\n        let {tuids, fields} = this.schema;\r\n        if (tuids !== undefined && fields !== undefined) {\r\n            for (let f of fields) {\r\n                let {name, tuid} = f;\r\n                if (tuid === undefined) continue;\r\n                let t = this.entities.tuid(tuid);\r\n                if (t === undefined) continue;\r\n                t.useId(val[name]);\r\n            }\r\n        }*/\r\n        return true;\r\n    }\r\n    protected afterCacheId(tuidValue:any) {\r\n        for (let f of this.fields) {\r\n            let {_tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            _tuid.useId(tuidValue[f.name]);\r\n        }\r\n    }\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let name:string, arr:string;\r\n        if (this.owner === undefined) {\r\n            name = this.name;\r\n        }\r\n        else {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        let api = await this.getApiFrom();\r\n        let tuids = await api.tuidIds(name, arr, this.waitingIds);\r\n        for (let tuidValue of tuids) {\r\n            if (this.cacheValue(tuidValue) === false) continue;\r\n            this.cacheTuidFieldValues(tuidValue);\r\n            this.afterCacheId(tuidValue);\r\n        }\r\n        await this.cacheDivIds();\r\n    }\r\n    protected async cacheDivIds():Promise<void> {\r\n    }\r\n    async load(id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = await this.getApiFrom();\r\n        let values = await api.tuidGet(this.name, id);\r\n        if (values === undefined) return;\r\n        values._$tuid = this;\r\n        this.cacheValue(values);\r\n        this.cacheTuidFieldValues(values);\r\n        return values;\r\n    }\r\n    protected getDiv(divName:string):TuidDiv {return;}\r\n    private cacheTuidFieldValues(values:any) {\r\n        let {fields, arrs} = this.schema;\r\n        this.cacheFieldsInValue(values, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs as ArrFields[]) {\r\n                let {name, fields} = arr;\r\n                let arrValues = values[name];\r\n                if (arrValues === undefined) continue;\r\n                let tuidDiv = this.getDiv(name);\r\n                for (let row of arrValues) {\r\n                    row._$tuid = tuidDiv;\r\n                    row.$owner = this.boxId(row.owner);\r\n                    tuidDiv.cacheValue(row);\r\n                    this.cacheFieldsInValue(row, fields);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private cacheFieldsInValue(values:any, fields:Field[]) {\r\n        for (let f of fields as Field[]) {\r\n            let {name, _tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            let id = values[name];\r\n            //_tuid.useId(id);\r\n            values[name] = _tuid.boxId(id);\r\n        }\r\n    }\r\n    async save(id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        let ret = await this.tvApi.tuidSave(this.name, params);\r\n        let {id:retId, inId} = ret;\r\n        if (retId === undefined) {\r\n            params.id = id;\r\n            this.cacheValue(params);\r\n        }\r\n        else if (retId > 0) {\r\n            params.id = retId;\r\n            this.cacheValue(params);\r\n        }\r\n        return ret;\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let {fields} = this.schema;\r\n        let name:string, arr:string;\r\n        if (this.owner !== undefined) {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        else {\r\n            name = this.name;\r\n            arr = undefined;\r\n        }\r\n        let api = await this.getApiFrom();\r\n        let ret = await api.tuidSearch(name, arr, owner, key, pageStart, pageSize);\r\n        for (let row of ret) {\r\n            this.cacheFieldsInValue(row, fields);\r\n            if (this.owner !== undefined) row.$owner = this.owner.boxId(row.owner);\r\n        }\r\n        return ret;\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = await this.getApiFrom();\r\n        return await api.tuidArrGet(this.name, arr, owner, id);\r\n    }\r\n    /*\r\n    async loadArrAll(owner:number):Promise<any[]> {\r\n        return this.all = await this.tvApi.tuidGetAll(this.name);\r\n    }*/\r\n    async saveArr(arr:string, owner:number, id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        return await this.tvApi.tuidArrSave(this.name, arr, owner, params);\r\n    }\r\n    async posArr(arr:string, owner:number, id:number, order:number) {\r\n        return await this.tvApi.tuidArrPos(this.name, arr, owner, id, order);\r\n    }\r\n    \r\n    // cache放到Tuid里面之后，这个函数不再需要公开调用了\r\n    //private async ids(idArr:number[]) {\r\n    //    return await this.tvApi.tuidIds(this.name, idArr);\r\n    //}\r\n    async showInfo(id:number) {\r\n        await this.entities.cUq.showTuid(this, id);\r\n    }\r\n}\r\n\r\nexport class TuidMain extends Tuid {\r\n    get Main() {return this}\r\n    get uqApi() {return this.entities.uqApi};\r\n\r\n    divs: {[name:string]: TuidDiv};\r\n    proxies: {[name:string]: TuidMain};\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {arrs} = schema;\r\n        if (arrs !== undefined) {\r\n            this.divs = {};\r\n            for (let arr of arrs) {\r\n                let {name} = arr;\r\n                let tuidDiv = new TuidDiv(this.entities, name, this.typeId);\r\n                tuidDiv.owner = this;\r\n                this.divs[name] = tuidDiv;\r\n                tuidDiv.setSchema(arr);\r\n            }\r\n        }\r\n    }\r\n    protected getDiv(divName:string):TuidDiv {return this.divs[divName];}\r\n    /* 努力回避async里面的super调用，edge不兼容\r\n    async cacheIds():Promise<void> {\r\n        await super.cacheIds();\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n    */\r\n    protected async cacheDivIds():Promise<void> {\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n\r\n    async cUqFrom(): Promise<CUq> {\r\n        if (this.schemaFrom === undefined) return this.entities.cUq;\r\n        let {owner, uq: uq} = this.schemaFrom;\r\n        let cUq = await this.entities.cUq\r\n        let cApp = cUq.cApp;\r\n        if (cApp === undefined) return cUq;\r\n        let cUqFrm = await cApp.getImportUq(owner, uq);\r\n        if (cUqFrm === undefined) {\r\n            console.error(`${owner}/${uq} 不存在`);\r\n            debugger;\r\n            return cUq;\r\n        }\r\n        let retErrors = await cUqFrm.loadSchema();\r\n        if (retErrors !== undefined) {\r\n            console.error('cUq.loadSchema: ' + retErrors);\r\n            debugger;\r\n            return cUq;\r\n        }\r\n        return cUqFrm;\r\n    }\r\n\r\n    async getApiFrom() {\r\n        let from = await this.from();\r\n        if (from !== undefined) {\r\n            return from.entities.uqApi;\r\n        }\r\n        return this.entities.uqApi;\r\n    }\r\n\r\n    async from(): Promise<TuidMain> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.tuid(this.name);\r\n    }\r\n\r\n    async cFrom(): Promise<CTuidMain> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.cTuidMainFromName(this.name);\r\n    }\r\n\r\n    async cEditFrom(): Promise<CTuidEdit> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.name);\r\n    }\r\n\r\n    async cInfoFrom(): Promise<CTuidInfo> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.name);\r\n    }\r\n\r\n    async cSelectFrom(): Promise<CTuidSelect> {\r\n        let cUq = await this.cUqFrom();\r\n        if (cUq === undefined) return;\r\n        return cUq.cTuidSelectFromName(this.name);\r\n    }\r\n\r\n    protected afterCacheId(tuidValue:any) {\r\n        super.afterCacheId(tuidValue);\r\n        if (this.proxies === undefined) return;\r\n        let {type, $proxy} = tuidValue;\r\n        let pTuid = this.proxies[type];\r\n        pTuid.useId($proxy);\r\n    }\r\n}\r\n\r\nexport class TuidDiv extends Tuid {\r\n    get Main() {return this.owner}\r\n\r\n    async getApiFrom() {\r\n        return await this.owner.getApiFrom();\r\n    }\r\n}\r\n","import {Entity} from './entity';\r\n\r\nexport class Action extends Entity {\r\n    get typeName(): string { return 'action';}\r\n    async submit(data:object) {\r\n        await this.loadSchema();\r\n        let text = this.pack(data);\r\n        return await this.tvApi.action(this.name, {data:text});\r\n    }\r\n}\r\n\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Entity} from './entity';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SheetState {\r\n    name: string;\r\n    actions: SheetAction[];\r\n}\r\n\r\nexport interface SheetAction {\r\n    name: string;\r\n}\r\n\r\nexport interface StateCount {\r\n    state: string;\r\n    count: number;\r\n}\r\n\r\nexport class Sheet extends Entity {\r\n    get typeName(): string { return 'sheet';}\r\n    states: SheetState[];\r\n\r\n    /*\r\n    setStates(states: SheetState[]) {\r\n        for (let state of states) {\r\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\r\n        }\r\n    }*/\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.states = schema.states;\r\n    }\r\n    build(obj:any) {\r\n        this.states = [];\r\n        for (let op of obj.ops) {\r\n            this.states.push({name: op, actions:undefined});\r\n        }\r\n        /*\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }\r\n    /*\r\n    private setStateAccess(s:SheetState, s1:SheetState) {\r\n        if (s === undefined) return;\r\n        for (let action of s1.actions) {\r\n            let acn = action.name;\r\n            let ac = s.actions.find(a=>a.name === acn);\r\n            if (ac === undefined) continue;\r\n            s.actions.push(action);\r\n        }\r\n    }*/\r\n    async save(discription:string, data:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let {appId} = this.entities;\r\n        let text = this.pack(data);\r\n\r\n        let ret = await this.tvApi.sheetSave(this.name, {app: appId, discription: discription, data:text});\r\n        return ret;\r\n        /*\r\n        let {id, state} = ret;\r\n        if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n        */\r\n    }\r\n    async action(id:number, flow:number, state:string, action:string) {\r\n        await this.loadSchema();\r\n        return await this.tvApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\r\n    }\r\n    private async unpack(data:any):Promise<any> {\r\n        //if (this.schema === undefined) await this.loadSchema();\r\n        let ret = data[0];\r\n        let brief = ret[0];\r\n        let sheetData = this.unpackSheet(brief.data);\r\n        let flows = data[1];\r\n        return {\r\n            brief: brief,\r\n            data: sheetData,\r\n            flows: flows,\r\n        }\r\n    }\r\n    async getSheet(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.getSheet(this.name, id);\r\n        if (ret[0].length === 0) return await this.getArchive(id);\r\n        return await this.unpack(ret);\r\n    }\r\n    async getArchive(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchive(this.name, id)\r\n        return await this.unpack(ret);\r\n    }\r\n\r\n    async getArchives(pageStart:number, pageSize:number) {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n\r\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\r\n\r\n    async stateSheetCount():Promise<StateCount[]> {\r\n        await this.loadSchema();\r\n        let ret:StateCount[] = await this.tvApi.stateSheetCount(this.name);\r\n        return this.states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = ret.find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n    }\r\n}\r\n\r\nexport class PageStateItems<T> extends PageItems<T> {\r\n    private sheet: Sheet;\r\n    constructor(sheet: Sheet) {\r\n        super(true);\r\n        this.sheet = sheet;\r\n        this.pageSize = 10;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Field, ArrFields} from './entities';\r\nimport {Entity} from './entity';\r\n\r\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\r\nexport class Query extends Entity {\r\n    get typeName(): string { return 'query';}\r\n    private pageStart: any;\r\n    private pageSize:number;\r\n    private params:any;\r\n    private more: boolean;\r\n    private startField: Field;\r\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\r\n    returns: ArrFields[];\r\n    isPaged: boolean;\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {returns} = schema;\r\n        this.returns = returns;\r\n        this.isPaged = (returns as any[]).find(v => v.name === '$page') !== undefined;\r\n    }\r\n\r\n    resetPage(size:number, params:any) {\r\n        this.pageStart = undefined;\r\n        this.pageSize = size;\r\n        this.params = params;\r\n        this.more = false;\r\n        this.list = undefined;\r\n    }\r\n    get hasMore() {return this.more;}\r\n    async loadPage():Promise<void> {\r\n        if (this.pageSize === undefined) {\r\n            throw 'call resetPage(size:number, params:any) first';\r\n        }\r\n        let pageStart:any;\r\n        if (this.pageStart !== undefined) {\r\n            switch (this.startField.type) {\r\n                default: pageStart = this.pageStart; break;\r\n                case 'date':\r\n                case 'time':\r\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\r\n            }\r\n        }\r\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\r\n        let data = await this.unpackReturns(res);\r\n        let page = data['$page'] as any[];\r\n        */\r\n        this.list = observable.array([], {deep: false});\r\n        if (page !== undefined) {\r\n            if (page.length > this.pageSize) {\r\n                this.more = true;\r\n                page.pop();\r\n                let ret = this.returns.find(r => r.name === '$page');\r\n                this.startField = ret.fields[0];\r\n                this.pageStart = page[page.length-1][this.startField.name];\r\n            }\r\n            else {\r\n                this.more = false;\r\n            }\r\n            this.list.push(...page);\r\n        }\r\n        //this.loaded = true;\r\n    }\r\n\r\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data.$page;// as any[];\r\n    }\r\n    async query(params:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.query(this.name, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data;\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Book extends Query {\r\n    get typeName(): string { return 'book';}\r\n    protected queryApiName = 'book';\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class History extends Query {\r\n    get typeName(): string { return 'history';}\r\n    protected queryApiName = 'history';\r\n}\r\n","import { Entity } from './entity';\r\nimport { Action } from './action';\r\nimport { Query } from './query';\r\nimport { Field } from './entities';\r\n\r\ninterface MapActions {\r\n    add: Action;\r\n    del: Action;\r\n}\r\ninterface MapQueries {\r\n    all: Query;\r\n    page: Query;\r\n    query: Query;\r\n}\r\n\r\nexport class Map extends Entity {\r\n    get typeName(): string { return 'map';}\r\n    keys: Field[];\r\n    actions: MapActions = {} as any;\r\n    queries: MapQueries = {} as any;\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.schemaFrom = this.schema.from;\r\n        let {actions, queries, keys} = schema;\r\n        this.entities.buildFieldTuid(this.keys = keys);\r\n        //let t = this.schemaStringify();\r\n        for (let i in actions) {\r\n            let schema = actions[i];\r\n            let {name} = schema;\r\n            let action = this.entities.newAction(name, undefined);\r\n            action.setSchema(schema);\r\n            this.actions[i] = action;\r\n        }\r\n        for (let i in queries) {\r\n            let schema = queries[i];\r\n            let {name} = schema;\r\n            let query = this.entities.newQuery(name, undefined);\r\n            query.setSchema(schema);\r\n            this.queries[i] = query;\r\n        }\r\n    }\r\n\r\n    async add(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.add.submit(param);\r\n    }\r\n\r\n    async del(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.del.submit(param);\r\n    }\r\n\r\n    async all() {\r\n        await this.loadSchema();\r\n        return await this.queries.all.query({});\r\n    }\r\n\r\n    async page(param:any, pageStart:any, pageSize: number) {\r\n        await this.loadSchema();\r\n        return await this.queries.page.page(param, pageStart, pageSize);\r\n    }\r\n\r\n    async query(param:any) {\r\n        await this.loadSchema();\r\n        return await this.queries.query.query(param);\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Pending extends Query {\r\n    get typeName(): string { return 'pending';}\r\n    protected queryApiName = 'pending';\r\n}\r\n","import {TuidMain, Tuid} from './tuid';\r\nimport {Action} from './action';\r\nimport {Sheet, SheetState, SheetAction} from './sheet';\r\nimport {Query} from './query';\r\nimport {Book} from './book';\r\nimport {History} from './history';\r\nimport { UqApi } from 'tonva-tools';\r\nimport { Map } from './map';\r\nimport { Pending } from './pending';\r\nimport { CUq } from '../controllers';\r\n\r\nexport type FieldType = 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text' \r\n    | 'datetime' | 'date' | 'time';\r\n\r\nexport function fieldDefaultValue(type:FieldType) {\r\n    switch (type) {\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n        case 'dec':\r\n            return 0;\r\n        case 'char':\r\n        case 'text': \r\n            return '';\r\n        case 'datetime':\r\n        case 'date':\r\n            return '2000-1-1';\r\n        case 'time':\r\n            return '0:00';\r\n    }\r\n}\r\n\r\nexport interface Field {\r\n    name: string;\r\n    type: FieldType;\r\n    tuid?: string;\r\n    arr?: string;\r\n    url?: string;\r\n    null?: boolean;\r\n    size?: number;\r\n    owner?: string;\r\n    _ownerField: Field;\r\n    _tuid: Tuid;\r\n}\r\nexport interface ArrFields {\r\n    name: string;\r\n    fields: Field[];\r\n    id?: string;\r\n    order?: string;\r\n}\r\nexport interface FieldMap {\r\n    [name:string]: Field;\r\n}\r\n\r\nexport class Entities {\r\n    private tuids: {[name:string]: TuidMain} = {};\r\n    private actions: {[name:string]: Action} = {};\r\n    private sheets: {[name:string]: Sheet} = {};\r\n    private queries: {[name:string]: Query} = {};\r\n    private books: {[name:string]: Book} = {};\r\n    private maps: {[name:string]: Map} = {};\r\n    private histories: {[name:string]: History} = {};\r\n    private pendings: {[name:string]: Pending} = {};\r\n    private cacheTimer: any;\r\n    cUq: CUq;\r\n    uqApi: UqApi;\r\n    appId: number;\r\n    uqId: number;\r\n\r\n    constructor(cUq: CUq, uqApi:UqApi, appId: number) {\r\n        this.cUq = cUq;\r\n        this.uqApi = uqApi;\r\n        this.appId = appId;\r\n    }\r\n\r\n    tuid(name:string):TuidMain {return this.tuids[name.toLowerCase()]}\r\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\r\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\r\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\r\n    book(name:string):Book {return this.books[name.toLowerCase()]}\r\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\r\n    history(name:string):History {return this.histories[name.toLowerCase()]}\r\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\r\n\r\n    sheetFromTypeId(typeId:number):Sheet {\r\n        for (let i in this.sheets) {\r\n            let sheet = this.sheets[i];\r\n            if (sheet.typeId === typeId) return sheet;\r\n        }\r\n    }\r\n\r\n    tuidArr: TuidMain[] = [];\r\n    actionArr: Action[] = [];\r\n    sheetArr: Sheet[] = [];\r\n    queryArr: Query[] = [];\r\n    bookArr: Book[] = [];\r\n    mapArr: Map[] = [];\r\n    historyArr: History[] = [];\r\n    pendingArr: Pending[] = [];\r\n\r\n    async loadAccess() {\r\n        let accesses = await this.uqApi.loadAccess();\r\n        if (accesses === undefined) return;\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    async loadEntities() {\r\n        let accesses = await this.uqApi.loadEntities();\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    private buildEntities(entities:any) {\r\n        if (entities === undefined) {\r\n            debugger;\r\n        }\r\n        let {access, tuids} = entities;\r\n        this.buildTuids(tuids);\r\n        this.buildAccess(access);\r\n    }\r\n\r\n    getTuid(name:string, div?:string, tuidUrl?:string): Tuid {\r\n        let tuid = this.tuids[name];\r\n        if (tuid === undefined) return;\r\n        if (div === undefined) return tuid;\r\n        return tuid.divs[div];\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.clearCacheTimer();\r\n        this.cacheTimer = setTimeout(this.loadIds, defer);\r\n    }\r\n    private clearCacheTimer() {\r\n        if (this.cacheTimer === undefined) return;\r\n        clearTimeout(this.cacheTimer);\r\n        this.cacheTimer = undefined;\r\n    }\r\n    private loadIds = () => {\r\n        this.clearCacheTimer();\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.cacheIds();\r\n        }\r\n    }\r\n\r\n    private buildTuids(tuids:any) {\r\n        let proxyColl = {} as any;\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name, typeId, proxies} = schema;\r\n            let tuid = this.newTuid(i, typeId);\r\n            tuid.sys = true;\r\n            //tuid.setSchema(schema);\r\n            if (proxies !== undefined) proxyColl[i] = proxies;\r\n        }\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name} = schema;\r\n            let tuid = this.getTuid(i);\r\n            //tuid.sys = true;\r\n            tuid.setSchema(schema);\r\n        }\r\n        for (let i in proxyColl) {\r\n            let proxies:string[] = proxyColl[i];\r\n            let tuid = this.tuids[i];\r\n            tuid.proxies = {};\r\n            for (let p of proxies) {\r\n                tuid.proxies[p] = this.tuids[p];\r\n            }\r\n        }\r\n    }\r\n\r\n    private buildAccess(access:any) {\r\n        for (let a in access) {\r\n            let v = access[a];\r\n            switch (typeof v) {\r\n                case 'string': this.fromType(a, v); break;\r\n                case 'object': this.fromObj(a, v); break;\r\n            }\r\n        }\r\n        /*\r\n        for (let tuid of this.tuidArr) {\r\n            tuid.setProxies(this);\r\n        }*/\r\n    }\r\n\r\n    newAction(name:string, id:number):Action {\r\n        let action = this.actions[name];\r\n        if (action !== undefined) return action;\r\n        action = this.actions[name] = new Action(this, name, id)\r\n        this.actionArr.push(action);\r\n        return action;\r\n    }\r\n    newTuid(name:string, id:number):TuidMain {\r\n        let tuid = this.tuids[name];\r\n        if (tuid !== undefined) return tuid;\r\n        tuid = this.tuids[name] = new TuidMain(this, name, id);\r\n        this.tuidArr.push(tuid);\r\n        return tuid;\r\n    }\r\n    newQuery(name:string, id:number):Query {\r\n        let query = this.queries[name];\r\n        if (query !== undefined) return query;\r\n        query = this.queries[name] = new Query(this, name, id)\r\n        this.queryArr.push(query);\r\n        return query;\r\n    }\r\n    newBook(name:string, id:number):Book {\r\n        let book = this.books[name];\r\n        if (book !== undefined) return book;\r\n        book = this.books[name] = new Book(this, name, id);\r\n        this.bookArr.push(book);\r\n        return book;\r\n    }\r\n    newMap(name:string, id:number):Map {\r\n        let map = this.maps[name];\r\n        if (map !== undefined) return map;\r\n        map = this.maps[name] = new Map(this, name, id)\r\n        this.mapArr.push(map);\r\n        return map;\r\n    }\r\n    newHistory(name:string, id:number):History {\r\n        let history = this.histories[name];\r\n        if (history !== undefined) return;\r\n        history = this.histories[name] = new History(this, name, id)\r\n        this.historyArr.push(history);\r\n        return history;\r\n    }\r\n    newPending(name:string, id:number):Pending {\r\n        let pending = this.pendings[name];\r\n        if (pending !== undefined) return;\r\n        pending = this.pendings[name] = new Pending(this, name, id)\r\n        this.pendingArr.push(pending);\r\n        return pending;\r\n    }\r\n    newSheet(name:string, id:number):Sheet {\r\n        let sheet = this.sheets[name];\r\n        if (sheet !== undefined) return sheet;\r\n        sheet = this.sheets[name] = new Sheet(this, name, id);\r\n        this.sheetArr.push(sheet);\r\n        return sheet;\r\n    }\r\n    private fromType(name:string, type:string) {\r\n        let parts = type.split('|');\r\n        type = parts[0];\r\n        let id = Number(parts[1]);\r\n        switch (type) {\r\n            case 'uq': this.uqId = id; break;\r\n            case 'tuid': \r\n                let tuid = this.newTuid(name, id);\r\n                tuid.sys = false;\r\n                break;\r\n            case 'action': this.newAction(name, id); break;\r\n            case 'query': this.newQuery(name, id); break;\r\n            case 'book': this.newBook(name, id); break;\r\n            case 'map': this.newMap(name, id); break;\r\n            case 'history': this.newHistory(name, id); break;\r\n            case 'sheet':this.newSheet(name, id); break;\r\n            case 'pending': this.newPending(name, id); break;\r\n        }\r\n    }\r\n    private fromObj(name:string, obj:any) {\r\n        switch (obj['$']) {\r\n            case 'sheet': this.buildSheet(name, obj); break;\r\n        }\r\n    }\r\n    private buildSheet(name:string, obj:any) {\r\n        let sheet = this.sheets[name];\r\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\r\n        sheet.build(obj);\r\n        /*\r\n        let states = sheet.states;\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    /*\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }*/\r\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {tuid, arr, url} = f;\r\n            if (tuid === undefined) continue;\r\n            f._tuid = this.getTuid(tuid, arr, url);\r\n        }\r\n        for (let f of fields) {\r\n            let {owner} = f;\r\n            if (owner === undefined) continue;\r\n            let ownerField = fields.find(v => v.name === owner);\r\n            if (ownerField === undefined) {\r\n                if (mainFields !== undefined) {\r\n                    ownerField = mainFields.find(v => v.name === owner);\r\n                }\r\n                if (ownerField === undefined) {\r\n                    throw `owner field ${owner} is undefined`;\r\n                }\r\n            }\r\n            f._ownerField = ownerField;\r\n            let {arr, url} = f;\r\n            f._tuid = this.getTuid(ownerField._tuid.name, arr, url);\r\n            if (f._tuid === undefined) throw 'owner field ${owner} is not tuid';\r\n        }\r\n    }\r\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\r\n        if (arrFields === undefined) return;\r\n        for (let af of arrFields) {\r\n            let {fields} = af;\r\n            if (fields === undefined) continue;\r\n            this.buildFieldTuid(fields, mainFields);\r\n        }\r\n    }\r\n}\r\n","export * from './entities';\r\nexport * from './entity';\r\nexport * from './action';\r\nexport * from './query';\r\nexport * from './sheet';\r\nexport * from './tuid';\r\nexport * from './book';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\n","import * as React from 'react';\r\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\r\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\r\n\r\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\r\n\r\nexport abstract class RowContainer {\r\n    protected form:FormView;\r\n    protected row: FormRow;\r\n    protected control: ControlBase;\r\n    constructor(form:FormView, row: FormRow) {\r\n        this.form = form;\r\n        this.row = row;\r\n        if ((row as JSX.Element).type === undefined) {\r\n            let cc:CreateControl = (row as LabelFormRow).createControl;\r\n            if (cc === undefined) cc = form.createControl;\r\n            if (cc === undefined) cc = createControl;\r\n            this.control = cc(form, row);\r\n        }\r\n    }\r\n    abstract render(key:string):JSX.Element;\r\n    \r\n    isOk():boolean {\r\n        if (this.control === undefined) return true;\r\n        return this.control.isOk();\r\n    }\r\n\r\n    contains(fieldName:string):boolean {\r\n        let field = (this.row as FieldRow).field;\r\n        if (field !== undefined) return fieldName === field.name;\r\n        let group = (this.row as GroupRow).group;\r\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\r\n        return false;\r\n    }\r\n    get hasError():boolean {return this.control.hasError;}\r\n    get filled():boolean {return this.control.filled;}\r\n    clear() {\r\n        if (this.control !== undefined) this.control.clear();\r\n    }\r\n    clearErrors() {\r\n        if (this.control !== undefined) this.control.clearErrors();\r\n    }\r\n    readValues(values:any):any {\r\n        if (this.control !== undefined) this.control.readValues(values);\r\n    }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.control !== undefined) this.control.setError(fieldName, error);\r\n    }\r\n    setInitValues(values:any) {\r\n        if (this.control !== undefined) this.control.setInitValues(values);\r\n    }\r\n}\r\n\r\nclass ElementRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\r\n    }\r\n    get hasError():boolean {return false;}\r\n    get filled():boolean {return false;}\r\n}\r\n\r\nclass BootStrapRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className='form-group row'>\r\n            <label className='col-sm-2 col-form-label'>\r\n                {(this.row as LabelFormRow).label}\r\n            </label>\r\n            {this.control.render()}\r\n        </div>;\r\n\r\n        //has-success is-valid\r\n    }\r\n}\r\n\r\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new BootStrapRowContainer(form, row);\r\n}\r\n\r\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new ElementRowContainer(form, row);\r\n}\r\n","//import {isDevelopment} from '../local';\r\nimport {HttpChannel} from './httpChannel';\r\n\r\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\r\n    await channel.fetch(url, options, resolve, reject);\r\n}\r\n\r\nexport abstract class ApiBase {\r\n    protected token: string;\r\n    protected path: string;\r\n    protected showWaiting: boolean;\r\n\r\n    constructor(path: string, showWaiting: boolean) {\r\n        this.path = path || '';\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\r\n\r\n    public async call(url:string, method:string, body:any):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.callFetch(url, method, body);\r\n    }\r\n\r\n    public async get(path:string, params:any=undefined): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.get(this.path + path, params);\r\n    }\r\n\r\n    public async post(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.post(this.path + path, params);\r\n    }\r\n\r\n    public async put(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.put(this.path + path, params);\r\n    }\r\n\r\n    public async delete(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.delete(this.path + path, params);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {nav, mobileHeaderStyle} from './nav';\r\n\r\nexport interface TitleBarProps {\r\n    back?: 'back' | 'close' | 'none';\r\n    center: string | JSX.Element;\r\n    right?: JSX.Element;\r\n    logout?: boolean | (()=>Promise<void>);\r\n}\r\nexport interface TitleBarState {\r\n    hasBack: boolean;\r\n}\r\nexport class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\r\n    constructor(props: TitleBarProps) {\r\n        super(props);\r\n        this.navChange = this.navChange.bind(this);\r\n        this.state = {\r\n            hasBack: false,\r\n        };\r\n    }\r\n    navChange() {\r\n        this.setState({\r\n            hasBack: nav.level > 1\r\n        })\r\n    }\r\n    componentWillMount() {\r\n        this.navChange();\r\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\r\n    }\r\n    componentWillUnmount() {\r\n        //nav.events.remove('change', this.navChangeHandler);\r\n    }\r\n    async back() {\r\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\r\n    }\r\n    openWindow() {\r\n        window.open(document.location.href);\r\n    }\r\n    private logoutClick = () => {\r\n        nav.showLogout(this.logout);\r\n        /*\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout()}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        */\r\n    }\r\n    private logout = async () => {\r\n        let {logout} = this.props;\r\n        if (typeof logout === 'function') {\r\n            await logout(); \r\n        }\r\n        await nav.logout(undefined);\r\n    }\r\n    render() {\r\n        let b = this.state.hasBack || self != top;\r\n        let {right, center, logout} = this.props;\r\n        let back, pop, debugLogout;\r\n        if (logout !== undefined && self === top) {\r\n            if (typeof logout === 'boolean' && logout === true\r\n                || typeof logout === 'function')\r\n            {\r\n                let {user} = nav;\r\n                if (user !== undefined) {\r\n                    let {nick, name} = user;\r\n                    debugLogout = <div className=\"d-flex align-items-center\">\r\n                        <small className=\"text-light\">{nick || name}</small>\r\n                        <a className=\"dropdown-toggle btn btn-secondary btn-sm ml-2\"\r\n                            role=\"button\"\r\n                            onClick={this.logoutClick}>\r\n                            <i className=\"fa fa-sign-out\" />\r\n                        </a>\r\n                    </div>;\r\n                }\r\n            }\r\n        }\r\n        if (b) {\r\n            switch (this.props.back) {\r\n                case 'none': back = undefined; break;\r\n                default:\r\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\r\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\r\n            }\r\n        }\r\n        if (self != top) {\r\n            console.log(document.location.href);\r\n            pop = <header onClick={this.openWindow} />;\r\n        }\r\n        let rightView;\r\n        if (right || debugLogout) rightView = <aside>{right} {debugLogout}</aside>;\r\n        return (\r\n        <header style={mobileHeaderStyle}>\r\n            {pop}\r\n            {back}\r\n            <div>{center}</div>\r\n            {rightView}\r\n        </header>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { TuidMain, Query, Entity } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuery } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\r\n    protected vForm: VForm;\r\n    private row: React.StatelessComponent;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        let {row, queryRow} = this.ui;\r\n        this.row = queryRow || row || DefaultRow;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let params = this.vForm.getValues();\r\n        if (this.entity.isPaged === true) {\r\n            await this.entity.resetPage(30, params);\r\n            await this.entity.loadPage();\r\n            this.replacePage(this.pageResult);\r\n        }\r\n        else {\r\n            let data = await this.entity.query(params);\r\n            this.replacePage(this.queryResult, data);\r\n        }\r\n    }\r\n\r\n    again = () => {\r\n        this.vForm.reset();\r\n        this.replacePage(this.view);\r\n    }\r\n\r\n    renderExtra() {\r\n        return;\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render('mx-3 my-2')}\r\n        {this.renderExtra()}\r\n    </Page>;\r\n\r\n    protected pageResult = () => {\r\n        let {name, list} = this.entity;\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <List items={list} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    }\r\n\r\n    protected queryResult = observer((result:any) => {\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { Query } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuerySelect } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\r\n    private row: React.StatelessComponent;\r\n\r\n    PageItems:QueryPageItems;\r\n    ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        let {row, selectRow} = this.ui;\r\n        this.row = selectRow || row || DefaultRow;\r\n        //this.entity = this.controller.entity;\r\n        this.PageItems = new QueryPageItems(this.entity);\r\n        await this.onSearch(param);\r\n        this.openPage(this.view);\r\n    }\r\n    onSearch = async (key:string) => {\r\n        await this.PageItems.first(key);\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    private callOnSelected(item:any) {\r\n       this.closePage();\r\n       this.returnCall(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    view = () => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\nexport class QueryPageItems extends PageItems<any> {\r\n    private query: Query;\r\n    constructor(query: Query) {\r\n        super();\r\n        this.query = query;\r\n    }\r\n    protected async load():Promise<any[]> {\r\n        await  this.query.loadSchema();\r\n        let ret:any[];\r\n        if (this.query.isPaged === true)\r\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\r\n        else {\r\n            let data = await this.query.query(this.param);\r\n            //let data = await this.query.unpackReturns(res);\r\n            ret = data[this.query.returns[0].name];\r\n        }\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        if (item === undefined) this.pageStart = 0;\r\n    }\r\n}\r\n","import { StatelessComponent } from \"react\";\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Query } from \"../../entities\";\r\nimport { VQueryMain } from \"./vQueryMain\";\r\nimport { VQuerySelect } from \"./vQuerySelect\";\r\n\r\nexport interface QueryUI extends EntityUI {\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    main?: typeof VQueryMain;\r\n    row?: StatelessComponent;\r\n    queryRow?: StatelessComponent;\r\n    selectRow?: StatelessComponent;\r\n}\r\n\r\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\r\n}\r\n\r\nexport class CQuery extends CQueryBase {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VQueryMain);\r\n    }\r\n\r\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\r\n}\r\n\r\nexport class CQuerySelect extends CQueryBase {\r\n    protected async internalStart(param?:any) {\r\n        await this.openVPage(this.VQuerySelect, param);\r\n    }\r\n\r\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\r\n}\r\n","export * from './cQuery';\r\nexport * from './vQueryMain';\r\nexport * from './vQuerySelect';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { ResUploader } from '../resUploader';\r\nimport { Image } from '../image';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class ImageItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    private resUploader: ResUploader;\r\n    @observable private resId: string;\r\n    @observable private overSize: boolean = false;\r\n\r\n    protected async internalStart():Promise<any> {\r\n        this.resId = this.value;        \r\n        return new Promise<any>((resolve, reject) => {\r\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\r\n        });\r\n    }\r\n\r\n    private upload = async () => {\r\n        if (!this.resUploader) return;\r\n        let ret = await this.resUploader.upload();\r\n        if (ret === null) {\r\n            this.overSize = true;\r\n            setTimeout(() => this.overSize = false, 3000);\r\n            return;\r\n        }\r\n        this.resId = ret;\r\n        this.isChanged = (this.resId != this.value);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.resId)}>保存</button>;\r\n        let overSize:any;\r\n        if (this.overSize === true) {\r\n            overSize = <div className=\"text-danger\">\r\n                <i className=\"fa fa-times-circle\" /> 图片文件大小超过2M，无法上传\r\n            </div>;\r\n        }\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"my-3 px-3 py-3 bg-white\">\r\n                <div>\r\n                    <div>上传图片：</div>\r\n                    <div className=\"my-3\">\r\n                        <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-primary\" onClick={this.upload}>上传</button>\r\n                    </div>\r\n                </div>\r\n                {overSize}\r\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"w-12c h-12c mr-4\"\r\n                        style={{border: '1px dotted gray', padding: '8px'}}>\r\n                        <Image className=\"w-100 h-100\" src={this.resId} />\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"small\">图片预览</div>\r\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function Loading() {\r\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\r\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\r\n    </div>;\r\n}\r\n\r\n/*\r\nexport function Loading() {\r\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\r\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\r\n        加载中...\r\n    </div>\r\n    </div>\r\n}\r\n*/\r\n\r\n\r\n","import * as React from 'react';\r\nimport { nav } from './nav';\r\n\r\nexport interface ResUploaderProps {\r\n    className?: string;\r\n    multiple?: boolean;\r\n    maxSize?: number;\r\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport class ResUploader extends React.Component<ResUploaderProps> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    upload = async ():Promise<string> => {\r\n        let {maxSize} = this.props;\r\n        if (maxSize === undefined || maxSize <= 0) \r\n            maxSize = 100000000000;\r\n        else\r\n            maxSize = maxSize * 1024;\r\n        let resUrl = nav.resUrl + 'upload';\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            if (file.size > maxSize) return null;\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(resUrl, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            let json = await res.json();\r\n            return ':' + json.res.id;\r\n        }\r\n        catch (err) {\r\n            console.error('%s %s', resUrl, err);\r\n        }\r\n    }\r\n    render() {\r\n        let {className, multiple, onFilesChange} = this.props;\r\n        return <input \r\n            className={className}\r\n            ref={t=>this.fileInput=t} \r\n            onChange={onFilesChange}\r\n            type='file' name='file' multiple={multiple} />\r\n    }\r\n}\r\n","export * from './rule';\r\nexport * from './field';\r\nexport * from './face';\r\nexport * from './rowContainer';\r\nexport * from './formView';\r\nexport * from './TonvaForm';\r\nexport {ControlBase} from './control';\r\n","import * as React from 'react';\r\nimport {FormEvent} from 'react';\r\nimport {computed} from 'mobx';\r\nimport {uid} from '../uid';\r\nimport {Rule} from './rule';\r\nimport {Field} from './field';\r\nimport {Face} from './face';\r\nimport {CreateControl, ButtonsControl} from './control';\r\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\r\n\r\nexport interface FieldView {\r\n    field: Field;\r\n    face?: Face;\r\n}\r\n\r\nexport interface LabeledRow {\r\n    label?: string;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    help?: JSX.Element;\r\n}\r\n\r\nexport interface FieldRow extends LabeledRow, FieldView {\r\n}\r\n\r\nexport interface GroupRow extends LabeledRow {\r\n    group: FieldView[];\r\n}\r\n\r\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\r\nexport type FormRow = LabelFormRow|JSX.Element;\r\n\r\nexport interface SubmitResult {\r\n    success: boolean;\r\n    message?: string\r\n    result?: any;\r\n}\r\n\r\nexport interface FormProps {\r\n    formRows: FormRow[];\r\n    //context?: any;              // form context，比如，可以是EntitiesUI\r\n    rules?: Rule | Rule[];\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n    otherButton?: string|JSX.Element;\r\n    onOther?: (values:any) => void;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport class FormView {\r\n    uid:string;\r\n    private rows: RowContainer[] = [];\r\n    private buttonsRow: RowContainer;\r\n    props: FormProps;\r\n    createControl?: CreateControl;\r\n    constructor(props:FormProps) {\r\n        this.uid = uid();\r\n        this.props = props;\r\n        this.buildRows(props);\r\n        this.createControl = props.createControl;\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\r\n        console.log(ret);\r\n        return this.rows.some(row => row.hasError);\r\n    }\r\n    @computed get nothing():boolean {\r\n        let ret = this.rows.every(row => !row.filled);\r\n        return ret;\r\n    }\r\n\r\n    readValues():any {\r\n        let values = {} as any;\r\n        for (let row of this.rows) {\r\n            row.readValues(values);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    clear() {\r\n        for (let row of this.rows) {\r\n            row.clear();\r\n        }\r\n    }\r\n\r\n    clearErrors() {\r\n        for (let row of this.rows) {\r\n            row.clearErrors();\r\n        }\r\n    }\r\n\r\n    setError(fieldName:string, error:string) {\r\n        for (let row of this.rows) {\r\n            row.setError(fieldName, error);\r\n        }\r\n    }\r\n\r\n    setInitValues(initValues:any) {\r\n        if (initValues === undefined) return;\r\n        for (let row of this.rows) {\r\n            row.setInitValues(initValues);\r\n        }\r\n    }\r\n\r\n    private buildRows(props:FormProps) {\r\n        let {formRows, createRow} = props;\r\n        if (formRows !== undefined) {\r\n            for (let row of formRows) {\r\n                this.rows.push(this.buildRow(row, createRow));\r\n            }\r\n            if (this.props.readOnly !== true) {\r\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\r\n            }\r\n        }\r\n        else {\r\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\r\n        }\r\n    }\r\n\r\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\r\n        let createRow:CreateRow;\r\n        let type = (formRow as JSX.Element).type;\r\n        if (type !== undefined) {\r\n            createRow = elementCreateRow;\r\n        }\r\n        else {\r\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\r\n            if (createRow === undefined) {\r\n                createRow = formRowCreator;\r\n                if (createRow === undefined) createRow = bootstrapCreateRow;\r\n            }\r\n        }\r\n        let row = createRow(this, formRow);\r\n        return row;\r\n    }\r\n\r\n    private createButtons(form:FormView, row: FormRow) {\r\n        return new ButtonsControl(form);\r\n    }\r\n\r\n    private isOk():boolean {\r\n        let isOk = true;\r\n        for (let row of this.rows) {\r\n            if (!row.isOk()) isOk = false;\r\n        }\r\n        return isOk;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        return <form onSubmit={this.onSubmit}>\r\n            {this.rows.map((row,index) => row.render(this.uid + index))}\r\n            {this.buttons()}\r\n        </form>;\r\n    }\r\n\r\n    buttons():JSX.Element {\r\n        if (this.buttonsRow === undefined) return;\r\n        return this.buttonsRow.render(this.uid + this.rows.length);\r\n    }\r\n    \r\n    async onSubmit(event:FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (!this.isOk()) return;\r\n        let values = this.readValues();\r\n        await this.props.onSubmit(values);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Page, loadAppUqs, nav, appInFrame, Controller, TypeVPage, VPage, resLang, getExHash, isDevelopment} from 'tonva-tools';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { CUq, EntityType, UqUI } from './uq';\r\nimport { centerApi } from '../centerApi';\r\nimport { LocalData } from 'tonva-tools/local';\r\n\r\nexport interface RoleAppUI {\r\n    CApp?: typeof CApp;\r\n    CUq?: typeof CUq;\r\n    main?: TypeVPage<CApp>;\r\n    uqs: {[uq:string]: UqUI | (()=>Promise<UqUI>)};\r\n    res?: any;\r\n}\r\n\r\nexport interface AppUI extends RoleAppUI {\r\n    appName: string; // 格式: owner/appName\r\n    roles?: {[role:string]: RoleAppUI | (()=>Promise<RoleAppUI>)};\r\n}\r\n\r\nexport class CApp extends Controller {\r\n    private appOwner:string;\r\n    private appName:string;\r\n    private cImportUqs: {[uq:string]: CUq} = {};\r\n    protected ui:AppUI;\r\n    id: number;\r\n    appUnits:any[];\r\n\r\n    constructor(ui:AppUI) {\r\n        super(resLang(ui && ui.res));\r\n        let tonvaApp = ui.appName;\r\n        if (tonvaApp === undefined) {\r\n            throw 'appName like \"owner/app\" must be defined in UI';\r\n        }\r\n        let parts = tonvaApp.split('/');\r\n        if (parts.length !== 2) {\r\n            throw 'tonvaApp name must be / separated, owner/app';\r\n        }\r\n        this.appOwner = parts[0];\r\n        this.appName = parts[1];\r\n        if (ui.uqs === undefined) ui.uqs = {};\r\n        this.ui = ui;\r\n        this.caption = this.res.caption || 'Tonva';\r\n    }\r\n    \r\n    readonly caption: string; // = 'View Model 版的 Uq App';\r\n    cUqCollection: {[uq:string]: CUq} = {};\r\n\r\n    async startDebug() {\r\n        let appName = this.appOwner + '/' + this.appName;\r\n        let cApp = new CApp({appName: appName, uqs:{}} );\r\n        let keepNavBackButton = true;\r\n        await cApp.start(keepNavBackButton);    \r\n    }\r\n\r\n    protected async loadUqs(): Promise<string[]> {\r\n        let retErrors:string[] = [];\r\n        let unit = appInFrame.unit;\r\n        let app = await loadAppUqs(this.appOwner, this.appName);\r\n        let {id, uqs} = app;\r\n        this.id = id;\r\n\r\n        let promises: PromiseLike<string>[] = [];\r\n        let promiseChecks: PromiseLike<boolean>[] = [];\r\n        let roleAppUI = await this.buildRoleAppUI();\r\n        for (let appUq of uqs) {\r\n            let {id:uqId, uqOwner, uqName, access} = appUq;\r\n            let uq = uqOwner + '/' + uqName;\r\n            let uqUI = roleAppUI && roleAppUI.uqs && roleAppUI.uqs[uq];\r\n            let cUq = this.newCUq(uq, uqId, access, uqUI || {});\r\n            this.cUqCollection[uq] = cUq;\r\n            promises.push(cUq.loadSchema());\r\n            promiseChecks.push(cUq.entities.uqApi.checkAccess());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        Promise.all(promiseChecks).then((checks) => {\r\n            for (let c of checks) {\r\n                if (c === false) {\r\n                    //debugger;\r\n                    //nav.start();\r\n                    //return;\r\n                }\r\n            }\r\n        });\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) return;\r\n        return retErrors;\r\n    }\r\n\r\n    private async buildRoleAppUI():Promise<RoleAppUI> {\r\n        if (!this.ui) return undefined;\r\n        let {hashParam} = nav;\r\n        if (!hashParam) return this.ui;\r\n        let {roles} = this.ui;\r\n        let ret:RoleAppUI = {} as any;\r\n        for (let i in this.ui) {\r\n            if (i === 'roles') continue;\r\n            ret[i] = _.cloneDeep(this.ui[i]);\r\n        }\r\n        let roleAppUI = roles && roles[hashParam];\r\n        if (typeof roleAppUI === 'function') roleAppUI = await roleAppUI();\r\n        _.merge(ret, roleAppUI);\r\n        return ret;\r\n    }\r\n\r\n    async getImportUq(uqOwner:string, uqName:string):Promise<CUq> {\r\n        let uq = uqOwner + '/' + uqName;\r\n        let cUq = this.cImportUqs[uq];\r\n        if (cUq !== undefined) return cUq;\r\n        let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n        let uqId = -1; // unknown\r\n        this.cImportUqs[uq] = cUq = this.newCUq(uq, uqId, undefined, ui || {});\r\n        let retError = await cUq.loadSchema();\r\n        if (retError !== undefined) {\r\n            console.error(retError);\r\n            debugger;\r\n            return;\r\n        }\r\n        return cUq;\r\n    }\r\n\r\n    protected newCUq(uq:string, uqId:number, access:string, ui:any) {\r\n        let cUq = new (this.ui.CUq || CUq)(this, uq, this.id, uqId, access, ui);        \r\n        Object.setPrototypeOf(cUq.x, this.x);\r\n        return cUq;\r\n    }\r\n\r\n    get cUqArr():CUq[] {\r\n        let ret:CUq[] = [];\r\n        for (let i in this.cUqCollection) {\r\n            ret.push(this.cUqCollection[i]);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getCUq(apiName:string):CUq {\r\n        return this.cUqCollection[apiName];\r\n    }\r\n\r\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\r\n    protected async beforeStart():Promise<boolean> {\r\n        try {\r\n            if (isDevelopment === true) {\r\n                let {predefinedUnit} = appInFrame;\r\n                let app = await loadAppUqs(this.appOwner, this.appName);\r\n                let {id} = app;\r\n                this.id = id;\r\n                let {user} = nav;\r\n                if (user !== undefined && user.id > 0) {\r\n                    this.appUnits = await centerApi.userAppUnits(this.id);\r\n                    switch (this.appUnits.length) {\r\n                        case 0:\r\n                            this.showUnsupport(predefinedUnit);\r\n                            return false;\r\n                        case 1:\r\n                            let appUnit = this.appUnits[0].id;\r\n                            if (appUnit === undefined || appUnit < 0 || \r\n                                predefinedUnit !== undefined && appUnit != predefinedUnit)\r\n                            {\r\n                                this.showUnsupport(predefinedUnit);\r\n                                return false;\r\n                            }\r\n                            appInFrame.unit = appUnit;\r\n                            break;\r\n                        default:\r\n                            if (predefinedUnit>0 && this.appUnits.find(v => v.id===predefinedUnit) !== undefined) {\r\n                                appInFrame.unit = predefinedUnit;\r\n                                break;\r\n                            }\r\n                            nav.push(<this.selectUnitPage />)\r\n                            return false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let retErrors = await this.loadUqs();\r\n            if (retErrors !== undefined) {\r\n                this.openPage(<Page header=\"ERROR\">\r\n                    <div className=\"m-3\">\r\n                        <div>Load Uqs 发生错误：</div>\r\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\r\n                    </div>\r\n                </Page>);\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            nav.push(<Page header=\"App start error!\">\r\n                <pre>\r\n                    {typeof err === 'string'? err : err.message}\r\n                </pre>\r\n            </Page>);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    protected async internalStart(param:any) {\r\n        if (param !== true) {\r\n            this.clearPrevPages();\r\n        }\r\n        await this.showMainPage();\r\n    }\r\n    async load() {\r\n        await this.beforeStart();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return this.renderView(this.VAppMain);\r\n    }\r\n\r\n    // 如果是独立app，删去显示app之前的页面。\r\n    // 如果非独立app，则不删\r\n    protected clearPrevPages() {\r\n        nav.clear();\r\n    }\r\n\r\n    private showUnsupport(predefinedUnit: number) {\r\n        this.clearPrevPages();\r\n        let {user} = nav;\r\n        let userName:string = user? user.name : '[未登录]';\r\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\r\n            <div className=\"m-3 text-danger container\">\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">登录用户: </div>\r\n                    <div className=\"col\">{userName}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">App:</div>\r\n                    <div className=\"col\">{`${this.appOwner}/${this.appName}`}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">预设小号:</div>\r\n                    <div className=\"col\">{predefinedUnit || <small className=\"text-muted\">[无预设小号]</small>}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">\r\n                        <FA name=\"exclamation-triangle\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"text-muted\">无法运行可能原因：</div>\r\n                        <ul className=\"p-0\">\r\n                            <li>没有小号运行 {this.ui.appName}</li>\r\n                            <li>用户 <b>{userName}</b> 没有加入任何一个运行{this.ui.appName}的小号</li>\r\n                            {\r\n                                predefinedUnit && \r\n                                <li>预设小号 <b>{predefinedUnit}</b> 没有运行App {this.ui.appName}</li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    predefinedUnit || \r\n                    <div className=\"form-group row\">\r\n                    <div className=\"col-2\"></div>\r\n                    <div className=\"col\">\r\n                        预设小号定义在 public/unit.json 文件中。\r\n                        定义了这个文件的程序，只能由url直接启动。\r\n                        用户第一次访问app之后，会缓存在localStorage里。<br/>\r\n                        如果要删去缓存的预定义Unit，logout然后再login。\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        </Page>)\r\n    }\r\n\r\n    private async showMainPage() {\r\n        // #tv-RwPBwMef-23-sheet-api-108\r\n        let exHash = getExHash();\r\n        if (exHash !== undefined) {\r\n            let parts = exHash.split('-');\r\n            if (parts.length > 3) {\r\n                let action = parts[3];\r\n                // sheet_debug 表示centerUrl是debug方式的\r\n                if (action === 'sheet' || action === 'sheet_debug') {\r\n                    let uqId = Number(parts[4]);\r\n                    let sheetTypeId = Number(parts[5]);\r\n                    let sheetId = Number(parts[6]);\r\n                    let cUq = this.getCUqFromId(uqId);\r\n                    if (cUq === undefined) {\r\n                        alert('unknown uqId: ' + uqId);\r\n                        return;\r\n                    }\r\n                    this.clearPrevPages();\r\n                    await cUq.navSheet(sheetTypeId, sheetId);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.openVPage(this.VAppMain);\r\n    }\r\n\r\n    private getCUqFromId(uqId:number): CUq {\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            if (cUq.id === uqId) return cUq;\r\n        }\r\n        return;\r\n    }\r\n\r\n    renderRow = (item: any, index: number):JSX.Element => {\r\n        let {id, nick, name} = item;\r\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\r\n            <div>{nick || name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: any) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        await this.start();\r\n    }\r\n\r\n    protected selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={true}>\r\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>\r\n    }\r\n}\r\n\r\nclass VAppMain extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    render(param?:any) {\r\n        return this.appContent();\r\n    }\r\n\r\n    protected appPage() {\r\n        let {caption} = this.controller;\r\n        return <Page header={caption} logout={async()=>{appInFrame.unit = undefined}}>\r\n            {this.appContent()}\r\n        </Page>;\r\n    }\r\n\r\n    protected appContent = () => {\r\n        let {cUqArr} = this.controller;\r\n        let content:any;\r\n        if (cUqArr.length === 0) {\r\n            content = <div className=\"text-danger\">\r\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <>{content}</>;\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { FA } from \"tonva-react-form\";\r\n\r\nfunction icon(className:string, name:string) {\r\n    return <FA className={className} name={name} fixWidth={true} />;\r\n}\r\n/*\r\nexport interface EntityRes {\r\n    caption: string;\r\n    icon: JSX.Element;\r\n}\r\n*/\r\n\r\nexport const entityIcons:{[type:string]:JSX.Element} = {\r\n    tuid: icon('text-info', 'list-alt'),\r\n    action: icon('text-info', 'hand-o-right'),\r\n    map: icon('text-muted', 'list-ul'),\r\n    book: icon('text-muted', 'book'),\r\n    query: icon('text-warning', 'search'),\r\n    history: icon('text-info', 'hand-o-right'),\r\n    pending: icon('text-info', 'forward'),\r\n    sheet: icon('text-primary', 'wpforms'),\r\n};\r\n","import { Controller } from \"tonva-tools\";\r\nimport { CUq } from \"./uq\";\r\n\r\nexport abstract class ControllerUq extends Controller {\r\n    constructor(cUq: CUq, res:any) {\r\n        super(res);\r\n        this.cUq = cUq;\r\n    }\r\n    cUq: CUq;\r\n}\r\n","import {CenterApi as CenterApiBase} from 'tonva-tools';\r\n\r\n//\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page } from 'tonva-tools';\r\nimport { List, Muted, LMR } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open() {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    newClick = () => this.event('new');\r\n    schemaClick = () => this.event('schema'); \r\n    archivesClick = () => this.event('archives');\r\n    sheetStateClick = (state) => this.event('state', state);\r\n\r\n    renderState = (item:any, index:number) => {\r\n        let {state, count} = item;\r\n        if (count === 0) return null;\r\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\r\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let list = this.controller.statesCount.filter(row=>row.count);\r\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\r\n        let templet:any;\r\n        if (this.isDev === true) {\r\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\r\n        }\r\n        return <Page header={this.label}>\r\n            <LMR\r\n                className=\"mx-3 my-2\"\r\n                right={right}>\r\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\r\n                {templet}\r\n            </LMR>\r\n            <List className=\"my-2\"\r\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\r\n                none=\"[ 无 ]\"\r\n                items={list}\r\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\r\n    vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        let valuesWithBox = this.vForm.values;\r\n        //let ret = \r\n        await this.controller.onSave(values, valuesWithBox);\r\n        /*\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.controller.showSaved(ret);\r\n        */\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import * as React from 'react';\r\nimport {List, Muted, LMR, EasyDate, FA} from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nconst leftFlowStyle = {width: '8rem'};\r\n\r\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected vForm: VForm;\r\n    protected sheetData: SheetData;\r\n    //data: any;\r\n    //state: string;\r\n    //flows:any[];\r\n\r\n    flowRow = (item:any, index:number):JSX.Element => {\r\n        let {date, user, preState, state, action} = item;\r\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\r\n        let to;\r\n        switch (state) {\r\n            case '$': break;\r\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\r\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\r\n        }\r\n        /*\r\n        return <div className=\"row\">\r\n            <div className=\"col-sm\"></div>\r\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\r\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\r\n        </div>;\r\n        */\r\n        return <LMR \r\n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\r\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\r\n            <div className=\"p-2\">{to}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    protected sheetView = () => {\r\n        let {brief, flows} = this.sheetData;\r\n        let removed;\r\n        if (brief.state === '-')\r\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\r\n        return <div>\r\n            {removed}\r\n            {this.vForm.render()}\r\n    \r\n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\r\n                items={flows}\r\n                item={{render:this.flowRow}}/>\r\n        </div>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm, FormMode } from '../form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\r\n    protected sheetData: SheetData;\r\n    async open(param: SheetData) {\r\n        this.sheetData = param;\r\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        await this.controller.saveSheet(values, this.vForm.values);\r\n        this.closePage();\r\n        this.returnCall(this.vForm.values);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetAction extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        let {id, flow, state} = this.sheetData.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.ceasePage();\r\n        this.openPage(this.acted);\r\n        //alert(jsonStringify(res));\r\n        //await this.backPage();\r\n    }\r\n\r\n    deleteClick = async () => {\r\n        alert('单据作废：程序正在设计中');\r\n    }\r\n\r\n    editClick = async () => {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.controller.editSheet(this.sheetData);\r\n        this.vForm.setValues(values);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        let {states} = this.entity;\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons, startButtons;\r\n        if (s === undefined) {\r\n            let text:string, cn:string;\r\n            switch (state) {\r\n                default:\r\n                    text = '不认识的单据状态\\'' + state + '\\'';\r\n                    cn = 'text-info';\r\n                    break;\r\n                case '-': \r\n                    text = '已作废';\r\n                    cn = 'text-danger';\r\n                    break;\r\n                case '#':\r\n                    text = '已归档';\r\n                    cn = 'text-success';\r\n                    break;\r\n            }\r\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\r\n        }\r\n        else {\r\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \r\n                <button\r\n                    key={index}\r\n                    className=\"btn btn-primary mr-2\"\r\n                    onClick={()=>this.actionClick(v)}\r\n                >\r\n                    {this.controller.getActionLabel(state, v.name)}\r\n                </button>)}\r\n            </div>;\r\n            if (state === '$') {\r\n                startButtons = <div>\r\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\r\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\r\n                </div>\r\n            }\r\n        };\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    {actionButtons}\r\n                    {startButtons}\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        let {discription} = this.sheetData.brief;\r\n        return <Page header=\"已处理\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"p-3\">{discription}</div>\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open(param?:any) {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label + \"模板\"}>\r\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\r\n    </Page>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport {List, LMR, FA, EasyDate, Muted} from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\r\n    list: any[];\r\n\r\n    async open() {\r\n        this.list = await this.entity.getArchives(undefined, 10);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    archiveClick = async (brief:any) => {\r\n        if (brief.processing===1) return;\r\n        this.event('archived', brief);\r\n    }\r\n    archiveRow = (row:any, index:number) => {\r\n        let {id, no, discription, date} = row;\r\n        let left = <>\r\n            {row.processing===1? '... ' : ''}\r\n            {row.no} &nbsp; {row.discription}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\r\n    }\r\n\r\n    protected view = () => {\r\n        return <Page header={'已归档' + this.label}>\r\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { List, Muted, FA, LMR, EasyDate } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected row: (values) => JSX.Element;\r\n    stateName: string;\r\n    stateLabel: string;\r\n\r\n    async open(item:any) {\r\n        this.row = this.ui.listRow || this.rowContent;\r\n        this.stateName = item.state;\r\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\r\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\r\n        await this.controller.pageStateItems.first(this.stateName);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    rowClick = async (brief:any) => {\r\n        if (brief.processing===1) {\r\n            this.event('processing', brief.id);\r\n            return;\r\n        }\r\n        this.event('action', brief.id);\r\n    }\r\n\r\n    private onScrollBottom = () => {\r\n        console.log('onScrollBottom');\r\n        this.controller.pageStateItems.more();\r\n    }\r\n\r\n    protected rowContent = (row:any):JSX.Element => {\r\n        let {id, no, discription, date, processing} = row;\r\n        let left = <>            \r\n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\r\n    }\r\n\r\n    private renderRow = (row:any, index:number) => <this.row {...row} />\r\n\r\n    protected view = () => {\r\n        //let sheets = this.controller.stateSheets;\r\n        let {pageStateItems} = this.controller;\r\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\r\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Page} from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nexport interface State {\r\n    flows: any;\r\n    data: any;\r\n}\r\nexport class VArchived extends VSheetView {\r\n    //protected controller: CSheet;\r\n    //brief: any;\r\n\r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        /*\r\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\r\n        this.brief = brief;\r\n        this.data = data;\r\n        this.flows = flows;\r\n        */\r\n        this.vForm = this.createForm(undefined, this.sheetData.data);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {brief} = this.sheetData;\r\n        return <Page header={this.label + ':' + '-' + brief.no}>\r\n            <this.sheetView />\r\n        </Page>;\r\n    };\r\n}\r\n","import { Sheet } from \"../../entities\";\r\nimport { SheetUI, CSheet } from \"./cSheet\";\r\nimport { VEntity } from \"../CVEntity\";\r\n\r\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheet } from \"./vSheet\";\r\n\r\nexport class VSheetSaved extends VSheet {\r\n    private brief: any;\r\n    async open(brief?:any) {\r\n        this.brief = brief;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private restart = async () => {\r\n        this.ceasePage();\r\n        await this.event('new');\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        this.ceasePage();\r\n        let {id, flow, state} = this.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.openPage(this.acted);\r\n    }\r\n\r\n    private buttons = <>\r\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\r\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n    </>;\r\n\r\n    private view = () => {\r\n        let {states} = this.entity;\r\n        const state = '$';\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons = <>{s.actions.map((v,index) => \r\n            <button\r\n                key={index}\r\n                className=\"btn btn-primary mr-3\"\r\n                onClick={()=>this.actionClick(v)}\r\n            >\r\n                {this.controller.getActionLabel(state, v.name)}\r\n            </button>)}\r\n        </>;\r\n        return <Page header=\"已保存\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\r\n                <div className=\"p-3\">\r\n                    {actionButtons}\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        return <Page>\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetProcessing extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    正在处理中...\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import { IObservableArray, observable } from \"mobx\";\r\nimport { TypeVPage, VPage, PageItems, postWsToTop } from 'tonva-tools';\r\nimport { Sheet, StateCount } from \"../../entities\";\r\nimport { CEntity, EntityUI, VEntity } from \"../CVEntity\";\r\nimport { VSheetMain } from \"./vMain\";\r\nimport { VSheetNew } from \"./vNew\";\r\nimport { VSheetEdit } from \"./vEdit\";\r\nimport { VSheetAction } from \"./vSheetAction\";\r\nimport { VSheetSchema } from \"./vSchema\";\r\nimport { VArchives } from \"./vArchives\";\r\nimport { VSheetList } from \"./vList\";\r\nimport { VArchived } from \"./vArchived\";\r\nimport { VSheetSaved } from \"./vSaved\";\r\nimport { VSheetProcessing } from \"./vSheetProcessing\";\r\n\r\nexport interface SheetActionUI {\r\n    label: string;\r\n}\r\n\r\nexport interface StateUI {\r\n    label: string;\r\n    actions: {[name:string]: SheetActionUI}\r\n}\r\n\r\nexport interface SheetUI extends EntityUI {\r\n    CSheet?: typeof CSheet;\r\n    states?: {[name:string]: StateUI};\r\n    main?: TypeVPage<CSheet>;\r\n    sheetNew?: TypeVPage<CSheet>;\r\n    sheetSaved?: TypeVPage<CSheet>;\r\n    sheetEdit?: TypeVPage<CSheet>;\r\n    sheetAction?: TypeVPage<CSheet>;\r\n    listRow?: (row:any) => JSX.Element;\r\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\r\n}\r\n\r\nexport interface SheetData {\r\n    brief: any;\r\n    data: any;\r\n    flows: any[];\r\n}\r\n\r\nexport class CSheet extends CEntity<Sheet, SheetUI> {\r\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\r\n    curState:string;\r\n    pageStateItems: PageItems<any>;\r\n\r\n    protected async internalStart() {\r\n        await this.loadStateSheetCount();\r\n        this.pageStateItems = this.entity.createPageStateItems();\r\n        await this.openVPage(this.VSheetMain);\r\n    }\r\n\r\n    protected async onMessage(msg: any):Promise<void> {\r\n        let {type, body, from, to, push} = msg;\r\n        if (type === 'sheet') this.onSheet(from, to, body);\r\n    }\r\n    private onSheet(from:number, to:number[], sheetData:any) {\r\n        let me = this.user.id;\r\n        let {id, preState, state} = sheetData;\r\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\r\n        if (from === me) {\r\n            this.sheetActPreState(id, preState);\r\n        }\r\n        if (to.find(v=>v===me) !== undefined) {\r\n            this.sheetActState(id, state, sheetData);\r\n        }\r\n    }\r\n    private sheetActPreState(id:number, preState:string) {\r\n        this.changeStateCount(preState, -1);\r\n        if (this.curState === undefined || this.curState !== preState) return;\r\n        /*\r\n        let index = this.stateSheets.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.stateSheets.splice(index, 1);\r\n        }*/\r\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.pageStateItems.items.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private sheetActState(id:number, state:string, msg:any) {\r\n        this.changeStateCount(state, 1);\r\n        if (this.curState === undefined || this.curState !== state) return;\r\n        /*\r\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\r\n            this.stateSheets.push(msg);\r\n        }\r\n        */\r\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\r\n            this.pageStateItems.items.push(msg);\r\n        }\r\n    }\r\n\r\n    private changeStateCount(state:string, delta:number) {\r\n        if (state === undefined) return;\r\n        let index = this.statesCount.findIndex(v => v.state === state);\r\n        console.log({$:'changeState', state: state, delta: delta, index: index});\r\n        if (index < 0) return;\r\n        let stateCount = this.statesCount[index];\r\n        stateCount.count += delta;\r\n        if (stateCount.count < 0) stateCount.count = 0;\r\n    }\r\n\r\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\r\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\r\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\r\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\r\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\r\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\r\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\r\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\r\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\r\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\r\n    protected async onEvent(type:string, value:any) {\r\n        let c: TypeVPage<CSheet>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': c = this.VSheetNew; break;\r\n            case 'schema': c = this.VSheetSchema; break;\r\n            case 'archives': c = this.VArchives; break;\r\n            case 'state':\r\n                this.curState = value.state;\r\n                c = this.VSheetList;\r\n                break;\r\n            case 'archived':\r\n                await this.showArchived(value); return;\r\n            case 'action':\r\n                await this.showAction(value); return;\r\n            case 'processing':\r\n                await this.showProcessing(value); return;\r\n        }\r\n        await this.openVPage(c, value);\r\n    }\r\n\r\n    async startSheet(sheetId:number) {\r\n        if (await this.beforeStart() === false) return;\r\n        await this.onEvent('action', sheetId);\r\n    }\r\n\r\n    async showAction(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        postWsToTop({\r\n            body: {\r\n                $type: 'msg',\r\n                action: '$sheet',\r\n                msg: {\r\n                    id: sheetId,\r\n                    uq: this.cUq.id,\r\n                    state: sheetData.brief.state\r\n                }\r\n            }\r\n        });\r\n        await this.openVPage(this.VSheetAction, sheetData);\r\n    }\r\n\r\n    async showProcessing(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        await this.openVPage(this.VSheetProcessing, sheetData);\r\n    }\r\n\r\n    async editSheet(sheetData:SheetData):Promise<any> {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.vCall(this.VSheetEdit, sheetData);\r\n        return values;\r\n    }\r\n\r\n    async showArchived(inBrief:any) {\r\n        let sheetData = await this.getArchived(inBrief.id);\r\n        await this.openVPage(this.VArchived, sheetData);\r\n    }\r\n\r\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\r\n        //let values = this.vForm.getValues();\r\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\r\n        let ret = await this.saveSheet(values, valuesWithBox);\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.showSaved(ret);\r\n    }\r\n\r\n    async showSaved(sheetData:any) {\r\n        await this.openVPage(this.VSheetSaved, sheetData);\r\n    }\r\n\r\n    private getStateUI(stateName:string) {\r\n        let {states} = this.res;\r\n        if (states === undefined) return;\r\n        return states[stateName];\r\n    }\r\n    getStateLabel(stateName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        let ret = (state && state.label) || stateName;\r\n        switch (ret) {\r\n            default: return ret;\r\n            case '$': return '新单';\r\n        }\r\n    }\r\n    getActionLabel(stateName:string, actionName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        if (state === undefined) return actionName;\r\n        let actions = state.actions;\r\n        if (actions === undefined) return actionName;\r\n        let action = actions[actionName];\r\n        return (action && action.label) || actionName;\r\n    }\r\n\r\n    private async loadStateSheetCount():Promise<void> {\r\n        this.statesCount.clear();\r\n        let statesCount = await this.entity.stateSheetCount();\r\n        this.statesCount.splice(0, 0, ...statesCount);\r\n    }\r\n\r\n    async getSheetData(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getSheet(sheetId);\r\n    }\r\n\r\n    async getArchived(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getArchive(sheetId);\r\n    }\r\n\r\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\r\n        let {sheetTitle} = this.ui;\r\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\r\n        let ret = await this.entity.save(disc, values);\r\n        //let {id, state} = ret;\r\n        //if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n    }\r\n\r\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\r\n        return await this.entity.action(id, flow, state, actionName);\r\n    }\r\n}\r\n","export * from './cSheet';\r\nexport * from './vSheet';\r\nexport * from './vMain';\r\nexport * from './vNew';\r\nexport * from './vEdit';\r\nexport * from './vList';\r\nexport * from './vSheetAction';\r\nexport * from './vSchema';\r\nexport * from './vArchived';\r\nexport * from './vSheetView';\r\n","import * as React from 'react';\r\nimport { TuidMain, Book, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CBook, BookUI } from './cBook';\r\n\r\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        Book\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Book } from \"../../entities\";\r\nimport { VBookMain } from \"./vBookMain\";\r\n\r\nexport interface BookUI extends EntityUI {\r\n    CBook?: typeof CBook;\r\n    main: typeof VBookMain,\r\n}\r\n\r\nexport class CBook extends CEntity<Book, BookUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VBookMain);\r\n    }\r\n\r\n    protected get VBookMain():typeof VBookMain {return VBookMain}\r\n}\r\n","import React from \"react\";\r\nimport { View } from \"tonva-tools\";\r\nimport { List, Muted } from \"tonva-react-form\";\r\nimport { Entity } from \"../../entities\";\r\nimport { CLink } from \"../link\";\r\nimport { CUq } from \"./cUq\";\r\n\r\nexport class VUq extends View<CUq> {\r\n    protected isSysVisible = false;\r\n    protected tuidLinks: CLink[];\r\n    protected mapLinks: CLink[];\r\n    protected sheetLinks: CLink[];\r\n    protected actionLinks: CLink[];\r\n    protected queryLinks: CLink[];\r\n    protected bookLinks: CLink[];\r\n    protected historyLinks: CLink[];\r\n    protected pendingLinks: CLink[];\r\n\r\n    constructor(cUq: CUq) {\r\n        super(cUq);\r\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.entities;\r\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\r\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\r\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\r\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\r\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\r\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\r\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\r\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\r\n    }\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n    render(param?:any) {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {res, uq, error} = this.controller;\r\n        let linkItem = {\r\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \r\n            onClick: undefined, \r\n        };\r\n        let lists = [\r\n            {\r\n                header: res.tuid || 'TUID',\r\n                items: this.tuidLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.map || 'MAP',\r\n                items: this.mapLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.sheet || 'SHEET',\r\n                items: this.sheetLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.action || 'ACTION',\r\n                items: this.actionLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.query || 'QUERY',\r\n                items: this.queryLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.book || 'BOOK',\r\n                items: this.bookLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.history || 'HISTORY',\r\n                items: this.historyLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.pending || 'PENDING',\r\n                items: this.pendingLinks\r\n            }\r\n        ];\r\n        let content;\r\n        if (error !== undefined) {\r\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\r\n        }\r\n        else {\r\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\r\n                key={index}\r\n                className={cn}\r\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\r\n                items={items}\r\n                item={linkItem} />\r\n            );\r\n        }\r\n        return <>\r\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\r\n            {content}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { UqApi, Controller, UnitxApi, appInFrame, resLang, nav } from 'tonva-tools';\r\nimport { Entities, TuidMain, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending } from '../../entities';\r\nimport { CLink } from '../link';\r\nimport { CBook, BookUI } from '../book';\r\nimport { CSheet, SheetUI } from '../sheet';\r\nimport { ActionUI, CAction } from '../action';\r\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\r\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\r\nimport { MapUI, CMap } from '../map';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VUq } from './vUq';\r\nimport { CHistory, HistoryUI } from '../history';\r\nimport { CPending, PendingUI } from '../pending';\r\nimport { CApp } from '../CApp';\r\n\r\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\r\n\r\nexport interface UqUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    CMap?: typeof CMap;\r\n    CAction?: typeof CAction;\r\n    CSheet?: typeof CSheet;\r\n    CBook?: typeof CBook;\r\n    CHistory?: typeof CHistory;\r\n    CPending?: typeof CPending;\r\n    tuid?: {[name:string]: TuidUI};\r\n    sheet?: {[name:string]: SheetUI};\r\n    action?: {[name:string]: ActionUI};\r\n    map?: {[name:string]: MapUI};\r\n    query?: {[name:string]: QueryUI};\r\n    book?: {[name:string]: BookUI};    \r\n    history?: {[name:string]: HistoryUI};\r\n    pending?: {[name:string]: PendingUI};\r\n    res?: any;\r\n}\r\n\r\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\r\n    if (entities === undefined) return;\r\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\r\n}\r\n\r\nexport class CUq extends Controller /* implements Uq*/ {\r\n    private ui:any;\r\n    private CTuidMain: typeof CTuidMain;\r\n    private CTuidEdit: typeof CTuidEdit;\r\n    private CTuidList: typeof CTuidList;\r\n    private CTuidSelect: typeof CTuidSelect;\r\n    private CTuidInfo: typeof CTuidInfo;\r\n    private CQuery: typeof CQuery;\r\n    private CQuerySelect: typeof CQuerySelect;\r\n    private CMap: typeof CMap;\r\n    private CAction: typeof CAction;\r\n    private CSheet: typeof CSheet;\r\n    private CBook: typeof CBook;\r\n    private CHistory: typeof CHistory;\r\n    private CPending: typeof CPending;\r\n\r\n    constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\r\n        super(resLang(ui.res));\r\n        this.cApp = cApp;\r\n        this.uq = uq;\r\n        this.id = uqId;\r\n        // 每一个ui都转换成小写的key的版本\r\n        lowerPropertyName(ui.tuid);\r\n        lowerPropertyName(ui.sheet);\r\n        lowerPropertyName(ui.map);\r\n        lowerPropertyName(ui.query);\r\n        lowerPropertyName(ui.action);\r\n        lowerPropertyName(ui.book);\r\n        lowerPropertyName(ui.history);\r\n        lowerPropertyName(ui.pending);\r\n        this.ui = ui;\r\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\r\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\r\n        this.CTuidList = ui.CTuidList || CTuidList;\r\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\r\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\r\n        this.CQuery = ui.CQuery || CQuery;\r\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\r\n        this.CMap = ui.CMap || CMap;\r\n        this.CAction = ui.CAction || CAction;\r\n        this.CSheet = ui.CSheet || CSheet;\r\n        this.CBook = ui.CBook || CBook;\r\n        this.CHistory = ui.CHistory || CHistory;\r\n        this.CPending = ui.CPending || CPending;\r\n\r\n        let token = undefined;\r\n        let uqOwner:string, uqName:string;\r\n        let p = uq.split('/');\r\n        switch (p.length) {\r\n            case 1:\r\n                uqOwner = '$$$';\r\n                uqName = p[0];\r\n                break;\r\n            case 2:\r\n                uqOwner = p[0];\r\n                uqName = p[1];\r\n                break;\r\n            default:\r\n                console.log('uq must be uqOwner/uqName format');\r\n                return;\r\n        }\r\n\r\n        let hash = document.location.hash;\r\n        let baseUrl = hash===undefined || hash===''? \r\n            'debug/':'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        let uqApi:UqApi;\r\n        if (uq === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            uqApi = new UnitxApi(appInFrame.unit);\r\n        }\r\n        else {\r\n            uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\r\n        }\r\n        this.entities = new Entities(this, uqApi, appId);\r\n    }\r\n\r\n    protected async internalStart() {\r\n    }\r\n\r\n    cApp:CApp;\r\n    uq: string;\r\n    id: number;\r\n    res: any;\r\n    entities:Entities;\r\n    error: string;\r\n    private schemaLoaded:boolean = false;\r\n\r\n    protected async loadEntites() {\r\n        await this.entities.loadAccess();\r\n    }\r\n\r\n    async loadSchema():Promise<string> {\r\n        try {\r\n            if (this.schemaLoaded === true) return;\r\n            await this.loadEntites();\r\n            if (this.id === undefined) this.id = this.entities.uqId;\r\n\r\n            for (let i in this.ui) {\r\n                let g = this.ui[i];\r\n                if (g === undefined) continue;\r\n                let {caption, collection} = g;\r\n                if (collection === undefined) continue;\r\n                for (let j in collection) {\r\n                    if (this.entities[i](j) === undefined) {\r\n                        console.warn(i + ':' + '\\'' + j + '\\' is not uq entity');\r\n                    }\r\n                }\r\n            }\r\n            this.schemaLoaded = true;\r\n            return;\r\n        }\r\n        catch(err) {\r\n            console.error(err);\r\n            return this.error = err;\r\n            //debugger;\r\n            //return err.message;\r\n        }\r\n    }\r\n\r\n    async getQuerySearch(name:string):Promise<Query> {\r\n        let query = this.entities.query(name);\r\n        if (query === undefined) \r\n            alert(`QUERY ${name} 没有定义!`);\r\n        else {\r\n            await query.loadSchema();\r\n            let {returns} = query;\r\n            if (returns.length > 1) {\r\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\r\n            }\r\n        }\r\n        return query;\r\n    }\r\n    getTuidPlaceHolder(tuid:Tuid) {\r\n        let {tuidPlaceHolder, entity} = this.res;\r\n        let {name} = tuid;\r\n        let type:string;\r\n        if (entity !== undefined) {\r\n            let en = entity[name];\r\n            if (en !== undefined) {\r\n                type = en.label;\r\n            }\r\n        }\r\n        return (tuidPlaceHolder || 'Select');\r\n    }\r\n    getNone() {\r\n        let {none} = this.res;\r\n        return none || 'none';\r\n    }\r\n    protected isSysVisible = false;\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n\r\n    async navSheet(sheetTypeId:number, sheetId:number) {\r\n        let sheet = this.entities.sheetFromTypeId(sheetTypeId);\r\n        if (sheet === undefined) {\r\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\r\n            return;\r\n        }\r\n        let cSheet = this.cSheet(sheet);\r\n        await cSheet.startSheet(sheetId);\r\n    }\r\n\r\n    sheet(entityName:string) {return this.entities.sheet(entityName);}\r\n    action(entityName:string) {return this.entities.action(entityName);}\r\n    query(entityName:string) {return this.entities.query(entityName);}\r\n    book(entityName:string) {return this.entities.book(entityName);}\r\n    map(entityName:string) {return this.entities.map(entityName);}\r\n    history(entityName:string) {return this.entities.history(entityName);}\r\n    pending(entityName:string) {return this.entities.pending(entityName);}\r\n    tuid(entityName:string) {return this.entities.tuid(entityName)}\r\n    tuidDiv(entityName:string, divName:string) {\r\n        let tuid = this.entities.tuid(entityName);\r\n        if (tuid === undefined) return;\r\n        let {divs} = tuid;\r\n        if (divs === undefined) return;\r\n        return divs[divName];\r\n    }\r\n\r\n    cSheetFromName(entityName:string):CSheet {\r\n        let entity = this.entities.sheet(entityName);\r\n        if (entity !== undefined) return this.cSheet(entity);\r\n    }\r\n    cActionFromName(entityName:string) {\r\n        let entity = this.entities.action(entityName);\r\n        if (entity !== undefined) return this.cAction(entity);\r\n    }\r\n    cQueryFromName(entityName:string) {\r\n        let entity = this.entities.query(entityName);\r\n        if (entity !== undefined) return this.cQuery(entity);\r\n    }\r\n    cBookFromName(entityName:string) {\r\n        let entity = this.entities.book(entityName);\r\n        if (entity !== undefined) return this.cBook(entity);\r\n    }\r\n    cMapFromName(entityName:string) {\r\n        let entity = this.entities.map(entityName);\r\n        if (entity !== undefined) return this.cMap(entity);\r\n    }\r\n    cHistoryFromName(entityName:string) {\r\n        let entity = this.entities.history(entityName);\r\n        if (entity !== undefined) return this.cHistory(entity);\r\n    }\r\n    cPendingFromName(entityName:string) {\r\n        let entity = this.entities.pending(entityName);\r\n        if (entity !== undefined) return this.cPending(entity);\r\n    }\r\n    cTuidMainFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidMain(entity);\r\n    }\r\n    cTuidEditFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidEdit(entity);\r\n    }\r\n    cTuidInfoFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidInfo(entity);\r\n    }\r\n\r\n    cTuidSelectFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidSelect(entity);\r\n    }\r\n\r\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\r\n        switch (entityType) {\r\n            case 'sheet':\r\n                let sheet = this.entities.sheet(entityName);\r\n                if (sheet === undefined) return;\r\n                return this.cSheet(sheet);\r\n            case 'action':\r\n                let action = this.entities.action(entityName);\r\n                if (action === undefined) return;\r\n                return this.cAction(action);\r\n            case 'tuid':\r\n                let tuid = this.entities.tuid(entityName);\r\n                if (tuid === undefined) return;\r\n                return this.cTuidMain(tuid);\r\n            case 'query':\r\n                let query = this.entities.query(entityName);\r\n                if (query === undefined) return;\r\n                return this.cQuery(query);\r\n            case 'book':\r\n                let book = this.entities.book(entityName);\r\n                if (book === undefined) return;\r\n                return this.cBook(book);\r\n            case 'map':\r\n                let map = this.entities.map(entityName);\r\n                if (map === undefined) return;\r\n                return this.cMap(map);\r\n            case 'history':\r\n                let history = this.entities.history(entityName);\r\n                if (history === undefined) return;\r\n                return this.cHistory(history);\r\n            case 'pending':\r\n                let pending = this.entities.pending(entityName);\r\n                if (pending === undefined) return;\r\n                return this.cPending(pending);\r\n        }\r\n    }\r\n\r\n    linkFromName(entityType:EntityType, entityName:string) {\r\n        return this.link(this.cFromName(entityType, entityName));\r\n    }\r\n\r\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\r\n        let ui, res;\r\n        let {name, typeName} = t;\r\n        if (this.ui !== undefined) {\r\n            let tUI = this.ui[typeName];\r\n            if (tUI !== undefined) {\r\n                ui = tUI[name];\r\n            }\r\n        }\r\n        let {entity} = this.res;\r\n        if (entity !== undefined) {\r\n            res = entity[name];\r\n        }\r\n        return {ui: ui || {}, res: res || {} };\r\n    }\r\n\r\n    link(cEntity:CEntity<Entity, EntityUI>) {\r\n        return new CLink(cEntity);\r\n    }\r\n\r\n    get tuidLinks() {\r\n        return this.entities.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\r\n    }\r\n    cTuidMain(tuid:TuidMain):CTuidMain {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\r\n    }\r\n    cTuidEdit(tuid:TuidMain):CTuidEdit {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\r\n    }\r\n    cTuidList(tuid:TuidMain):CTuidList {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\r\n    }\r\n    cTuidSelect(tuid:Tuid):CTuidSelect {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid.owner || tuid);\r\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\r\n    }\r\n    cTuidInfo(tuid:TuidMain):CTuidInfo {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\r\n    }\r\n\r\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\r\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\r\n        //if (sheetUI !== undefined) ui = sheetUI;\r\n        //if (sheetRes !== undefined) res = sheetRes;\r\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\r\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\r\n    }\r\n    get sheetLinks() { \r\n        return this.entities.sheetArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cSheet(v))\r\n        });\r\n    }\r\n\r\n    cAction(action:Action):CAction {\r\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\r\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\r\n    }\r\n    get actionLinks() { \r\n        return this.entities.actionArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cAction(v))\r\n        });\r\n    }\r\n\r\n    cQuery(query:Query):CQuery {\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\r\n    }\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        let query = this.entities.query(queryName);\r\n        if (query === undefined) return;\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\r\n    }\r\n    get queryLinks() {\r\n        return this.entities.queryArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cQuery(v))\r\n        });\r\n    }\r\n    \r\n    cBook(book:Book):CBook {\r\n        let {ui, res} = this.getUI<Book, BookUI>(book);\r\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\r\n    }\r\n    get bookLinks() { \r\n        return this.entities.bookArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cBook(v))\r\n        });\r\n    }\r\n    \r\n    cHistory(history:History):CHistory {\r\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\r\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\r\n    }\r\n    get historyLinks() { \r\n        return this.entities.historyArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cHistory(v))\r\n        });\r\n    }\r\n    \r\n    cPending(pending:Pending):CPending {\r\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\r\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\r\n    }\r\n    get pendingLinks() { \r\n        return this.entities.pendingArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cPending(v))\r\n        });\r\n    }\r\n    \r\n    cMap(map:Map):CMap {\r\n        let {ui, res} = this.getUI<Map, MapUI>(map);\r\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\r\n    }\r\n    get mapLinks() { \r\n        return this.entities.mapArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cMap(v));\r\n        });\r\n    }\r\n\r\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\r\n        let {owner} = tuid;\r\n        if (owner === undefined) {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(tuid);\r\n            return (ui && ui.content) || PureJSONContent;\r\n        }\r\n        else {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(owner);\r\n            return (ui && ui.divs && ui.divs[tuid.name].content) || PureJSONContent;\r\n        }\r\n    }\r\n\r\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\r\n        let {owner} = tuid;\r\n        let c = this.cTuidInfo(owner || (tuid as TuidMain));\r\n        await c.start(id);\r\n    }\r\n\r\n    protected get VUq():typeof VUq {return VUq}\r\n\r\n    render() {\r\n        let v = new (this.VUq)(this);\r\n        return v.render();\r\n    }\r\n}\r\n\r\n","export * from './cUq';\r\nexport * from './vUq';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport className from 'classnames';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { tv } from '../../tools';\r\nimport { Map } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\r\nimport { PureJSONContent } from '../form/viewModel';\r\n\r\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\r\n    private isFrom: boolean;\r\n\r\n    async open(param?:any) {\r\n        this.isFrom = this.controller.isFrom;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    itemRender = (item:MapItem, index:number) => {\r\n        return <this.ItemRow item={item} />;\r\n    }\r\n\r\n    private ItemRow = observer(({item}: {item:MapItem}) => {\r\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\r\n        let keyUI = this.controller.keyUIs[keyIndex];\r\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\r\n        let add:any, remove:any;\r\n        if (this.isFrom === false) {\r\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\r\n                <FA name=\"plus\" />\r\n            </button>;\r\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\r\n                <FA className=\"text-info\" name=\"trash\" />\r\n            </button>;\r\n        }\r\n        let right:any;\r\n        if (isLeaf === false) {\r\n            if (keyIndex === 0)\r\n                right = add;\r\n            else\r\n                right = <>{remove} &nbsp; {add}</>;\r\n        }\r\n        else if (keyIndex > 0) {\r\n            right = remove;\r\n        }\r\n        let content:any, border:any, valuesView:any;\r\n        if (isLeaf === true) {\r\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\r\n            if (values) {\r\n                //valuesView = null; // 现在不显示values content了\r\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\r\n            }\r\n        }\r\n        else {\r\n            border = \"border-bottom\";\r\n            let none = keyNone && keyNone(this.x);\r\n            content = <List \r\n                className=\"ml-4\" \r\n                items={children} \r\n                item={{onClick:undefined, render:this.itemRender}}\r\n                none={none} />\r\n        }\r\n        let left = <div className=\"py-1 pr-3\">{tv(box, keyContent, this.x)}</div>;\r\n        return <div className=\"d-flex flex-column\">\r\n            <LMR className={className('px-3', 'py-2', border)}\r\n                left={left}\r\n                right={right}\r\n            >\r\n                <div className=\"py-1\">{valuesView}</div>\r\n            </LMR>\r\n            {content}\r\n        </div>;\r\n    });\r\n\r\n    protected get view() { return () => <Page header={this.label}>\r\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\r\n        </Page>\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { VEntity } from \"../CVEntity\";\r\nimport { MapUI, CMap } from \"./cMap\";\r\nimport { Map } from \"../../entities\";\r\nimport { Page } from \"tonva-tools\";\r\nimport { VForm } from '../form';\r\n\r\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\r\n    private vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onValuesSubmit);\r\n        this.openPageElement(<this.view />);\r\n    }\r\n\r\n    private onValuesSubmit = async () => {\r\n        this.ceasePage();\r\n        let values = this.vForm.getValues();\r\n        this.returnCall(values);\r\n    }\r\n\r\n    private view = () => {\r\n        return <Page>\r\n            {this.vForm.render()}\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Map, Tuid, BoxId, Field, TuidMain, fieldDefaultValue } from \"../../entities\";\r\nimport { VMapMain } from \"./vMain\";\r\nimport { observable } from \"mobx\";\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VInputValues } from './inputValues';\r\n\r\nexport interface MapKey {\r\n    content: (values, x?:any) => JSX.Element;\r\n    valuesContent?: (values, x?:any) => JSX.Element;\r\n    none?: (x:any)=>string;\r\n}\r\n\r\nexport interface MapUI extends EntityUI {\r\n    CMap?: typeof CMap;\r\n    keys?: MapKey[],\r\n}\r\n\r\nexport class MapItem {\r\n    parent: MapItem;\r\n    tuid: Tuid;\r\n    box: BoxId;\r\n    isLeaf: boolean;\r\n    keyIndex:number;\r\n    children: MapItem[] = observable.array([], {deep: true});\r\n    values: any;\r\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\r\n        this.parent = parent;\r\n        this.tuid = tuid;\r\n        this.box = box;\r\n        this.keyIndex = keyIndex;\r\n        this.isLeaf = false;\r\n    }\r\n}\r\n\r\nexport class CMap extends CEntity<Map, MapUI> {\r\n    isFrom: boolean;\r\n    items:MapItem[];\r\n    keyFields: Field[];\r\n    keyUIs: MapKey[];\r\n\r\n    protected async internalStart() {\r\n        let {keys, schemaFrom} = this.entity;\r\n        this.isFrom = schemaFrom !== undefined;\r\n        let q = this.entity.queries.all;\r\n        let result = await q.query({});\r\n        //let data = await this.entity.unpackReturns(res);\r\n        let ret = result.ret;\r\n        let keysLen = keys.length;\r\n        this.keyUIs = _.clone(this.ui.keys || []);\r\n        this.keyFields = [];\r\n        let retFields = q.returns[0].fields;\r\n        for (let i=0; i<keysLen; i++) {\r\n            this.keyFields.push(retFields[i]);\r\n            if (i >= this.keyUIs.length) {\r\n                this.keyUIs.push({\r\n                    content: PureJSONContent,\r\n                });\r\n            }\r\n        }\r\n        this.items = observable([]);\r\n        let item:MapItem = undefined;\r\n        for (let r of ret) {\r\n            let newItem = this.addItem(item, r);\r\n            if (newItem !== undefined) {\r\n                this.items.push(newItem);\r\n                item = newItem;\r\n            }\r\n        }\r\n\r\n        await this.openVPage(this.VMapMain);\r\n    }\r\n\r\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\r\n        let item = new MapItem(parent, tuid, box, keyIndex);\r\n        if (keyIndex === this.keyFields.length - 1) {\r\n            item.isLeaf = true;\r\n            item.values = values;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    addItem(item:MapItem, row:any):MapItem {\r\n        let ret:MapItem = undefined;\r\n        let keysLen = this.keyFields.length;\r\n        let p = item;\r\n        for (let i=0;i<keysLen;i++) {\r\n            let key = this.keyFields[i];\r\n            let {name} = key;\r\n            let tuid = key._tuid;\r\n            let val:BoxId = row[name];\r\n            if (val === undefined) break;\r\n            let {id} = val;\r\n            if (i === 0) {\r\n                if (id === 0) continue;\r\n                if (p === undefined || p.box.id !== id) {\r\n                    ret = p = this.createItem(undefined, tuid, val, i, row);\r\n                }\r\n                continue;\r\n            }\r\n            let {children, box} = p;\r\n            let len = children.length;\r\n            if (len > 0) {\r\n                let n = children[len-1];\r\n                if (n.box.id === id) {\r\n                    p = n;\r\n                    continue;\r\n                }\r\n            }\r\n            if (id > 0) {\r\n                children.push(p = this.createItem(p, tuid, val, i, row));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        let {_tuid, _ownerField} = keyField;\r\n        let cTuidSelect = this.cUq.cTuidSelect(_tuid);\r\n        let callParam = param;\r\n        if (_ownerField !== undefined) {\r\n            callParam = param[_ownerField.name];\r\n            if (typeof callParam === 'object') {\r\n                callParam = callParam.id;\r\n            }\r\n        }\r\n        let ret = await cTuidSelect.call(callParam);\r\n        return _tuid.getIdFromObj(ret);\r\n    }\r\n\r\n    addClick = async(item:MapItem) => {\r\n        let {keyIndex, children} = item;\r\n        let keysLen = this.keyFields.length;\r\n        let keysLast = keysLen-1;\r\n        let idx = keyIndex + 1;\r\n        if (idx >= keysLen) return;\r\n        let keyField = this.keyFields[idx];\r\n        let kn = keyField.name;\r\n        let tuid = keyField._tuid;\r\n        let searchParam = {} as any;\r\n        let data = {} as any;\r\n        for (let p=item;p!==undefined;p=p.parent) {\r\n            let {keyIndex:ki, box} = p;\r\n            let kn = this.keyFields[ki].name;\r\n            //searchParam[kn] = data['_' + kn] = box.id;\r\n            searchParam[kn] = data[kn] = box.id;\r\n        }\r\n\r\n        let id = await this.searchOnKey(keyField, searchParam);\r\n        if (id === undefined || id <= 0) return;\r\n        tuid.useId(id);\r\n        let idBox = tuid.boxId(id);\r\n        let arr1 = {} as any;\r\n        let values:any = {};\r\n        if (keyIndex+1===keysLast) {\r\n            tuid.useId(id);\r\n            //values[kn] = arr1['_' + kn] = idBox;\r\n            values[kn] = arr1[kn] = idBox;\r\n            if (this.entity.fields.length > 0) {\r\n                let ret = await this.vCall(VInputValues, data);\r\n                for (let i in ret) {\r\n                    //values[i] = arr1['_' + i] = ret[i];\r\n                    values[i] = arr1[i] = ret[i];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //values[kn] = data['_' + kn] = idBox;\r\n            values[kn] = data[kn] = idBox;\r\n            for (let i=idx+1;i<keysLast;i++) {\r\n                //data['_' + this.keyFields[i].name] = 0;\r\n                data[this.keyFields[i].name] = 0;\r\n            }\r\n            // 填map的key field 0 值\r\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\r\n            arr1[this.keyFields[keysLast].name] = 0;\r\n            let {fields} = this.entity;\r\n            for (let f of fields) {\r\n                let {name, type, null:nullable} = f;\r\n                if (!(nullable === true)) {\r\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\r\n                    arr1[f.name] = fieldDefaultValue(type);\r\n                }\r\n            }\r\n        }\r\n        data.arr1 = [arr1];\r\n        await this.entity.actions.add.submit(data);\r\n        let rowIndex = children.findIndex(v => v.box.id === id);\r\n        if (rowIndex < 0) {\r\n            children.push(this.createItem(item, tuid, idBox, idx, values));\r\n        }\r\n        else {\r\n            let {fields} = this.entity;\r\n            if (fields !== undefined && fields.length > 0) {\r\n                let row = children[rowIndex];\r\n                children.splice(rowIndex, 1);\r\n                row.values = values;\r\n                /*\r\n                for (let f of fields) {\r\n                    let {name:fn} = f;\r\n                    row.values[fn] = values[fn];\r\n                }*/\r\n                children.splice(rowIndex, 0, row);\r\n            }\r\n        }\r\n        this.removeCeased();\r\n    }\r\n\r\n    removeClick = async(item:MapItem) => {\r\n        let keyField = this.keyFields[item.keyIndex];\r\n        let tuid = keyField._tuid;\r\n        let cTuidMain = this.cUq.cTuidMain(tuid.Main as TuidMain);\r\n        let label = cTuidMain.getLable(tuid);\r\n        let confirmDelete:_.TemplateExecutor = \r\n            this.res.confirmDelete \r\n            || _.template('do you really want to remove ${label}?');\r\n        if (confirm(confirmDelete({label:label})) === false) return;\r\n        let map:Map = this.entity;\r\n        let data = {} as any;\r\n        let arr1 = data['arr1'] = [];\r\n        let v0 = {} as any;\r\n        arr1.push(v0);\r\n        for (let p=item; p!==undefined;p=p.parent) {\r\n            let ki=p.keyIndex;\r\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\r\n            v0[this.keyFields[ki].name] = p.box.id;\r\n        }\r\n        let len = this.keyFields.length;\r\n        for (let i=item.keyIndex+1; i<len; i++) {\r\n            let k = this.keyFields[i];\r\n            //v0['_'+k.name] = -1;\r\n            v0[k.name] = -1;\r\n        }\r\n        await map.actions.del.submit(data);\r\n        let children = item.parent.children;\r\n        let index = children.findIndex(v => v === item);\r\n        if (index >= 0) children.splice(index, 1);\r\n    }\r\n\r\n    protected get VMapMain():typeof VMapMain {return VMapMain}\r\n}\r\n","export * from './cMap';\r\nexport * from './vMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, History, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CHistory, HistoryUI } from './cHistory';\r\n\r\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        History\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { History } from \"../../entities\";\r\nimport { VHistoryMain } from \"./vHistoryMain\";\r\n\r\nexport interface HistoryUI extends EntityUI {\r\n    CHistory?: typeof CHistory;\r\n    main: typeof VHistoryMain,\r\n}\r\n\r\nexport class CHistory extends CEntity<History, HistoryUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VHistoryMain);\r\n    }\r\n\r\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\r\n}\r\n","export * from './cHistory';\r\nexport * from './vHistoryMain';\r\n","import * as React from 'react';\r\nimport { VPage, Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CAction, ActionUI } from './cAction';\r\nimport { Action } from '../../entities';\r\n\r\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\r\n    protected vForm: VForm;\r\n    protected returns: any;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.mainPage);\r\n    }\r\n\r\n    private onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        this.returns = await this.controller.submit(values);\r\n        this.closePage();\r\n        this.openPage(this.resultPage);\r\n    }\r\n\r\n    protected mainPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label}>\r\n            {this.vForm.render('mx-3 my-2')}\r\n        </Page>;\r\n    }\r\n\r\n    protected resultPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label} back=\"close\">\r\n            完成！\r\n            <pre>\r\n                {jsonStringify(this.returns)}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Action } from \"../../entities\";\r\nimport { VActionMain } from \"./vActionMain\";\r\n\r\nexport interface ActionUI extends EntityUI {\r\n    CAction?: typeof CAction;\r\n    //main: typeof VActionMain,\r\n}\r\n\r\nexport class CAction extends CEntity<Action, ActionUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VActionMain);\r\n    }\r\n\r\n    protected get VActionMain():typeof VActionMain {return VActionMain}\r\n\r\n    async submit(values:any) {\r\n        return this.entity.submit(values);\r\n    }\r\n}\r\n","export * from './cAction';\r\nexport * from './vActionMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, Pending, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CPending, PendingUI } from './cPending';\r\n\r\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        pending\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Pending } from \"../../entities\";\r\nimport { VPendingMain } from \"./vPendingMain\";\r\n\r\nexport interface PendingUI extends EntityUI {\r\n    CPending?: typeof CPending;\r\n    main: typeof VPendingMain,\r\n}\r\n\r\nexport class CPending extends CEntity<Pending, PendingUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VPendingMain);\r\n    }\r\n\r\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\r\n}\r\n","export * from './cPending';\r\nexport * from './vPendingMain';\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport abstract class ItemEdit {\r\n    protected name: string;\r\n    protected itemSchema: ItemSchema;\r\n    protected uiItem:UiItem;\r\n    protected value: any;\r\n    protected label: string;\r\n\r\n    @observable protected isChanged: boolean = false;\r\n    protected newValue: any;\r\n\r\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\r\n        this.itemSchema = itemSchema;\r\n        this.uiItem = uiItem\r\n        this.value = value;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.label = label;\r\n    }\r\n    async start():Promise<any> {\r\n        return await this.internalStart();\r\n    }\r\n\r\n    protected abstract internalStart():Promise<any>;\r\n\r\n    async end():Promise<any> {\r\n        await this.internalEnd()\r\n    }\r\n\r\n    protected async internalEnd():Promise<void> {nav.pop()}\r\n}\r\n","\r\nimport {setCenterToken} from './uqApi';\r\nimport {WSChannel} from './wsChannel';\r\n\r\nexport const netToken = {\r\n    set(userId:number, token:string) {\r\n        setCenterToken(userId, token);\r\n        WSChannel.setCenterToken(token);\r\n    },\r\n    clear() {\r\n        setCenterToken(0, undefined);\r\n        WSChannel.setCenterToken(undefined);\r\n    }\r\n};\r\n","import {CenterApi} from '../net';\r\nimport {User, decodeUserToken} from '../user';\r\n//import { nav } from '../ui';\r\n\r\nexport class UserApi extends CenterApi {\r\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\r\n        //(params as any).device = nav.local.device.get();\r\n        let ret = await this.get('login', params);\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeUserToken(ret);\r\n            case 'object':\r\n                let token = ret.token;\r\n                let user = decodeUserToken(token);\r\n                let {nick, icon} = ret;\r\n                if (nick) user.nick = nick;\r\n                if (icon) user.icon = icon;\r\n                return user;\r\n        }\r\n        // !== undefined) return decodeToken(token);\r\n    }\r\n    async register(params: {\r\n        nick:string, \r\n        user:string, \r\n        pwd:string,\r\n        country:number, \r\n        mobile:number, \r\n        email:string,\r\n        verify:string,\r\n    }): Promise<any>\r\n    {\r\n        return await this.post('register', params);\r\n    }\r\n\r\n    async setVerify(account:string, type:'mobile'|'email') {\r\n        return await this.post('set-verify', {account:account, type:type});\r\n    }\r\n\r\n    async checkVerify(account:string, verify:string) {\r\n        return await this.post('check-verify', {account:account, verify:verify});\r\n    }\r\n\r\n    async isExists(account:string) {\r\n        return await this.get('is-exists', {account:account});\r\n    }\r\n\r\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email') {\r\n        return await this.post('reset-password', {account:account, password, verify, type});\r\n    }\r\n    \r\n    async userSetProp(prop:string, value:any) {\r\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\r\n    }\r\n}\r\n\r\nconst userApi = new UserApi('tv/user/', undefined);\r\n\r\nexport default userApi;\r\n","\r\nconst zero = '00000000000000';\r\nexport function left0(num:number, fix:number) {\r\n    if (num === undefined) return '';\r\n    let r = num.toString();\r\n    let len = fix - r.length;\r\n    if (len <= 0) return r;\r\n    return zero.substr(0, len) + r;\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {User} from '../user';\r\nimport {nav} from './nav';\r\nimport {Page} from './page';\r\nimport { isDevelopment } from '../net';\r\n\r\nexport abstract class Controller {\r\n    readonly res: any;\r\n    readonly x: any;\r\n    icon: string|JSX.Element;\r\n    label:string;\r\n    readonly isDev:boolean = isDevelopment;\r\n    get user():User {return nav.user}\r\n    get isLogined():boolean {\r\n        let {user} = nav;\r\n        if (user === undefined) return false;\r\n        return user.id > 0;\r\n    }\r\n    constructor(res:any) {\r\n        this.res = res || {};\r\n        this.x = this.res.x || {};\r\n    }\r\n\r\n    private receiveHandlerId:number;\r\n    private disposer:()=>void;\r\n\r\n    private dispose() {\r\n        // message listener的清理\r\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\r\n        this.onDispose();\r\n    }\r\n\r\n    protected onDispose() {\r\n    }\r\n\r\n    protected async openVPage<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp((this as any) as C)).open(param);\r\n    }\r\n\r\n    protected renderView<C extends Controller>(view: new (controller: C)=>View<C>, param?:any) {\r\n        return (new view((this as any) as C)).render(param);\r\n    }\r\n\r\n    async event(type:string, value:any) {\r\n        await this.onEvent(type, value);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n    }\r\n\r\n    protected msg(text:string) {\r\n        alert(text);\r\n    }\r\n    protected errorPage(header:string, err:any) {\r\n        this.openPage(<Page header=\"App error!\">\r\n            <pre>\r\n                {typeof err === 'string'? err : err.message}\r\n            </pre>\r\n        </Page>);\r\n    }\r\n\r\n    protected onMessage(message:any):Promise<void> {\r\n        return;\r\n    }\r\n\r\n    private onMessageReceive = async (message:any):Promise<void> => {\r\n        await this.onMessage(message);\r\n    }\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        /*\r\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n        console.log('return true');\r\n        */\r\n        return true;\r\n    }\r\n    protected registerReceiveHandler() {\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n    }\r\n\r\n    protected abstract internalStart(param?:any):Promise<void>;\r\n    async start(param?:any):Promise<void> {\r\n        this.disposer = this.dispose.bind(this);\r\n        this.registerReceiveHandler();\r\n        let ret = await this.beforeStart();\r\n        if (ret === false) return;\r\n        await this.internalStart(param);\r\n    }\r\n\r\n    get isCalling():boolean {return this._resolve_$ !== undefined}\r\n\r\n    private _resolve_$:((value:any) => void)[];\r\n    async call(param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await this.start(param);\r\n        });\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await (new vp(this as any)).open(param);\r\n        });\r\n    }\r\n\r\n    returnCall(value:any) {\r\n        if (this._resolve_$ === undefined) return;\r\n        let resolve = this._resolve_$.pop();\r\n        if (resolve === undefined) {\r\n            alert('the Controller call already returned, or not called');\r\n            return;\r\n        }\r\n        resolve(value);\r\n    }\r\n\r\n    openPage(page:JSX.Element) {\r\n        nav.push(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    replacePage(page:JSX.Element) {\r\n        nav.replace(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    backPage() {\r\n        nav.back();\r\n    }\r\n\r\n    closePage(level?:number) {\r\n        nav.pop(level);\r\n    }\r\n\r\n    ceasePage(level?:number) {\r\n        nav.ceaseTop(level);\r\n    }\r\n\r\n    removeCeased() {\r\n        nav.removeCeased();\r\n    }\r\n\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        nav.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\n\r\nexport abstract class View<C extends Controller> {\r\n    protected controller: C;\r\n    protected readonly res: any;\r\n    protected readonly x: any;\r\n\r\n    constructor(controller: C) {\r\n        this.controller = controller;\r\n        this.res = controller.res;\r\n        this.x = controller.x;\r\n    }\r\n\r\n    protected get isDev() {return isDevelopment}\r\n\r\n    abstract render(param?:any): JSX.Element;\r\n\r\n    protected renderVm(vm: new (controller: C)=>View<C>, param?:any) {\r\n        return (new vm(this.controller)).render(param);\r\n    }\r\n\r\n    protected async openVPage(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp(this.controller)).open(param);\r\n    }\r\n\r\n    protected async event(type:string, value?:any) {\r\n        /*\r\n        if (this._resolve_$_ !== undefined) {\r\n            await this._resolve_$_({type:type, value:value});\r\n            return;\r\n        }*/\r\n        await this.controller.event(type, value);\r\n    }\r\n\r\n    protected returnCall(value:any) {\r\n        this.controller.returnCall(value);\r\n    }\r\n\r\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.openPage(React.createElement(view, param));\r\n    }\r\n\r\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.replacePage(React.createElement(view, param));\r\n    }\r\n\r\n    protected openPageElement(page: JSX.Element) {\r\n        this.controller.openPage(page);\r\n    }\r\n\r\n    protected replacePageElement(page: JSX.Element) {\r\n        this.controller.replacePage(page);\r\n    }\r\n\r\n    protected backPage() {\r\n        this.controller.backPage();\r\n    }\r\n\r\n    protected closePage(level?:number) {\r\n        this.controller.closePage(level);\r\n    }\r\n\r\n    protected ceasePage(level?:number) {\r\n        this.controller.ceasePage(level);\r\n    }\r\n\r\n    protected removeCeased() {\r\n        this.controller.removeCeased();\r\n    }\r\n\r\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.controller.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\nexport abstract class VPage<C extends Controller> extends View<C> {\r\n    abstract open(param?:any):Promise<void>;\r\n\r\n    render(param?:any):JSX.Element {return null;}\r\n}\r\n\r\nexport type TypeVPage<C extends Controller> = new (controller: C)=>VPage<C>;\r\n\r\n","export * from './schema';\r\nexport * from './uiSchema';\r\n","import {observable, IObservableArray, computed} from 'mobx';\r\nimport {uid} from './uid';\r\n\r\nexport abstract class PageItems<T> {\r\n    constructor(itemObservable:boolean = false) {\r\n        this._items = observable.array<T>([], {deep:itemObservable});\r\n    }\r\n    private isFirst: boolean = true;\r\n    @observable loading: boolean = false;\r\n    @observable private beforeLoad: boolean = true;\r\n    @observable protected loaded: boolean = false;\r\n    protected _items:IObservableArray<T>;\r\n    @observable allLoaded: boolean = false;\r\n    @computed get items():IObservableArray<T> {\r\n        if (this.beforeLoad === true) return null;\r\n        if (this.loaded === false) return undefined;\r\n        return this._items;\r\n    }\r\n\r\n    @observable topDiv:string;\r\n    @observable bottomDiv:string;\r\n    scrollToTop() {\r\n        this.topDiv = '$$'+uid();\r\n    }\r\n    scrollToBottom() {\r\n        this.bottomDiv = '$$'+uid();\r\n    }\r\n\r\n    protected param: any;\r\n    protected firstSize = 100;\r\n    protected pageStart = undefined;\r\n    protected pageSize = 30;\r\n    protected appendPosition:'head'|'tail' = 'tail';\r\n\r\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\r\n    protected abstract setPageStart(item:T);\r\n\r\n    reset() {\r\n        this.isFirst = true;\r\n        this.beforeLoad = true;\r\n        this.loaded = false;\r\n        this.param = undefined;\r\n        this.allLoaded = false;\r\n        this._items.clear();\r\n        this.setPageStart(undefined);\r\n    }\r\n\r\n    append(item:T) {\r\n        if (this.appendPosition === 'tail')\r\n            this._items.unshift(item);\r\n        else\r\n            this._items.push(item);\r\n    }\r\n\r\n    async first(param:any):Promise<void> {\r\n        this.reset();\r\n        this.beforeLoad = false;\r\n        this.param = param;\r\n        await this.more();        \r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        if (this.loading === true) return;\r\n        this.loading = true;\r\n        let pageSize = this.pageSize + 1;\r\n        if (this.isFirst === true) {\r\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\r\n        }\r\n        let ret = await this.load(\r\n                this.param, \r\n                this.pageStart,\r\n                pageSize);\r\n        this.loading = false;\r\n        this.loaded = true;\r\n        let len = ret.length;\r\n        if (this.isFirst===true && len>this.firstSize ||\r\n            this.isFirst===false && len>this.pageSize)\r\n        {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len === 0) {\r\n            this._items.clear();\r\n            return;\r\n        }\r\n        this.setPageStart(ret[len-1]);\r\n        if (this.appendPosition === 'tail')\r\n            this._items.push(...ret);\r\n        else\r\n            this._items.unshift(...ret.reverse());\r\n        this.isFirst = false;\r\n    }\r\n}\r\n","import {observable, computed} from 'mobx';\r\n\r\nexport interface Id {\r\n    id: number;\r\n}\r\n\r\nexport abstract class CacheIds<T extends Id> {\r\n    constructor(maxCount:number = 100) {\r\n        this.maxCount = maxCount;\r\n    }\r\n    private maxCount:number;\r\n    private arr:T[] = [];\r\n    @observable dict = new Map<number, T>();\r\n\r\n    loadIds(ids:number[]) {\r\n        let arr:number[] = [];\r\n        for (let id of ids) {\r\n            if (id === null) continue;\r\n            let item = this.dict.get(id);\r\n            if (item === undefined) {\r\n                arr.push(id);\r\n                item = {id:id} as T;\r\n                this.dict.set(id, item);\r\n            }\r\n        }                \r\n        this.loadId(arr);\r\n    }\r\n\r\n    get(id:number):T {\r\n        if (id === undefined || id === null) return null;\r\n        let item = this.dict.get(id);\r\n        if (item === undefined) {\r\n            this.dict.set(id, {id:id} as T);\r\n            this.loadId([id]);\r\n            item = this.dict.get(id);\r\n        }\r\n        return item;\r\n    }\r\n    private setItem(id:number, item:T) {\r\n        if (item === undefined) {\r\n            this.dict.set(id, null);\r\n            this.arr.push({id: id} as T);\r\n        }\r\n        else {\r\n            this.dict.set(id, item);\r\n            this.arr.push(item);\r\n        }\r\n        if (this.arr.length > this.maxCount) {\r\n            item = this.arr.shift();\r\n            this.dict.delete(item.id);\r\n        }\r\n    }\r\n    private async loadId(ids:number[]) {\r\n        let items = await this._loadIds(ids);\r\n        if (items === undefined) {\r\n            for (let id of ids) {\r\n                if (id === null) continue;\r\n                let item = await this._loadId(id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n        else {\r\n            for (let id of ids) {\r\n                let item = items.find(v => v.id === id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\r\n    protected abstract async _loadId(id:number):Promise<T>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {FormView, FormProps} from './formView';\r\n\r\nexport function tonvaDebug() {\r\n    let a = 0;\r\n}\r\n\r\nexport interface TonvaFormProps extends FormProps {\r\n    className?: string;\r\n    initValues?: any;\r\n}\r\n\r\n@observer \r\nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\r\n    formView: FormView;\r\n    constructor(props:TonvaFormProps) {\r\n        super(props);\r\n        this.formView = new FormView(this.props);\r\n    }\r\n    componentWillMount() {\r\n        this.formView.setInitValues(this.props.initValues);\r\n    }\r\n    debug() {\r\n        let s = null;\r\n    }\r\n    render() {\r\n        let {className, children, initValues} = this.props;\r\n        return <div className={className}>\r\n            {\r\n                children === undefined? \r\n                    this.formView.render() : \r\n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport interface Action {\r\n    icon?: string;\r\n    caption?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface DropdownActionsProps {\r\n    icon?: string;\r\n    actions: Action[];\r\n    isRight?: boolean;\r\n}\r\n\r\nexport interface DropdownActionsState {\r\n    dropdownOpen: boolean;\r\n}\r\n\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    private menu: HTMLDivElement;\r\n    private button: HTMLElement;\r\n    constructor(props:DropdownActionsProps) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('click', this.handleDocumentClick);\r\n        document.addEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleDocumentClick);\r\n        document.removeEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    private handleDocumentClick = (evt:any) => {\r\n        if (this.state.dropdownOpen === false) return;\r\n        if (this.button && this.button.contains(evt.target)) return;\r\n        if (!this.menu) return;\r\n        //if (!this.menu.contains(evt.target)) \r\n        this.toggle();\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        let {dropdownOpen} = this.state;\r\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\r\n        return <div className=\"dropdown\">\r\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={dropdownOpen}\r\n                onClick={this.toggle}>\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </button>\r\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\r\n                {\r\n                    actions.map((v,index) => {\r\n                        let {icon, caption, action} = v;\r\n                        if (icon === undefined && caption === undefined) \r\n                            return <div className=\"dropdown-divider\" />;\r\n                        let i:any;\r\n                        if (hasIcon === true) {\r\n                            if (icon !== undefined) icon = 'fa-' + icon;\r\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                        }\r\n                        if (action === undefined) \r\n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n/*\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right={isRight}>\r\n                {actions.map((v,index) => {\r\n                    let {icon, caption, action} = v;\r\n                    if (icon === undefined && caption === undefined) \r\n                        return <div className=\"dropdown-divider\" />;\r\n                    let i;\r\n                    if (hasIcon === true) {\r\n                        if (icon !== undefined) icon = 'fa-' + icon;\r\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                    }\r\n                    if (action === undefined) \r\n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\r\n                })}\r\n            </DropdownMenu>\r\n        </UncontrolledButtonDropdown>\r\n    }\r\n}\r\n*/","import * as React from 'react';\r\n\r\nexport interface EasyDateProps {\r\n    date: Date | string;\r\n}\r\n\r\nexport class EasyDate extends React.Component<EasyDateProps> {\r\n    render() {\r\n        let {date} = this.props;\r\n        if (!date) return null;\r\n        let d = (typeof date === 'string')? new Date(Date.parse(date)) : date;\r\n        let now = new Date();\r\n        let tick = now.getTime() - d.getTime();\r\n        let nDate=now.getDate();\r\n        let _date=d.getDate(), hour=d.getHours(), minute=d.getMinutes(), month=d.getMonth()+1;\r\n        let hm = hour + ((minute<10?':0':':') + minute);\r\n        if (tick < -24*3600*1000) return d.getFullYear()+'年'+month+'月'+_date+'日 ' + hm;\r\n        if (tick < 24*3600*1000) {\r\n            return _date!==nDate? \r\n                (tick < 0? '明天 ' : '昨天 ') + hm \r\n                : hm;\r\n        }\r\n        if (tick < 365*24*3600*1000) {\r\n            return month+'月'+_date+'日 ';\r\n        }\r\n        return d.getFullYear()+'年'+month+'月'+_date+'日';\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Image } from 'tonva-tools';\r\n\r\nexport interface MediaProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    discription?: string | JSX.Element;\r\n    px?: number;\r\n    py?: number;\r\n}\r\n\r\nexport class Media extends React.Component<MediaProps> {\r\n    render() {\r\n        let {icon, main, discription, px, py} = this.props;\r\n        let disp:any;\r\n        if (typeof discription === 'string')\r\n            disp = <div>{discription}</div>;\r\n        else\r\n            disp = discription;\r\n        let cn = classNames(\r\n            'media', \r\n            px===undefined? 'px-0':'px-'+px, \r\n            py===undefined? 'py-2':'py-'+py);\r\n        return <div className={cn}>\r\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\r\n            <div className=\"media-body\">\r\n                <h5 className=\"mt-0\">{main}</h5>\r\n                {disp}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\n\r\nexport interface SearchBoxProps {\r\n    className?: string;\r\n    label?: string;\r\n    initKey?: string;\r\n    placeholder?: string;\r\n    buttonText?: string;\r\n    maxLength?: number;\r\n    size?: 'sm' | 'md' | 'lg';\r\n    inputClassName?: string;\r\n    onSearch: (key:string)=>Promise<void>;\r\n    onFocus?: ()=>void;\r\n    allowEmptySearch?: boolean;\r\n}\r\n\r\n/*\r\nexport interface SearchBoxState {\r\n    disabled: boolean;\r\n}*/\r\n\r\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\r\n    private input: HTMLInputElement;\r\n    private key: string = null;\r\n    @observable private disabled: boolean;\r\n\r\n    private onChange = (evt: React.ChangeEvent<any>) => {\r\n        this.key = evt.target.value;\r\n        if (this.key !== undefined) {\r\n            this.key = this.key.trim();\r\n            if (this.key === '') this.key = undefined;\r\n        }\r\n        if (this.props.allowEmptySearch !== true) {\r\n            this.disabled = !this.key;\r\n        }\r\n    }\r\n    private onSubmit = async (evt: React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n        if (this.key === null) this.key = this.props.initKey || '';\r\n        if (this.props.allowEmptySearch !== true) {\r\n            if (!this.key) return;\r\n            if (this.input) this.input.disabled = true;\r\n        }\r\n        await this.props.onSearch(this.key);\r\n        if (this.input) this.input.disabled = false;\r\n    }\r\n    clear() {\r\n        if (this.input) this.input.value = '';\r\n    }\r\n    render() {\r\n        let {className, inputClassName, onFocus,\r\n            label, placeholder, buttonText, maxLength, size} = this.props;\r\n        let inputSize:string;\r\n        switch (size) {\r\n            default:\r\n            case 'sm': inputSize = 'input-group-sm'; break;\r\n            case 'md': inputSize = 'input-group-md'; break;\r\n            case 'lg': inputSize = 'input-group-lg'; break;\r\n        }\r\n        let lab:any;\r\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\r\n        return <form className={className} onSubmit={this.onSubmit} >\r\n            <div className={classNames(\"input-group\", inputSize)}>\r\n                {lab}\r\n                <input ref={v=>this.input=v} onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"key\"\r\n                    onFocus={onFocus}\r\n                    className={classNames('form-control', inputClassName || 'border-primary')}\r\n                    placeholder={placeholder}\r\n                    defaultValue={this.props.initKey}\r\n                    maxLength={maxLength} />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        disabled={this.disabled}>\r\n                        <i className='fa fa-search' />\r\n                        <i className=\"fa\"/>\r\n                        {buttonText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport className from 'classnames';\r\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\r\n\r\nexport interface Step {\r\n    formRows: FormRow[];\r\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\r\n    ex?: any;                                   // 每一步额外的参数\r\n}\r\n\r\nexport interface MultiStepProps {\r\n    className?: string;\r\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    steps: {[name:string]: Step};\r\n    first: string;         // 第一步的名字\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n}\r\n\r\nexport interface StepView {\r\n    stepName: string;\r\n    step: Step;\r\n    props: FormProps;\r\n    //view: JSX.Element;\r\n}\r\nexport interface MultiStepState {\r\n    //num: number;\r\n    //step: Step;\r\n    //formView: FormView;\r\n    topView: StepView;\r\n    stepViews: StepView[];\r\n}\r\n\r\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\r\n    private values: any = {};\r\n    private stepViews: StepView[] = [];\r\n    private topView: StepView;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topView: undefined,\r\n            stepViews: [],\r\n        }\r\n        this.onPrev = this.onPrev.bind(this);\r\n        this.onNext = this.onNext.bind(this);\r\n    }\r\n    \r\n    private setStep(stepName: string) {\r\n        let step = this.props.steps[stepName];\r\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\r\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\r\n        let otherButton, onOther;\r\n        if (this.stepViews.length > 0) {\r\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\r\n            onOther = this.onPrev;\r\n        }\r\n        let {header, footer} = this.props;\r\n        let btnContent = step.next === undefined?\r\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\r\n            {suffix: 'arrow-right', text: '下一步'}\r\n        let formProps = {\r\n            formRows: step.formRows,\r\n            submitButton: <ButtonConten {...btnContent} />,\r\n            onSubmit: this.onNext,\r\n            otherButton: otherButton,\r\n            onOther: onOther,\r\n        };\r\n        let num = this.stepViews.length + 1;\r\n        this.topView = {\r\n            stepName: stepName,\r\n            step: step,\r\n            props: formProps,\r\n        };\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        this.setStep(this.props.first);\r\n    }\r\n    private onPrev(values:any) {\r\n        _.assign(this.values, values);\r\n        this.topView = this.stepViews.pop();\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    private onNext(values:any): Promise<SubmitResult|undefined> {\r\n        _.assign(this.values, values);\r\n        //let {num, step} = this.state;\r\n        let {next} = this.topView.step;\r\n        if (next === undefined) {\r\n            return this.props.onSubmit(this.values)\r\n        }\r\n        let nextStepName:string;\r\n        if (typeof next === 'string') {\r\n            nextStepName = next;\r\n        }\r\n        else {\r\n            nextStepName = next(this.values);\r\n        }\r\n        this.setStep(nextStepName);\r\n    }\r\n    render() {\r\n        let {className, header, footer} = this.props;\r\n        let {topView, stepViews} = this.state;\r\n        let {stepName, step} = topView;\r\n        let hidden = {visibility: 'hidden'};\r\n        let num = stepViews.length + 1;\r\n        return <div className={className}>\r\n            <div>\r\n                {header && header(step, num)}\r\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\r\n                {footer && footer(step, num)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\r\n    let {prefix, text, suffix} = props;\r\n    let pIcon, sIcon;\r\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\r\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\r\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\r\n}\r\n    \r\n","import _ from 'lodash';\r\nimport { Context } from '../context';\r\nimport { FormRes } from '../formRes';\r\n\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any):void;\r\n}\r\n\r\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\r\nexport type FieldRule = (value:any) => string[] | string;\r\n\r\nexport class RuleCustom extends Rule {\r\n    private func: FieldRule;\r\n    constructor(func: FieldRule) {\r\n        super();\r\n        this.func = func;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        let ret = this.func(value);\r\n        if (ret === undefined) return;\r\n        switch (typeof ret) {\r\n            case 'undefined': return;\r\n            case 'string': defy.push(ret as string); return;\r\n            default: defy.push(...ret); return;\r\n        }        \r\n    }\r\n}\r\n\r\nexport abstract class RulePredefined extends Rule {\r\n    protected res: FormRes;\r\n    constructor(res: FormRes) {\r\n        super();\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class RuleRequired extends RulePredefined {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push(this.res.required);\r\n    }\r\n}\r\n\r\nexport class RuleNum extends RulePredefined {\r\n    private minMsg: _.TemplateExecutor;\r\n    private maxMsg: _.TemplateExecutor;\r\n    protected min: number;\r\n    protected max: number\r\n    constructor(res: FormRes, min?: number, max?: number) {\r\n        super(res);\r\n        this.minMsg = _.template(res.min);\r\n        this.maxMsg = _.template(res.max);\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) {\r\n            defy.push(this.res.number);\r\n        }\r\n        else {\r\n            this.checkMore(defy, n);\r\n        }\r\n    }\r\n\r\n    protected checkMore(defy:string[], value: number) {\r\n        if (this.min !== undefined && Number(value) < this.min) {\r\n            defy.push(this.minMsg({min:this.min}));\r\n        }\r\n        if (this.max !== undefined && Number(value) > this.max) {\r\n            defy.push(this.maxMsg({max:this.max}));\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleInt extends RuleNum {\r\n    protected checkMore(defy:string[], n: number) {\r\n        super.checkMore(defy, n);\r\n        if (Number.isInteger(n) === false) {\r\n            defy.push(this.res.integer);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { ItemSchema } from '../../schema';\r\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\r\nimport { computed, observable, reaction } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Widget {\r\n    protected name: string;\r\n    protected context: Context;\r\n    protected fieldProps:FieldProps;\r\n    protected children: React.ReactNode;\r\n    protected itemSchema: ItemSchema;\r\n    protected ui: UiItem;\r\n    protected defaultValue: any;\r\n    protected value: any;\r\n    protected rules: Rule[];\r\n    @observable protected errors: string[] = [];\r\n    @observable protected contextErrors: string[] = [];\r\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\r\n    protected readOnly:boolean;\r\n    protected disabled:boolean;\r\n    @observable visible:boolean;\r\n\r\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\r\n        this.context = context;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.itemSchema = itemSchema;\r\n        this.fieldProps = fieldProps;\r\n        this.children = children;\r\n        this.ui = context.getUiItem(name);\r\n        if (this.ui === undefined) {\r\n            this.readOnly = false;\r\n            this.disabled = false;\r\n            this.visible = true;\r\n        }\r\n        else {\r\n            let {readOnly, disabled, visible} = this.ui;\r\n            this.readOnly = (readOnly === true);\r\n            this.disabled = (disabled === true);\r\n            this.visible = !(visible === false);            \r\n        }\r\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\r\n        this.init();\r\n    }\r\n\r\n    protected init() {\r\n        this.rules = [];\r\n        if (this.itemSchema.required === true) {\r\n            this.rules.push(new RuleRequired(this.context.form.res));\r\n        }\r\n        this.buildRules();\r\n        if (this.ui === undefined) return;\r\n        let {rules} = this.ui;\r\n        if (rules === undefined) return;\r\n        if (Array.isArray(rules) === false) {\r\n            this.rules.push(new RuleCustom(rules as FieldRule));\r\n            return;\r\n        }\r\n        for (let rule of rules as FieldRule[]) {\r\n            this.rules.push(new RuleCustom(rule));\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n    }\r\n\r\n    checkRules() {\r\n        let defy:string[] = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        if (defy.length === 0) {\r\n            this.context.removeErrorWidget(this);\r\n        }\r\n        else {\r\n            this.context.addErrorWidget(this);\r\n            this.errors.push(...defy);\r\n        }\r\n    }\r\n\r\n    @computed get isOk() {\r\n        return this.errors.length ===0;\r\n    }\r\n\r\n    setError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.errors.push(err);\r\n        else this.errors.push(...err);\r\n    }\r\n\r\n    setContextError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.contextErrors.push(err);\r\n        else this.contextErrors.push(...err);\r\n    }\r\n\r\n    clearError() {\r\n        this.errors.splice(0);\r\n    }\r\n\r\n    clearContextError() {\r\n        this.contextErrors.splice(0);\r\n    }\r\n\r\n    protected parse(value:any):any {return value}\r\n\r\n    protected setElementValue(value:any) {}\r\n    protected setDataValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        this.context.initData[this.name] = this.value = this.parse(value);\r\n    }\r\n\r\n    setValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        //this.setDataValue(value);\r\n        //this.setElementValue(value);\r\n        this.changeValue(value, false);\r\n    }\r\n\r\n    getValue() {\r\n        return this.context.getValue(this.name);\r\n    }\r\n\r\n    getReadOnly():boolean {return this.readOnly}\r\n    getDisabled():boolean {return this.disabled}\r\n    getVisible():boolean {return this.visible}\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}\r\n    setVisible(value:boolean) {this.visible = value}\r\n\r\n    private isChanging: boolean;\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n\r\n    protected changeValue(newValue: any, fromElement: boolean) {\r\n        let prev = this.value;\r\n        let onChanging: ChangingHandler;\r\n        let onChanged: ChangedHandler;\r\n        if (this.ui !== undefined) {\r\n            onChanging = this.ui.onChanging;\r\n            onChanged = this.ui.onChanged;\r\n        }\r\n        let allowChange = true;\r\n        if (onChanging !== undefined) {\r\n            this.isChanging = true;\r\n            allowChange = onChanging(this.context, this.value, prev);\r\n            this.isChanging = false;\r\n        }\r\n        if (allowChange === true) {\r\n            this.setDataValue(newValue);\r\n            if (fromElement !== true) this.setElementValue(newValue);\r\n            if (onChanged !== undefined) {\r\n                this.isChanging = true;\r\n                onChanged(this.context, this.value, prev);\r\n                this.isChanging = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get className():string {\r\n        let fieldClass:string;\r\n        if (this.context.inNode === false) fieldClass = 'form-control';\r\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\r\n    }\r\n\r\n    protected abstract render():JSX.Element;\r\n\r\n    container = observer(():JSX.Element => {\r\n        if (this.visible === false) return null;\r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        let label:any = this.label;\r\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\r\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\r\n        }\r\n        return form.FieldContainer(label, this.render());\r\n    })\r\n\r\n    protected get label():string {\r\n        let label:any;\r\n        if (this.ui === undefined) {\r\n            label = this.name;\r\n        }\r\n        else {\r\n            let uiLabel = this.ui.label;\r\n            if (uiLabel === null) label = null;\r\n            else label = uiLabel || this.name;\r\n        }\r\n        return label;\r\n    }\r\n\r\n    protected renderTemplet():JSX.Element | undefined {\r\n        if (this.children !== undefined) {\r\n            return <>{this.children}</>;\r\n        }\r\n        if (this.ui === undefined) return undefined;\r\n        let {Templet} = this.ui;\r\n        if (typeof Templet === 'function') return Templet(this.value);\r\n        return Templet;\r\n    }\r\n\r\n    protected renderErrors() {\r\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\r\n        if (errorList.length === 0) return null;\r\n        let {inNode} = this.context;\r\n        let tag = inNode === true? 'span' : 'div';\r\n        return errorList.map(err => React.createElement(tag, \r\n            {\r\n                key: err, \r\n                className: 'text-danger d-inline-block my-2 ml-3'\r\n            },\r\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\r\n        ));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextItem, StringSchema } from '../../schema';\r\n\r\nexport class TextWidget extends Widget {\r\n    protected inputType = 'text';\r\n    protected ui: UiTextItem;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected setElementValue(value:any) {\r\n        if (this.input === null) return;\r\n        this.input.value = value;\r\n    }\r\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\r\n    protected onKeyDown = async (evt:React.KeyboardEvent<HTMLInputElement>) => {\r\n        this.internalOnKeyDown(evt);\r\n        if (evt.keyCode !== 13) return;\r\n        let {onEnter} = this.context.form.props;\r\n        if (onEnter === undefined) return;\r\n\r\n        this.changeValue(evt.currentTarget.value, true);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n\r\n        let ret = await onEnter(this.name, this.context);\r\n        if (ret !== undefined) {\r\n            this.context.setError(this.name, ret);\r\n        }\r\n    }\r\n\r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n    }\r\n\r\n    protected onBlur(evt: React.FocusEvent<any>) {\r\n        this.onInputChange(evt);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n    }\r\n    protected onFocus(evt: React.FocusEvent<any>) {\r\n        this.clearError();\r\n        this.context.removeErrorWidget(this);\r\n        this.context.removeErrors();\r\n    }\r\n    protected onChange(evt: React.ChangeEvent<any>) {\r\n    }\r\n\r\n    setReadOnly(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.readOnly = this.readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.disabled = this.disabled = value;\r\n    }\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {\r\n            //'form-control': true,\r\n        };\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, cn)}\r\n            type={this.inputType}\r\n            defaultValue={this.value}\r\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\r\n            placeholder={this.placeholder}\r\n            readOnly={this.readOnly}\r\n            disabled={this.disabled}\r\n            onKeyDown = {this.onKeyDown}\r\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\r\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\r\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\nimport { RuleNum, RuleInt } from '../rules';\r\nimport { NumBaseSchema } from '../../schema';\r\n\r\nexport class NumberWidget extends TextWidget {\r\n    protected inputType = 'number';\r\n    protected itemSchema: NumBaseSchema;\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        let res = this.context.form.res;\r\n        let {min, max} = this.itemSchema;\r\n        this.rules.push(\r\n            this.itemSchema.type === 'integer'?\r\n                new RuleNum(res, min, max) :\r\n                new RuleInt(res, min, max)\r\n        );\r\n        /*\r\n        if (this.itemSchema.type === 'integer') {\r\n            this.rules.push(new RuleInt);\r\n        }\r\n        let {min, max} = this.itemSchema;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n        */\r\n    }\r\n\r\n    protected parse(value:any):any {\r\n        if (value === undefined || value === null) return;\r\n        return Number(value);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { NumberWidget } from './numberWidget';\r\n\r\nexport class UpdownWidget extends NumberWidget {\r\n    protected inputType = 'number';\r\n\r\n    protected isValidKey(key:number):boolean {\r\n        return key===46 || key===8 || key===37 || key===39\r\n            || key>=48 && key<=57\r\n            || key>=96 && key<=105\r\n            || key===109 || key===189;\r\n    }\r\n    \r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n        let key = evt.keyCode;\r\n        event.returnValue = this.isValidKey(key);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class DateWidget extends TextWidget {\r\n    protected inputType = 'date';\r\n}\r\n\r\nexport class DateTimeWidget extends TextWidget {\r\n    protected inputType = 'datetime';\r\n}\r\n\r\nexport class TimeWidget extends TextWidget {\r\n    protected inputType = 'time';\r\n}\r\n\r\nexport class MonthWidget extends TextWidget {\r\n    protected inputType = 'month';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiCheckItem } from '../../schema';\r\n\r\nexport class CheckBoxWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiCheckItem;\r\n    protected trueValue: any;\r\n    protected falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        if (this.ui !== undefined) {\r\n            let {trueValue, falseValue} = this.ui;\r\n            if (trueValue === undefined) this.trueValue = true;\r\n            else this.trueValue = trueValue;\r\n            if (falseValue === undefined) this.falseValue = false;\r\n            else this.falseValue = falseValue;\r\n        }\r\n        else {\r\n            this.trueValue = true;\r\n            this.falseValue = false;\r\n        }\r\n    }\r\n    protected setElementValue(value:any) {\r\n        this.input.checked = value === this.trueValue;\r\n    }\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\r\n    }\r\n\r\n    protected onClick = () => {\r\n        this.context.removeErrors();\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames(this.className, 'form-check-inline p-0');\r\n        let input = <input\r\n            ref={(input)=>this.input = input}\r\n            className={'align-self-center'}\r\n            type=\"checkbox\"\r\n            defaultChecked={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            onClick={this.onClick} />;\r\n        if (this.context.inNode === true) {\r\n            return <label className={cn}>\r\n                {input} {(this.ui&&this.ui.label) || this.name}\r\n            </label>\r\n        }\r\n        else {\r\n            return <div className={cn}>\r\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\r\n            </div>;\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { Widget } from './widget';\r\nimport { UiSelect } from '../../schema';\r\n\r\nexport class SelectWidget extends Widget {\r\n    protected select: HTMLSelectElement;\r\n    protected ui: UiSelect;\r\n    @observable protected readOnly: boolean;\r\n\r\n    protected setElementValue(value:any) {this.select.value = value}\r\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setDataValue(evt.target.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\r\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        if (this.readOnly === true) {\r\n            let option = this.ui.list.find(v => v.value === this.value);\r\n            let title = (option === undefined)? '(???)' : option.title;\r\n            return <span className=\"form-control w-min-6c\">{title}</span>;\r\n        }\r\n        return <select\r\n            ref={(select)=>this.select = select}\r\n            className={classNames(this.className, 'form-control')}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}>\r\n            {this.ui.list.map((v,index) => {\r\n                let {title, value} = v;\r\n                let cn:string;\r\n                //if (value === undefined || value === null) cn = 'text-light small';\r\n                //else cn = 'text-danger';\r\n                return <option className={cn} key={index} value={value}>{title || value}</option>\r\n            })}\r\n        </select>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiIdItem, TempletType } from '../../schema';\r\nimport { observable } from 'mobx';\r\n\r\nexport class IdWidget extends Widget {\r\n    protected ui: UiIdItem;\r\n    @observable protected value:number;\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}    \r\n\r\n    protected onClick = async () => {\r\n        let pickId = this.ui && this.ui.pickId;\r\n        if (pickId === undefined) {\r\n            alert('no pickId defined!');\r\n            return;\r\n        }\r\n        let id = await pickId(this.context, this.name, this.value);        \r\n        this.setDataValue(id);\r\n        this.clearError();\r\n        this.clearContextError();\r\n        this.checkRules();\r\n    }\r\n\r\n    render() {\r\n        let placeholder:string|JSX.Element, Templet: TempletType;\r\n        if (this.ui !== undefined) {\r\n            placeholder = this.ui.placeholder;\r\n            Templet = this.ui.Templet;\r\n        }\r\n        let cn = {\r\n            'form-control': true,\r\n            'required-item': this.itemSchema.required === true,\r\n            'cursor-pointer': true,\r\n            'is-invalid': this.hasError,\r\n        };\r\n        let content;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = placeholder || 'placeholder';\r\n            cn['text-muted'] = true;\r\n        }\r\n        else if (Templet === undefined) {\r\n            content = <>{this.value}</>;\r\n        }\r\n        else if (typeof Templet === 'function') {\r\n            content = Templet(this.value);\r\n        }\r\n        else {\r\n            content = Templet;\r\n        }\r\n        return <>\r\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DataType } from '../../schema';\r\nimport { UiType } from '../../schema';\r\n\r\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\r\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\r\n};\r\n","import * as React from 'react';\r\nimport { UiButton, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { Widget } from './widget';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class ButtonWidget extends Widget {\r\n    protected ui: UiButton;\r\n\r\n    protected onClick = async () => {\r\n        this.clearError();\r\n        this.clearContextError();\r\n        let {name, type} = this.itemSchema;\r\n        if (type === 'submit') {\r\n            this.context.checkRules()\r\n            if (this.context.hasError === true) {\r\n                return;\r\n            }\r\n        }\r\n        let {onButtonClick} = this.context.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${name} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(name, this.context);\r\n        if (ret === undefined) return;\r\n        this.context.setError(name, ret);\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let {name, type} = this.itemSchema;\r\n        let Templet:TempletType, cn:string, caption:string;\r\n        if (this.ui !== undefined) {\r\n            let {widget:widgetType} = this.ui;\r\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\r\n            Templet = this.ui.Templet;\r\n            cn = this.ui.className;\r\n            caption = this.ui.label;\r\n        }\r\n        let {form, hasError} = this.context;\r\n        let context = this.context;\r\n        let disabled = type==='submit' && hasError;\r\n        let content:any;\r\n        if (this.children !== undefined) content = this.children;\r\n        else if (typeof Templet === 'function') content = Templet();\r\n        else if (Templet !== undefined) content = Templet;\r\n        else content = caption; \r\n        let button = <button \r\n            className={cn} \r\n            type=\"button\"\r\n            disabled={disabled}\r\n            onClick={this.onClick}>\r\n            {content || name}\r\n        </button>;\r\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\r\n        return <div className={form.ButtonClass}>\r\n            <div>{this.renderErrors()}</div>\r\n            {button}\r\n        </div>;\r\n    });\r\n    \r\n    protected get label():string {return null}\r\n\r\n    render() {\r\n        return <this.observerRender />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Form } from './form';\r\nimport { UiSchema, UiArr, UiItem } from '../schema';\r\nimport { ArrSchema, ItemSchema } from '../schema';\r\nimport { Widget as Widget } from './widgets/widget';\r\n//import { ArrRow } from './arrRow';\r\nimport { observable, computed } from 'mobx';\r\nimport { ContextRule } from './rules';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Context {\r\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\r\n    readonly form: Form;\r\n    readonly uiSchema: UiSchema;\r\n    readonly initData: any;\r\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\r\n    readonly widgets: {[name:string]: Widget} = {};\r\n    readonly rules: ContextRule[];\r\n    readonly isRow: boolean;\r\n    @observable errors: string[] = [];\r\n    @observable errorWidgets:Widget[] = [];\r\n\r\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\r\n        this.form = form;\r\n        this.uiSchema = uiSchema;\r\n        this.initData = data;\r\n        this.inNode = inNode;\r\n        this.isRow = isRow;\r\n        if (uiSchema !== undefined) {\r\n            let {rules} = uiSchema;\r\n            if (rules !== undefined) {\r\n                this.rules = [];\r\n                if (Array.isArray(rules) === false)\r\n                    this.rules.push(rules as ContextRule);\r\n                else\r\n                    this.rules.push(...rules as ContextRule[]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getArrRowContexts(arrName: string) {\r\n        if (this.subContexts === undefined) this.subContexts = {};\r\n        let arrRowContexts = this.subContexts[name];\r\n        if (arrRowContexts === undefined) this.subContexts[name] = arrRowContexts = {};\r\n        return arrRowContexts;\r\n    }\r\n\r\n    abstract get data():any;\r\n    abstract getItemSchema(itemName:string):ItemSchema;\r\n    abstract getUiItem(itemName:string):UiItem;\r\n    get arrName():string {return undefined}\r\n    getValue(itemName:string):any {return this.initData[itemName]}\r\n    setValue(itemName:string, value:any) {\r\n        this.initData[itemName] = value;\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setValue(value);\r\n    }\r\n    getDisabled(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) return widget.getDisabled();\r\n        return undefined;\r\n    }\r\n    setDisabled(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setDisabled(value);\r\n    }\r\n    getReadOnly(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getReadOnly();\r\n        return undefined;\r\n    }\r\n    setReadOnly(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setReadOnly(value);\r\n    }\r\n    getVisible(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getVisible();\r\n        return undefined;\r\n    }\r\n    setVisible(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setVisible(value);\r\n    }\r\n\r\n    checkFieldRules() {\r\n        for (let i in this.widgets) {\r\n            this.widgets[i].checkRules();\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                arrRowContexts[j].checkFieldRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    checkContextRules() {\r\n        if (this.rules === undefined) return;\r\n        this.clearContextErrors();\r\n        for (let rule of this.rules) {\r\n            let ret = rule(this);\r\n            if (ret === undefined) continue;\r\n            if (Array.isArray(ret) === true) {\r\n                this.errors.push(...ret as string[]);\r\n            }\r\n            else if (typeof ret === 'string') {\r\n                this.errors.push(ret as string);\r\n            }\r\n            else {\r\n                for (let i in ret as object) this.setError(i, ret[i]);\r\n            }\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                let rowContext = arrRowContexts[j];\r\n                rowContext.removeErrors();\r\n                rowContext.checkContextRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    setError(itemName:string, error:string) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget === undefined) return;\r\n        widget.setContextError(error);\r\n        this.addErrorWidget(widget);\r\n    }\r\n\r\n    clearContextErrors() {\r\n        for (let i in this.widgets) this.widgets[i].clearContextError();\r\n    }\r\n\r\n    checkRules() {\r\n        this.checkFieldRules();\r\n        this.checkContextRules();\r\n    }\r\n\r\n    addErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos < 0) this.errorWidgets.push(widget);\r\n    }\r\n    removeErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\r\n    }\r\n\r\n    protected checkHasError():boolean {\r\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\r\n        if (ret === true) return true;\r\n        if (this.subContexts === undefined) return false;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                if (arrRowContexts[j].hasError === true) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        return this.checkHasError();\r\n    };\r\n\r\n    removeErrors() {\r\n        this.errors.splice(0);\r\n        this.errorWidgets.splice(0);\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearContextError();\r\n        }\r\n    }\r\n\r\n    renderErrors = observer((): JSX.Element => {\r\n        let {errors} = this;\r\n        if (errors.length === 0) return null;\r\n        return <>\r\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\r\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\r\n            </span>)}\r\n        </>\r\n    });\r\n}\r\n\r\nlet rowKeySeed:number = 1;\r\nexport class RowContext extends Context {\r\n    readonly parentContext: Context;\r\n    readonly arrSchema: ArrSchema;\r\n    readonly uiSchema: UiArr;\r\n    //readonly row: ArrRow;\r\n    readonly rowKey: number;\r\n    readonly data: any;\r\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\r\n        let uiArr:UiArr;\r\n        let {uiSchema} = parentContext;\r\n        if (uiSchema !== undefined) {\r\n            let {items} = uiSchema;\r\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\r\n        }\r\n        super(parentContext.form, uiArr, data, inNode, true);\r\n        this.parentContext = parentContext;\r\n        this.arrSchema = arrSchema;\r\n        this.rowKey = rowKeySeed++;\r\n        this.data = data;\r\n    }\r\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        if (this.uiSchema === undefined) return undefined;\r\n        let {items} = this.uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n    get arrName():string {return this.arrSchema.name}\r\n    //get data() {return this.row.data;}\r\n    removeErrors() {\r\n        super.removeErrors();\r\n        this.parentContext.removeErrors();\r\n    }\r\n\r\n    get parentData():any {return this.parentContext.data;}\r\n}\r\n\r\nexport class FormContext extends Context {\r\n    constructor(form:Form, inNode:boolean) {\r\n        super(form, form.uiSchema, form.data, inNode, false);\r\n    }\r\n    get data():any {return this.form.data}\r\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        let {uiSchema} = this.form;\r\n        if (uiSchema === undefined) return undefined;\r\n        let {items} = uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n}\r\n\r\nexport const ContextContainer = React.createContext<Context>({} as any);\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\n//import { ArrRow } from '../arrRow';\r\nimport { Context, RowContext, ContextContainer } from '../context';\r\nimport { ArrSchema } from '../../schema';\r\nimport { UiArr, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { factory } from './factory';\r\n\r\nexport const ArrComponent = observer((\r\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \r\n{\r\n    let {name, arr} = arrSchema;\r\n    let data = parentContext.initData[name] as any[];\r\n    let {form} = parentContext;\r\n    let arrRowContexts = parentContext.getArrRowContexts(name);\r\n    let ui = parentContext.getUiItem(name) as UiArr;\r\n    let arrLabel = name;\r\n    let Templet:TempletType;\r\n    let selectable:boolean, deletable:boolean, restorable:boolean;\r\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\r\n    if (uiSchema !== undefined) {\r\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\r\n        if (selectable !== true) selectable = formSelectable;\r\n        if (deletable !== true) deletable = formDeletable;\r\n        if (restorable !== true) restorable = formRestorable;\r\n    }\r\n    if (ui !== undefined) {\r\n        let {widget:widgetType, label, \r\n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\r\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\r\n        } = ui;\r\n        if (arrSelectable !== undefined) selectable = arrSelectable;\r\n        if (arrDeletable !== undefined) deletable = arrDeletable;\r\n        if (arrRestorable !== undefined) restorable = arrRestorable;\r\n        if (ac !== undefined) ArrContainer = ac;\r\n        if (rc !== undefined) RowContainer = rc;\r\n        if (rs !== undefined) RowSeperator = rs;\r\n        Templet = ui.Templet;\r\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\r\n        arrLabel = label || arrLabel;\r\n    }\r\n    let first = true;\r\n    return ArrContainer(arrLabel, <>\r\n        {data.map((row:any, index) => {\r\n            let rowContext: RowContext;\r\n            let rowContent: JSX.Element;\r\n            let sep = undefined;\r\n            if (first === false) sep = RowSeperator;\r\n            else first = false;\r\n            if (children !== undefined) {\r\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                rowContent = <>{children}</>;\r\n            }\r\n            else {\r\n                let typeofTemplet = typeof Templet;\r\n                if (typeofTemplet === 'function') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\r\n                }\r\n                else if (typeofTemplet === 'object') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = Templet as JSX.Element;\r\n                }\r\n                else {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\r\n                    rowContent = <>{\r\n                        arr.map((v, index) => {\r\n                            return <React.Fragment key={v.name}>\r\n                                {factory(rowContext, v, undefined)}\r\n                            </React.Fragment>\r\n                        })}\r\n                    </>;\r\n                }\r\n            }\r\n            let {rowKey} = rowContext;\r\n            arrRowContexts[rowKey] = rowContext;\r\n\r\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\r\n            if (selectable === true) {\r\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\r\n                    let {checked} = (evt.target as HTMLInputElement);\r\n                    row.$isSelected = checked;\r\n                    let {$source} = row;\r\n                    if ($source !== undefined) $source.$isSelected = checked;\r\n                    rowContext.removeErrors();\r\n                }\r\n                selectCheck = <div className=\"form-row-checkbox\">\r\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\r\n                </div>;\r\n            }\r\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\r\n            if (deletable === true) {\r\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\r\n                let onDelClick = () => {\r\n                    if (restorable === true) {\r\n                        row.$isDeleted = !isDeleted;\r\n                        let {$source} = row;\r\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\r\n                    }\r\n                    else {\r\n                        let p = data.indexOf(row);\r\n                        if (p>=0) data.splice(p, 1);\r\n                    }\r\n                    rowContext.removeErrors();\r\n                }\r\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\r\n                    <i className={classNames('fa', icon, 'fa-fw')} />\r\n                </div>;\r\n            }\r\n            let editContainer = selectable===true || deletable===true?\r\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\r\n                    {selectCheck}<div className=\"flex-grow-1\">{content}</div>{deleteIcon}\r\n                </div></fieldset>\r\n                :\r\n                (content:any) => content;\r\n\r\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\r\n                {sep}\r\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\r\n            </ContextContainer.Provider>;\r\n        })}\r\n    </>);\r\n});\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiImageItem } from '../../schema';\r\nimport { Image } from '../../image';\r\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class ImageWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiImageItem;\r\n    @observable private imageSrc: string;\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.imageSrc = this.value;\r\n    }\r\n\r\n    protected onClick = async () => {\r\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\r\n        let ret = await edit.start();\r\n        if (ret !== null) {\r\n            this.setValue(ret);\r\n            this.imageSrc = ret;\r\n        }\r\n        await edit.end();\r\n    }\r\n\r\n    render() {\r\n        return <this.observerRender />;\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let cn = [\r\n            'bg-white p-1 d-flex justify-content-center',\r\n        ];\r\n        let onClick: any;\r\n        if (!this.readOnly && !this.disabled) {\r\n            cn.push('cursor-pointer');\r\n            onClick = this.onClick;\r\n        }\r\n        return <div className={classNames(cn)} onClick={onClick}>\r\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\r\n        </div>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../../schema';\r\nimport { UiItem, UiArr, UiType, UiButton, TempletType, TypeWidget, UiCustom } from '../../schema';\r\nimport { TextWidget } from './textWidget';\r\nimport { TextAreaWidget } from './textareaWidget';\r\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nimport { UpdownWidget } from './updownWidget';\r\nimport { NumberWidget } from './numberWidget';\r\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nimport { CheckBoxWidget } from './checkBoxWidget';\r\nimport { FieldProps } from '../field';\r\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\r\nimport { SelectWidget } from './selectWidget';\r\nimport { RadioWidget } from './radioWidget';\r\nimport { RangeWidget } from './rangeWidget';\r\nimport { IdWidget } from './idWidget';\r\nimport { ButtonWidget } from './buttonWidget';\r\nimport { ArrComponent } from './arrComponent';\r\nimport { ImageWidget } from './imageWidget';\r\n\r\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\r\n    id: {\r\n        dataTypes: ['id'],\r\n        widget: IdWidget,\r\n    },\r\n    text: {\r\n        dataTypes: ['integer', 'number', 'string'],\r\n        widget: TextWidget\r\n    },\r\n    textarea: {\r\n        dataTypes: ['string'],\r\n        widget: TextAreaWidget\r\n    },\r\n    password: {\r\n        dataTypes: ['string'],\r\n        widget: PasswordWidget\r\n    },\r\n    date: {\r\n        dataTypes: ['date'],\r\n        widget: DateWidget\r\n    },\r\n    datetime: {\r\n        dataTypes: ['date'],\r\n        widget: DateTimeWidget\r\n    },\r\n    time: {\r\n        dataTypes: ['date'],\r\n        widget: TimeWidget\r\n    },\r\n    month: {\r\n        dataTypes: ['date'],\r\n        widget: MonthWidget\r\n    },\r\n    select: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: SelectWidget\r\n    },\r\n    url: {\r\n        dataTypes: ['string'],\r\n        widget: UrlWidget\r\n    },\r\n    email: {\r\n        dataTypes: ['string'],\r\n        widget: EmailWidget\r\n    },\r\n    number: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: NumberWidget\r\n    },\r\n    updown: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: UpdownWidget\r\n    },\r\n    color: {\r\n\r\n    },\r\n    checkbox: {\r\n        dataTypes: ['boolean', 'integer', 'number'],\r\n        widget: CheckBoxWidget\r\n    },\r\n    image: {\r\n        dataTypes: ['string'],\r\n        widget: ImageWidget,\r\n    },\r\n    checkboxes: {\r\n\r\n    },\r\n    radio: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: RadioWidget\r\n    },\r\n    range: {\r\n        dataTypes: ['integer'],\r\n        widget: RangeWidget,\r\n    },\r\n    button: {\r\n        dataTypes: ['button', 'submit'],\r\n        widget: ButtonWidget,\r\n    }\r\n}\r\n\r\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\r\n    if (context === undefined) {\r\n        debugger;\r\n        return null;\r\n    }\r\n    if (itemSchema === undefined) return undefined;\r\n    let {name, type} = itemSchema;\r\n    switch (type) {\r\n    case 'arr':\r\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\r\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\r\n    default:\r\n        break;\r\n    }\r\n\r\n    let typeWidget: TypeWidget;\r\n    let ui = context.getUiItem(name);\r\n    function getTypeWidget(t:DataType): TypeWidget {\r\n        switch(t) {\r\n        default: return TextWidget; \r\n        case 'id': return IdWidget;\r\n        case 'integer': return UpdownWidget;\r\n        case 'number': return NumberWidget; \r\n        case 'string': return TextWidget; \r\n        case 'date': return DateWidget; \r\n        case 'boolean': return CheckBoxWidget; \r\n        case 'button':\r\n        case 'submit': return ButtonWidget;\r\n        }\r\n    }\r\n    if (ui === undefined) { \r\n        typeWidget = getTypeWidget(type);\r\n    }\r\n    else {\r\n        let {widget:widgetType} = ui;\r\n        switch (widgetType) {\r\n        default:\r\n            if (widgetType !== undefined) {\r\n                let widgetFactory = widgetsFactory[widgetType];\r\n                typeWidget = widgetFactory.widget;\r\n            }\r\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\r\n            break;\r\n        case 'custom':\r\n            typeWidget = (ui as UiCustom).WidgetClass;\r\n            break;\r\n        case 'group':\r\n            return <span>impletment group</span>;\r\n        }\r\n        //label = uiLabel || name;\r\n    }\r\n    \r\n    let {isRow, widgets} = context;\r\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\r\n    widgets[name] = widget;\r\n\r\n    return <widget.container />;\r\n    /*\r\n    if (isRow === false) {\r\n        let WidgetElement = observer(() => widget.container());\r\n        return <WidgetElement />;\r\n    }\r\n    else {\r\n        let widgetElement = widget.container();\r\n        return widgetElement;\r\n    }\r\n    */\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextAreaItem } from '../../schema';\r\nimport { StringSchema } from '../../schema';\r\n\r\nexport class TextAreaWidget extends Widget {\r\n    protected itemSchema: StringSchema;\r\n    protected input: HTMLTextAreaElement;\r\n    protected ui: UiTextAreaItem;\r\n\r\n    protected setElementValue(value:any) {this.input.value = value}\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {};\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <textarea ref={(input) => this.input=input} \r\n            className={classNames(this.className, cn)}\r\n            rows={this.ui && this.ui.rows}\r\n            maxLength={this.itemSchema.maxLength}\r\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class PasswordWidget extends TextWidget {\r\n    protected inputType = 'password';\r\n}\r\n\r\nexport class UrlWidget extends TextWidget {\r\n    protected inputType = 'url';\r\n}\r\n\r\nexport class EmailWidget extends TextWidget {\r\n    protected inputType = 'email';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { TextWidget } from './textWidget';\r\nimport { Widget } from './widget';\r\nimport { UiRadio } from '../../schema';\r\nimport { RowContext } from '../context';\r\n\r\n\r\n//const radioStyle:React.CSSProperties = {width:'2em', height:'1.2em'};\r\nexport class RadioWidget extends Widget {\r\n    protected inputs: {[index:number]: HTMLInputElement} = {};\r\n    protected ui: UiRadio;\r\n\r\n    protected setElementValue(value:any) {\r\n        for (let i in this.inputs) {\r\n            let input = this.inputs[i];\r\n            input.checked = value === input.value;\r\n        }\r\n    }\r\n    setReadOnly(value:boolean) {\r\n        this.readOnly = value;\r\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        this.disabled = value;\r\n        for (let i in this.inputs) this.inputs[i].disabled = value\r\n    }\r\n\r\n    render() {\r\n        let {defaultValue, list} = this.ui;\r\n        let {isRow, inNode} = this.context;\r\n        let rowKey:number;\r\n        if (isRow === true) {\r\n            rowKey = (this.context as RowContext).rowKey;\r\n        }\r\n        let cn = classNames(this.className, 'form-radio-inline');\r\n        return <span className={cn}>\r\n                {list.map((v,index) => {\r\n                    let {value, title} = v;\r\n                    let name = this.name;\r\n                    if (rowKey !== undefined) name += '-' + rowKey;\r\n                    return <label key={index} className=\"form-radio-inline\">\r\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\r\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value} />\r\n                        {title || value}\r\n                    </label>;\r\n                    //</span>\r\n                })}\r\n            </span>;\r\n    }\r\n}\r\n/*\r\n<div className=\"form-control d-flex border-0\"><input\r\nref={(input)=>this.input = input}\r\nclassName={classNames(this.className, 'align-self-center')}\r\ntype=\"checkbox\"\r\nstyle={{maxHeight:\"1.2em\"}}\r\ndefaultValue={this.defaultValue} \r\nonChange={this.onChange} />\r\n</div>\r\n*/","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiRange } from '../../schema';\r\nimport { Widget } from './widget';\r\n\r\nexport class RangeWidget extends Widget {\r\n    protected inputType = 'range';\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiRange;\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let {min, max, step} = this.ui;\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\r\n            type={this.inputType}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            max={max}\r\n            min={min}\r\n            step={step}\r\n            />\r\n        </>;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { KeyValueRes, Res } from '../res';\r\n\r\nexport interface FormRes extends KeyValueRes {\r\n    required: string;\r\n    number: string;\r\n    integer: string;\r\n    min: string;\r\n    max: string;\r\n}\r\n\r\nexport const formRes:Res<FormRes> = {\r\n    _: {\r\n        required: 'required',\r\n        number: 'not valid number',\r\n        integer: 'not valid integer',\r\n        min: 'min value is ${min}',\r\n        max: 'max value is ${max}',\r\n    },\r\n    zh: {\r\n        _: {\r\n            required: '必须填',\r\n            number: '需要数字',\r\n            integer: '需要整数',\r\n            min: '不能小于${min}',\r\n            max: '不能大于${max}',\r\n        }\r\n    },\r\n}\r\n","import * as React from 'react';\r\nimport {observable, IReactionDisposer, autorun, isObservable} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\r\nimport { UiSchema, TempletType } from '../schema';\r\nimport { factory } from './widgets';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\r\nimport { FormRes, formRes } from './formRes';\r\nimport { resLang } from '../res';\r\n\r\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\r\nexport type InputEnter = (name:string, context: Context) => Promise<any>;\r\n\r\nexport interface FormProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    uiSchema?: UiSchema;\r\n    formData?: any;\r\n    onButtonClick?: FormButtonClick;\r\n    onEnter?: InputEnter;\r\n    fieldLabelSize?: number;            // col-sm-2 for label\r\n    requiredFlag?: boolean;             // default=true\r\n    beforeShow?: (formContext:FormContext) => void;\r\n    res?: FormRes;\r\n\r\n    Container?: (content:JSX.Element) => JSX.Element;\r\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\r\n    FieldClass?: string;\r\n    ButtonClass?: string;\r\n}\r\n\r\nexport class Form extends React.Component<FormProps> {\r\n    readonly schema: Schema;\r\n    readonly itemSchemas: {[name:string]: ItemSchema};\r\n    readonly uiSchema: UiSchema;\r\n    readonly res?: FormRes;\r\n    protected formContext: FormContext;\r\n    //private content: any;\r\n    //private formData: any;\r\n    private disposer: IReactionDisposer;\r\n    //@observable \r\n    readonly data:any;\r\n\r\n    readonly Container: (content:JSX.Element) => JSX.Element;\r\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    readonly FieldClass: string;\r\n    readonly ButtonClass: string;\r\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\r\n    //readonly RowSeperator: JSX.Element;\r\n\r\n    constructor(props:FormProps) {\r\n        super(props);\r\n        let {schema, uiSchema, formData, \r\n            Container, FieldContainer, FieldClass, \r\n            ButtonClass, res,\r\n        } = props;\r\n        this.Container = Container || this.DefaultContainer;\r\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\r\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\r\n        this.res = res || this.DefaultRes;\r\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\r\n\r\n        this.schema = schema;\r\n        this.itemSchemas = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.itemSchemas[itemSchema.name] = itemSchema;\r\n        }\r\n        this.uiSchema = uiSchema;\r\n\r\n        //this.formData = formData;\r\n        this.disposer = autorun(this.watch);\r\n        this.data = {};\r\n        // this.initRender();\r\n    }\r\n\r\n    private renderContent():any {\r\n        this.initData(this.props.formData);\r\n        let {children} = this.props;\r\n        if (children !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return <>{children}</>;\r\n        }\r\n\r\n        let Templet: TempletType;\r\n        if (this.uiSchema !== undefined) {\r\n            Templet = this.uiSchema.Templet;\r\n        }\r\n        if (Templet !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return typeof(Templet) === 'function'? Templet(this.data) : Templet;\r\n        }\r\n\r\n        this.formContext = new FormContext(this, false);\r\n        return <>{this.schema.map((v, index) => {\r\n            return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\r\n        })}</>;\r\n    }\r\n\r\n    private initData(formData: any) {\r\n        if (formData === undefined) formData = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.initDataItem(itemSchema, this.data, formData);\r\n        }\r\n    }\r\n\r\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\r\n        let {name, type} = itemSchema;\r\n        if (type === 'button') return;\r\n        if (type !== 'arr') {\r\n            data[name] = formData[name];\r\n            return;\r\n        }\r\n\r\n        let arrItem:ArrSchema = itemSchema as ArrSchema;\r\n        let {arr:arrItems} = arrItem;\r\n        if (arrItems === undefined) return;\r\n        let arrDict = arrItem.itemSchemas = {};\r\n        for (let item of arrItems) {\r\n            arrDict[item.name] = item;\r\n        }\r\n        let val:any[] = formData[name];\r\n        if (val === undefined) val = [];\r\n        else if (Array.isArray(val) === false) val = [val];\r\n        let arr:any[] = [];\r\n        for (let row of val) {\r\n            let {$isSelected, $isDeleted} = row;\r\n            let r = {\r\n                $source: row,\r\n                $isSelected: $isSelected,\r\n                $isDeleted: $isDeleted,\r\n            };\r\n            for (let item of arrItems) {\r\n                this.initDataItem(item, r, row);\r\n                /*\r\n                let {name:nm} = item;\r\n                let v = row[nm];\r\n                if (v === undefined) v = null;\r\n                r[nm] = v;\r\n                */\r\n            }\r\n            arr.push(r);\r\n        }\r\n        //data[name] = observable(arr);\r\n        data[name] = arr;\r\n        return;\r\n    }\r\n\r\n    private watch = () => {\r\n        let {formData} = this.props;\r\n        if (formData === undefined) return;\r\n        //this.initData(formData);\r\n        this.calcSelectOrDelete();\r\n    }\r\n    private calcSelectOrDelete() {\r\n        for (let itemSchema of this.schema) {\r\n            this.arrItemOperated(itemSchema);\r\n        }\r\n    }\r\n\r\n    private arrItemOperated(itemSchema: ItemSchema) {\r\n        let {name, type} = itemSchema;\r\n        if (type !== 'arr') return;\r\n        if (this.data === undefined) return;\r\n        let formArrVal = this.data[name];\r\n        if (formArrVal === undefined) return;\r\n        let {arr: arrItems} = itemSchema as ArrSchema;\r\n        for (let row of formArrVal) {\r\n            let {$source} = row;\r\n            if ($source === undefined) continue;\r\n            let {$isSelected, $isDeleted} = $source;\r\n            row.$isSelected = $isSelected;\r\n            row.$isDeleted = $isDeleted;\r\n            //console.log($isSelected, $isDeleted);\r\n            for (let item of arrItems) {\r\n                this.arrItemOperated(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {beforeShow} = this.props;\r\n        if (beforeShow !== undefined) beforeShow(this.formContext);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.disposer !== undefined) this.disposer();\r\n    }\r\n\r\n    render() {\r\n        let content = this.renderContent();\r\n        return <ContextContainer.Provider value={this.formContext}>\r\n            <this.formContext.renderErrors />\r\n            {this.Container(content)}\r\n        </ContextContainer.Provider>;\r\n    }\r\n\r\n    async buttonClick(buttonName:string) {\r\n        this.formContext.checkRules()\r\n        if (this.formContext.hasError === true) return;\r\n\r\n        let {onButtonClick} = this.formContext.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this.formContext);\r\n        if (ret === undefined) return;\r\n        this.formContext.setError(buttonName, ret);\r\n    }\r\n\r\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\r\n        return <form className={classNames(this.props.className)}>\r\n            {content}\r\n        </form>;\r\n    }\r\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\r\n        let {fieldLabelSize} = this.props;\r\n\r\n        if (fieldLabelSize > 0) {\r\n            let labelView:any;\r\n            if (label === null) {\r\n                fieldLabelSize = 0;\r\n            }\r\n            else {\r\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\r\n            }\r\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\r\n            return <div className=\"form-group row\">\r\n                {labelView}\r\n                <div className={fieldCol}>{content}</div>\r\n            </div>;\r\n        }\r\n        return <div className=\"form-group\">\r\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\r\n            {content}\r\n        </div>;\r\n    }\r\n    protected DefaultFieldClass:string = undefined;\r\n    protected DefaultButtonClass = 'text-center py-2';\r\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\r\n\r\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\r\n        return <div>\r\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\r\n            {content}\r\n        </div>;\r\n    }\r\n    RowContainer = (content:JSX.Element): JSX.Element => {\r\n        //return <div className=\"row\">{content}</div>;\r\n        let cn = classNames({\r\n            'py-3': true\r\n        });\r\n        return <div className={cn}>{content}</div>\r\n    }\r\n    RowSeperator = <div className=\"border border-gray border-top\" />;\r\n}\r\n","import * as React from 'react';\r\nimport { factory } from './widgets';\r\nimport { ContextContainer, Context } from './context';\r\n\r\nexport interface FieldProps {\r\n    name: string;\r\n}\r\n\r\nexport class Field extends React.Component<FieldProps> {\r\n    static contextType = ContextContainer;\r\n    render() {\r\n        let {name, children } = this.props;\r\n        let context:Context = this.context;\r\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\r\n        let itemSchema = context.getItemSchema(name);\r\n        let content = factory(context, itemSchema, children, this.props);\r\n        if (content === undefined) {\r\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\r\n        }\r\n        return content;\r\n    }\r\n}\r\n","export {Form} from './form';\r\nexport {Field} from './field';\r\nexport {Context, RowContext} from './context';\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../css/va-badge.css';\r\n\r\nexport interface BadgeProps {\r\n    className?: string;\r\n    badge?: string|number;\r\n    size?: 'xs' | 'sm' | 'lg';\r\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\r\n    badgeAlign?: 'left'|'center'|'right';\r\n    badgeVertical?: 'top'|'middle'|'bottom';\r\n}\r\n\r\n@observer\r\nexport class Badge extends React.Component<BadgeProps> {\r\n    render() {\r\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\r\n        let cn = classNames(\r\n            className,\r\n            'va-badge',\r\n            size && 'va-badge-'+size,\r\n            'va-badge-' + (color||'secondary'),\r\n            badgeAlign && 'va-badg-'+badgeAlign,\r\n            badgeVertical && 'va-badg-'+badgeVertical,\r\n        );\r\n        let b;\r\n        if (badge) b = <b>{badge}</b>;\r\n        return <div className={cn}>\r\n            {children}\r\n            {b}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport '../css/va-lmr.css';\r\n\r\nexport interface LMRProps {\r\n    className?: string | string[];\r\n    left?: string|JSX.Element;\r\n    right?: string|JSX.Element;\r\n    onClick?: ()=>void;\r\n}\r\n\r\n@observer\r\nexport class LMR extends React.Component<LMRProps> {\r\n    render() {\r\n        let {className, left, children, right, onClick} = this.props;\r\n        let l, r;\r\n        if (left !== undefined) l = <header>{left}</header>;\r\n        if (right !== undefined) r = <footer>{right}</footer>;\r\n        let cursor;\r\n        if (onClick !== undefined) cursor = 'cursor-pointer';\r\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\r\n            {l}\r\n            <div>{children}</div>\r\n            {r}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport interface FAProps {\r\n    name: string;\r\n    className?: string;\r\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\r\n    spin?: boolean;\r\n    fixWidth?: boolean;\r\n    border?: boolean;\r\n    pull?: 'left'|'right';\r\n    pulse?: boolean;\r\n    rotate?: 90|180|270;\r\n    flip?: 'horizontal'|'vertical';\r\n    inverse?: boolean;\r\n}\r\n\r\nexport class FA extends React.Component<FAProps> {\r\n    render() {\r\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\r\n        let cn = classNames(className, 'fa',\r\n            name && ('fa-' + name),\r\n            size && 'fa-'+size,\r\n            fixWidth && 'fa-fw',\r\n            border && 'fa-border',\r\n            pull && 'fa-pull-' + pull,\r\n            spin && 'fa-spin',\r\n            pulse && 'fa-pulse',\r\n            rotate && 'fa-rotate-' + rotate,\r\n            flip && 'fa-flip-' + flip,\r\n            inverse && 'fa-inverse',\r\n        );\r\n        return <i className={cn} />\r\n    }\r\n}\r\n\r\nexport interface StackedFAProps {\r\n    className?: string;\r\n    size?: 'lg',\r\n}\r\nexport class StackedFA extends React.Component<StackedFAProps> {\r\n    render() {\r\n        let {className, size, children} = this.props;\r\n        let cn = classNames(\r\n            'fa-stack',\r\n            className,\r\n            size && 'fa-' + size);\r\n        return <span className={cn}>\r\n            {children}\r\n        </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport const Muted = (props:any) => \r\n<small className={classNames('text-muted', props.className)} style={props.style}>\r\n    {props.children}\r\n</small>;\r\n","export * from './Badge';\r\nexport * from './LMR';\r\nexport * from './FA';\r\nexport * from './IconText';\r\nexport * from './Muted';\r\n","import * as React from 'react';\r\nimport { IObservableArray, computed } from 'mobx';\r\nimport { PageItems } from 'tonva-tools';\r\nimport {List} from './index';\r\n\r\nexport abstract class ListBase {\r\n    protected list: List;\r\n    constructor(list: List) {\r\n        this.list = list;\r\n    }\r\n    get isPaged():boolean {\r\n        let items = this.list.props.items;\r\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\r\n    }\r\n    get items():any[]|IObservableArray<any> {\r\n        let items = this.list.props.items;\r\n        if (items === null) return null;\r\n        if (items === undefined) return undefined;\r\n        if (Array.isArray(items) === true)\r\n            return items as IObservableArray<any>;\r\n        else\r\n            return (items as PageItems<any>).items;\r\n    }\r\n    @computed get loading():boolean {\r\n        let items = this.list.props.items;\r\n        if (items === null) return false;\r\n        if (items === undefined) return true;\r\n        let pageItems = items as PageItems<any>;\r\n        if (pageItems.items === undefined) return false;\r\n        return pageItems.loading;\r\n    }\r\n    get selectedItems():any[] { return; }\r\n    updateProps(nextProps:any) {}\r\n    abstract render(item:any, index:number):JSX.Element;\r\n    protected renderContent(item:any, index:number) {\r\n        let {render} = this.list.props.item;\r\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n        return render(item, index);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\n\r\nexport class Clickable extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, onClick} = this.list.props.item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick(item)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport { uid } from '../uid';\r\n\r\nexport class Static extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, render} = this.list.props.item;\r\n        if (typeof item === 'string') {\r\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\r\n            return <li key={uid()} className={cn}>{item}</li>;\r\n        }\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed, IObservableArray} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport {uid} from '../uid';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SelectableItem {\r\n    selected: boolean;\r\n    item: any;\r\n    labelId: string;\r\n}\r\n\r\nexport class Selectable extends ListBase {\r\n    private _items: SelectableItem[];\r\n    private _selectedItems: any[];\r\n    private input: HTMLInputElement;\r\n    private buildItems() {\r\n        console.log('buildItems in selectable.tsx');\r\n        let {items, selectedItems, compare} = this.list.props;\r\n        let itemsArray:any[] | IObservableArray<any>;\r\n        if (items === undefined) {\r\n            return this._items = undefined;\r\n        }\r\n        if (items === null) {\r\n            return this._items = null;\r\n        }\r\n        if (Array.isArray(items) === true) {\r\n            itemsArray = items as any;\r\n        }\r\n        else {\r\n            itemsArray = (items as PageItems<any>).items;\r\n        }\r\n        //let items = this.items;\r\n        this._selectedItems = selectedItems;\r\n        if (selectedItems === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:false, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        if (compare === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:selectedItems.find(si => si === v) !== undefined, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        return this._items = itemsArray.map(v => {\r\n            return {\r\n                selected:selectedItems.find(si => compare(v, si)) !== undefined, \r\n                item:v, \r\n                labelId:uid()\r\n            };\r\n        });\r\n    }\r\n    @computed get items() {\r\n        //if (this._items === undefined) \r\n        this.buildItems();\r\n        return this._items;\r\n    }\r\n    updateProps(nextProps:any) {\r\n        if (nextProps.selectedItems === this._selectedItems) return;\r\n        this.buildItems();\r\n    }\r\n    private onSelect(item:SelectableItem, selected:boolean) {\r\n        item.selected = selected;\r\n        let anySelected = this._items.some(v => v.selected);\r\n        this.list.props.item.onSelect(item.item, selected, anySelected);\r\n    }\r\n    \r\n    get selectedItems():any[] {\r\n        return this._items.filter(v => v.selected === true).map(v => v.item);\r\n    }\r\n    /*\r\n    set selectedItems(value: any[]) {\r\n        if (value === undefined) return;\r\n        if (this._items === undefined) return;\r\n        let sLen = this._items.length;\r\n        let list = value.slice();\r\n        for (let n=0; n<sLen; n++) {\r\n            let sItem = this._items[n];\r\n            let len = list.length;\r\n            if (len === 0) break;\r\n            let item = sItem.item;\r\n            for (let i=0; i<len; i++) {\r\n                let v = list[i];\r\n                if (item === v) {\r\n                    sItem.selected = true;\r\n                    value.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    */\r\n    //w-100 mb-0 pl-3\r\n    //m-0 w-100\r\n    render(item:SelectableItem, index:number):JSX.Element {\r\n        let {className, key, render, onSelect} = this.list.props.item;\r\n        let {labelId, selected} = item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            <div className=\"d-flex align-items-center px-3\">\r\n                <input ref={input=>{\r\n                        if (!input) return;\r\n                        this.input = input; input.checked = selected;\r\n                    }}\r\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\r\n                    defaultChecked={selected}\r\n                    onChange={(e)=>{\r\n                        this.onSelect(item, e.target.checked)} \r\n                    }/>\r\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\r\n                    {this.renderContent(item.item, index)}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    }\r\n}\r\n/*\r\n<label>\r\n<label className=\"custom-control custom-checkbox\">\r\n    <input type='checkbox' className=\"custom-control-input\"\r\n        //checked={selected}\r\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\r\n    <span className=\"custom-control-indicator\" />\r\n</label>\r\n{this.renderContent(item.item, index)}\r\n</label>\r\n*/\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {PageItems} from 'tonva-tools';\r\nimport {ListBase} from './base';\r\nimport {Clickable} from './clickable';\r\nimport {Static} from './static';\r\nimport {Selectable} from './selectable';\r\nimport \"../css/va-list.css\";\r\nimport { IObservableArray } from 'mobx';\r\n\r\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\r\n\r\nexport interface ListProps {\r\n    className?: string|string[];\r\n    items: any[] | IObservableArray<any> | PageItems<any>;\r\n    item: {\r\n        className?: string|string[];\r\n        render?: (item:any, index:number) => JSX.Element;\r\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\r\n        onClick?: (item:any)=>void;\r\n        key?: (item:any)=>string;\r\n    };\r\n    compare?:(item:any, selectItem)=>boolean;\r\n    selectedItems?:any[];\r\n    header?: StaticRow;\r\n    footer?: StaticRow;\r\n    before?: StaticRow;\r\n    loading?: StaticRow;\r\n    none?: StaticRow;\r\n}\r\n\r\n@observer\r\nexport class List extends React.Component<ListProps> {\r\n    private listBase: ListBase;\r\n    constructor(props:ListProps) {\r\n        super(props);\r\n        let {item} = this.props;\r\n        let {onClick, onSelect} = item;\r\n        if (onSelect !== undefined)\r\n            this.listBase = new Selectable(this);\r\n        else if (onClick !== undefined)\r\n            this.listBase = new Clickable(this);\r\n        else\r\n            this.listBase = new Static(this);\r\n    }\r\n    _$scroll = (direct: 'top'|'bottom') => {\r\n        console.log('############### items scroll to ' + direct);\r\n    }\r\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\r\n        this.listBase.updateProps(nextProps);\r\n    }\r\n    get selectedItems():any[] {\r\n        return this.listBase.selectedItems;\r\n    }\r\n    render() {\r\n        let {className, header, footer, before, loading, none, item, selectedItems} = this.props;\r\n        if (before === undefined) before = 'before';\r\n        if (loading === undefined) loading = 'loading';\r\n        if (none === undefined) none = 'none';        \r\n        //this.listBase.selectedItems = selectedItems;\r\n        let {isPaged, items, loading:isLoading} = this.listBase;\r\n        function staticRow(row:StaticRow, type:string) {\r\n            if (!row) return;\r\n            switch (typeof row) {\r\n                default:\r\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\r\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\r\n                case 'object': return <li>{row}</li>\r\n            } \r\n        }\r\n        let content:any;\r\n        if (items === null)\r\n            content = staticRow(before, 'before');\r\n        else if (items === undefined)\r\n            content = staticRow(loading, 'loading');\r\n        else if (items.length === 0)\r\n            content = staticRow(none, 'none');\r\n        else {\r\n            content = items.map((item, index) => {\r\n                return this.listBase.render(item, index);\r\n            });\r\n        }\r\n        return <ul className={classNames('va-list', className)}>\r\n            {staticRow(header, 'header')}\r\n            {content}\r\n            {staticRow(footer, 'footer')}\r\n        </ul>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as className from 'classnames';\r\nimport {ListView} from '../listView';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\r\n\r\nexport abstract class PropRow {\r\n    setValues(values: any) {}\r\n    abstract render(key:string): any;\r\n}\r\n\r\nexport class PropBorder extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div key={'_b_' + key} className=\"\">\r\n            <div className=\"col-sm-12\">\r\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class PropGap extends PropRow {\r\n    private param: string;\r\n    constructor(param?: string) {\r\n        super();\r\n        this.param = param;\r\n    }\r\n    render(key:string): JSX.Element {\r\n        let w: string;\r\n        switch (this.param) {\r\n            default: w = 'py-2'; break;\r\n            case '=': w = 'py-1'; break;\r\n            case '-': w = 'pb-1'; break;\r\n        }\r\n        let cn = className(w);\r\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\r\n    }\r\n}\r\n\r\nconst valueAlignStart = 'justify-content-start';\r\nconst valueAlignCenter = 'justify-content-center';\r\nconst valueAlignEnd = 'justify-content-end';\r\nexport abstract class LabeledPropRow extends PropRow {\r\n    protected gridProps: PropGridProps;\r\n    protected prop: LabeledProp;\r\n    protected content: any;\r\n    //protected values: any;\r\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\r\n        super();\r\n        this.gridProps = gridProps;\r\n        this.prop = prop;\r\n        //this.values = values;\r\n    }\r\n    render(key:string):any {\r\n        let {onClick, bk} = this.prop;\r\n        let cn = className({\r\n            \"cursor-pointer\": onClick !== undefined,\r\n            \"bg-white\": bk === undefined, \r\n            \"row\": true\r\n        });\r\n        return <div key={key} className={cn} onClick={onClick}>\r\n            {this.renderLabel()}\r\n            {this.renderProp()}\r\n        </div>;\r\n    }\r\n    protected renderLabel():any {\r\n        let {label} = this.prop;\r\n        if (label === undefined) return null;\r\n        return <label className=\"col-sm-2 col-form-label\">\r\n            {label}\r\n        </label>;\r\n    }\r\n    protected renderProp():any {\r\n        let {label, full} = this.prop as any;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string;\r\n        if (full !== true)\r\n            col = label===undefined? 'col-sm-12':'col-sm-10';\r\n        else\r\n            col = 'w-100';\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n    protected renderPropBody():any {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.renderPropContent()}\r\n        </div>;\r\n    }\r\n    protected renderPropContent():any {\r\n        return this.content;\r\n    }\r\n}\r\n\r\nexport class StringPropRow extends LabeledPropRow {\r\n    protected prop: StringProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class NumberPropRow extends LabeledPropRow {\r\n    protected prop: NumberProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class ListPropRow extends LabeledPropRow {\r\n    protected prop: ListProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else {\r\n            let list = this.prop.list;\r\n            if (typeof list === 'string') this.content = values[list];\r\n            else this.content = undefined;\r\n        }\r\n    }\r\n    protected renderPropBody() {\r\n        let {list, row} = this.prop;\r\n        let items:any[] = typeof list === 'string'? this.content : list;\r\n        if (items === undefined) return <div/>;\r\n        // new row(item)\r\n        return <div className=\"w-100\">\r\n            {\r\n                items.map((item, index) => <React.Fragment key={index}>\r\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\r\n                    {React.createElement(row, item)}\r\n                </React.Fragment>)\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ComponentPropRow extends LabeledPropRow {\r\n    protected prop: ComponentProp;\r\n    protected renderPropBody() {\r\n        let {component} = this.prop;\r\n        return component;\r\n    }\r\n}\r\n\r\nexport class PropContainer extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div className=\"bg-white\">\r\n            <label className=\"col-sm-2 col-form-label\">\r\n                AAABBBCCC\r\n            </label>\r\n            <div className=\"col-sm-10\">\r\n                <div className=\"form-control-plaintext\">\r\n                    dsfasfa sdf asdf a\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import {ListViewProps} from '../listView';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {PropRow, PropBorder, PropGap, PropContainer,\r\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow} from './row';\r\n\r\nexport interface Format {\r\n\r\n}\r\n\r\nexport interface PropBase {\r\n    onClick?: ()=>void;\r\n}\r\n\r\nexport interface LabeledProp extends PropBase {\r\n    label?: string;\r\n    bk?: string;\r\n    vAlign?: 'top'|'bottom'|'center'|'stretch';\r\n}\r\n\r\nexport interface StringProp extends LabeledProp {\r\n    type: 'string';\r\n    name: string;\r\n}\r\n\r\nexport interface NumberProp extends LabeledProp {\r\n    type: 'number';\r\n    name: string;\r\n}\r\n\r\nexport interface FormatProp extends LabeledProp {\r\n    type: 'format';\r\n    format: Format;\r\n}\r\n\r\nexport interface ListProp extends LabeledProp {\r\n    type: 'list';\r\n    list: string | any[];  // string 表示名字，否则就是值\r\n    row: new (props:any) => React.Component;\r\n}\r\n\r\nexport interface ComponentProp extends LabeledProp {\r\n    type: 'component';\r\n    full?: boolean;\r\n    component: any; //JSX.Element;\r\n}\r\n\r\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\r\n\r\nexport class PropView {\r\n    private gridProps:PropGridProps\r\n    private props: Prop[];\r\n    //private values:any;\r\n    private rows: PropRow[];\r\n\r\n    constructor(gridProps:PropGridProps, props:Prop[]) {\r\n        this.gridProps = gridProps;\r\n        this.props = props;\r\n        //this.values = values;\r\n        this.buildRows();\r\n    }\r\n\r\n    private buildRows() {\r\n        this.rows = [];\r\n        let isGap:boolean = true;\r\n        for (let prop of this.props) {\r\n            if (typeof prop === 'string') {\r\n                this.rows.push(new PropGap(prop));\r\n                isGap = true;\r\n            }\r\n            else {\r\n                if (!isGap) this.rows.push(new PropBorder());\r\n                let row;\r\n                switch (prop.type) {\r\n                    default: continue;\r\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\r\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\r\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\r\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\r\n                }\r\n                this.rows.push(row);\r\n                isGap = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    setValues(values: any) {\r\n        for (let r of this.rows) r.setValues(values);\r\n    }\r\n\r\n    render() {\r\n        return this.rows.map((row, index) => row.render(String(index)));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, PropView} from './propView';\r\nimport {PropContainer, PropBorder, PropGap} from './row';\r\n\r\nexport interface PropGridProps {\r\n    className?: string;\r\n    rows: Prop[];\r\n    values: any;\r\n    alignValue?: 'left'|'center'|'right';\r\n}\r\n\r\n@observer\r\nexport class PropGrid extends React.Component<PropGridProps> {\r\n/*\r\n    private propView: PropView;\r\n    constructor(props:PropGridProps) {\r\n        super(props);\r\n    }\r\n*/\r\n/*\r\n    componentWillMount() {\r\n        this.propView = new PropView(this.props.rows);\r\n        this.propView.setValues(this.props.values);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: Readonly<PropGridProps>, nextContext: any) {\r\n        this.propView = new PropView(this.props.rows);\r\n        this.propView.setValues(nextProps.values);\r\n        this.forceUpdate();\r\n    }\r\n*/\r\n    render() {\r\n        let {className, rows, values} = this.props;\r\n        let propView = new PropView(this.props, rows);\r\n        propView.setValues(values);\r\n        let cn = classNames('container-fluid', className);\r\n        return <div className={cn}>\r\n            {propView.render()}\r\n        </div>;\r\n    }\r\n}\r\n","export * from './propView';\r\nexport * from './row';\r\nexport * from './PropGrid';\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class StringItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.newValue = evt.target.value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.newValue)}>保存</button>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">\r\n                <input type=\"text\" \r\n                    onChange={this.onChange}\r\n                    className=\"form-control\" \r\n                    defaultValue={this.value} />\r\n                {\r\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\r\n                }\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\nimport { StringItemEdit } from './stringItemEdit';\r\nimport { ImageItemEdit } from './imageItemEdit';\r\nimport { Image } from '../image';\r\n\r\nexport interface EditProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    data: any;\r\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\r\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\r\n    uiSchema?: UiSchema;\r\n    sepClassName?: string;\r\n    topBorderClassName?: string;\r\n    bottomBorderClassName?: string;\r\n    rowContainerClassName?: string;\r\n}\r\n\r\n@observer\r\nexport class Edit extends React.Component<EditProps> {\r\n    private defaultSepClassName = \"border-top edit-sep-light-gray\";\r\n    private defaultRowContainerClassName = \"d-flex px-3 py-2 cursor-pointer bg-white align-items-center\";\r\n    private topBorder:JSX.Element;\r\n    private bottomBorder:JSX.Element;\r\n    private rowContainerClassName?: string;\r\n    private sep:JSX.Element;\r\n    private uiSchema: {[name:string]: UiItem};\r\n\r\n    constructor(props: EditProps) {\r\n        super(props);\r\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema} = props;\r\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\r\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\r\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\r\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\r\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\r\n    }\r\n\r\n    render() {\r\n        let elItems:JSX.Element[] = [];\r\n        let {schema} = this.props;\r\n        let len = schema.length;\r\n\r\n        elItems.push(this.topBorder);\r\n        for (let i=0; i<len; i++) {\r\n            if (i>0) elItems.push(this.sep);\r\n            elItems.push(this.renderRow(schema[i]));\r\n        }\r\n        elItems.push(this.bottomBorder);\r\n\r\n        return <div>\r\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\r\n        </div>;\r\n    }\r\n\r\n    private renderRow(itemSchema: ItemSchema):JSX.Element {\r\n        let {name, type} = itemSchema;\r\n        let divValue:any;\r\n        let uiItem = this.uiSchema[name];\r\n        let label:string = (uiItem && uiItem.label) || name;\r\n        let value:any = this.props.data[name];\r\n        switch (type) {\r\n            default:\r\n                divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\r\n                break;\r\n            case 'image':\r\n                divValue = <Image className=\"w-4c h-4c\" src={value} />;\r\n                break;\r\n        }\r\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\r\n            <div className=\"w-6c\">{label}</div>\r\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\r\n            <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>\r\n        </div>;\r\n    }\r\n\r\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\r\n        let {onItemChanged, onItemClick} = this.props;\r\n        let changeValue:any;\r\n        if (onItemClick !== undefined) {\r\n            await onItemClick(itemSchema, uiItem, value);\r\n            return;\r\n        }\r\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\r\n        try {\r\n            changeValue = await itemEdit.start();\r\n            if (changeValue != value) {\r\n                if (onItemChanged === undefined) {\r\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\r\n                }\r\n                else {\r\n                    await onItemChanged(itemSchema, changeValue, value);\r\n                }\r\n            }\r\n            await itemEdit.end();\r\n        }\r\n        catch (err) {\r\n            console.log('no value changed');\r\n        }\r\n    }\r\n}\r\n\r\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\r\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\r\n    if (uiItem !== undefined) {\r\n        switch (uiItem.widget) {\r\n            case 'text': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    else {\r\n        switch (itemSchema.type) {\r\n            case 'string': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) return;\r\n    return new itemEdit(itemSchema, uiItem, label, value);\r\n}\r\n","export * from './edit';\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {IObservableValue, IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport '../css/va-row.css';\r\n\r\nexport interface ListItem {\r\n    key?: string|number;\r\n    date?: Date;\r\n    icon?: string | JSX.Element;\r\n    main?: string;\r\n    vice?: string;\r\n    middle?: string | JSX.Element;\r\n    midSize?: number;\r\n    right?: string | JSX.Element;\r\n    onClick?: () => void;\r\n    unread?: number|IComputedValue<number>;         // <0 表示red dot\r\n}\r\n\r\nexport interface ListRowProps extends ListItem {\r\n    //onClick: () => void;\r\n}\r\n\r\nexport interface ListRowState {\r\n    pressed: boolean;\r\n}\r\n\r\n@observer\r\nexport class ListRow extends React.Component<ListRowProps, ListRowState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pressed: false,\r\n        }\r\n    }\r\n    render() {\r\n        let {date, main, vice, middle, midSize, icon, unread, right, onClick} = this.props;\r\n        let header, isIcon:boolean, noteNum;\r\n        if (unread !== undefined) {\r\n            let uv:number;\r\n            if (typeof unread === 'number') uv = unread;\r\n            else uv = unread.get();\r\n                if (uv > 0)\r\n                noteNum = <b>{uv}</b>;\r\n            else if (uv < 0)\r\n                noteNum = <b className='dot' />;\r\n        }\r\n        switch (typeof icon) {\r\n            case 'object':\r\n                header = <header>{icon}{noteNum}</header>; \r\n                isIcon= false;\r\n                break;\r\n            case 'string': \r\n                header = <header className='icon'><img src={icon as string} />{noteNum}</header>;\r\n                isIcon= true; \r\n                break;\r\n        }\r\n        let mid;\r\n        if (middle !== undefined) {\r\n            switch (typeof middle) {\r\n                case 'string':\r\n                    mid = <div style={{flex:midSize}}>{middle}</div>;\r\n                    break;\r\n                default:\r\n                    mid = middle;\r\n                    break;\r\n            }\r\n        }\r\n        let footer;\r\n        if (right !== undefined) {\r\n            if (typeof right === 'string')\r\n                footer = <footer><small className=\"text-muted\">{right}</small></footer>;\r\n            else\r\n                footer = <footer>{right}</footer>;\r\n        }\r\n        let viceSpan;\r\n        if (vice !== undefined) viceSpan = <span>{vice}</span>;\r\n        let cn = classNames('va-row', {icon:isIcon, pressed: this.state.pressed}, {\"va-action\": onClick !== undefined});\r\n        return (\r\n        <li className={cn} onClick={onClick}>\r\n            {header}\r\n            <div>\r\n                <div>{main}</div>\r\n                {viceSpan}\r\n            </div>\r\n            {mid}\r\n            {footer}\r\n        </li>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {ListItem, ListRow} from './listRow';\r\n\r\nexport interface ListViewProps {\r\n    className?: string;\r\n    items?: any[];\r\n    renderRow?: (item:any, index:number, ex?:any) => JSX.Element;\r\n    ex?: any;\r\n    header?: string|JSX.Element;\r\n    beforeLoad?: string|JSX.Element;\r\n    none?: string|JSX.Element;\r\n    footer?: string|JSX.Element;\r\n    itemClick?: (item:any)=>void;\r\n    converter?: (item:any)=>ListItem;\r\n}\r\n\r\n@observer\r\nexport class ListView extends React.Component<ListViewProps, null> {\r\n    render() {\r\n        let {header, items, beforeLoad, none, renderRow, className, footer, itemClick, converter} = this.props;\r\n        let cn = classNames(className, 'va-list');\r\n        let content, elHeader;\r\n        if (items === undefined)\r\n            content = beforeLoad === null? null : <li className='empty'>\r\n                {beforeLoad || '...'}\r\n            </li>;\r\n        else if (items.length === 0) {\r\n            content = (\r\n            <li className='empty'>\r\n                {\r\n                    none || '[none]'\r\n                }\r\n            </li>);\r\n        }\r\n        else if (renderRow !== undefined) {\r\n            content = items.map((item, index) => renderRow(item, index, this.props.ex));\r\n        }\r\n        else {\r\n            content = items.map((item, index) => {\r\n                let onClick = item.onClick;\r\n                if (onClick === undefined && itemClick !== undefined) \r\n                    onClick = ()=>itemClick(item);\r\n                let listItem:ListItem;\r\n                if (converter !== undefined) {\r\n                    listItem = converter(item);\r\n                    if (listItem === undefined) return null;\r\n                }\r\n                else {\r\n                    listItem = {\r\n                        ...item\r\n                    }\r\n                }\r\n                if (listItem.key === undefined) listItem.key = listItem.main;\r\n                return <ListRow onClick={onClick} {...listItem} />;\r\n            });\r\n        }\r\n        if (header !== undefined) {\r\n            if (typeof header === 'string') {\r\n                elHeader = <div className='va-list-header'>{header}</div>;\r\n            }\r\n            else {\r\n                elHeader = header;\r\n            }\r\n        }\r\n\r\n        return (\r\n        <div className={cn}>\r\n            {elHeader}\r\n            <ul>\r\n                {content}\r\n            </ul>\r\n            {footer}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport { IObservableValue } from 'mobx/lib/internal';\r\n\r\nexport type TabCaption = (selected:boolean) => JSX.Element;\r\n\r\nexport interface TabProp {\r\n    name: string;\r\n    caption: TabCaption;\r\n    content: () => JSX.Element;\r\n    notify?: IObservableValue<number>;\r\n}\r\n\r\nexport interface TabsProps {\r\n    tabs: TabProp[];\r\n    size?: 'sm' | 'lg' | 'md';\r\n    tabBack?: string;\r\n    contentBack?: string;\r\n    sep?: string;\r\n    selected?: string;\r\n}\r\n\r\nclass Tab {\r\n    name: string;\r\n    @observable selected: boolean;\r\n    caption: TabCaption;\r\n    contentBuilder: ()=>JSX.Element;\r\n    notify: IObservableValue<number>;\r\n\r\n    private _content: JSX.Element;\r\n    get content(): JSX.Element {\r\n        if (this.selected !== true) return this._content;\r\n        if (this._content !== undefined) return this._content;\r\n        return this._content = this.contentBuilder();\r\n    }\r\n}\r\n\r\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \r\n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\r\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\r\n    <small>{label}</small>\r\n</div>;\r\n\r\n@observer export class Tabs extends React.Component<TabsProps> {\r\n    private size: string;\r\n    private tabBack: string;\r\n    private contentBack: string;\r\n    private sep: string;\r\n    @observable private selectedTab: Tab;\r\n    @observable private tabs: Tab[] = [];\r\n\r\n    constructor(props: TabsProps) {\r\n        super(props);\r\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\r\n        switch (size) {\r\n            default:\r\n            case 'md': this.size = '3.2rem'; break;\r\n            case 'sm': this.size = '4rem'; break;\r\n            case 'lg': this.size = '2.5rem'; break;\r\n        }\r\n        this.tabs.push(...tabs.map(v => {\r\n                let tab = new Tab();\r\n                tab.name = v.name;\r\n                tab.selected = false;\r\n                tab.caption = v.caption;\r\n                tab.contentBuilder = v.content;\r\n                tab.notify = v.notify;\r\n                return tab;\r\n            }\r\n        ));\r\n        this.tabBack = tabBack || 'bg-light';\r\n        this.contentBack = contentBack;\r\n        this.sep = sep || 'border-top border-gray';\r\n        if (selected !== undefined) {\r\n            this.selectedTab = this.tabs.find(v => v.name === selected);\r\n        }\r\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\r\n        this.selectedTab.selected = true;\r\n    }\r\n\r\n    private tabClick = (tab:Tab) => {\r\n        this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    showTab(tabName: string) {\r\n        let tab = this.tabs.find(v => v.name === tabName);\r\n        if (tab === undefined) return;\r\n        if (this.selectedTab !== undefined) this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"tab\">\r\n            <div className={this.contentBack} style={{height: 'calc(100% - ' + this.size + ')'}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let style:React.CSSProperties={\r\n                        display: v.selected===true? undefined : 'none'};\r\n                    return <div key={index} style={style}>{v.content}</div>;\r\n                })}\r\n            </div>\r\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let {selected, caption, notify} = v;\r\n                    let notifyCircle:any;\r\n                    if (notify !== undefined) {\r\n                        let num = notify.get();\r\n                        if (num !== undefined) {\r\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\r\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\r\n                        }\r\n                    }\r\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\r\n                        <div className=\"align-self-center\">\r\n                            {notifyCircle}\r\n                            {caption(selected)}\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { VPage, Page, Form, ItemSchema, UiSchema, StringSchema, UiTextItem, UiPasswordItem, ButtonSchema, Edit, ImageSchema, nav, UiImageItem } from '../ui';\r\nimport userApi from './userApi';\r\n\r\nexport class EditMeInfo extends React.Component {\r\n    private schema:ItemSchema[] = [\r\n        {name:'nick', type:'string'} as StringSchema,\r\n        {name:'icon', type:'image'} as ImageSchema\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'头像'} as UiImageItem,\r\n        }\r\n    }\r\n    @observable private data:any;\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {nick, icon} = nav.user;\r\n        this.data = {\r\n            nick: nick,\r\n            icon: icon,\r\n        }\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        await userApi.userSetProp(name, newValue);\r\n        this.data[name] = newValue;\r\n        nav.user[name] = newValue;\r\n        nav.saveLocalUser();\r\n    }\r\n\r\n    render() {\r\n        return <Page header=\"个人信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={this.data}\r\n                onItemChanged={this.onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {FetchError} from '../fetchError';\r\nimport { refetchApi } from '../net';\r\n\r\nexport interface FetchErrorProps extends FetchError {\r\n    clearError: ()=>void\r\n}\r\n\r\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\r\n    private reApi = async () => {\r\n        this.props.clearError();\r\n        const {channel, url, options, resolve, reject} = this.props;\r\n        await refetchApi(channel, url, options, resolve, reject);\r\n    }\r\n    private close = async () => {\r\n        this.props.clearError();\r\n    }\r\n    render() {\r\n        let {error, url} = this.props;\r\n            //let errMsg = fetchError.errorMsg;\r\n        let errContent;\r\n        if (typeof error === 'object') {\r\n            let err = [];\r\n            for (let i in error) {\r\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\r\n            }\r\n            errContent = <ul>{err}</ul>;\r\n        }\r\n        else {\r\n            errContent = <div>{error}</div>;\r\n        }\r\n        return <li>\r\n            <article className=\"page-container\">\r\n                <section>\r\n                    <div  className=\"va-error\">\r\n                        <div>网络出现问题</div>\r\n                        <div>点击重新访问</div>\r\n                        <div>url: {url}</div>\r\n                        {errContent}\r\n                        <div className=\"p-3\">\r\n                            <button type='button' onClick={this.reApi}>重新API</button>\r\n                            <button type='button' onClick={this.close}>关闭</button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </article>\r\n        </li>;\r\n    }\r\n}\r\n","import {User, Guest, Unit} from './user';\r\n\r\nexport interface ClearableData {\r\n    clear(): void;\r\n}\r\n\r\nexport class Data<T> implements ClearableData {\r\n    private name: string;\r\n    private value?: T;\r\n    constructor(name: string) {this.name = name; }\r\n    get(): T {\r\n        if (this.value !== undefined) return this.value;\r\n        let v = localStorage.getItem(this.name);\r\n        return this.value = v === null ? undefined : JSON.parse(v); \r\n    }\r\n    set(value: T) {\r\n        if (!value) { this.clear(); return; }\r\n        this.value = value;\r\n        localStorage.setItem(this.name, JSON.stringify(value));\r\n    }\r\n    clear() {\r\n        this.value = undefined;\r\n        localStorage.removeItem(this.name);\r\n    }\r\n}\r\n\r\nexport class LocalData {\r\n    user = new Data<User>('user');\r\n    guest = new Data<Guest>('guest');\r\n    unit = new Data<Unit>('unit');\r\n    homeTabCur = new Data<number>('homeTabCur');\r\n\r\n    logoutClear() {\r\n        [\r\n            this.user,\r\n            this.unit,\r\n            this.homeTabCur\r\n        ].map(d => d.clear());\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import {CenterApi, User, appInFrame} from 'tonva-tools';\r\nimport { string } from 'prop-types';\r\n\r\nclass MainApi extends CenterApi {\r\n    async stickies():Promise<any[]> {\r\n        return await this.get('sticky/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async ties():Promise<any[]> {\r\n        return await this.get('tie/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async apps(unit:number):Promise<any> {\r\n        return await this.get('tie/apps', {unit:unit});\r\n    }\r\n\r\n    async appApi(unit:number, app:number, apiName:string) {\r\n        return await this.get('tie/app-api', {unit:unit, app:app, apiName:apiName});\r\n    }\r\n\r\n    async userId(name:string):Promise<number> {\r\n        return await this.get('tie/user-id', {name:name});\r\n    }\r\n\r\n    async userAdminUnits():Promise<any[]> {\r\n        return await this.get('tie/user-admin-units', {});\r\n    }\r\n\r\n    async sendMessage(toUser:number, type:string, content:any) {\r\n        let {unit} = appInFrame;\r\n        let adminApp = 0;\r\n        return await this.post('tie/send-message', {\r\n            type: type, \r\n            fromUnit: unit, \r\n            fromApp: adminApp,\r\n            toUser: toUser, \r\n            content: content, \r\n        });\r\n    }\r\n\r\n    async unit(unit:number):Promise<any> {\r\n        return await this.get('unit/', {unit:unit});\r\n    }\r\n\r\n    async unitMemberCount(unit:number):Promise<number> {\r\n        return await this.get('unit/member-count', {unit:unit});\r\n    }\r\n\r\n    async unitAdmins(unit:number):Promise<any[]> {\r\n        return await this.get('unit/admins', {unit:unit});\r\n    }\r\n\r\n    async unitSetAdmin(fellow:number, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/set-admin', {fellow:fellow, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitAddAdmin(user:string, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/add-admin', {user:user, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitApps(unit:number):Promise<any[]> {\r\n        return await this.get('unit/apps', {unit:unit});\r\n    }\r\n\r\n    async unitAddApp(unit:number, app:number):Promise<number> {\r\n        let ret = await this.post('unit/add-app', {unit:unit, app:app});\r\n        return ret;\r\n    }\r\n\r\n    async unitDeleteApp(unit:number, app:number, deleted:number):Promise<void> {\r\n        await this.post('unit/delete-app', {unit:unit, app:app, deleted:deleted});\r\n    }\r\n\r\n    async unitChangeProp(unit:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-prop', {unit:unit, prop:prop, value:value});\r\n    }\r\n\r\n    async searchApp(unit:number, key:string, pageStart:any, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/search-app', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n\r\n    async unitRoles(unit:number):Promise<any[]> {\r\n        return await this.get('unit/roles', {unit:unit});\r\n    }\r\n\r\n    async unitAddRole(unit:number, name:string, discription:string):Promise<number> {\r\n        return await this.post('unit/add-role', {unit:unit, name:name, discription:discription});\r\n    }\r\n\r\n    async unitRoleChangeProp(unit:number, role:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-role-prop', {unit:unit, role:role, prop:prop, value:value});\r\n    }\r\n\r\n    async unitRoleApps(unit:number, role:number):Promise<any[]> {\r\n        return await this.get('unit/role-apps', {unit:unit, role:role});\r\n    }\r\n\r\n    async unitRoleSetApps(unit:number, role:number, apps:number[]):Promise<void> {\r\n        await this.post('unit/role-set-apps', {unit:unit, role:role, apps:apps});\r\n    }\r\n\r\n    async unitMembers(unit:number, role:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/members', {unit:unit, role:role, key, pageStart, pageSize});\r\n    }\r\n\r\n    async unitAssignMember(unit:number, member:number, assigned:string):Promise<void> {\r\n        await this.post('unit/assign-member', {unit:unit, member:member, assigned:assigned});\r\n    }\r\n\r\n    async unitMemberRoles(unit:number, member:number):Promise<any[]> {\r\n        return await this.get('unit/member-roles', {unit:unit, member:member});\r\n    }\r\n\r\n    async unitSetMemberRoles(unit:number, member:number, roles:number[]):Promise<void> {\r\n        await this.post('unit/member-set-roles', {unit:unit, member:member, roles:roles});\r\n    }\r\n\r\n    async unitUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/app-users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneAppUsers(unit:number, app:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-app-users', {unit: unit, app:app, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneUserApps(unit:number, user:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-user-apps', {unit: unit, user:user, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppEditUsers(unit:number, app:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/app-edit-users', {unit: unit, app:app, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitUserEditApps(unit:number, user:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/user-edit-apps', {unit: unit, user:user, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async bindAppUser(unit:number, app:number, user:number, bind:number):Promise<void> {\r\n        await this.post('unit/bind-app-user', {unit: unit, app:app, user:user, bind:bind});\r\n    }\r\n\r\n    async userFromKey(key:string):Promise<any> {\r\n        return await this.get('tie/user-from-key', {key:key});\r\n    }\r\n    async unitAddUser(unit:number, user:number) {\r\n        await this.post('unit/add-user', {unit:unit, user:user});\r\n    }\r\n}\r\n\r\nexport const mainApi = new MainApi('tv/', undefined);\r\n","import {CenterApi} from 'tonva-tools';\r\n\r\nclass DevApi extends CenterApi {\r\n    async uqBuilderUrl():Promise<any> {\r\n        let ret = await this.get('uq-builder-url', undefined);\r\n        return ret;\r\n    }    \r\n    async counts(unit:number):Promise<any> {\r\n        return await this.get('counts', {unit:unit});\r\n    }\r\n    async app(id:number):Promise<any> {\r\n        return await this.get('app', {id:id});\r\n    }\r\n    async uq(id:number):Promise<any> {\r\n        return await this.get('uq', {id:id});\r\n    }\r\n    async server(id:number):Promise<any> {\r\n        return await this.get('server', {id:id});\r\n    }\r\n    async uqdb(id:number):Promise<any> {\r\n        return await this.get('uqdb', {id:id});\r\n    }\r\n    async apps(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('apps', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async buses(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('buses', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async servers(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('servers', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqdbs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqdbs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async services(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('services', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async saveApp(values:any):Promise<number> {\r\n        return await this.post('app-save', values);\r\n    }\r\n    async saveUq(values:any):Promise<number> {\r\n        return await this.post('uq-save', values);\r\n    }\r\n    async saveBus(values:any):Promise<number> {\r\n        return await this.post('bus-save', values);\r\n    }\r\n    async saveServer(values:any):Promise<number> {\r\n        return await this.post('server-save', values);\r\n    }\r\n    async saveUqdb(values:any):Promise<number> {\r\n        return await this.post('uqdb-save', values);\r\n    }\r\n    async saveService(values:any):Promise<number> {\r\n        return await this.post('service-save', values);\r\n    }\r\n    async delApp(unit:number,id:number):Promise<void> {\r\n        return await this.post('app-del', {unit:unit, id:id});\r\n    }\r\n    async delUq(unit:number,id:number):Promise<void> {\r\n        return await this.post('uq-del', {unit:unit, id:id});\r\n    }\r\n    async delBus(unit:number,id:number):Promise<void> {\r\n        return await this.post('bus-del', {unit:unit, id:id});\r\n    }\r\n    async delServer(unit:number,id:number):Promise<void> {\r\n        return await this.post('server-del', {unit:unit, id:id});\r\n    }\r\n    async delUqdb(unit:number,id:number):Promise<void> {\r\n        return await this.post('uqdb-del', {unit:unit, id:id});\r\n    }\r\n    async delService(unit:number,id:number):Promise<void> {\r\n        return await this.post('service-del', {unit:unit, id:id});\r\n    }\r\n    async loadAppUqs(app:number):Promise<any[]> {\r\n        return await this.get('app-uqs', {app: app});\r\n    }\r\n    async appBindUq(unit:number,app:number,uqs:{id:number, access:string[]}[]):Promise<void> {\r\n        let uqsText:string;\r\n        if (uqs !== undefined) {\r\n            uqsText = uqs.map(v => String(v.id)+'|'+v.access.join(',')).join(';');\r\n        }\r\n        await this.post('app-bind-uq', {unit:unit, app:app, uqs:uqsText});\r\n    }\r\n    async searchUq(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uq-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async getMyUqs(unit:number):Promise<any[]> {\r\n        return await this.get('my-uqs', {unit:unit});\r\n    }\r\n    async searchApp(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('app-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchServer(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('server-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchUqdb(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uqdb-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    //async loadAppServices(unit:number, app:number):Promise<any[]> {\r\n    //    return await this.get('app-services', {unit:unit, app:app});\r\n    //}\r\n    async loadUqServices(unit:number, uq:number):Promise<any[]> {\r\n        return await this.get('uq-services', {unit:unit, uq:uq});\r\n    }\r\n    async changeServiceProp(unit:number, service:number, prop:string, value:any):Promise<number> {\r\n        return await this.post('service-change-prop', {unit:unit, service:service, prop:prop, value:value});\r\n    }\r\n    async uqGetEntities(unit:number, uq:number):Promise<any[][]> {\r\n        return await this.get('uq-get-entities', {unit:unit, uq:uq});\r\n    }\r\n}\r\n\r\nexport const devApi = new DevApi('tv/dev/', undefined);\r\n","import {observable} from 'mobx';\r\nimport {UnitAdmin} from '../model';\r\nimport {mainApi} from '../api';\r\nimport {Store} from './index';\r\n\r\nexport class Admins {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n    }\r\n\r\n    @observable cur: UnitAdmin = undefined;\r\n    @observable owners: UnitAdmin[] = undefined;\r\n    @observable admins: UnitAdmin[] = undefined;\r\n    @observable fellows: UnitAdmin[] = undefined;\r\n    \r\n    async load(): Promise<void> {\r\n        let unit = this.store.unit;\r\n        if (unit === undefined) return;\r\n        if (unit.id === undefined) return;\r\n        if (this.admins !== undefined) return;\r\n        let all = await mainApi.unitAdmins(unit.id);\r\n        let owners:UnitAdmin[] = [];\r\n        let admins:UnitAdmin[] = [];\r\n        let fellows:UnitAdmin[] = [];\r\n        all.forEach(ua => {\r\n            let {isOwner, isAdmin} = ua;\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                fellows.push(ua);\r\n            else {\r\n                if (isOwner === 1) owners.push(ua);\r\n                if (isAdmin === 1) admins.push(ua);\r\n            }\r\n        });\r\n        this.owners = owners;\r\n        this.admins = admins;\r\n        this.fellows = fellows;\r\n    }\r\n\r\n    private removeCur(arr: UnitAdmin[]) {\r\n        let index = arr.findIndex(v => v.id===this.cur.id);\r\n        if (index >=0) arr.splice(index, 1);\r\n    }\r\n\r\n    async unitSetAdmin(isOwner:number, isAdmin:number) {\r\n        let cur = this.cur;\r\n        cur.isOwner = isOwner;\r\n        cur.isAdmin = isAdmin;\r\n        let fellowId = cur.id, unitId = this.store.unit.id;\r\n        await mainApi.unitSetAdmin(fellowId, unitId, isOwner, isAdmin);\r\n        this.removeCur(this.owners);\r\n        this.removeCur(this.admins);\r\n        this.removeCur(this.fellows);\r\n        if (isOwner === 0 && isAdmin === 0)\r\n            this.fellows.unshift(cur);\r\n        else {\r\n            if (isOwner === 1) this.owners.unshift(cur);\r\n            if (isAdmin === 1) this.admins.unshift(cur);\r\n        }\r\n    }\r\n\r\n    async addNew(user:string, isOwner:number, isAdmin:number):Promise<UnitAdmin> {\r\n        let admin = await mainApi.unitAddAdmin(user, this.store.unit.id, isOwner, isAdmin);\r\n        if (admin !== undefined) {\r\n            let cur = this.cur = admin;\r\n            this.removeCur(this.owners);\r\n            this.removeCur(this.admins);\r\n            this.removeCur(this.fellows);\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                this.fellows.unshift(cur);\r\n            else {\r\n                if (isOwner === 1) this.owners.unshift(cur);\r\n                if (isAdmin === 1) this.admins.unshift(cur);\r\n            }\r\n        }\r\n        return admin;\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {devApi} from '../api';\r\nimport {DevModel, Unit} from '../model';\r\nimport {Store} from './index';\r\n\r\ninterface Counts {\r\n    uq: number;\r\n    app: number;\r\n    bus: number;\r\n    server: number;\r\n    service: number;\r\n    //uqdb: number;\r\n}\r\n\r\nexport abstract class ObjItems<T extends DevModel.ObjBase> {\r\n    protected store:Store;\r\n    protected dev:Dev;\r\n    constructor(store:Store, dev:Dev) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    @observable cur: T = undefined;\r\n\r\n    async load():Promise<void> {\r\n         let ret = await this._load();\r\n         this.items = ret;\r\n    }\r\n    protected abstract _load():Promise<T[]>;\r\n    async saveCur(item:T):Promise<boolean> {\r\n        let values:any = {};\r\n        if (this.cur !== undefined) {\r\n            _.assign(values, this.cur, item);\r\n        }\r\n        else {\r\n            _.assign(values, item);\r\n        }\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (this.cur === undefined) {\r\n            if (id === 0) return false;\r\n            values.id = id;\r\n            if (this.items !== undefined) this.items.unshift(values);\r\n            this._inc();\r\n            this.cur = observable(values);\r\n        }\r\n        else {\r\n            _.assign(this.cur, values);\r\n        }\r\n        return true;\r\n    }\r\n    async save(item:T):Promise<T> {\r\n        let values:any = {};\r\n        _.assign(values, item);\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (id === 0) return;\r\n        values.id = id;\r\n        return values;\r\n    }\r\n    protected abstract _save(item:T):Promise<number>;\r\n    async del():Promise<void> {\r\n        let c = this.cur;\r\n        if (c === undefined) return;\r\n        let id = c.id;\r\n        await this._del(c);\r\n        if (this.items === undefined) return;\r\n        let index = this.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.items.splice(index, 1);\r\n            this._dec();\r\n        }\r\n    }\r\n    protected abstract _del(item:T):Promise<void>;\r\n    protected abstract _inc();\r\n    protected abstract _dec();\r\n}\r\n\r\nclass Apps extends ObjItems<DevModel.App> {\r\n    @observable uqs: DevModel.UQ[] = undefined;\r\n    @observable searchedUqs: DevModel.UQ[] = undefined;\r\n    //@observable service: DevModel.Service = null;\r\n    protected async _load() {\r\n        return await devApi.apps(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.App):Promise<number> {\r\n        return await devApi.saveApp(item);\r\n    }\r\n    protected async _del(item:DevModel.App):Promise<void> {\r\n        await devApi.delApp(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.app++; }\r\n    protected _dec() { this.dev.counts.app--; }\r\n\r\n    public async loadCurUqs() {\r\n        let ret = await devApi.loadAppUqs(this.cur.id);\r\n        this.uqs = ret;\r\n    }\r\n    public async searchUq(key:string) {\r\n        this.searchedUqs = await devApi.searchUq(this.store.unit.id, key, 0, searchPageSize);\r\n    }\r\n    public async appBindUq(uqs:{id:number, access:string[]}[], bind:boolean) {\r\n        let allUqs:{id:number, access:string[]}[] = this.uqs.map(v => {\r\n            let {id, access} = v;\r\n            return {id: id, access: [access]};\r\n        });\r\n        for (let uq of uqs) {\r\n            let index = allUqs.findIndex(v => v.id === uq.id);\r\n            if (bind === true) {\r\n                if (index < 0) allUqs.unshift(uq);\r\n            }\r\n            else {\r\n                allUqs.splice(index, 1);\r\n            }\r\n        }\r\n        await devApi.appBindUq(this.store.unit.id, this.cur.id, allUqs);\r\n        for (let uq of uqs) {\r\n            let index = this.uqs.findIndex(a => a.id === uq.id);\r\n            if (index>=0) this.uqs.splice(index, 1);\r\n            if (bind === true) {\r\n                if (this.searchedUqs !== undefined) {\r\n                    let find = this.searchedUqs.find(a => a.id === uq.id);\r\n                    if (find !== undefined) this.uqs.unshift(find);\r\n                }\r\n            }\r\n            else {\r\n                // 已经删除，不需要处理\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Uqs extends ObjItems<DevModel.UQ> {\r\n    protected async _load() {\r\n        let ret = await devApi.uqs(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.UQ):Promise<number> {\r\n        //let {access} = item;\r\n        //if (!access) access = \"*\";\r\n        //let parts = access.split(',').map(v => v.trim()).filter(v => v!=='');\r\n        //item.access = parts.join(',');\r\n        return await devApi.saveUq(item);\r\n    }\r\n    protected async _del(item:DevModel.UQ):Promise<void> {\r\n        await devApi.delUq(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uq++; }\r\n    protected _dec() { this.dev.counts.uq--; }\r\n}\r\n\r\nclass Buses extends ObjItems<DevModel.Bus> {\r\n    protected async _load() {\r\n        let ret = await devApi.buses(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.Bus):Promise<number> {\r\n        return await devApi.saveBus(item);\r\n    }\r\n    protected async _del(item:DevModel.Bus):Promise<void> {\r\n        await devApi.delBus(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.bus++; }\r\n    protected _dec() { this.dev.counts.bus--; }\r\n}\r\n\r\nclass Servers extends ObjItems<DevModel.Server> {\r\n    protected async _load() {\r\n        return await devApi.servers(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Server):Promise<number> {\r\n        return await devApi.saveServer(item);\r\n    }\r\n    protected async _del(item:DevModel.Server):Promise<void> {\r\n        await devApi.delServer(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.server++; }\r\n    protected _dec() { this.dev.counts.server--; }\r\n}\r\n/*\r\nclass Uqdbs extends ObjItems<DevModel.Uqdb> {\r\n    protected async _load() {\r\n        return await devApi.uqdbs(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Uqdb):Promise<number> {\r\n        return await devApi.saveUqdb(item);\r\n    }\r\n    protected async _del(item:DevModel.Uqdb):Promise<void> {\r\n        await devApi.delUqdb(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uqdb++; }\r\n    protected _dec() { this.dev.counts.uqdb--; }\r\n}\r\n*/\r\nclass Services extends ObjItems<DevModel.Service> {\r\n    protected async _load() {\r\n        return await devApi.services(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Service):Promise<number> {\r\n        return await devApi.saveService(item);\r\n    }\r\n    protected async _del(item:DevModel.Service):Promise<void> {\r\n        await devApi.delService(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.service++; }\r\n    protected _dec() { this.dev.counts.service--; }\r\n    async changeProp(prop:string, value:any):Promise<number> {\r\n        let ret = await devApi.changeServiceProp(this.store.unit.id, this.cur.id, prop, value);\r\n        switch (prop) {\r\n            case 'url': this.cur.url = value; break;\r\n            case 'server': this.cur.server = value; break;\r\n            case 'db': this.cur.db = value; break;\r\n            case 'db_type': this.cur.db_type = value; break;\r\n            case 'connection': this.cur.connection = value; break;\r\n        }\r\n        return ret;\r\n    }\r\n    async loadUqServices(uq:number):Promise<void> {\r\n        let ret = await devApi.loadUqServices(this.store.unit.id, uq);\r\n        this.items = ret[0];\r\n    }\r\n}\r\n\r\nconst searchPageSize = 50;\r\ntype Search = (unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\nclass SearchItems<T extends DevModel.ObjBase> {\r\n    private store:Store;\r\n    private dev:Dev;\r\n    private search:(unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\n\r\n    constructor(store:Store, dev:Dev, search:Search) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n        this.search = search;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    allLoaded: boolean = false;\r\n    private key: string;\r\n    private pageStart = 0;\r\n\r\n    async first(key:string) {\r\n        this.key = key;\r\n        this.items = undefined;\r\n        this.allLoaded = false;\r\n        this.pageStart = 0;\r\n        await this.more();\r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        let ret = await this.search(this.store.unit.id, this.key, this.pageStart, searchPageSize);\r\n        let len = ret.length;\r\n        if (len > searchPageSize) {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len > 0) {\r\n            this.pageStart = ret[len-1].id;\r\n            if (this.items === undefined)\r\n                this.items = ret;\r\n            else\r\n                this.items.push(...ret);\r\n        }\r\n        else {\r\n            this.items = [];\r\n        }\r\n    }\r\n}\r\n\r\nexport class Dev {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n        this.apps = new Apps(store, this);\r\n        this.uqs = new Uqs(store, this);\r\n        this.buses = new Buses(store, this);\r\n        this.servers = new Servers(store, this);\r\n        //this.uqdbs = new Uqdbs(store, this);\r\n        this.services = new Services(store, this);\r\n        this.searchApp = new SearchItems<DevModel.App>(store, this, devApi.searchApp.bind(devApi));\r\n        this.searchUq = new SearchItems<DevModel.UQ>(store, this, devApi.searchUq.bind(devApi));\r\n        this.searchServer = new SearchItems<DevModel.Server>(store, this, devApi.searchServer.bind(devApi));\r\n    }\r\n\r\n    @observable counts:Counts = undefined;\r\n    apps:Apps = undefined;\r\n    uqs:Uqs = undefined;\r\n    buses:Buses = undefined;\r\n    servers:Servers = undefined;\r\n    //uqdbs:Uqdbs = undefined;\r\n    services:Services = undefined;\r\n\r\n    searchApp:SearchItems<DevModel.App> = undefined;\r\n    searchUq:SearchItems<DevModel.UQ> = undefined;\r\n    searchServer:SearchItems<DevModel.Server> = undefined;\r\n    searchUqdb:SearchItems<DevModel.Uqdb> = undefined;\r\n    \r\n    async loadCounts(): Promise<void> {\r\n        let {unit} = this.store;\r\n        this.counts = await devApi.counts(unit.id);\r\n    }\r\n}\r\n","import {CacheIds} from 'tonva-tools';\r\nimport {Id, Unit, DevModel} from '../model';\r\nimport {mainApi, devApi} from '../api';\r\n\r\nexport class CacheUnits extends CacheIds<Unit> {\r\n    protected async _loadIds(ids:number[]):Promise<Unit[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<Unit> {\r\n        return await mainApi.unit(id);\r\n    }\r\n}\r\n\r\nexport class CacheUqs extends CacheIds<DevModel.UQ> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.UQ[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.UQ> {\r\n        return await devApi.uq(id);\r\n    }\r\n}\r\n\r\nexport class CacheApps extends CacheIds<DevModel.App> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.App[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.App> {\r\n        return await devApi.app(id);\r\n    }\r\n}\r\n\r\nexport class CacheServers extends CacheIds<DevModel.Server> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.Server[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.Server> {\r\n        return await devApi.server(id);\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {appInFrame, host} from 'tonva-tools';\r\nimport {mainApi, devApi} from '../api';\r\nimport {Unit, UnitApps, App, Api, UnitAdmin, UnitApp, Role, RoleMember} from '../model';\r\nimport {Admins} from './admins';\r\nimport {Dev} from './dev';\r\nimport {CacheUnits, CacheUqs, CacheApps, CacheServers} from './cacheIds';\r\n\r\nexport class Store {\r\n    private get unitId():number {return appInFrame.unit;};\r\n    admins:Admins;\r\n    dev:Dev;\r\n    cacheUnits: CacheUnits;\r\n    cacheUqs: CacheUqs;\r\n    cacheApps: CacheApps;\r\n    cacheServers: CacheServers;\r\n    uqServer: string;\r\n\r\n    @observable unit: Unit;\r\n    @observable memberCount: number;\r\n    @observable apps: UnitApp[];\r\n    @observable role:Role;\r\n    @observable roles: Role[];\r\n    @observable roleApps: UnitApp[];\r\n    @observable roleMember: RoleMember;\r\n    @observable roleMembers: RoleMember[];\r\n    @observable memberRoles: Role[];\r\n\r\n    init() {\r\n        this.unit = undefined;\r\n        this.admins = new Admins(this);\r\n        this.dev = new Dev(this);\r\n        this.cacheUnits = new CacheUnits();\r\n        this.cacheUqs = new CacheUqs();\r\n        this.cacheApps = new CacheApps();\r\n        this.cacheServers = new CacheServers();\r\n    }\r\n\r\n    logout() {\r\n        //meInFrame.app = undefined;\r\n        appInFrame.hash = undefined;\r\n        //let unitId = process.env.REACT_APP_DEBUG_UNITID;\r\n        //if (unitId !== undefined)\r\n        //    meInFrame.unit = Number(unitId);\r\n        appInFrame.unit = undefined;\r\n        this.init();\r\n        this.memberCount = undefined;\r\n        this.apps = undefined;\r\n        this.role = undefined;\r\n        this.roles = undefined;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRole(role:Role) {\r\n        if (this.role === role) return;\r\n        this.role = role;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRoleUser(user:RoleMember) {\r\n        if (this.roleMember === user) return;\r\n        this.roleMember = user;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    async unitChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitChangeProp(this.unit.id, prop, value);\r\n        this.unit[prop] = value;\r\n    }\r\n\r\n    async loadApps(): Promise<void> {\r\n        if (this.apps !== undefined) return;\r\n        this.apps = await mainApi.unitApps(this.unitId);\r\n    }\r\n\r\n    async loadUnit(): Promise<void> {\r\n        if (this.unitId === undefined) return;\r\n        let ret = await mainApi.unit(this.unitId);\r\n        this.unit = ret;\r\n        console.log(\"loadUnit unit=%s\", ret);\r\n        this.memberCount = await mainApi.unitMemberCount(this.unitId);\r\n        let uqServer = await devApi.uqBuilderUrl();\r\n        let {url, urlDebug} = uqServer;\r\n        this.uqServer = host.getUrlOrDebug(url, urlDebug);\r\n        console.log(\"uq-build: %s\", JSON.stringify(this.uqServer));\r\n    }\r\n\r\n    async stopUnitApp(appId:number): Promise<void> {\r\n        await mainApi.unitDeleteApp(this.unit.id, appId, 1);\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 0;\r\n    }\r\n\r\n    async restoreUnitApp(appId:number): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, appId);\r\n        if (ret <= 0) return ret;\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 1;\r\n        return 1;\r\n    }\r\n\r\n    async addUnitApp(app:UnitApp): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, app.id);\r\n        if (ret <= 0) return ret;\r\n        this.apps.push(app);\r\n        return 1;\r\n    }\r\n\r\n    async loadRoles(): Promise<void> {\r\n        if (this.roles !== undefined) return;\r\n        let ret = await mainApi.unitRoles(this.unit.id);\r\n        ret.forEach(v => {\r\n            switch (v.id) {\r\n                case 1: \r\n                    v.name= '访客';\r\n                    v.discription = '可以获取开放信息';\r\n                    break;\r\n                case 2: \r\n                    v.name= '普通';\r\n                    v.discription = '能访问最基本的功能';\r\n                    break;\r\n            }\r\n        });\r\n        this.roles = ret;\r\n    }\r\n\r\n    async unitAddRole(name:string, discription:string): Promise<number> {\r\n        let id = await mainApi.unitAddRole(this.unit.id, name, discription);\r\n        if (id > 0) {\r\n            this.roles.push({\r\n                id: id,\r\n                name: name,\r\n                discription: discription,\r\n                count: undefined,\r\n            });\r\n        }\r\n        return id;\r\n    }\r\n\r\n    async roleChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitRoleChangeProp(this.unit.id, this.role.id, prop, value);\r\n        this.role[prop] = value;\r\n    }\r\n\r\n    async loadRoleApps():Promise<void> {\r\n        let ret = await mainApi.unitRoleApps(this.unit.id, this.role.id);\r\n        this.roleApps = ret.map(v => {\r\n            return this.apps.find(app=>app.id === v.id);\r\n        });\r\n    }\r\n\r\n    async setRoleApps(apps:UnitApp[]) {\r\n        await mainApi.unitRoleSetApps(this.unit.id, this.role.id, apps.map(v=>v.id));\r\n        this.roleApps = apps;\r\n    }\r\n\r\n    async loadMembers():Promise<void> {\r\n        let ret = await mainApi.unitMembers(this.unit.id, this.role === undefined? 0:this.role.id, undefined, 0, 100);\r\n        this.roleMembers = ret;\r\n    }\r\n\r\n    async unitAssignMember(assigned:string):Promise<void> {\r\n        await mainApi.unitAssignMember(this.unit.id, this.roleMember.id, assigned);\r\n        this.roleMember.assigned = assigned;\r\n    }\r\n\r\n    async loadMemberRoles():Promise<void> {\r\n        let ret = await mainApi.unitMemberRoles(this.unit.id, this.roleMember.id);\r\n        let roles:Role[] = ret.map(v => {\r\n            let rId = v.id;\r\n            let role = this.roles.find(r => r.id === rId);\r\n            return _.clone(role);\r\n        });\r\n        this.memberRoles = roles;\r\n    }\r\n\r\n    async setMemberRoles(memberRoles:Role[]) {\r\n        await mainApi.unitSetMemberRoles(this.unit.id, this.roleMember.id, memberRoles.map(v=>v.id));\r\n        this.roles.forEach(role => {\r\n            let rId = role.id;\r\n            let org = this.memberRoles.find(v => v.id === rId);\r\n            let cur = memberRoles.find(v => v.id === rId);\r\n            if (org !== undefined) {\r\n                if (cur !== undefined) return;\r\n                role.count--;\r\n                return;\r\n            }\r\n            if (cur === undefined) return;\r\n            role.count++;\r\n        });\r\n        this.memberRoles = memberRoles;\r\n    }\r\n};\r\n\r\nexport const store = new Store();\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Context, Form, Schema, UiSchema, UiTextItem} from 'tonva-tools';\r\nimport {store} from '../store';\r\n\r\n@observer\r\nexport default class NewFellowPage extends React.Component<{isOwner:boolean, isAdmin:boolean}> {\r\n    //private form: TonvaForm;\r\n    private schema: Schema = [\r\n        {name:'user', type:'string', required:true},\r\n        {name:'submit', type:'submit'}\r\n    ]\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            user: {widget:'text', maxLength: 100, placeholder: '用户名', label: '邀请成员'} as UiTextItem,\r\n            submit: {widget:'button', label: '邀请'}\r\n        }\r\n    }\r\n    /*\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '用户名',\r\n            field: {\r\n                type: 'string',\r\n                name: 'user',\r\n                required: true,\r\n                maxLength: 100,\r\n            },\r\n            face: {\r\n                type: 'string',\r\n                placeholder: '用户名',\r\n            }\r\n        },\r\n    ];\r\n    private schema:FormSchema = new FormSchema({\r\n        fields: [\r\n            {\r\n                type: 'string',\r\n                name: 'user',\r\n                placeholder: '用户名',\r\n                label: '邀请成员',\r\n                rules: ['required', 'maxlength:100']\r\n            },\r\n        ],\r\n        onSumit: this.onSendInvitation,\r\n        submitText: '邀请'\r\n    });\r\n    */\r\n    private onSendInvitation = async (name:string, context:Context): Promise<string> => {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let user = context.form.data['user'];\r\n        let ret = await store.admins.addNew(user, isOwner?1:0, isAdmin?1:0);\r\n        if (ret !== undefined) {\r\n            nav.pop();\r\n            return;\r\n        }\r\n        return user + '没有关注小号';\r\n        /*\r\n        let msg = {a: 1, b: 'ddd'};\r\n        let toName = values['user'];\r\n        let userId = await mainApi.userId(toName);\r\n        if (userId === 0) {\r\n            this.form.formView.setError('user', '\\'' + toName +  '\\' 不存在');\r\n            return;\r\n        }\r\n        await mainApi.sendMessage(userId, 'unit-follow-invite', msg);\r\n        nav.replace(<Page header='完成' back=\"close\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>邀请成员</CardTitle>\r\n                    <CardText>已发送给{toName}，请等待确认。</CardText>\r\n                    <Button color='primary' onClick={()=>nav.back()}>完成</Button>\r\n                </CardBody>\r\n            </Card>\r\n        </Page>);\r\n        */\r\n    }\r\n    render() {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let caption = isOwner? \"高管\" : \"管理员\";\r\n        return <Page header={'新增' + caption}>\r\n            <div className=\"container\">\r\n                <div className='my-4 text-info'>\r\n                    只有关注本小号的用户，才能成为{caption}\r\n                </div>\r\n                <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSendInvitation}/>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n// <ValidForm formSchema={this.schema} />\r\n//<TonvaForm ref={f=>this.form=f} formRows={this.formRows} onSubmit={this.onSendInvitation} />\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Schema, UiSchema, ItemSchema, UiCheckItem, UiButton, ButtonSchema, Form, Context, Image} from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport { UnitAdmin } from '../model/index';\r\n//import {mainApi} from '../api';\r\n//, ValidForm, FormSchema, FormFields, Field\r\n\r\n@observer\r\nexport default class EditAdmin extends React.Component {\r\n    private schema:Schema;\r\n    private uiSchema: UiSchema;\r\n\r\n    private async onSubmit(name:string, context:Context) {\r\n        let {isOwner, isAdmin} = context.form.data;\r\n        await store.admins.unitSetAdmin(isOwner, isAdmin);\r\n        nav.pop();\r\n    }\r\n    componentWillMount() {\r\n        let {unit} = store;\r\n        let {isRoot, isOwner, isAdmin} = unit;\r\n        let unitAdmin = store.admins.cur;\r\n        let owner:ItemSchema = {name: 'isOwner', type: 'boolean'};\r\n        let admin:ItemSchema = {name: 'isAdmin', type: 'boolean'};\r\n        let submit:ButtonSchema = {name: 'submit', type: 'submit'};\r\n        if (isRoot === 1) this.schema = [owner, admin, submit];\r\n        else if (isOwner === 1) this.schema = [admin, submit];\r\n\r\n        this.uiSchema = {\r\n            items: {\r\n                'isOwner': {widget: 'checkbox', label: '高管', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'isAdmin': {widget: 'checkbox', label: '管理员', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'submit': {widget: 'button', label: '提交'} as UiButton,\r\n            }\r\n        };\r\n        /*\r\n        let fields: Field[] = [];\r\n        let ownerField: Field = {\r\n            type: 'checkbox',\r\n            name: 'isOwner',\r\n            label: '高管',\r\n            defaultValue: unitAdmin.isOwner,\r\n        };\r\n        let adminField: Field = {\r\n            type: 'checkbox',\r\n            name: 'isAdmin',\r\n            label: '管理员',\r\n            defaultValue: unitAdmin.isAdmin,\r\n        };\r\n        if (isRoot === 1) {\r\n            fields.push(ownerField);\r\n            fields.push(adminField);\r\n        }\r\n        else if (isOwner === 1) {\r\n            fields.push(adminField);\r\n        }        \r\n        this.schema = new FormSchema({\r\n            fields: fields,\r\n            onSumit: this.onSubmit.bind(this),\r\n            submitText: '提交'\r\n        });\r\n        */\r\n    }\r\n    render() {\r\n        return <Page header='权限'>\r\n            <Fellow {...store.admins.cur} />\r\n            <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nconst Fellow = (props:UnitAdmin) => {\r\n    let {name, nick, icon} = props;\r\n    //<img className='w-75' src={icon || process.env.REACT_APP_DEFAULT_ICON} />\r\n    return <div className=\"container\">\r\n        <div className='row my-4'>\r\n            <div className=\"col-xs-2 d-flex justify-content-end align-items-start\">\r\n                <Image className=\"w-75\" src={icon} />\r\n            </div>\r\n            <div className=\"col-xs-auto\">\r\n                <h4 className='text-dark'>{name}</h4>\r\n                <h6><small className='text-secondary'>{nick}</small></h6>\r\n                <div className='text-info'>设置成员权限</div>\r\n            </div>\r\n        </div>\r\n        <hr className='mb-4' />\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Image} from 'tonva-tools';\r\nimport {UnitApps, UnitAdmin} from '../model';\r\nimport {store} from '../store';\r\nimport NewFellow from './NewFellow';\r\nimport EditAdmin from './EditAdmin';\r\nimport {LMR, Badge, List} from 'tonva-react-form';\r\n\r\n@observer\r\nexport default class AdministorsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.admins.load();\r\n    }\r\n\r\n    onNewFellow() {\r\n        //nav.push(<NewFellow />);\r\n    }\r\n    onItemClick(ua:UnitAdmin) {\r\n        store.admins.cur = ua;\r\n        nav.push(<EditAdmin />);\r\n    }\r\n    private row = ({icon, name, nick}:UnitAdmin) => {\r\n        let content;\r\n        if (nick === undefined) {\r\n            content = <b>{name}</b>;\r\n        }\r\n        else {\r\n            content = <><b>{nick}</b> &nbsp; <small className=\"text-muted\">{name}</small></>;\r\n        }\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={<Badge size=\"sm\"><Image className=\"w-3c h-3c\" src={icon} /></Badge>}>\r\n            <div className=\"px-3\">{content}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    private onNewOwner = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, true, false);\r\n    }\r\n\r\n    private onNewAdmin = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, false, true);\r\n    }\r\n\r\n    private newAdmin(evt: React.MouseEvent<HTMLAnchorElement>, isOwner:boolean, isAdmin:boolean) {\r\n        evt.preventDefault();\r\n        nav.push(<NewFellow isOwner={isOwner} isAdmin={isAdmin} />);\r\n    } \r\n    render() {\r\n        //let n = nav;\r\n        //let me = n.local.user.get().id;\r\n        let {unit} = store;\r\n        if (unit === undefined) return;\r\n        let {owners, admins, fellows} = store.admins;\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.onNewFellow}>新增成员</button>;\r\n\r\n        let showOwners = false, showAdmins = false;\r\n        let ownersView, adminsView, fellowsView;\r\n        if (unit.isRoot === 1) {\r\n            showOwners = true;\r\n            showAdmins = true;\r\n        }\r\n        if (unit.isOwner === 1) showAdmins = true;\r\n        if (showOwners === true) {\r\n            let header = <LMR \r\n                className=\"px-3 small\"\r\n                left=\"高管\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewOwner}>新增</a>} />;\r\n            ownersView = <List \r\n                className=\"my-4\"\r\n                header={header} items={owners}\r\n                none=\"[无]\"\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        if (showAdmins === true) {\r\n            let header = <LMR \r\n                className=\"px-3 small\"\r\n                left=\"管理员\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewAdmin}>新增</a>} />;\r\n            adminsView = <List \r\n                className='my-4' \r\n                header={header} items={admins} \r\n                none='[无]'\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        return <Page header=\"管理员\" right={right}>\r\n            {ownersView}\r\n            {adminsView}\r\n            <div className=\"card mx-1 my-4\">\r\n                <div className=\"card-title\">说明</div>\r\n                <div className=\"card-body\">\r\n                    <ul style={{paddingLeft:'1em'}}>\r\n                        <li><div className=\"card-text\">管理组包括主人、高管、管理员</div></li>\r\n                        <li><div className=\"card-text\">小号主人可以增减高管</div></li>\r\n                        <li><div className=\"card-text\">高管可以增减管理员</div></li>\r\n                        <li><div className=\"card-text\">管理员可以管理小号，程序的开发，以及用户</div></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {EasyDate} from 'tonva-react-form';\r\n\r\nexport interface IdDatesProps {\r\n    date_init: Date;\r\n    date_update: Date;\r\n}\r\n\r\nexport class IdDates extends React.Component<IdDatesProps> {\r\n    render() {\r\n        let {date_init, date_update} = this.props;\r\n        return <small className=\"text-muted\">\r\n            上次修改: <EasyDate date={date_update}/>\r\n            <i className=\"fa fa-fw\" />\r\n            创建: <EasyDate date={date_init}/>\r\n        </small>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport function span(\r\n    isLink:boolean,\r\n    className:string, \r\n    onClick:(evt:React.MouseEventHandler<HTMLElement>)=>void,\r\n    content:any): JSX.Element\r\n{\r\n    let tag:string;\r\n    let props:any;\r\n    if (isLink === true) {\r\n        tag = 'a';\r\n        props = {\r\n            className: classNames(className, 'cursor-pointer'),\r\n            onClick: onClick,\r\n            href: '#',\r\n        }\r\n    }\r\n    else {\r\n        tag = 'span';\r\n        props = {\r\n            className: className,\r\n        }\r\n    }\r\n    return React.createElement(tag, props, content);\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport {span} from './span';\r\n\r\nexport interface UnitLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UnitSpan extends React.Component<UnitLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UnitInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let content;\r\n        let {name, nick, discription} = unit;\r\n        let disc = discription && '- ' + discription;\r\n        if (nick) {\r\n            content = <>{nick} &nbsp; <small className=\"text-muted\">{name} {disc}</small></>;\r\n        }\r\n        else if (name) {\r\n            content = <>{name} &nbsp; <small className=\"text-muted\">{disc}</small></>;\r\n        }\r\n        else {\r\n            content = id;\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nexport class UnitName extends React.Component<UnitLinkProps> {\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let {name} = unit;\r\n        return <>{name}</>;\r\n    }\r\n}\r\n\r\nclass UnitInfo extends React.Component<UnitLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let unit = store.cacheUnits.get(this.props.id);\r\n        let {name, nick, icon, discription} = unit;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={discription} />},\r\n            '',\r\n        ];\r\n        return <Page header={'小号 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","export const appIcon = process.env.REACT_APP_ICON;\r\nexport const appItemIcon = process.env.REACT_APP_ITEM_ICON;\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from 'consts';\r\nimport {store} from 'store';\r\nimport {IdDates} from './idDates';\r\nimport {span} from './span';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface UqLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UqSpan extends React.Component<UqLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UqInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, className, isLink} = this.props;\r\n        let api = store.cacheUqs.get(id);\r\n        let content;\r\n        if (api === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, discription} = api;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nclass UqInfo extends React.Component<UqLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let uq = store.cacheUqs.get(this.props.id);\r\n        let {name, discription, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n        ];\r\n        return <Page header={'UQ - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface AppSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class AppSpan extends React.Component<AppSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheApps.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<AppInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let app = store.cacheApps.get(id);\r\n        let content;\r\n        if (app === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, icon, discription} = app;\r\n            let isPublic = app.public;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n\r\n@observer\r\nclass AppInfo extends React.Component<AppSpanProps> {\r\n    private rows:Prop[];\r\n    @observable private apis:ListProp = {\r\n        label: '关联API', type: 'list', list: undefined, row: AppRow\r\n    };\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    async componentDidMount() {\r\n        this.apis.list = await devApi.loadAppUqs(this.props.id);\r\n    }\r\n    render() {\r\n        let app = store.cacheApps.get(this.props.id);\r\n        let {unit, name, discription, icon, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            this.apis,\r\n        ];\r\n        return <Page header={'APP - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass AppRow extends React.Component<any> {\r\n    render() {\r\n        let {name, discription} = this.props;\r\n        let disp;\r\n        if (discription) disp = <div className=\"small text-muted\">{discription}</div>;\r\n        return <div className='form-control-plaintext'>\r\n            <div>{name}</div>\r\n            {disp}\r\n        </div>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {store} from '../store';\r\nimport {DevModel} from '../model';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface ServerSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class ServerSpan extends React.Component<ServerSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheServers.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<ServerInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let server = store.cacheServers.get(id);\r\n        let content;\r\n        if (server === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {cloud, ip, discription} = server;\r\n            if (discription !== undefined) {\r\n                content = <React.Fragment>{discription} &nbsp; <small className=\"text-muted\">{ip}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\nclass ServerInfo extends React.Component<ServerSpanProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let server = store.cacheServers.get(this.props.id);\r\n        let {discription, cloud, ip, unit, date_init, date_update} = server;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={ip} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <Page header={'服务器 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\n\r\ninterface StringValueEditProps {\r\n    title: string;\r\n    onChanged:(value:any, orgValue:any)=>Promise<string|void>;\r\n    value?: any;\r\n    buttonText?: string;\r\n    info?: string;\r\n}\r\ninterface StringValueEditState {\r\n    disabled: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport class StringValueEdit extends React.Component<StringValueEditProps, StringValueEditState> {\r\n    //private input:HTMLInputElement;\r\n    protected value: string;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: true,\r\n        };\r\n    }\r\n    /*\r\n    private ref = (input:HTMLInputElement) => {\r\n        if (!input) return;\r\n        input.value = this.props.value || '';\r\n        this.input = input;\r\n    }*/\r\n    private onChange = (evt:React.FormEvent<HTMLInputElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        });\r\n        \r\n    }\r\n    protected onSubmit = async () => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        let v = this.value; // this.input.value.trim();\r\n        let onChanged = this.props.onChanged;\r\n        if (onChanged !== undefined) {\r\n            let ret = await onChanged(v, org);\r\n            if (typeof ret === 'string') {\r\n                this.setState({error: ret});\r\n                return;\r\n            }\r\n            nav.pop();\r\n        }\r\n    }\r\n    protected renderControl() {\r\n        return <input className=\"form-control w-100\" type=\"text\"\r\n            // ref={this.ref}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onChange} />\r\n    }\r\n    render() {\r\n        let {title, onChanged, buttonText, info, value} = this.props;\r\n        let {disabled, error} = this.state;\r\n        let right = <button\r\n            className=\"btn btn-success btn-sm\"\r\n            disabled={disabled}\r\n            onClick={this.onSubmit}\r\n        >\r\n            {buttonText||'保存'}\r\n        </button>;\r\n        let errorDiv;\r\n        if (error !== undefined) errorDiv = <div className='text-danger'>{error}</div>;\r\n        return <Page header={title} right={right}>\r\n            <div className=\"my-4 mx-3\">\r\n                {this.renderControl()}\r\n                {errorDiv}\r\n                <small className=\"d-block mt-2 text-muted\">{info}</small>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class TextValueEdit extends StringValueEdit {\r\n    /*\r\n    private textArea:HTMLTextAreaElement;\r\n    private refTextArea = (textArea:HTMLTextAreaElement) => {\r\n        if (!textArea) return;\r\n        textArea.value = this.props.value || '';\r\n        this.textArea = textArea;\r\n    }\r\n    */\r\n    private onTextAreaChange = (evt:React.FormEvent<HTMLTextAreaElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        })\r\n    }\r\n    protected renderControl() {\r\n        return <textarea className=\"form-control w-100\" rows={8}\r\n            // ref={this.refTextArea}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onTextAreaChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport interface IdPickPageProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n    idFromItem: (item:any) => number;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\n\r\n@observer\r\nexport class IdPickPage extends React.Component<IdPickPageProps> {\r\n    @observable private items:any[];\r\n\r\n    async componentDidMount() {\r\n        let {candidateItems, params} = this.props;\r\n        this.items = Array.isArray(candidateItems)? \r\n            candidateItems \r\n            : await candidateItems(params, '');\r\n    }\r\n    private itemClick = (item:any):Promise<void> => {\r\n        let {resolve, idFromItem} = this.props;\r\n        resolve(idFromItem(item));\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private onSearch = async (key: string):Promise<void> => {\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.items = ret;\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid, FA} from 'tonva-react-form';\r\nimport {nav, Page, PageItems} from 'tonva-tools';\r\nimport {IdDates, UnitSpan} from '../tools';\r\nimport {UnitApp, DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport { devApi } from 'api';\r\n\r\n@observer\r\nexport class Info extends React.Component<{app:UnitApp, appActed?:(appId:number, inUnit:number)=>void}> {\r\n    @observable private uqAccesses: any[];\r\n    async componentWillMount() {\r\n        this.uqAccesses = await devApi.loadAppUqs(this.props.app.id);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:any, index:number):JSX.Element => {\r\n        let {name, owner, unit, discription} = uqAccess;\r\n        return <LMR className=\"py-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            {owner} / {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private act = async () => {\r\n        let {app, appActed} = this.props;\r\n        let {id, unit, inUnit} = app;\r\n        let newInUnit:number = 1;\r\n        if (inUnit === 0) {\r\n            let ret = await store.restoreUnitApp(id);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        else if (inUnit === 1) {\r\n            await store.stopUnitApp(id);\r\n            newInUnit = 0;\r\n        }\r\n        else {\r\n            let newApp:UnitApp = _.clone(app);\r\n            newApp.id = id;\r\n            newApp.inUnit = 1;\r\n            let ret = await store.addUnitApp(newApp);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        if (appActed !== undefined) {\r\n            appActed(id, newInUnit);\r\n        }\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, icon, inUnit, date_init, date_update} = this.props.app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let faName:string, text:string, color:string;\r\n        if (inUnit === 1) {\r\n            faName = 'ban';\r\n            text = '停用APP';\r\n            color = 'btn-danger';\r\n        }\r\n        else if (inUnit === 0) {\r\n            faName = 'refresh';\r\n            text = '恢复APP';\r\n            color = 'btn-success';\r\n        }\r\n        else {\r\n            faName = 'plus';\r\n            text = '启用APP';\r\n            color = 'btn-primary';\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '关联UQ', \r\n                component: <List className=\"w-100\" items={this.uqAccesses} item={{render: this.renderUqRow}} />\r\n            },\r\n            '',\r\n            '',\r\n            {\r\n                type: 'component', \r\n                bk: '', \r\n                component: <button className={classNames('btn', 'w-100', color)} onClick={this.act}>\r\n                    <FA name={faName} size=\"lg\" /> {text}\r\n                </button>\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IObservableArray} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page, PageItems, Image} from 'tonva-tools';\r\nimport {mainApi} from '../api';\r\nimport {store} from '../store';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\nclass PageApps extends PageItems<UnitApp> {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super();\r\n        this.unitId = unitId;\r\n    }\r\n    protected async load():Promise<UnitApp[]> {\r\n        return await mainApi.searchApp(this.unitId, this.param, this.pageStart, this.pageSize);\r\n    }\r\n    protected setPageStart(item:UnitApp) {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}\r\n\r\n@observer\r\nexport class NewApp extends React.Component {\r\n    private apps: PageApps;\r\n    constructor(props) {\r\n        super(props);\r\n        this.apps = new PageApps(store.unit.id);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.apps.first(key);\r\n    }\r\n    private appClick = (app:UnitApp) => {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} appActed={this.appActed}/>\r\n        </Page>);\r\n    }\r\n    private appActed = (appId:number, inUnit:number) => {\r\n        let apps = this.apps.items as IObservableArray<UnitApp>; //.replace .find(v => v.id === appId);\r\n        let app = apps.find(v => v.id === appId);\r\n        app.inUnit = inUnit;\r\n        apps.replace([app]);\r\n    }\r\n    private renderApp(app:UnitApp):JSX.Element {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let right;\r\n        if (inUnit === 1)\r\n            right = <small>已启用</small>;\r\n        else if (inUnit === 0)\r\n            right = <small>已停用</small>;\r\n        return <LMR className=\"px-3 py-2\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    render() {\r\n        let items = this.apps.items;\r\n        let center = <SearchBox onSearch={this.onSearch} \r\n            className=\"w-100 mx-1\" \r\n            placeholder=\"搜索App\" \r\n            maxLength={100} />;\r\n        return <Page header={center}>\r\n            <List\r\n                items={items}\r\n                item={{onClick:this.appClick, render:this.renderApp}}\r\n                before=\"搜索App名字\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, FA, SubmitResult, LMR, Badge} from 'tonva-react-form';\r\nimport {nav, Page, Image} from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport {NewApp} from './new';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\n@observer\r\nexport default class AppsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n    }\r\n    private itemRender(app:UnitApp, index:number) {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let ban;\r\n        if (inUnit === 0)\r\n            ban = <FA className=\"text-danger\" name='ban' />;\r\n        return <LMR className=\"px-3 py-1\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={ban}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private appClick(app:UnitApp) {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} />\r\n        </Page>);\r\n    }\r\n    private newItem() {\r\n        nav.push(<NewApp {...this.props} />);\r\n    }\r\n    render() {\r\n        let right = <button \r\n            className='btn btn-secondary btn-sm' \r\n            onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"启停App\" right={right}>\r\n            <List items={store.apps} item={{render: this.itemRender, onClick: this.appClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {TonvaForm, SubmitResult, FormRow} from 'tonva-react-form';\r\nimport {nav, Page, ItemSchema, StringSchema, UiSchema, Form, Context} from 'tonva-tools';\r\nimport {store} from '../store';\r\n\r\nexport class NewRole extends React.Component {\r\n    /*\r\n    private form:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n    ];*/\r\n    private schema: ItemSchema[] = [\r\n        {name: 'name', type: 'string', maxLength: 5, required: true} as StringSchema,\r\n        {name: 'discription', type: 'string', maxLength: 250},\r\n        {name: 'submit', type: 'button'},\r\n    ];\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'},\r\n            discription: {widget: 'textarea', label: '描述'},\r\n            submit: {widget:'button', label: '提交'}\r\n        }\r\n    }\r\n    private onSubmit = async (buttonName:string, context: Context):Promise<SubmitResult> => {\r\n        //let {name, discription} = values;\r\n        let {name, discription} = this.context.formData;\r\n        let id = await store.unitAddRole(name, discription);\r\n        if (id <= 0) {\r\n            this.context.setError('name', '角色名 ' + name + ' 已经存在');\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    render() {\r\n        return <Page header=\"新建角色\">\r\n            <Form className=\"m-3\" \r\n                schema={this.schema} uiSchema={this.uiSchema} \r\n                formData={{}}\r\n                onButtonClick={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n    /*\r\n    <TonvaForm className=\"m-3\" ref={tf => this.form = tf} \r\n    formRows={this.formRows} \r\n    onSubmit={this.onSubmit} />\r\n    */\r\n}\r\n","import * as React from 'react';\r\nimport {List, LMR} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\n\r\ninterface Props {\r\n    role: Role;\r\n}\r\ninterface State {\r\n    apps: UnitApp[]\r\n}\r\nexport class RoleApps extends React.Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {apps:undefined};\r\n    }\r\n    async componentDidMount() {\r\n        let ret = await mainApi.unitRoleApps(store.unit.id, this.props.role.id);\r\n        this.setState({\r\n            apps: ret,\r\n        });\r\n    }\r\n    private renderRoleApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    render() {\r\n        let {role} = this.props;\r\n        return <Page header={role.name + ' - 可用APP'}>\r\n            <List\r\n                items={this.state.apps}\r\n                item={{render: this.renderRoleApp}}\r\n                none=\"没有APP\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Media, Muted, PropGrid, Prop} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {StringValueEdit} from '../tools';\r\nimport {RoleApps} from './roleApps';\r\n\r\n@observer\r\nexport class MemberPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    async onAssigned(value:any, orgValue:any):Promise<void> {\r\n        await store.unitAssignMember(value);\r\n    }\r\n    private renderMemberRole = (role:Role) => {\r\n        let {name, discription} = role;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={name}\r\n                right={<Muted>{discription}</Muted>} />\r\n    }\r\n    private roleClick(role:Role) {\r\n        nav.push(<RoleApps role={role} />);\r\n    }\r\n    private setRole = () => {\r\n        nav.push(<SetRole />);\r\n    }\r\n    render() {\r\n        let roleUser = store.roleMember;\r\n        let {nick, name, assigned, icon} = roleUser;\r\n        let disp = <div>\r\n            <div><Muted>唯一名: </Muted> &nbsp; {name}</div>\r\n            <div><Muted>昵称: </Muted> &nbsp; {nick||<Muted>[无]</Muted>}</div>\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component',\r\n                component: <Media icon={icon||appIcon} main={roleUser.assigned||nick||name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                label: '备注名',\r\n                type: 'string',\r\n                name: 'assigned',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改备注名\"\r\n                    value={roleUser.assigned}\r\n                    onChanged={this.onAssigned} \r\n                    info=\"加一个备注，便于甄别用户\" />),\r\n            },\r\n            '',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.setRole}>修改角色</button>;\r\n        return <Page header=\"用户详情\" right={right}>\r\n            <PropGrid rows={rows} values={roleUser} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 所属角色</small></div>\r\n            <List\r\n                items={store.memberRoles} \r\n                item={{render: this.renderMemberRole, onClick: this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass SetRole extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    private renderRole(role:Role, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={role.name}\r\n                right={<small className=\"text-muted\">{role.discription}</small>} />\r\n    }\r\n    private roleSelect(role:Role, isSelected: boolean, anySelected: boolean) {\r\n    }\r\n    private async submit() {\r\n        await store.setMemberRoles(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let roles = store.roles;\r\n        let memberRoles = store.memberRoles;\r\n        return <Page header=\"修改角色\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={roles}\r\n                selectedItems={memberRoles}\r\n                compare={(role:Role, selectRole:Role)=>role.id === selectRole.id}\r\n                item={{render: this.renderRole, onSelect: this.roleSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, Badge, FA, Muted, SearchBox} from 'tonva-react-form';\r\nimport {nav, Page, Image} from 'tonva-tools';\r\nimport {Role, RoleMember} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\nimport {MemberPage} from './memberPage';\r\n\r\n@observer\r\nexport class MembersPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadMembers();\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    private onSearch() {\r\n        let role = store.role;\r\n        let roleId = role === undefined? 0:role.id;\r\n        nav.push(<MemberSearch roleId={roleId} />);\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-sm\" onClick={this.onSearch}><FA name=\"search\" /></button>;\r\n        return <Page header=\"用户\" right={right}>\r\n            <List items={store.roleMembers} item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\nconst MemberRow = (member:RoleMember) => {\r\n    let {nick, name, assigned, icon} = member;\r\n    let content;\r\n    if (assigned)\r\n        content = <><div><b>{assigned}</b> <Muted>{nick}</Muted></div><Muted>{name}</Muted></>;\r\n    else if (nick)\r\n        content = <><div><b>{nick}</b></div><Muted>{name}</Muted></>;\r\n    else\r\n        content = <div><b>{name}</b></div>;\r\n    return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n        left={<Badge size=\"sm\"><Image src={icon} /></Badge>}>\r\n        <div className=\"px-3\">{content}</div>\r\n    </LMR>;\r\n};\r\n\r\ninterface SearchProps {\r\n    roleId: number;\r\n}\r\ninterface SearchState {\r\n    members: RoleMember[];\r\n}\r\nexport class MemberSearch extends React.Component<SearchProps, SearchState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.state = {\r\n            members: null,\r\n        }\r\n    }\r\n    private async onSearch(key:string) {\r\n        let ret = await mainApi.unitMembers(store.unit.id, this.props.roleId, key, 0, 100);\r\n        this.setState({members: ret});\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            maxLength={100}\r\n            placeholder=\"搜索用户\" />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.state.members}\r\n                item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, Media, LMR, FA, PropGrid, Prop} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {StringValueEdit} from '../tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {MembersPage} from './membersPage';\r\n\r\n@observer\r\nexport class RolePage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private editRole() {\r\n        nav.push(<EditRole />);\r\n    }\r\n    private renderRoleApp = (app:UnitApp, index:number) => {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private roleAppClick = (app:UnitApp) => {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private addRoleApp() {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private members() {\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let {name, discription, count} = store.role;\r\n        let onMembersClick, membersLeft, membersRight;\r\n        if (count===undefined || count===null || count===0) {\r\n            membersLeft = <small className=\"text-muted\">无用户</small>;\r\n        }\r\n        else {\r\n            membersLeft = `共有 ${count} 用户`;\r\n            membersRight = <div><FA name=\"chevron-right\" /></div>;\r\n            onMembersClick = this.members;\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={undefined} main={name} discription={discription} />,\r\n                onClick: this.editRole,\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\" left={membersLeft} right={membersRight} />,\r\n                onClick: onMembersClick,\r\n            },\r\n            '=',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={()=>this.addRoleApp()}><FA name=\"plus\" /> APP</button>;\r\n        return <Page header=\"角色\" right={right}>\r\n            <PropGrid rows={rows} values={{}} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 可用APP列表</small></div>\r\n            <List\r\n                items={store.roleApps} \r\n                item={{render: this.renderRoleApp, onClick:this.roleAppClick}}\r\n                none={<small className=\"text-muted px-3 py-1\">没有APP, 点击右上角按钮选择APP</small>} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass EditRole extends React.Component {\r\n    async onNameChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('name', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('discription', value);\r\n    }\r\n    render() {\r\n        let role = store.role;\r\n        let {id} = role;\r\n        let isSysRole = id === 1 || id === 2;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                label: '名称', \r\n                type: 'string',\r\n                name: 'name', \r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改名称\"\r\n                    value={role.name}\r\n                    onChanged={this.onNameChanged} \r\n                    info=\"好的名字便于理解\" />)\r\n            },\r\n            {\r\n                label: '描述',\r\n                type: 'string',\r\n                name: 'discription',\r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改描述\"\r\n                    value={role.discription}\r\n                    onChanged={this.onDiscriptionChanged} \r\n                    info=\"对角色做一个说明\" />)\r\n            },\r\n        ];\r\n        return <Page header=\"修改角色信息\">\r\n            <PropGrid rows={rows} values={role} alignValue=\"right\" />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass RoleApps extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private renderApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-1 px-2 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private appSelect(app:UnitApp, isSelected: boolean, anySelected: boolean) {\r\n\r\n    }\r\n    private async submit() {\r\n        await store.setRoleApps(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let apps = store.apps;\r\n        let roleApps = store.roleApps;\r\n        return <Page header=\"选择APP\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={apps}\r\n                selectedItems={roleApps}\r\n                item={{render: this.renderApp, onSelect: this.appSelect}} />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Muted} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {NewRole} from './newRole';\r\nimport {RolePage} from './rolePage';\r\nimport {MembersPage} from './membersPage';\r\n\r\nconst midClassName = classNames('d-flex', 'h-100', 'align-items-center', 'px-5', 'small', 'text-muted');\r\n\r\n@observer\r\nexport class Members extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n    }\r\n    private renderRole = (role:Role, index:number) => {\r\n        let {name, discription, count} = role;\r\n        return <LMR\r\n            className=\"px-3 py-2\" \r\n            left={name}\r\n            right={String(count || '')}>\r\n            <div className={midClassName}>\r\n                {discription}\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private roleClick = (role:Role) => {\r\n        store.setRole(role);\r\n        nav.push(<RolePage />)\r\n    }\r\n    private newRole = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        evt.preventDefault();\r\n        nav.push(<NewRole />);\r\n    }\r\n    private allUsersClick = () => {\r\n        store.setRole(undefined);\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let right = <a className=\"small\" href='#' onClick={this.newRole}>新增</a>;\r\n        let header = <LMR className=\"px-3 small bg-light\" left=\"角色\" right={right} />;\r\n        return <Page header=\"用户角色\">\r\n            <LMR\r\n                className=\"my-3 px-3 py-2 bg-white\" \r\n                left={'用户'}\r\n                right={String(store.memberCount)}\r\n                onClick={this.allUsersClick}>\r\n                <div className={midClassName}>\r\n                    设置用户角色\r\n                </div>\r\n            </LMR>\r\n            <List\r\n                header={header}\r\n                items={store.roles}\r\n                none=\"[无]\"\r\n                item={{render:this.renderRole, onClick:this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Muted } from 'tonva-react-form';\r\nimport { left0 } from 'tonva-tools';\r\nimport { VMapMain, MapUI, Field, CMap }  from 'tonva-react-uq'; \r\n\r\nclass CMapTeamPerson extends CMap {\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        switch (keyField.name) {\r\n            default: return await super.searchOnKey(keyField, param);\r\n            case 'post': return await this.searchOnPost(param);                \r\n        }\r\n    }\r\n\r\n    private async searchOnPost(param: any):Promise<number> {\r\n        let querySelect = this.cQuerySelect('teamPosts');\r\n        let val = await querySelect.call(param);\r\n        return val['post'].id;\r\n    }\r\n}\r\n\r\nclass VMapTeamPerson extends VMapMain {\r\n}\r\n\r\nconst ui:MapUI = {\r\n    CMap: CMapTeamPerson,\r\n    keys: [\r\n        {\r\n            content: ({name, id}:any, x:any) => <><Muted>{x.team} &nbsp; </Muted> {name}</>,\r\n            none: (x:any)=>x.noStaff,\r\n        },\r\n        {\r\n            content: ({name, id}:any, x:any) => <><Muted>{x.staff} &nbsp; </Muted> {name} &nbsp; <Muted>{x.no} {left0(id, 4)}</Muted></>,\r\n            none: (x:any)=>x.noPost,\r\n        },\r\n        {\r\n            content: ({title, id}:any, x:any) => <><Muted>{x.post} &nbsp; </Muted> {title}</>,\r\n            none: undefined,\r\n        },\r\n    ]\r\n}\r\n\r\nexport default ui;\r\n","import { UqUI } from 'tonva-react-uq';\r\nimport map from './map';\r\nimport tuid from './tuid';\r\nimport query from './query';\r\nimport res from './res';\r\n\r\nconst uqUI:UqUI = {\r\n    map: map,\r\n    tuid: tuid,\r\n    query: query,\r\n    res: res,\r\n}\r\n\r\nexport default uqUI;\r\n","import teamPerson from './teamPerson';\r\n\r\nexport default {\r\n    teamPerson: teamPerson,\r\n};\r\n","import user from './user';\r\nimport organization from './organization';\r\n\r\nexport default {\r\n    user: user,\r\n    organization: organization,\r\n};\r\n","import * as React from 'react';\r\nimport { TuidUI, CTuidSelect, CQuery, QueryPageItems } from \"tonva-react-uq\";\r\nimport { PageItems } from \"tonva-tools\";\r\n\r\nclass CUserSelect extends CTuidSelect {\r\n    protected buildPageItems():PageItems<any> {\r\n        let query:CQuery = this.cUq.cFromName('query', 'SearchUser') as CQuery;\r\n        return new QueryPageItems(query.entity);\r\n    }\r\n    idFromItem(item:any) {return item.id;}\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first({key: key});\r\n    }\r\n}\r\n\r\nconst ui:TuidUI = {\r\n    CTuidSelect: CUserSelect,\r\n    content: (item:any) => {return <>{item.name}</>},\r\n}\r\n\r\nexport default ui;\r\n","import * as React from 'react';\r\nimport { TuidUI } from \"tonva-react-uq\";\r\n\r\nconst ui:TuidUI = {\r\n    divs: {\r\n        post: {\r\n            content: (item:any) => {\r\n                let {title} = item;\r\n                return <>{title}</>;\r\n            },\r\n            rowContent: (item:any) => {\r\n                let {title} = item;\r\n                return <>{title}</>;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ui;\r\n","import teamPosts from './teamPosts';\r\n\r\nexport default {\r\n    teamPosts: teamPosts,\r\n};\r\n","import * as React from 'react';\r\nimport { QueryUI } from \"tonva-react-uq\";\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ui:QueryUI = {\r\n    row: observer((item:any) => {\r\n        let {post} = item;\r\n        return <div className=\"px-3 py-2\">{post.content()}</div>;\r\n    }),\r\n};\r\n\r\nexport default ui;\r\n","import CN from './zh/CN';\r\n\r\nconst res = {\r\n    zh: {\r\n        CN: CN\r\n    }\r\n};\r\n\r\nexport default res;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport default {\r\n    x: {\r\n        no: '编号',\r\n        team: '部门',\r\n        staff: '员工',\r\n        noStaff: '无员工',\r\n        post: '职位',\r\n        noPost: '无职位',\r\n        a: 'aaa',\r\n        b: {\r\n            s: 'sss',\r\n            d: ()=><span className=\"text-success\">ddd</span>,\r\n        },\r\n        c: ()=><span className=\"text-danger\">ccc</span>,\r\n    },\r\n    uq: '$UNITX',\r\n    tuid: '基础档案',\r\n    map: '对照表',\r\n    sheet: '单据',\r\n    pending: '待处理',\r\n    book: '帐',\r\n    action: '操作',\r\n    tuidNullCaption: '选择',\r\n    submit: '提交',\r\n    arrNew: '新增',\r\n    arrEdit: '保存',\r\n    entity: {\r\n        message: {\r\n            label: '消息-message',\r\n            arrNew: '新增消息',\r\n            arrEdit: '保存消息',\r\n            fields: {\r\n                fromUser: '发送人',\r\n                fromUnit: '发送部门',\r\n                type: '类型',\r\n                date: '日期',\r\n                subject: '主题',\r\n                discription: '描述',\r\n                content: '内容'\r\n            },\r\n        },\r\n        getMessage: {\r\n            label: '获取Message',\r\n            submit: '获取消息',\r\n            fields: {\r\n                msg: '消息'\r\n            }\r\n        },\r\n        newMessage: {\r\n            label: '新建消息',\r\n            fields: {\r\n                type: '类型',\r\n                subject: '主题',\r\n            },\r\n            arrs: {\r\n                to: {\r\n                    label: '发送',\r\n                    newSubmit: '新增to',\r\n                    editSumbit: '保存to',\r\n                },\r\n                cc: {\r\n                    label: '抄送',\r\n                    newSubmit: '新增cc',\r\n                    editSumbit: '保存cc',\r\n                }\r\n            }\r\n        },\r\n        sectionTeam: {\r\n            label: '大部-团队对照表',\r\n        },\r\n        teamPerson: {\r\n            label: '员工-岗位对照表',\r\n            fields: {\r\n            },\r\n            confirmDelete: _.template('真的要删除${label}吗'),\r\n        },\r\n        teamOrganization: {\r\n            label: '团队-机构对照表',\r\n        },\r\n        teamPosts: {\r\n            label: '团队-岗位对照表',\r\n        },\r\n        person: {\r\n            label: '员工',\r\n            fields: {\r\n                name: '姓名',\r\n                nick: '别名',\r\n                given: '名字',\r\n                sur: '姓',\r\n                gender: '性别',\r\n                user: '用户',\r\n            }\r\n        },\r\n        organization: {\r\n            label: '机构',\r\n            arrs: {\r\n                post: {\r\n                    label: '岗位',\r\n                }\r\n            }\r\n        },\r\n        user: {\r\n            label: '用户'\r\n        },\r\n        team: {\r\n            label: '团队',\r\n        },\r\n        section: {\r\n            label: '大部',\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { IObservableValue, observable } from 'mobx';\r\nimport { Page, VPage } from 'tonva-tools';\r\nimport { Muted, LMR, FA, List } from 'tonva-react-form';\r\nimport { COpBinding } from './cOpBinding';\r\nimport { StateTo, Sheet, Organization, Post, Team, Section, To, Entity } from './model';\r\n\r\ninterface SelectablePost {\r\n    post: Post;\r\n    selected: IObservableValue<boolean>;\r\n    teams?: SelectableTeam[];\r\n}\r\n\r\ninterface SelectableTeam {\r\n    team: Team;\r\n    selected: IObservableValue<boolean>;\r\n    sections?: SelectableSection[];\r\n}\r\n\r\ninterface SelectableSection {\r\n    section: Section;\r\n    selected: IObservableValue<boolean>;\r\n}\r\n\r\nexport class VOpBinding extends VPage<COpBinding> {\r\n    private sheet: Sheet;\r\n    private states: StateTo[];\r\n    private selectablePosts:SelectablePost[];\r\n    private sheetOpsChanged:boolean = false;\r\n\r\n    private stateClick(state:StateTo) {\r\n        let {organizations, teams, sections, posts} = this.controller;\r\n        let postTos:{[post:number]:To[]} = {};\r\n        let {tos} = state;\r\n        if (tos !== undefined) {\r\n            for (let to of tos) {\r\n                let {post} = to;\r\n                let pid = post.id;\r\n                let pto = postTos[pid];\r\n                if (pto === undefined) postTos[pid] = pto = [];\r\n                pto.push(to);\r\n            }\r\n        }\r\n        this.selectablePosts = posts.map(v => this.buildSelectablePost(v, postTos));\r\n        /*\r\n            return {\r\n                post: v,\r\n                selected: observable.box(false),\r\n                teams: [],\r\n            }\r\n        });*/\r\n        this.sheetOpsChanged = false;\r\n        this.openPage(this.stateView, state);\r\n        this.regConfirmClose(async ():Promise<boolean> => {\r\n            if (this.sheetOpsChanged === false) return true;\r\n            return confirm('未保存\\n真的不保存吗？');\r\n        });\r\n    }\r\n\r\n    private buildSelectablePost(post:Post, postTos:{[post:number]:To[]}):SelectablePost {\r\n        let pto = postTos[post.id];\r\n        let selected:boolean;\r\n        let teams:SelectableTeam[];\r\n        if (pto === undefined) {\r\n            selected = false;\r\n            teams = [];\r\n        }\r\n        else {\r\n            selected = true;\r\n            teams = this.buildSelectableTeams(post, pto);\r\n        }\r\n        let ret = {\r\n            post: post,\r\n            selected: observable.box(selected),\r\n            teams: teams,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildSelectableTeams(post:Post, tos: To[]):SelectableTeam[] {\r\n        let teamTos:{[team:number]:To[]} = {};\r\n        let hasAllTeams = false;\r\n        for (let to of tos) {\r\n            let {team} = to;\r\n            let teamId;\r\n            if (team === undefined) {\r\n                teamId = 0;\r\n                hasAllTeams = true;\r\n            }\r\n            else {\r\n                teamId = team.id;\r\n            }\r\n            let tto = teamTos[teamId];\r\n            if (tto === undefined) teamTos[teamId] = tto = [];\r\n            tto.push(to);\r\n        }\r\n        let sections:Section[] = [];\r\n        let {organization} = post;\r\n        if (organization !== undefined && organization.teams !== undefined) {\r\n            for (let team of post.organization.teams) {\r\n                if (team.sections !== undefined) sections.push(...team.sections);\r\n            }\r\n        }\r\n        let teams:SelectableTeam[] = [];\r\n        let teamTo0 = teamTos[0];\r\n        let teamTo0Sections = this.buildSelectableSections(sections, teamTo0);\r\n        teams.push({\r\n            team: {\r\n                id: 0,\r\n                name: '* 所有部门',\r\n                no: undefined,\r\n                sections: sections,\r\n                organizations: undefined,\r\n            }, \r\n            selected: observable.box(teamTo0!==undefined), \r\n            sections: teamTo0Sections,\r\n        });\r\n        if (organization !== undefined && organization.teams !== undefined) {\r\n            post.organization.teams.forEach(v => {\r\n                let teamTo = teamTos[v.id];\r\n                teams.push({\r\n                    team: v,\r\n                    selected: observable.box(teamTo!==undefined),\r\n                    sections: this.buildSelectableSections(sections, teamTo),\r\n                });\r\n            });\r\n        }\r\n        if (hasAllTeams === true && tos.length === 1) {\r\n            let selectableTeam0 = teams[0];\r\n            let hasSection = false;\r\n            for (let selectableSection of selectableTeam0.sections) {\r\n                if (selectableSection.selected.get() === true) {\r\n                    hasSection = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (hasSection === false) {\r\n                selectableTeam0.selected.set(false);\r\n                selectableTeam0.sections = [];\r\n            }\r\n        }\r\n        return teams;\r\n    }\r\n\r\n    private buildSelectableSections(sections:Section[], tos: To[]):SelectableSection[] {\r\n        let selectableSections:SelectableSection[] = [];\r\n        for (let section of sections) {\r\n            selectableSections.push({\r\n                section: section,\r\n                selected: observable.box(tos && tos.find(v => v.section && section.id === v.section.id) !== undefined),\r\n            });\r\n        }\r\n        return selectableSections;\r\n    }\r\n\r\n    private renderState(stateTo:StateTo) {\r\n        let {name, caption, tos, tosText, configable} = stateTo;\r\n        let content;\r\n        if (configable === true) {\r\n            let right = <FA className=\"text-muted align-self-center\" name=\"chevron-right\" />;\r\n            let onClick = () => this.stateClick(stateTo);\r\n            let tosView = <this.stateTosView tosText={tosText} />;\r\n            content = <>\r\n                <LMR className=\"bg-white py-1 px-2 cursor-pointer\" right={right} onClick={onClick}>\r\n                    {caption}\r\n                </LMR>\r\n                {tosView}\r\n            </>\r\n        }\r\n        else {\r\n            content = <div className=\"bg-white py-1 px-2\">\r\n                {caption}\r\n            </div>;\r\n        }\r\n        return <div key={name} className=\"border border-light rounded mx-1 my-3\">\r\n            {content}\r\n        </div>\r\n    }\r\n\r\n    private stateTosView = observer(({tosText}:{tosText: IObservableValue<string[]>}) => {\r\n        let tos = tosText.get();\r\n        return <div className=\"bg-light py-1 px-2\">{\r\n            tos === undefined || tos.length === 0? <Muted>[无岗位]</Muted> :\r\n            tos.map((v,index) => {\r\n                return <span\r\n                    key={v}\r\n                    className=\"d-inline-block border bg-white rounded mr-2 my-1 py-1 px-2\">\r\n                    {v}\r\n                </span>\r\n            })\r\n        }\r\n        </div>\r\n    });\r\n\r\n    private tosTexts(tos: To[]):string[] {\r\n        return tos && tos.map((v,index) => {\r\n            let {post, team, section} = v;\r\n            let content:string = post.title;\r\n            if (team !== undefined && team.id > 0) content += ' @ ' + team.name;\r\n            if (section !== undefined) {\r\n                if (team === undefined || team.id === 0) content += ' @ * ';\r\n                content += ' / ' + section.name;\r\n            }\r\n            return content;\r\n        });\r\n    }\r\n\r\n    async open({entity, opTos}:{entity:Entity, opTos:{[op:string]:To[]}}) {\r\n        this.sheet = entity;\r\n        let {name, states} = entity;\r\n        if (states === undefined) {\r\n            let tos = opTos['$'];\r\n            this.states = [{\r\n                name: '$',\r\n                caption: '允许岗位',\r\n                configable: true,\r\n                tos: tos,\r\n                tosText: observable.box<string[]>(this.tosTexts(tos)),\r\n            }];\r\n            this.openPageElement(<Page header={name + ' - 岗位'}>\r\n                {this.states.map(v => this.renderState(v))}\r\n            </Page>);\r\n            return;\r\n        }\r\n\r\n        this.states = states.map(v => {\r\n            let prefix = v.substr(0, 1);\r\n            let caption: string | JSX.Element;\r\n            let configable: boolean;\r\n            let tos;\r\n            switch (prefix) {\r\n                case '<': caption = <>{v.substr(1)} &nbsp; <Muted>回复</Muted></>; configable = false; break;\r\n                case '#': caption = <>{v.substr(1)} &nbsp; <Muted>返初</Muted></>; configable = false; break;\r\n                case '$': \r\n                    caption = '[新开单]'; \r\n                    configable = true; \r\n                    tos = opTos[v];\r\n                    break;\r\n                default:\r\n                    caption = v;\r\n                    configable = true; \r\n                    tos = opTos[v];\r\n                    break;\r\n            }\r\n            return {\r\n                name: v,\r\n                caption: caption,\r\n                configable: configable,\r\n                tos: tos,\r\n                tosText: observable.box<string[]>(this.tosTexts(tos)),\r\n            };\r\n        });\r\n        this.openPageElement(<Page header={'单据状态对应岗位 - ' + name} >\r\n            {this.states.map(v => this.renderState(v))}\r\n        </Page>);\r\n    }\r\n\r\n    private async saveOps(stateTo: StateTo) {\r\n        let stateToName = stateTo.name;\r\n        let tos:To[] = [];\r\n        let toArr:{post:number, team:number, section:number}[] = [];\r\n        for (let sp of this.selectablePosts) {\r\n            if (sp.selected.get() === false) continue;\r\n            let postId = sp.post.id;\r\n            let teamCount = 0;\r\n            for (let st of sp.teams) {\r\n                if (st.selected.get() === false) continue;\r\n                let teamId = st.team.id;\r\n                ++teamCount;\r\n                let sectionCount = 0;\r\n                for (let ss of st.sections) {\r\n                    if (ss.selected.get() === false) continue;\r\n                    let sectionId = ss.section.id;\r\n                    ++sectionCount;\r\n                    toArr.push({\r\n                        post: postId,\r\n                        team: teamId,\r\n                        section: sectionId,\r\n                    });\r\n                    tos.push({\r\n                        post: sp.post,\r\n                        team: st.team,\r\n                        section: ss.section,\r\n                    });\r\n                }\r\n                if (sectionCount === 0) {\r\n                    toArr.push({\r\n                        post: postId,\r\n                        team: teamId,\r\n                        section: 0,\r\n                    });\r\n                    tos.push({\r\n                        post: sp.post,\r\n                        team: st.team,\r\n                        section: undefined,\r\n                    });\r\n                }\r\n            }\r\n            if (teamCount === 0) {\r\n                toArr.push({\r\n                    post: postId,\r\n                    team: 0,\r\n                    section: 0,\r\n                });\r\n                tos.push({\r\n                    post: sp.post,\r\n                    team: undefined,\r\n                    section: undefined,\r\n                });\r\n            }\r\n        }\r\n        await this.controller.saveSheetStatePosts(this.sheet, stateToName, toArr);\r\n        let state = this.states.find(v => v.name === stateToName);\r\n        state.tos = tos;\r\n        let tosTexts = this.tosTexts(tos);\r\n        state.tosText.set(tosTexts);\r\n        this.closePage();\r\n    }\r\n\r\n    private organizationRow = (item: Organization, index:number) => {\r\n        let {id, name} = item;\r\n        return <div>id:{id} name:{name}</div>;\r\n    }\r\n    private teamRow = (item: SelectableTeam, index:number) => {\r\n        return <this.observableTeamRow {...item} />;\r\n    }\r\n    private sectionRow = (item: SelectableSection, index:number) => {\r\n        return <this.observableSectionRow {...item} />;\r\n    }\r\n    private postRow = (item:SelectablePost, index:number) => {\r\n        return <this.observablePostRow {...item} />;\r\n    };\r\n    private stateView: React.SFC<StateTo> = (state:StateTo) => {\r\n        let {caption} = state;\r\n        /*\r\n        switch (state.name) {\r\n            case '-':  stateCaption = '允许岗位'; break;\r\n            case '$':  stateCaption = '[新开单]'; break;\r\n            default: stateCaption = state.name; break;\r\n        }\r\n        */\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={async ()=>await this.saveOps(state)}>保存</button>\r\n        return <Page header={`${this.sheet.name} - ${caption}`}\r\n            back=\"close\"\r\n            right={right}>\r\n            <div className=\"mx-3 my-2\">\r\n                <Muted>设置单据状态跟岗位的对应关系</Muted>\r\n            </div>\r\n            <List className=\"my-2\" \r\n                items={this.selectablePosts} \r\n                item={{render: this.postRow}} />\r\n        </Page>\r\n    }\r\n    /*\r\n    <List className=\"my-2\" header=\"Organization\" items={organizations} item={{render: this.organizationRow}} />\r\n    <List className=\"my-2\" header=\"Team\" items={teams} item={{render: this.teamRow}} />\r\n    <List className=\"my-2\" header=\"Section\" items={sections} item={{render: this.sectionRow}} />\r\n    */\r\n\r\n    private onPostSelectChanged(item:SelectablePost, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {post, selected} = item;\r\n        if (checked === true) {\r\n            let sections:Section[] = [];\r\n            let {organization} = post;\r\n            if (organization !== undefined && organization.teams !== undefined) {\r\n                for (let team of post.organization.teams) {\r\n                    if (team.sections !== undefined) sections.push(...team.sections);\r\n                }\r\n            }\r\n            item.teams.push({\r\n                team: {\r\n                    id: 0,\r\n                    name: '* 所有部门',\r\n                    no: undefined,\r\n                    sections: sections,\r\n                    organizations: undefined,\r\n                }, \r\n                selected: observable.box(false), \r\n                sections:[]\r\n            });\r\n            if (organization !== undefined && organization.teams !== undefined) {\r\n                post.organization.teams.forEach(v => {\r\n                    item.teams.push({\r\n                        team: v,\r\n                        selected: observable.box(false),\r\n                        sections: []\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            item.teams.splice(0);\r\n        }\r\n        selected.set(checked);\r\n    }\r\n\r\n    private onTeamSelectChanged(item:SelectableTeam, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {team, selected} = item;\r\n        if (checked === true) {\r\n            //item.sections.push({section: undefined, selected: observable.box(false)});\r\n            team.sections.forEach(v => {\r\n                item.sections.push({\r\n                    section: v,\r\n                    selected: observable.box(false)\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            item.sections.splice(0);\r\n        }\r\n        selected.set(checked);\r\n    }\r\n\r\n    private onSectionSelectChanged(item:SelectableSection, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {section, selected} = item;\r\n        selected.set(checked);\r\n    }\r\n\r\n    private observablePostRow = observer((item:SelectablePost) => {\r\n        let {post, selected, teams} = item;\r\n        let {title} = post;\r\n        let teamsList;\r\n        let defaultSelected = selected.get();\r\n        if (defaultSelected === true) {\r\n            teamsList = <List className=\"ml-4 va-list-top-border\" items={teams} item={{render:this.teamRow}} />\r\n        }\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onPostSelectChanged(item, evt.target.checked)} />\r\n                <Muted>岗位</Muted> &nbsp; {title}\r\n            </label>\r\n            {teamsList}\r\n        </div>;\r\n    });\r\n\r\n    private observableTeamRow = observer((item:SelectableTeam) => {\r\n        let {team, selected, sections} = item;\r\n        let {name} = team;\r\n        let teamsList;\r\n        let defaultSelected = selected.get();\r\n        if (defaultSelected === true && sections.length > 0) {\r\n            teamsList = <List className=\"ml-4 va-list-top-border\" items={sections} item={{render:this.sectionRow}} />\r\n        }\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onTeamSelectChanged(item, evt.target.checked)} />\r\n                <Muted>部门</Muted> &nbsp; {name}\r\n            </label>\r\n            {teamsList}\r\n        </div>;\r\n    });\r\n\r\n    private observableSectionRow = observer((item:SelectableSection) => {\r\n        let {section, selected} = item;\r\n        let {name} = section;\r\n        let defaultSelected = selected.get();\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onSectionSelectChanged(item, evt.target.checked)} />\r\n                <Muted>大部</Muted> &nbsp; {name}\r\n            </label>\r\n        </div>;\r\n    });\r\n}\r\n ","import * as React from 'react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { COpBinding } from \"./cOpBinding\";\r\nimport { Entity, EntityBlock, Uq } from './model';\r\nimport { entityIcons, CAction, CQuery } from 'tonva-react-uq';\r\nimport { List, Muted, LMR, FA } from 'tonva-react-form';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\ninterface Checked {\r\n    def: boolean;\r\n    checked: boolean;\r\n}\r\n\r\nexport class VAllPosts extends VPage<COpBinding> {\r\n    private uq: Uq;\r\n    private blocks:EntityBlock[];\r\n    private checked:{[entity:string]:Checked} = {};\r\n\r\n    @observable private isChanged:boolean = false;\r\n    async open(uq: Uq) {\r\n        this.uq = uq;\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = this.uq;\r\n        this.blocks = [\r\n            {items: tuids, type: 'tuid'},\r\n            {items: sheets, type: 'sheet'},\r\n            {items: actions, type: 'action'},\r\n            {items: maps, type: 'map'},\r\n            {items: books, type: 'book'},\r\n            {items: queries, type: 'query'},\r\n            {items: histories, type: 'history'},\r\n            {items: pendings, type: 'pending'},\r\n        ];\r\n        let getEntityOpForAll = this.controller.cUq.cFromName('query', 'getEntityOpForAll') as CQuery;\r\n        let entityOpForAllResult = await getEntityOpForAll.entity.query({uq: this.uq.id});\r\n        let entityOpForAll:{[entity:string]:boolean} = {};\r\n        for (let eaa of entityOpForAllResult.ret) {\r\n            entityOpForAll[eaa.entity] = true;\r\n        }\r\n        for (let b of this.blocks) {\r\n            let {items} = b;\r\n            if (items === undefined) continue;\r\n            for (let item of items) {\r\n                let {name} = item;\r\n                let checked = (entityOpForAll[name] === true);\r\n                this.checked[name] = {\r\n                    def: checked,\r\n                    checked: checked,\r\n                };\r\n            }\r\n        }\r\n        this.openPage(this.pageRender);\r\n        this.regConfirmClose(async ():Promise<boolean> => {\r\n            if (this.isChanged === false) return true;\r\n            return confirm('未保存\\n真的不保存吗？');\r\n        });\r\n    }\r\n\r\n    private onCheckChanged = (entity:Entity, checked: boolean) => {\r\n        this.checked[entity.name].checked = checked;\r\n        let isChanged:boolean = false;\r\n        for (let i in this.checked) {\r\n            let {def, checked} = this.checked[i];\r\n            if (def !== checked) {\r\n                isChanged = true;\r\n                break;\r\n            }\r\n        }\r\n        this.isChanged = isChanged;\r\n    }\r\n\r\n    private saveChange = async () => {\r\n        let entities:{entity:string}[] = [];\r\n        for (let i in this.checked) {\r\n            if (this.checked[i].checked !== true) continue;\r\n            entities.push({entity: i});\r\n        }\r\n        let saveEntityOpForAll = this.controller.cUq.cFromName('action', 'saveEntityOpForAll') as CAction;\r\n        let ret = await saveEntityOpForAll.entity.submit({\r\n            uq: this.uq.id,\r\n            entities: entities,\r\n        });\r\n        this.ceasePage();\r\n        this.openPageElement(<Page header=\"所有岗位可操作\" back=\"close\">\r\n            <div className=\"p-3\">\r\n                <FA name=\"check-circle\" className=\"text-success\" /> &nbsp;\r\n                已保存\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    private entityRender(entity:Entity, icon:any) {\r\n        let {name} = entity;\r\n        let right = <input className=\"mr-3 align-middle\"\r\n            type=\"checkbox\" \r\n            defaultChecked={this.checked[name].def}\r\n            onChange={(evt)=>this.onCheckChanged(entity, evt.target.checked)}/>\r\n\r\n        return <LMR className=\"px-3 py-2 align-items-center\"\r\n            right={right}>\r\n            {icon} &nbsp; {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private pageRender = observer(() => {\r\n        /*\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = this.uq;\r\n        let blocks:EntityBlock[] = [\r\n            {items: tuids, type: 'tuid'},\r\n            {items: sheets, type: 'sheet'},\r\n            {items: actions, type: 'action'},\r\n            {items: maps, type: 'map'},\r\n            {items: books, type: 'book'},\r\n            {items: queries, type: 'query'},\r\n            {items: histories, type: 'history'},\r\n            {items: pendings, type: 'pending'},\r\n        ];*/\r\n        let buttonSave = this.isChanged===true? <button className=\"btn btn-sm btn-success\" onClick={this.saveChange}>保存</button> : null;\r\n        return <Page header={'所有岗位可操作'} right={buttonSave}>\r\n            <div className=\"text-muted p-3 small\">\r\n                <div style={{lineHeight:'1.8', fontWeight:'bold'}}>说明</div>\r\n                <ol className=\"pl-3\" style={{listStyleType: '1', lineHeight: '1.8'}}>\r\n                    <li >\r\n                        有些操作，默认允许所有用户可操作，可以在这里设置。\r\n                    </li>\r\n                    <li>\r\n                        比如，用户下订单。任何客户，登录进系统，都可以下单。\r\n                    </li>\r\n                    <li>\r\n                        如果每个用户都需要设置，用户会丢失，管理人员会繁琐。\r\n                    </li>\r\n                </ol>\r\n            </div>\r\n            {this.blocks.map(block => {\r\n                let {items, type} = block;\r\n                let icon = entityIcons[type];\r\n                return items && items.length>0 &&\r\n                    <List key={type}\r\n                        className=\"mt-3\"\r\n                        header={<Muted className=\"px-3 pt-1 bg-light w-100\">{this.res[type]||type}</Muted>} \r\n                        items={items} \r\n                        item={{\r\n                            render:(item:any, index:number)=>this.entityRender(item, icon), \r\n                            onClick: undefined\r\n                        }} />;\r\n            })}\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from \"tonva-tools\";\r\nimport { COpBinding } from \"./cOpBinding\";\r\nimport { Uq } from './model';\r\nimport { List, FA, SearchBox } from 'tonva-react-form';\r\nimport { observable } from 'mobx';\r\nimport { CMap, CQuery, QueryPageItems, Query, Tuid, CTuid } from 'tonva-react-uq';\r\n\r\nexport class PageUsers extends QueryPageItems {\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n\r\nexport class VFullFunction extends VPage<COpBinding> {\r\n    private uq: Uq;\r\n    @observable private users: any[] = [];\r\n    private entityOpUserFully:CMap;\r\n    private pageUsers: PageUsers;\r\n    private tuidUser: CTuid<Tuid>;\r\n    async open(uq: Uq) {\r\n        this.uq = uq;\r\n        this.entityOpUserFully = this.controller.cUq.cFromName('map', 'entityOpUserFully') as CMap;\r\n        this.tuidUser = this.controller.cUq.cFromName('tuid', 'user') as CTuid<Tuid>;\r\n        await this.entityOpUserFully.entity.loadSchema();\r\n        let all = await this.entityOpUserFully.entity.queries.all.query({_uq: this.uq.id});\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.addClick}><FA name=\"plus\" /></button>;\r\n        this.users.push(...all.ret);\r\n        this.openPageElement(<Page header={'全功能用户'} right={right}>\r\n            <List items={this.users} item={{render:this.renderUser, onClick: this.onStopFully}} />\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    private onStopFully = async (item:any) => {\r\n        this.openPageElement(<Page header={'停止全功能'}>\r\n            <div className=\"p-3\">\r\n                <div><b className=\"text-danger h4\">{item.user.content()}</b> 停止全功能用户。<br/>请确认。</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-success\" onClick={()=>this.onSumitStopFully(item)}>停止全功能</button>\r\n                    <button className=\"ml-3 btn btn-outline-danger\" onClick={this.onCancelStop}>不停</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    private onSumitStopFully = async (item:any) => {\r\n        let data = {_uq: this.uq.id, arr1:[{_user: item.user.id}]};\r\n        await this.entityOpUserFully.entity.actions.del.submit(data);\r\n        let index = this.users.findIndex(v => v === item);\r\n        if (index >= 0) this.users.splice(index, 1);\r\n        this.closePage();\r\n    }\r\n\r\n    private onCancelStop = () => this.closePage();\r\n\r\n    private addClick = async () => {\r\n        let user = await this.controller.callSearchUser(this.uq);\r\n        this.onUserSelected(user);\r\n        /*\r\n        let searchUser = this.controller.cUq.cFromName('query', 'SearchUser') as CQuery;\r\n        this.pageUsers = new PageUsers(searchUser.entity);\r\n        this.openPage(this.usersView);\r\n        */\r\n    }\r\n\r\n    private renderUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{item.user.content()}</div>;\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        await this.pageUsers.first({key: key});\r\n    }\r\n    private onSetFully = async (item:any) => {\r\n        await this.entityOpUserFully.entity.actions.add.submit({_uq: this.uq.id, arr1:[{_user: item.id}]});\r\n        this.tuidUser.entity.useId(item.id);\r\n        let row = {\r\n            uq: this.uq.id,\r\n            user: this.tuidUser.entity.boxId(item.id),\r\n        }\r\n        this.users.push(row);\r\n        this.closePage(2);\r\n    }\r\n    private onCancelFully = () => {this.backPage()}\r\n    private onUserSelected = (item:any) => {\r\n        this.openPageElement(<Page header=\"确认\">\r\n            <div className=\"p-3\">\r\n                <div><b className=\"text-danger h4\">{item.name}</b> 将设置为全功能用户。只有系统管理员或者测试人员才需要全功能，可以操作所有数据。<br/>请确认。</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-success\" onClick={()=>this.onSetFully(item)}>设置为全功能用户</button>\r\n                    <button className=\"ml-3 btn btn-outline-danger\" onClick={this.onCancelFully}>取消</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    private renderSelectUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n    }\r\n    private usersView = () => {\r\n        let search = <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder=\"选择用户\" />;\r\n        return <Page header={search}>            \r\n            <List\r\n                before=\"搜索用户名\"\r\n                items={this.pageUsers} \r\n                item={{render: this.renderSelectUser, onClick:this.onUserSelected}} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from \"tonva-tools\";\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport { centerApi } from 'tonva-react-uq';\r\nimport { COpBinding } from \"./cOpBinding\";\r\n\r\nexport class VSearchUser extends VPage<COpBinding> {\r\n    private unit:number;\r\n    private pageUsers = new PageUsers();\r\n\r\n    private onUserClick = (item:any) => {\r\n        this.closePage();\r\n        this.returnCall(item);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.pageUsers.first({key: key, unit:this.unit, role:undefined});\r\n    }\r\n    private renderSelectUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n    }\r\n    async open(unit: number) {\r\n        this.unit = unit;\r\n        let search = <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder=\"选择用户\" />;\r\n        this.openPageElement(<Page header={search}>\r\n            <List\r\n                before=\"搜索用户名\"\r\n                items={this.pageUsers}\r\n                item={{render: this.renderSelectUser, onClick:this.onUserClick}} />\r\n        </Page>);\r\n    }\r\n}\r\n\r\nclass PageUsers extends PageItems<any> {\r\n    protected async load(param:{key:string, unit:number, role:number}, pageStart: any, pageSize: number): Promise<any[]> {\r\n        let {unit, role, key} = param;\r\n        let ret = await centerApi.get('unit/members', {key: key, unit:unit, role:role, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    protected setPageStart(item: any): any {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}","import React from \"react\";\r\nimport { Page, Controller, appInFrame, VPage } from \"tonva-tools\";\r\nimport { List, Muted, LMR, FA } from \"tonva-react-form\";\r\nimport { VOpBinding } from './vOpBinding';\r\nimport { CAction, CQuery, centerApi, entityIcons, ControllerUq } from \"tonva-react-uq\";\r\nimport { Organization, Team, Section, Post, Sheet, App, Uq, To, Entity, EntityBlock } from \"./model\";\r\nimport { VAllPosts } from \"./vAllPosts\";\r\nimport { VFullFunction } from \"./vFullFunction\";\r\nimport { VSearchUser } from \"./vSearchUser\";\r\n\r\n// 单据跟操作的绑定设置\r\nexport class COpBinding extends ControllerUq {\r\n    /*\r\n    constructor(unitxUq: CUq, res:any) {\r\n        super({});\r\n        this.unitxUq = unitxUq;\r\n    }*/\r\n\r\n    icon = <FA name=\"map-o\" className=\"text-success\" fixWidth={true} />;\r\n    label = '岗位权限 - UQ对象';\r\n\r\n    //private unitxUq: CUq;\r\n    private apps: App[];\r\n    organizations: Organization[];\r\n    teams: Team[];\r\n    sections: Section[];\r\n    posts: Post[];\r\n    postDict: {[id:number]:Post};\r\n    teamDict: {[id:number]:Team};\r\n    organizationDict: {[id:number]:Organization};\r\n    sectionDict: {[id:number]:Section};\r\n\r\n    protected async internalStart():Promise<void> {\r\n        await this.buildPosts();\r\n        await this.buildAppsUqs();\r\n        this.openPage(<this.appsView />);\r\n    }\r\n\r\n    private async buildAppsUqs() {\r\n        let unit = appInFrame.unit;\r\n        let ret:any[][] = await centerApi.get('/unit/apps-uqs', {unit: unit});\r\n        this.apps = ret[0];\r\n        let uqs: Uq[] = ret[1];\r\n\r\n        for (let app of this.apps) {\r\n            app.uqs = [];\r\n        }\r\n        for (let uq of uqs) {\r\n            let app = this.apps.find(v => v.id === uq.app);\r\n            if (app === undefined) continue;\r\n            app.uqs.push(uq);\r\n            this.setUqEntities(uq);\r\n        }\r\n    }\r\n\r\n    private async buildPosts() {\r\n        let queryAllTeams = this.cUq.cFromName('query', 'allteams') as CQuery;\r\n        let ret:any[][] = await queryAllTeams.entity.query(undefined);\r\n        this.teams = ret['teams'];\r\n        this.organizations = ret['organization'];\r\n        this.posts = ret['organizationpost'];\r\n        this.sections = ret['sections'];\r\n        this.postDict = {};\r\n        this.teamDict = {};\r\n        this.organizationDict = {};\r\n        this.sectionDict = {};\r\n        for (let organization of this.organizations) {\r\n            organization.posts = [];\r\n            organization.teams = [];\r\n            this.organizationDict[organization.id] = organization;\r\n        }\r\n        for (let team of this.teams) {\r\n            team.organizations = [];\r\n            team.sections = [];\r\n            this.teamDict[team.id] = team;\r\n        }\r\n        for (let section of this.sections) {\r\n            section.teams = [];\r\n            this.sectionDict[section.id] = section;\r\n        }\r\n        for (let post of this.posts) {\r\n            this.postDict[post.id] = post;\r\n            let organization = this.organizationDict[post.owner];\r\n            if (organization === undefined) {\r\n                continue;\r\n            }\r\n            post.organization = organization;\r\n            organization.posts.push(post);\r\n        }\r\n        // teamOrganization\r\n        for (let teamOrganization of ret['teamorganization']) {\r\n            let {team:tm, organization:og} = teamOrganization;\r\n            let team = this.teamDict[tm];\r\n            let organization = this.organizationDict[og];\r\n            team.organizations.push(organization);\r\n            organization.teams.push(team);\r\n        }\r\n        // sectionTeam\r\n        for (let sectionTeam of ret['sectionteam']) {\r\n            let {section:sec, team:tm} = sectionTeam;\r\n            let section = this.sectionDict[sec];\r\n            let team = this.teamDict[tm];\r\n            section.teams.push(team);\r\n            team.sections.push(section);\r\n        }\r\n    }\r\n\r\n    private setUqEntities(uq:Uq) {\r\n        let entities = uq.entities;\r\n        if (entities === null) return;\r\n        let lns = entities.split('\\n');\r\n        let len = lns.length;\r\n        let p:number;\r\n        for (let i=0; i<len;) {\r\n            switch (lns[i]) {\r\n                case 'tuid': p = this.setEntities(uq.tuids = [], lns, i, uq); break;\r\n                case 'map': p = this.setEntities(uq.maps = [], lns, i, uq); break;\r\n                case 'book': p = this.setEntities(uq.books = [], lns, i, uq); break;\r\n                case 'history': p = this.setEntities(uq.histories = [], lns, i, uq); break;\r\n                case 'pending': p = this.setEntities(uq.pendings = [], lns, i, uq); break;\r\n                case 'query': p = this.setEntities(uq.queries = [], lns, i, uq); break;\r\n                case 'action': p = this.setEntities(uq.actions = [], lns, i, uq); break;\r\n                case 'sheet': p = this.setSheets(uq.sheets = [], lns, i, uq); break;\r\n                default:\r\n                    alert('unknown entity type: ' + lns[i]);\r\n                    return;\r\n            }\r\n            i = p;\r\n        }\r\n    }\r\n\r\n    private setEntities(entities:Entity[], lines:string[], p:number, uq:Uq):number {\r\n        let len = lines.length;\r\n        let i = p+1;\r\n        for (; i<len; i++) {\r\n            let ln = lines[i];\r\n            if (ln.length > 0) {\r\n                let name = ln;\r\n                entities.push({\r\n                    uq: uq,\r\n                    name: name,\r\n                    states: undefined\r\n                });\r\n            }\r\n            else return i+1;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    private setSheets(sheets:Sheet[], lines:string[], p:number, uq:Uq):number {\r\n        let len = lines.length;\r\n        let i = p+1;\r\n        for (; i<len; i++) {\r\n            let ln = lines[i];\r\n            if (ln.length > 0) {\r\n                let parts:string[] = ln.split('\\t');\r\n                let name = parts[0];\r\n                parts[0] = '$';\r\n                let sheet:Sheet = {\r\n                    uq: uq,\r\n                    name: name,\r\n                    states: parts,\r\n                }\r\n                sheets.push(sheet);\r\n            }\r\n            else return i+1;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    async saveSheetStatePosts(sheet:Sheet, stateName:string, toArr:{post:number, team:number, section:number}[]) {\r\n        let actionSaveEntityOpPost = this.cUq.cFromName('action', 'saveentityoppost') as CAction;\r\n        let {uq, name} = sheet;\r\n        await actionSaveEntityOpPost.submit({\r\n            uq: uq.id,\r\n            entityName: name,\r\n            opName: stateName,\r\n            posts: toArr\r\n        });\r\n    }\r\n\r\n    private appRender = (app:App, index:number) => {\r\n        let {name, discription} = app;\r\n        return <LMR className=\"px-3 py-2\" right={discription && <Muted>{discription}</Muted>}>\r\n            {name}\r\n        </LMR>\r\n    }\r\n\r\n    private appClick = (app:App) => {\r\n        this.openPage(<this.appView {...app} />)\r\n    }\r\n\r\n    async callSearchUser(uq:Uq): Promise<any> {\r\n        let user = await this.vCall(VSearchUser, appInFrame.unit);\r\n        return user;\r\n    }\r\n\r\n    private appsView = () => <Page header={this.label}>\r\n        <div className=\"text-muted p-3 small\">\r\n            <div style={{lineHeight:'1.8', fontWeight:'bold'}}>说明</div>\r\n            <ol className=\"pl-3\" style={{listStyleType: '1', lineHeight: '1.8'}}>\r\n                <li >\r\n                    下面是全部启用的APP。请选择\r\n                </li>\r\n                <li>\r\n                    每个APP会使用一个以上的UQ。UQ里面定义了Tuid，Action，Map和Sheet等对象。\r\n                </li>\r\n                <li>\r\n                    设置对象跟岗位的关联\r\n                </li>\r\n            </ol>\r\n        </div>\r\n        <List items={this.apps} item={{render:this.appRender, onClick:this.appClick}} />\r\n    </Page>;\r\n\r\n    private entityRender(entity:Entity, icon:any) {\r\n        let {name} = entity;\r\n        return <div className=\"px-3 py-2 align-items-center\">{icon} &nbsp; {name}</div>\r\n    }\r\n    private sheetRender(sheet:Sheet, icon:any) {\r\n        let {name, states} = sheet;\r\n        return <div className=\"px-3 py-2 align-items-center\">\r\n            {icon} &nbsp; {name} <Muted> &nbsp; {sheet.states.join(', ')}</Muted>\r\n        </div>\r\n    }\r\n    private entityClick = async (block:EntityBlock, entity:Entity) => {\r\n        //alert('entity click');\r\n        let entityPosts = this.cUq.cFromName('query', 'getEntityPost') as CQuery;\r\n        let ret = await entityPosts.entity.query({uq: entity.uq.id, entityName: entity.name});\r\n        let opTos:{[op:string]:To[]} = {};\r\n        for (let row of ret.ret) {\r\n            let {op, post, team, section} = row;\r\n            let opTo = opTos[op];\r\n            if (opTo === undefined) opTos[op] = opTo = [];\r\n            opTo.push({\r\n                post: this.postDict[post],\r\n                team: this.teamDict[team],\r\n                section: this.sectionDict[section],\r\n            });\r\n        }\r\n        this.openVPage(VOpBinding, {entity:entity, opTos:opTos});\r\n    }\r\n    private sheetClick = async (block:EntityBlock, sheet:Sheet) => {\r\n        this.sheetClickOld(sheet);\r\n    }\r\n\r\n    private sheetClickOld = async (sheet:Sheet) => {\r\n        let entityPosts = this.cUq.cFromName('query', 'getEntityPost') as CQuery;\r\n        let ret = await entityPosts.entity.query({uq: sheet.uq.id, entityName: sheet.name});\r\n        let opTos:{[op:string]:To[]} = {};\r\n        for (let row of ret.ret) {\r\n            let {op, post, team, section} = row;\r\n            let opTo = opTos[op];\r\n            if (opTo === undefined) opTos[op] = opTo = [];\r\n            opTo.push({\r\n                post: this.postDict[post],\r\n                team: this.teamDict[team],\r\n                section: this.sectionDict[section],\r\n            });\r\n        }\r\n        this.openVPage(VOpBinding, {entity:sheet, opTos:opTos});\r\n    }\r\n\r\n    private renderSetting = (item:any, index:number) => {\r\n        let {icon, color, text} = item;\r\n        return <div className=\"px-3 py-2 align-items-center\">\r\n            {<FA name={icon} fixWidth={true} className={color} />} &nbsp; {text}\r\n        </div>\r\n    }\r\n\r\n    private settingClick = (item:any, uq:Uq) => {\r\n        let {name} = item;\r\n        let V: new (coordinator) => VPage<COpBinding>;\r\n        switch (name) {\r\n            default: return;\r\n            case 'entity-by-all-post': V = VAllPosts; break;\r\n            case 'user-all-entities': V = VFullFunction; break;\r\n        }\r\n        this.openVPage(V, uq);\r\n    }\r\n    \r\n    private uqRender = (uq:Uq, index:number) => {\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = uq;\r\n        let nameRender = this.entityRender;\r\n        let blocks:EntityBlock[] = [\r\n            {items: tuids, type: 'tuid', itemClick: this.entityClick},\r\n            {items: sheets, type: 'sheet', itemClick: this.sheetClick, itemRender: this.sheetRender},\r\n            {items: actions, type: 'action', itemClick: this.entityClick},\r\n            {items: maps, type: 'map', itemClick: this.entityClick},\r\n            {items: books, type: 'book', itemClick: this.entityClick},\r\n            {items: queries, type: 'query', itemClick: this.entityClick},\r\n            {items: histories, type: 'history', itemClick: this.entityClick},\r\n            {items: pendings, type: 'pending', itemClick: this.entityClick},\r\n        ];\r\n\r\n        let settings:any[] = [\r\n            {name:'entity-by-all-post', icon: 'cog', color: 'text-success', text: '所有岗位可操作'},\r\n            {name: 'user-all-entities', icon: 'cog', color: 'text-success', text: '全功能用户'}\r\n        ];\r\n\r\n        // {icon} &nbsp; {name} <Muted> &nbsp; {sheet.states.join(', ')}</Muted>\r\n        return <div key={name} className=\"my-2\">\r\n            <div className=\"px-3 font-weight-bold\">{name}</div>\r\n            <List className=\"mt-3\"\r\n                items={settings}\r\n                item={{\r\n                    key: (item:any)=>item.name, \r\n                    render: this.renderSetting,\r\n                    onClick:(item:any)=>this.settingClick(item, uq) \r\n                }}\r\n             />\r\n            {blocks.map(block => {\r\n                let {items, type, itemClick, itemRender} = block;\r\n                let icon = entityIcons[type];\r\n                return items && items.length>0 &&\r\n                    <List key={type} className=\"mt-3\"\r\n                        header={<Muted className=\"px-3 pt-1 bg-light w-100\">{this.res[type]||type}</Muted>} \r\n                        items={items} \r\n                        item={{\r\n                            key: (item:any)=>item.name, \r\n                            render:(item:any, index:number)=>(itemRender || nameRender)(item, icon), \r\n                            onClick: (item:Entity)=>itemClick(block, item)\r\n                        }} />;\r\n            })}\r\n        </div>;\r\n        /*\r\n        function headerCaption(caption:string):JSX.Element {\r\n            return <Muted className=\"px-3 pt-1 bg-light w-100\">{caption}</Muted>\r\n        }\r\n        function itemList(items:any[], type:string, itemClick:(item:any)=>void, render:((item:any, icon:any)=>JSX.Element) = nameRender) {\r\n            //let res = entitiesRes;\r\n            //let {caption, icon} = res[type];\r\n            let icon = entityIcons[type];\r\n            return items && \r\n                <List className=\"mt-3\"\r\n                    header={headerCaption(type)} \r\n                    items={items} \r\n                    item={{render:(item:any, index:number)=>render(item, icon), onClick: itemClick}} />;\r\n        }\r\n            {itemList(tuids, 'tuid', this.tuidClick)}\r\n            {itemList(sheets, 'sheet', this.sheetClickOld, this.sheetRender)}\r\n            {itemList(actions, 'action', this.actionClick)}\r\n            {itemList(maps, 'map', this.mapClick)}\r\n            {itemList(books, 'book', this.bookClick)}\r\n            {itemList(queries, 'query', this.queryClick)}\r\n            {itemList(histories, 'history', this.historyClick)}\r\n            {itemList(pendings, 'pending', this.pendingClick)}\r\n        */\r\n    }\r\n\r\n    private appView = (app:App) => <Page header={app.name + '操作权限'}>\r\n        {\r\n            app.uqs.map((v, index) => this.uqRender(v, index))\r\n        }\r\n    </Page>;\r\n\r\n    /*\r\n    private tuidClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private mapClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private actionClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private bookClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private queryClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private historyClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private pendingClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    */\r\n}\r\n","import * as React from 'react';\r\nimport { Page, VPage } from 'tonva-tools';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { CUq, Link, CLink, CApp } from \"tonva-react-uq\";\r\nimport ui from './ui';\r\nimport { COpBinding } from './op';\r\n\r\nexport class COrganization extends CUq {\r\n    constructor() {\r\n        super(undefined, '$$$/$unitx', 0, 0, undefined, ui);\r\n    }\r\n\r\n    label = '岗位权限';\r\n    icon = 'sitemap';\r\n    links: (CLink|string)[];\r\n\r\n    protected clearPrevPages() {\r\n        // 保留回退按钮，所以，去掉下面这行\r\n        //nav.clear();\r\n    }\r\n\r\n    protected async loadEntites() {\r\n        // 只有赋Entity权限的地方，需要取全部的Entities，其它地方默认取user access，this.entities.loadAccess()\r\n        await this.entities.loadEntities();\r\n    }\r\n\r\n    protected async internalStart() {\r\n        await this.loadSchema();\r\n        this.links= [\r\n            '',\r\n            new CLink(new COpBinding(this, this.res)),\r\n            '',\r\n            this.linkFromName('map', 'teamPerson'),\r\n            this.linkFromName('map', 'sectionTeam'),\r\n            this.linkFromName('map', 'teamOrganization'),\r\n            '',\r\n            this.linkFromName('tuid', 'person'),\r\n            this.linkFromName('tuid', 'team'),\r\n            this.linkFromName('tuid', 'section'),\r\n            this.linkFromName('tuid', 'organization'),\r\n        ];\r\n        this.openVPage(VOrganization);\r\n    }\r\n    \r\n}\r\n\r\nclass VOrganization extends VPage<COrganization> {\r\n    async open() {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    private renderRow = (link: Link, index:number) => {\r\n        return link.render('bg-white');\r\n    }\r\n\r\n    protected appPage = () => {\r\n        let {links, label} = this.controller;\r\n        return <Page header={label} logout={async ()=>{}}>\r\n            <List items={links} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { AppController } from '.';\r\nimport { VPage, nav, Page, ItemSchema, UiSchema, StringSchema, BoolSchema, UiTextItem, UiTextAreaItem, UiCheckItem, Form, ButtonSchema, Context, ImageSchema, UiImageItem, IdSchema, UiIdItem } from 'tonva-tools';\r\nimport { SubmitResult, DropdownActions, TonvaForm, FormRow } from 'tonva-react-form';\r\nimport { createIdPick, IdPickProps } from 'createIdPick';\r\nimport { DevModel } from 'model';\r\nimport { store } from 'store';\r\nimport { IdPickPage, ServerSpan } from '../../tools';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n/*\r\nconst formRows:FormRow[] = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    {\r\n        label: '图标',\r\n        field: {name: 'icon', type: 'string', maxLength: 250},\r\n    },\r\n    {\r\n        label: 'URL',\r\n        field: {name: 'url', type: 'string', maxLength: 200},\r\n    },\r\n    {\r\n        label: '服务器',\r\n        field: {name: 'server', type: 'id'},\r\n        face: {\r\n            type: 'pick-id', \r\n            initCaption: '请选择服务器', \r\n            pick: createIdPick(idPickServerProps),\r\n            fromPicked: (item:DevModel.Server)=>{\r\n                return {\r\n                    id: item.id, \r\n                    caption: <ServerCaption {...item} />,\r\n                };\r\n            },\r\n            itemFromId: (id:number)=>store.cacheServers.get(id),\r\n        },\r\n    },\r\n    {\r\n        label: '公开',\r\n        field: {name: 'public', type: 'bool', defaultValue: 1}\r\n    },\r\n];\r\n*/\r\nconst schema:ItemSchema[] = [\r\n    {name: 'name', type: 'string', maxLength: 100, required: true} as StringSchema,\r\n    {name: 'discription', type: 'string', maxLength: 250} as StringSchema,\r\n    {name: 'url', type: 'string', maxLength: 200} as StringSchema,\r\n    {name: 'public', type: 'boolean'} as BoolSchema,\r\n    {name: 'server', type: 'id'} as IdSchema,\r\n    {name: 'icon', type: 'image'} as ImageSchema,\r\n    {name: 'submit', type: 'submit'} as ButtonSchema,\r\n];\r\n\r\nexport abstract class EditBasePage extends VPage<AppController> {\r\n    private candidateItems = async (params:any, key:string):Promise<any[]> => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    }\r\n\r\n    private moreCandidates = async ():Promise<void> => {\r\n        await store.dev.searchServer.more();\r\n    }\r\n\r\n    private renderRow = (item:DevModel.Server, index:number): JSX.Element => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    }\r\n\r\n    private pickServerId = (context:Context, name:string, value:number): Promise<number> => {\r\n        return new Promise<number>((resolve, reject) => {\r\n            nav.push(<IdPickPage \r\n                caption=\"选择服务器\" \r\n                searchPlaceHolder=\"搜索服务器\"\r\n                candidateItems={this.candidateItems}\r\n                moreCandidates={this.moreCandidates}\r\n                row={this.renderRow}\r\n                idFromItem={(item:DevModel.Server) => item.id}\r\n                resolve={resolve} params={undefined} />, \r\n                ()=> {\r\n                    reject();\r\n                });\r\n        });\r\n    }\r\n\r\n    private renderServerInput = (itemId:number): JSX.Element => {\r\n        return <ServerSpan id={itemId} />;\r\n    };\r\n\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'} as UiTextItem,\r\n            discription: {widget: 'textarea', label: '描述', rows: 5} as UiTextAreaItem,\r\n            url: {widget: 'text', label: 'URL', placeholder: 'http(s)://APP地址'} as UiTextItem,\r\n            'public': {widget: 'checkbox', label: '公开', } as UiCheckItem,\r\n            server: {widget: 'id', label: '服务器', pickId: this.pickServerId, Templet: this.renderServerInput} as UiIdItem,\r\n            icon: {widget: 'image', label: '标志图'} as UiImageItem,\r\n            submit: {widget: 'button', label: '提交', className: 'btn btn-primary'}\r\n        }\r\n    }\r\n    \r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveApp(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private onButtonClick = async (name:string, context: Context) => {\r\n        let {data} = context;\r\n        let app = _.clone(this.controller.app);\r\n        _.merge(app, data);\r\n        await this.controller.saveApp(app);\r\n        nav.pop();\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form = observer(() => {\r\n        /*\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n        */\r\n        return <Form fieldLabelSize={2}\r\n            className=\"m-3\" \r\n            schema={schema} \r\n            uiSchema={this.uiSchema}\r\n            formData={this.initValues}\r\n            onButtonClick={this.onButtonClick} />\r\n    });\r\n    abstract get initValues():any;\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    get initValues():any {return this.controller.app}\r\n    protected page = () => {\r\n        let {app} = this.controller;\r\n        let {name} = app;\r\n        return <Page header={'修改APP - ' + name} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    get initValues():any {return {}}\r\n    protected page = () => {\r\n        return <Page header={'新建APP'} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, Image } from \"tonva-tools\";\r\nimport { AppController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class AppsPage extends VPage<AppController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {appList, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"App\" right={right}>\r\n            <List items={appList} item={{render: this.appRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private appRow = (item:DevModel.App):JSX.Element => {\r\n        let {name, discription, icon, url, urlDebug} = item;\r\n        let left = <Badge size=\"sm\"><Image src={icon} /></Badge>;\r\n        let right = <div className=\"text-muted small text-right\">\r\n            {url || '-'}<br/>\r\n            {urlDebug}\r\n        </div>;\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={left} right={right}>\r\n            <div className=\"px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { List, LMR, SearchBox } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { UnitSpan } from 'tools';\r\nimport { store } from 'store';\r\nimport { nav, Page, VPage } from 'tonva-tools';\r\nimport { AppController } from '.';\r\n\r\nexport class SearchUqPage extends VPage<AppController> {\r\n    @observable private uqs: DevModel.UQ[];\r\n\r\n    async open() {\r\n        this.uqs = await this.controller.getMyUqs();\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.uqs = await this.controller.searchUq(key, pageStart, pageSize);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch}\r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={this.uqs} item={{render: this.row, onClick: this.controller.onUq}} />\r\n        </Page>;\r\n    });\r\n\r\n    private row = (uq: DevModel.UQ) => {\r\n        let {owner, name, discription} = uq;\r\n        return <LMR className=\"py-2 px-3\" right={discription}>\r\n            <div>{owner} / {name}</div>\r\n        </LMR>;\r\n    };\r\n}\r\n\r\n@observer\r\nexport class AppUqs extends React.Component {\r\n    @observable anySelected: boolean = false;\r\n    private list:List;\r\n    private onSelect = (item: DevModel.UQ, isSelected:boolean, anySelected:boolean) => {\r\n        this.anySelected = anySelected;\r\n    }\r\n    private row = (item: DevModel.UQ) => {\r\n        let {name, unit, discription} = item;\r\n        return <LMR className=\"p-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            <UnitSpan id={unit} />/{name}\r\n        </LMR>;\r\n    }\r\n    private removeBind = () => {\r\n        if (this.list === null) return;\r\n        let {selectedItems} = this.list;\r\n        if (selectedItems === undefined) return;\r\n        if (selectedItems.length === 0) return;\r\n        store.dev.apps.appBindUq(\r\n            selectedItems.map(v => {\r\n                return {id:v.id, access:['*']}\r\n            }), \r\n            false);\r\n    }\r\n    render() {\r\n        let btnProps = this.anySelected?\r\n            {color:'danger', onClick:this.removeBind, icon:'trash', text:'取消'}:\r\n            {color:'primary', onClick:()=>nav.push(<Uqs/>), icon:'plus', text:'新增'};\r\n        let btn = (p)=><button \r\n            className={classNames('btn', 'btn-outline-'+p.color, 'btn-sm')} \r\n            onClick={p.onClick}>\r\n            <i className={\"fa fa-\" + p.icon} /> {p.text}关联\r\n        </button>;\r\n        let listHeader = <div className=\"va-row py-1 justify-content-center\">{btn(btnProps)}</div>;\r\n        return <Page header=\"关联UQ\">\r\n            <List ref={list=>this.list=list} header={listHeader}\r\n                items={store.dev.apps.uqs}\r\n                item={{render: this.row, onSelect: this.onSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass Uqs extends React.Component {\r\n    onSearch = async (key:string) => {\r\n        await store.dev.apps.searchUq(key);\r\n    }\r\n    onBind(uq: DevModel.UQ, bind: boolean) {\r\n        store.dev.apps.appBindUq([{id:uq.id, access:['*']}], bind);\r\n    }\r\n    row = (uq: DevModel.UQ) => {\r\n        let isConnected = store.dev.apps.uqs.find(a => a.id === uq.id) !== undefined;\r\n        let cn = ['btn', 'btn-sm'];\r\n        let btnContent:any, onClick:any;\r\n        if (isConnected) {\r\n            cn.push('btn-success');\r\n            onClick = ()=>this.onBind(uq, false);\r\n            btnContent = \"已关联\";\r\n        }\r\n        else {\r\n            cn.push('btn-primary');\r\n            onClick = ()=>this.onBind(uq, true);\r\n            btnContent = <span><i className=\"fa fa-check\"/> 关联</span>;\r\n        }\r\n        return <div className=\"d-flex justify-content-start py-1 px-3\">\r\n            <div className=\"align-self-center\">{uq.name + ' - ' + uq.discription}</div>\r\n            <footer className=\"ml-auto\"><button className={classNames(cn)} onClick={onClick}>{btnContent}</button></footer>\r\n        </div>\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={store.dev.apps.searchedUqs} item={{render: this.row}} loading={null} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva-tools';\r\nimport { AppController, UqAccess } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan, UnitName } from 'tools';\r\nimport { Prop, Media, PropGrid, ListProp, DropdownActions, List, LMR } from 'tonva-react-form';\r\nimport { EditPage } from './editPage';\r\nimport { AppUqs, SearchUqPage } from './appUqs';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class AppPage extends VPage<AppController> {\r\n    async open() {\r\n        //this.uqs.list = this.controller.uqs;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.controller.deleteApp();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let {app} = this.controller;\r\n        let {unit, name, discription, icon, server, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            // {icon: 'cogs', caption:'设置关联UQ', action: ()=>nav.push(<AppUqs />)},\r\n            {caption:'修改App', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n\r\n        let right = <DropdownActions actions={menuItems} />;\r\n\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n            /*\r\n            {\r\n                type: 'component', \r\n                label: 'Service',\r\n                vAlign: 'stretch',\r\n                component: <ServiceRow />,\r\n            },*/\r\n            {\r\n                label: 'URL',\r\n                name: 'url',\r\n                type: 'string',                \r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            '',\r\n            //this.uqs,\r\n        ];\r\n        let btnAddUq = <button className=\"btn btn-outline-primary btn-sm\" onClick={()=>this.openVPage(SearchUqPage)}>\r\n            增加关联\r\n        </button>;\r\n        return <Page header={'App - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={app} />\r\n            <LMR className=\"mx-3 mt-3 mb-1\" right={btnAddUq}>\r\n                关联UQ\r\n            </LMR>\r\n            <List items={this.controller.uqAccesses} item={{render:this.renderUqRow, onClick:this.uqClick}} />\r\n        </Page>\r\n    })\r\n\r\n    private uqClick = (uqAccess:UqAccess) => {\r\n        this.controller.onUq(uqAccess.uq);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:UqAccess, index:number):JSX.Element => {\r\n        let {uq, bind_access: access} = uqAccess;\r\n        let {name, discription, unit} = uq;\r\n        let disp: any;\r\n        let elAccess: any;\r\n        if (access && access.length > 0) {\r\n            elAccess = <> + {access.join(', ')} </>;\r\n        }\r\n        if (discription) disp = <div className=\"small text-muted\"> &nbsp; {discription}</div>;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={disp}>\r\n            <UnitName id={unit} /> / {name} {elAccess}\r\n        </LMR>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from \"tonva-tools\";\r\nimport { AppController, UqAccess } from \".\";\r\nimport { LMR } from 'tonva-react-form';\r\n\r\nexport class UqBindPage extends VPage<AppController> {\r\n    private uqAccess: UqAccess;\r\n    private accesses: string[];\r\n    private accessChecked:{[name:string]:boolean};\r\n    async open(uqAccess: UqAccess) {\r\n        this.uqAccess = uqAccess;\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {access} = uq;\r\n        if (access) {\r\n            this.accessChecked = {};\r\n            this.accesses = access.split(',');\r\n            for (let acc of this.accesses) {\r\n                this.accessChecked[acc] = (bind_access && bind_access.find(bc => bc === acc)) !== undefined;\r\n            }\r\n        }\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onCheckChanged = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let {target} = evt;\r\n        this.accessChecked[target.name] = target.checked;\r\n    }\r\n\r\n    private saveUqBind = async () => {\r\n        let acc:string[] = [];\r\n        if (this.accesses) {\r\n            for (let i in this.accessChecked) {\r\n                if (this.accessChecked[i] === true) acc.push(i);\r\n            }\r\n        }\r\n        await this.controller.saveUqBind(this.uqAccess.uq, acc);\r\n        nav.pop();\r\n    }\r\n\r\n    private removeUqBind = async () => {\r\n        await this.controller.removeUqBind(this.uqAccess.uq);\r\n        nav.pop();\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {owner, name, discription, access} = uq;\r\n        let btnDelete:any;\r\n        if (bind_access !== null && bind_access !== undefined) {\r\n            btnDelete = <button className=\"btn btn-outline-danger btn-sm\" onClick={this.removeUqBind}>取消关联</button>;\r\n        }\r\n        let checkAccessList:any;\r\n        if (this.accesses) {\r\n            checkAccessList = <div className=\"mt-3\">\r\n            {\r\n                this.accesses.map(v => {\r\n                    let checked = this.accessChecked[v];\r\n                    return <label key={v} className=\"d-inline-block mr-4\">\r\n                        <input onChange={this.onCheckChanged}\r\n                            style={{width:'1.1rem', height:'1.1rem'}} \r\n                            name={v} type=\"checkbox\" defaultChecked={checked} />&nbsp;{v}\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>;\r\n        }\r\n        return <Page header=\"关联UQ\">\r\n            <div className=\"m-3 py-3 px-3 bg-white border\">\r\n                <div>{owner} / {name}</div>\r\n                <div className=\"text-muted\">{discription}</div>\r\n                {checkAccessList}\r\n                <LMR className=\"pt-3\" right={btnDelete}>\r\n                    <button className=\"btn btn-primary btn-sm\" onClick={this.saveUqBind}>保存关联</button>\r\n                </LMR>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { Controller } from \"tonva-tools\";\r\nimport { DevModel } from 'model';\r\nimport { devApi } from 'api';\r\nimport { AppsPage } from './appsPage';\r\nimport { AppPage } from './appPage';\r\nimport { UqBindPage } from './uqBindPage';\r\n\r\nexport interface UqAccess {\r\n    uq: DevModel.UQ;\r\n    bind_access: string[];\r\n}\r\n\r\nexport class AppController extends Controller {\r\n    private unitId: number;\r\n    app: DevModel.App;\r\n    @observable appList: DevModel.App[];\r\n    @observable uqAccesses: UqAccess[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.appList = await devApi.apps(this.unitId);\r\n        this.openVPage(AppsPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.App) => {\r\n        this.app = item;\r\n        let ret = await devApi.loadAppUqs(item.id);\r\n        this.uqAccesses = ret.map(v => {\r\n            let {owner, access, id, name, discription, unit, date_init, date_update, bind_access} = v;\r\n            return {\r\n                uq: {\r\n                    id: id,\r\n                    name: name,\r\n                    discription: discription,\r\n                    unit: unit,\r\n                    access: access,\r\n                    owner: owner,\r\n                    date_init: date_init,\r\n                    date_update: date_update, \r\n                    service_count: undefined,\r\n                },\r\n                uqOwner: owner,\r\n                bind_access: bind_access && bind_access.split(',')\r\n            }\r\n        });\r\n        this.openVPage(AppPage);\r\n    }\r\n\r\n    saveApp = async (values: DevModel.App) => {\r\n        let app: DevModel.App;\r\n        if (this.app === undefined) {\r\n            app = _.clone(values);\r\n        }\r\n        else {\r\n            app = _.clone(this.app);\r\n            _.merge(app, values);\r\n        }\r\n        app.unit = this.unitId;\r\n        let ret = await devApi.saveApp(app);\r\n        app.id = ret;\r\n        let org = this.appList.find(v => v.id === ret);\r\n        if (org !== undefined) {\r\n            _.merge(org, app);\r\n        }\r\n        else {\r\n            this.appList.push(app);\r\n        }\r\n    }\r\n\r\n    deleteApp = async () => {\r\n        await devApi.delApp(this.unitId, this.app.id);\r\n        let index = this.appList.findIndex(v => v.id === this.app.id);\r\n        if (index >= 0) this.appList.splice(index, 1);\r\n    }\r\n\r\n    searchUq = async (key:string, pageStart:number, pageSize:number) => {\r\n        return await devApi.searchUq(this.unitId, key, pageStart, pageSize);\r\n    }\r\n\r\n    getMyUqs = async () => {\r\n        return await devApi.getMyUqs(this.unitId);\r\n    }\r\n\r\n    onUq = (uq: DevModel.UQ) => {\r\n        let uqAccess:UqAccess = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n        if (uqAccess === undefined) {\r\n            uqAccess = {\r\n                uq: uq,\r\n                bind_access: undefined,\r\n            }\r\n        }\r\n        else {\r\n            let access = uqAccess.bind_access;\r\n            if (access === null || access === undefined) uqAccess.bind_access = [];\r\n        }\r\n        this.openVPage(UqBindPage, uqAccess);\r\n    }\r\n\r\n    // accesses = undefined, 表示删除\r\n    private buildBindUqs(uq: DevModel.UQ, accesses?:string[]) {\r\n        let uqs:{id:number, access:string[]}[] = [];\r\n        let isNew = true;\r\n        for (let ua of this.uqAccesses) {\r\n            let {uq:uaUq, bind_access} = ua;\r\n            if (uaUq.id === uq.id) {\r\n                if (accesses === undefined) continue;\r\n                bind_access = accesses;\r\n                isNew = false;\r\n            }\r\n            uqs.push({\r\n                id: uaUq.id,\r\n                access: bind_access || [],\r\n            });\r\n        }\r\n        if (accesses !== undefined && isNew === true) {\r\n            uqs.push({id: uq.id, access: accesses});\r\n        }\r\n        return uqs;\r\n    }\r\n\r\n    saveUqBind = async (uq: DevModel.UQ, accesses:string[]) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq, accesses);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        if (uqs.length > this.uqAccesses.length) {\r\n            this.uqAccesses.unshift({\r\n                uq: uq,\r\n                bind_access: accesses,\r\n            });\r\n        }\r\n        else {\r\n            let ua = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n            ua.bind_access = accesses;\r\n        }\r\n    }\r\n\r\n    removeUqBind = async (uq: DevModel.UQ) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        let index = this.uqAccesses.findIndex(v => v.uq.id === uq.id);\r\n        if (index>=0) this.uqAccesses.splice(index, 1);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {List, EasyDate, LMR, Muted} from 'tonva-react-form';\r\nimport {DevModel} from '../../model';\r\nimport {store} from '../../store';\r\n\r\ninterface State {\r\n    files: any[];\r\n    compiled?: string;\r\n    text?: string;\r\n}\r\n\r\nexport interface UpUploadProps {\r\n    uq: DevModel.UQ;\r\n    services: DevModel.Service[];\r\n}\r\n\r\nexport class UqUpload extends React.Component<UpUploadProps, State> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            files: undefined,\r\n        }\r\n    }\r\n    private onFilesChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let upFiles:any[] = [];\r\n        let {files} = evt.target;\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            upFiles.push(files[i]);\r\n        }\r\n        this.setState({\r\n            files: upFiles,\r\n        });\r\n    }\r\n    fileRender(file, index):JSX.Element {\r\n        let {name, size, lastModifiedDate} = file;\r\n        function sz():string {\r\n            let n:number, u:string;\r\n            if (size < 1024) {\r\n                n = size; u = 'b';\r\n            }\r\n            else if (size < 1024*1024) {\r\n                n = Math.trunc((size / 1024) * 100)/100; u = 'k';\r\n            }\r\n            else {\r\n                n = Math.trunc((size / 1024 / 1024) * 100)/100; u = 'm';\r\n            }\r\n            return n + ' ' + u;\r\n        }\r\n        return <LMR className=\"px-2 py-1\" right={<Muted>{sz()}</Muted>}>\r\n            <div>{name}</div>\r\n            <div><Muted>修改日期: <EasyDate date={lastModifiedDate} /></Muted></div>\r\n        </LMR>;\r\n    }\r\n    private fileClick = (file:any) => {\r\n        let fr = new FileReader();\r\n        fr.onload = function(f) {\r\n            //alert(this.result);\r\n            nav.push(<UqPage name={file.name} content={this.result} />)\r\n        }\r\n        fr.readAsText(file, \"utf8\");\r\n    }\r\n    private onSubmit = (evt:React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n    private async update(thoroughly:boolean) {\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        let url = store.uqServer + 'uq-compile/' + this.props.uq.id + '/update';\r\n        if (thoroughly === true) url += '-thoroughly';\r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            nav.push(<CompileResult {...this.props} res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n    private onUpdate = async () => {\r\n        let thoroughly = false;\r\n        await this.update(thoroughly);\r\n    }\r\n    private onUpdateThoroughly = async () => {\r\n        let thoroughly = true;\r\n        await this.update(thoroughly);\r\n    }\r\n    render() {\r\n        let {files} = this.state;\r\n        let fileList:any;\r\n        if (files !== undefined) {\r\n            fileList = <List \r\n                className=\"my-3\" \r\n                items={files} \r\n                item={{render: this.fileRender, onClick: this.fileClick}}/>;\r\n        }\r\n        let button:any;\r\n        if (files !== undefined && files.length > 0) {\r\n            button = <div className=\"my-2 d-flex\">\r\n                <button className=\"btn btn-success\" type=\"submit\" onClick={this.onUpdate}>优化编译</button>\r\n                <div className=\"py-2 flex-grow-1\" />\r\n                <button className=\"btn btn-outline-warning\"\r\n                    type=\"submit\" onClick={this.onUpdateThoroughly}>完全编译</button>\r\n            </div>;\r\n        }\r\n        return <Page header={\"编译 - \" + this.props.uq.name}>\r\n            <div className=\"py-2 px-3\">\r\n                <div>请选择UQ源代码文件</div>\r\n                <form className=\"my-1\" encType=\"multipart/form-data\" onSubmit={this.onSubmit}>\r\n                    <div className=\"my-1\">\r\n                        <input ref={(fileInput) => this.fileInput=fileInput}type=\"file\" id=\"photo\" \r\n                            className=\"w-100 form-control-file\" name=\"files\" multiple={true} \r\n                            onChange={this.onFilesChange} />\r\n                    </div>\r\n                    {fileList}\r\n                    {button}\r\n                </form>\r\n                <pre>{this.state.compiled}</pre>\r\n                <div>{this.state.text}</div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n\r\ninterface UqPgeProps {\r\n    name: string;\r\n    content: string|ArrayBuffer;\r\n}\r\nclass UqPage extends React.Component<UqPgeProps> {\r\n    render() {\r\n        return <Page header={this.props.name}>\r\n            <pre className=\"px-3 py-2\">{this.props.content}</pre>\r\n        </Page>;\r\n    }\r\n}\r\n\r\ninterface CompileResultProps {\r\n    res: Response;\r\n    abortController: AbortController;\r\n}\r\ninterface CompileResultState {\r\n    texts: string[];\r\n    seconds: number;\r\n}\r\nclass CompileResult extends React.Component<CompileResultProps, CompileResultState> {\r\n    private texts: string[];\r\n    private timeHandler:any;\r\n    constructor(props) {\r\n        super(props);\r\n        this.texts = [];\r\n        this.state = {\r\n            texts: this.texts,\r\n            seconds: -1,\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        nav.regConfirmClose(async ():Promise<boolean>=>{\r\n            if (this.state.seconds>=0) return true;\r\n            return new Promise<boolean>((resolve, reject) => {\r\n                try {\r\n                    if (confirm('正在编译中，真的要中止吗？') === true) {\r\n                        try {\r\n                            this.props.abortController.abort();\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err);\r\n                        }\r\n                        resolve(true);\r\n                    }\r\n                    else {\r\n                        resolve(false);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            })\r\n        });\r\n    }\r\n    private clearTimeHandler() {\r\n        if (this.timeHandler !== undefined) {\r\n            clearTimeout(this.timeHandler);\r\n            this.timeHandler = undefined;\r\n        }\r\n    }\r\n    private getParent(el:HTMLElement):HTMLElement {\r\n        if (!el) return;\r\n        if (el.tagName === 'MAIN') return el;\r\n        return this.getParent(el.parentElement);\r\n    }\r\n    private scrollToBottom(defer:number = 100) {\r\n        this.clearTimeHandler();\r\n        let that = this;\r\n        this.timeHandler = setTimeout(() => {\r\n            var pane = document.getElementById('bottomDiv');\r\n            pane && pane.scrollIntoView();\r\n            /*\r\n            if (pane !== undefined) {\r\n                let childNodes = pane.childNodes;\r\n                let last = childNodes.item(childNodes.length-1);\r\n                (last as HTMLElement).scrollIntoView();\r\n            }\r\n            */\r\n            that.clearTimeHandler();\r\n        }, defer);\r\n    }\r\n    private topIntoView() {\r\n        var pane = document.getElementById('topDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let first = childNodes.item(0);\r\n        (first as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private bottomIntoView() {\r\n        var pane = document.getElementById('bottomDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let last = childNodes.item(len-1);\r\n        (last as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private doubleClick = () => {\r\n        var pane = document.getElementById('scrollDiv');\r\n        let main = this.getParent(pane);\r\n        if (!main) return;\r\n        if (main.scrollTop >= main.scrollHeight / 2) {\r\n            this.topIntoView();\r\n        }\r\n        else {\r\n            this.bottomIntoView();\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        let that = this;\r\n        let time = new Date();\r\n        function consume(reader: ReadableStreamReader) {\r\n            var total = 0\r\n            return new Promise((resolve, reject) => {\r\n                function uintToString(uintArray):string {\r\n                    var encodedString = String.fromCharCode.apply(null, uintArray),\r\n                        decodedString = decodeURIComponent(escape(encodedString));\r\n                    return decodedString;\r\n                }\r\n                function pump() {\r\n                    reader.read().then(({done, value}) => {\r\n                        if (done) {\r\n                            that.scrollToBottom();\r\n                            that.setState({\r\n                                seconds: (new Date().getTime() - time.getTime()),\r\n                            })\r\n                            resolve();\r\n                            return;\r\n                        }\r\n                        let text = uintToString(value);\r\n                        that.texts.push(text);\r\n                        that.setState({\r\n                            texts: that.texts,\r\n                        });\r\n                        total += value.byteLength;\r\n                        that.scrollToBottom();\r\n                        pump();\r\n                    }).catch(reject)\r\n                }\r\n                pump();\r\n            });\r\n        }\r\n        try {\r\n            await consume(this.props.res.body.getReader());\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n    render() {\r\n        let {seconds, texts} = this.state;\r\n        return <Page header={seconds>=0? \"编译完成\" : \"编译中...\"} back=\"close\">\r\n            <div id='topDiv' />\r\n            <div id='scrollDiv'\r\n                onDoubleClick={this.doubleClick} \r\n                className='py-2 px-3' \r\n                style={{wordWrap: 'break-word', whiteSpace: 'normal'}}>\r\n                {texts.map((v, i) => <pre style={{whiteSpace: 'pre-wrap'}} key={i}>{v}</pre>)}\r\n            </div>\r\n            {seconds>=0? <div className='px-3 pb-3' style={{color: 'red', fontWeight: 'bold'}}>\r\n                编译完成。共计用时{Math.floor(seconds/1000)}秒\r\n            </div> : undefined}\r\n            <div id='bottomDiv' />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {IdPick, IdPickFace, List, SearchBox} from 'tonva-react-form';\r\nimport {DevModel} from './model';\r\n\r\nexport interface IdPickProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n}\r\n\r\nexport function createIdPick(props: IdPickProps):IdPick {\r\n    return function(face: IdPickFace, params: any):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            nav.push(<IdPickPage resolve={resolve} face={face} params={params} {...props} />);\r\n        });\r\n    }\r\n}\r\n\r\ninterface IdPickPageProps extends IdPickProps {\r\n    face: IdPickFace;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\ninterface IdPickPageState {\r\n    items?: any[];\r\n}\r\n\r\nclass IdPickPage extends React.Component<IdPickPageProps, IdPickPageState> {\r\n    private items:any[];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: null,\r\n        }\r\n        this.itemClick = this.itemClick.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        let {face, candidateItems, params} = this.props;\r\n        this.setState({\r\n            items: Array.isArray(candidateItems)? candidateItems : await candidateItems(params, ''),\r\n        });\r\n    }\r\n    itemClick(item:any) {\r\n        let {resolve} = this.props;\r\n        resolve(item);\r\n        nav.pop();\r\n    }\r\n    async onSearch(key: string) {\r\n        //alert('search ' + key);\r\n        //await store.dev.searchServer.first(key)\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.setState({items: ret});\r\n        }\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.state.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DevModel } from \"model\";\r\nimport { IdPickProps, createIdPick } from 'createIdPick';\r\nimport { store } from 'store';\r\nimport { Field, FormRow, StringFace, TextAreaFace, TonvaForm, SubmitResult } from 'tonva-react-form';\r\nimport { UQController } from '.';\r\nimport { VPage, nav, Page } from 'tonva-tools';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst dbTypeField:Field = {name: 'db_type', type: 'string', maxLength:20, defaultValue:'mysql'};\r\nconst dbField:Field = {name: 'db', type: 'string', maxLength:50, required: true};\r\nconst connectionField:Field = {name:'connection', type:'string', maxLength:250};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: <ServerCaption {...item} />,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n\r\nconst dbTypeRow:FormRow = {\r\n    label: '数据库类型',\r\n    field: dbTypeField,\r\n    face: {\r\n        type: 'string',\r\n        readonly: true,\r\n    } as StringFace\r\n};\r\n\r\nconst dbRow = {\r\n    label: '数据库名字',\r\n    field: dbField,\r\n};\r\n\r\nconst connectionRow = {\r\n    label: '连接字符串',\r\n    field: connectionField,\r\n    face: {\r\n        type: 'textarea',\r\n        maxLength: 250,\r\n        rows: 8,\r\n    } as TextAreaFace,\r\n};\r\n\r\nexport class NewServicePage extends VPage<UQController> {\r\n    private tonvaForm:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        urlRow,\r\n        serverRow,\r\n        dbTypeRow,\r\n        dbRow,\r\n        connectionRow\r\n    ];\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onSubmit = async (values:any):Promise<SubmitResult | undefined> => {\r\n        values.type = 2; // uq type, to be removed\r\n        values.bindId = this.controller.uq.id;\r\n        let ret = await this.controller.saveService(values);\r\n        if (ret === 0) {\r\n            if (this.tonvaForm !== undefined) {\r\n                this.tonvaForm.formView.setError('url', '已经有Service使用这个url');\r\n            }\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private page = () => {\r\n        return <Page header=\"新建Service\">\r\n            <TonvaForm ref={t=>this.tonvaForm=t} className=\"m-3\" formRows={this.formRows} onSubmit={this.onSubmit} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Page, VPage, nav } from \"tonva-tools\";\r\nimport { UQController } from '.';\r\nimport { DevModel } from 'model';\r\nimport { Prop, PropGrid } from 'tonva-react-form';\r\nimport { StringValueEdit, ServerSpan, TextValueEdit } from 'tools';\r\n\r\nexport class ServicePage extends VPage<UQController> {\r\n    @observable private service: DevModel.Service;\r\n    async open(service: DevModel.Service) {\r\n        this.service = service;\r\n        this.openPage(this.page);\r\n    }\r\n    private async changeProp(prop:string, value:any):Promise<any> {\r\n        return await this.controller.changeServiceProp(this.service, prop, value);\r\n    }\r\n    private onUrlChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        let ret = await this.changeProp('url', value);\r\n        if (ret === 0) {\r\n            return 'URL已经被使用了';\r\n        }\r\n        this.service.url = value;\r\n    }\r\n    private onDbChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        let ret = await this.changeProp('db', value);\r\n        if (ret === 0) {\r\n            return 'Db已经被使用了';\r\n        }\r\n        this.service.db = value;\r\n    }\r\n    private onDbTypeChanged = async (value:string, orgValue:any):Promise<string|void> => {\r\n        if (value === undefined || value === null) return;\r\n        if (value.toLowerCase().trim() !== 'mysql') return '目前只支持mysql';\r\n        let ret = await this.changeProp('db_type', value);\r\n        this.service.db_type = value;\r\n    }\r\n    private onConnectionChanged = async (value:string, orgValue:any):Promise<string|void> => {        \r\n        await this.changeProp('connection', value);\r\n        this.service.connection = value;\r\n    }\r\n    private onDeleteClick = async () => {\r\n        if (confirm(\"真的要删除Service吗？删除了不可恢复，需要重新录入。\")!==true) return;\r\n        await this.controller.delService(this.service);\r\n        nav.pop();\r\n    }\r\n    private page = () => {\r\n        let {uq} = this.controller;\r\n        let {type, name, discription, server, url, db, db_type, connection} = this.service;\r\n        let rows:Prop[] = [\r\n            '',\r\n            /*\r\n            {\r\n                type: 'component',\r\n                component: <div className=\"px-3 py-2\">\r\n                    <b>{name}</b><br/><Muted>{discription}</Muted>\r\n                </div>,\r\n            },\r\n            '',*/\r\n            {\r\n                type: 'string',\r\n                name: 'url',\r\n                label: 'URL',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改URL\"\r\n                    value={url}\r\n                    onChanged={this.onUrlChanged} />)\r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db_type',\r\n                label: '数据库类型',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库类型\"\r\n                    value={db_type}\r\n                    onChanged={this.onDbTypeChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db',\r\n                label: '数据库名',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库名字\"\r\n                    value={db}\r\n                    onChanged={this.onDbChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'connection',\r\n                label: '连接字符串',\r\n                onClick: ()=>nav.push(<TextValueEdit\r\n                    title=\"连接字符串\"\r\n                    value={connection}\r\n                    onChanged={this.onConnectionChanged} />)\r\n            },\r\n        ];\r\n        let right = <button onClick={this.onDeleteClick} className=\"btn btn-success\">删除</button>;\r\n        return <Page header={'UQ - ' + uq.name} right={right}>\r\n            <PropGrid rows={rows} values={this.service} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { UQController } from \".\";\r\nimport { VPage, nav, Page } from \"tonva-tools\";\r\nimport { SubmitResult, TonvaForm } from \"tonva-react-form\";\r\n\r\nconst formRows = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    //{\r\n    //    label: '入口',\r\n    //    field: {name: 'access', type: 'string', maxLength: 250},\r\n    //    face: {type: 'textarea', placeholder: '逗号分隔的入口名'}\r\n    //},\r\n];\r\n\r\n\r\nexport abstract class EditBasePage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveUq(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form(initValues:any):JSX.Element {\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n    }\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    protected page = () => {\r\n        let {uq} = this.controller;\r\n        let {name} = uq;\r\n        return <Page header={'修改UQ - ' + name} back=\"close\">\r\n            {this.form(uq)}\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    protected page = () => {\r\n        return <Page header={'新建UQ'} back=\"close\">\r\n            {this.form({})}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva-tools';\r\nimport { UQController } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan } from 'tools';\r\nimport { Prop, Media, LMR, FA, PropGrid, Muted, List, EasyDate, DropdownActions } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { EditPage } from './editPage';\r\n\r\nexport class UQPage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除UQ吗？') === true) {\r\n            await this.controller.deleteUq();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {onUqUpload, serviceClick, uq, services} = this.controller;\r\n        let {id, name, discription, access, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            {caption:'修改UQ', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n        let right = <DropdownActions actions={menuItems} />;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\"\r\n                    left={<FA name=\"database\" className=\"text-primary fa-2x mr-3\" />}>\r\n                    <div><b>{name}</b></div>\r\n                    {disp}\r\n                </LMR>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n           '',\r\n           {\r\n                type: 'component', \r\n                label: '编译代码', \r\n                component: <LMR onClick={()=>onUqUpload()} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"上传编译uq代码\" right={<FA className=\"align-self-center\" name=\"chevron-right\" />} />\r\n            },\r\n            /*\r\n            {type: 'component', label: 'ACCESS', component: <div className=\"py-2\">{\r\n                access? \r\n                    access.split(',').join(', ')\r\n                    : <Muted>(全)</Muted>\r\n            }</div> },\r\n            */\r\n        ];\r\n        return <Page header={'UQ - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={uq} />\r\n            <div className=\"d-flex mx-3 mt-3 mb-1 align-items-end\">\r\n                <Muted style={{display:'block', flex:1}}>Service</Muted>\r\n                <button\r\n                    className=\"btn btn-outline-primary btn-sm\"\r\n                    onClick={()=>this.controller.showNewServicePage()}>\r\n                    增加\r\n                </button>\r\n            </div>\r\n            <List items={services} item={{render:this.renderService, onClick:serviceClick}} />\r\n        </Page>;\r\n    }\r\n    private renderService(service:DevModel.Service, index:number):JSX.Element {\r\n        let {url, server, db, db_type, compile_time} = service;\r\n        let compile = !compile_time?\r\n            <Muted>未编译</Muted> :\r\n            <><Muted>编译: </Muted><EasyDate date={compile_time}/></>;\r\n\r\n        return <LMR className=\"d-flex w-100 align-items-center cursor-pointer py-2 px-3\"\r\n            right={<small>{compile}</small>}\r\n            >\r\n            <div>\r\n                <div>{url}</div>\r\n                <div>{db_type} {db}</div>\r\n                <Muted><ServerSpan id={server} /></Muted>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { UQController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class ListPage extends VPage<UQController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.controller.uq = undefined;\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {uqList: list, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"UQ\" right={right}>\r\n            <List items={list} item={{render: this.listRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private listRow = (item:DevModel.UQ):JSX.Element => {\r\n        let {name, discription, service_count} = item;\r\n        return <LMR className=\"py-1 px-3 align-items-center\"\r\n            left={<FA name=\"database\" className=\"text-primary fa-lg\" />}\r\n            right={<>{service_count}</>}>\r\n            <div className=\"py-2 px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { nav, Controller } from 'tonva-tools';\r\nimport { DevModel } from '../../model';\r\nimport { UqUpload, UpUploadProps } from './uqUpload';\r\nimport { devApi } from 'api';\r\nimport { NewServicePage } from './newServicePage';\r\nimport { ServicePage } from './servicePage';\r\nimport { UQPage } from './uqPage';\r\nimport { ListPage } from './listPage';\r\n\r\nexport class UQController extends Controller {\r\n    private unitId: number;\r\n    uq: DevModel.UQ;\r\n    access: string;\r\n    entities: string;\r\n    @observable uqList: DevModel.UQ[];\r\n    @observable services: DevModel.Service[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.uqList = await devApi.uqs(this.unitId);\r\n        this.openVPage(ListPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.UQ) => {\r\n        this.uq = item;\r\n        await this.loadUqEntities(item.id);\r\n        this.openVPage(UQPage);\r\n    }\r\n\r\n    private async loadUqEntities(uqId: number) {\r\n        let ret = await devApi.uqGetEntities(this.unitId, uqId);\r\n        let r0 = ret[0][0];\r\n        this.access = r0.access;\r\n        this.entities = r0.entities;\r\n        this.services = ret[1];\r\n    }\r\n\r\n    serviceClick = (service: DevModel.Service) => {\r\n        this.openVPage(ServicePage, service);\r\n    }\r\n\r\n    onUqUpload = async() => {\r\n        let onDispose = () => {\r\n        };\r\n        nav.push(<UqUpload uq={this.uq} services={this.services} />, onDispose);\r\n    }\r\n\r\n    saveUq = async (values: DevModel.UQ) => {\r\n        let uq: DevModel.UQ;\r\n        if (this.uq === undefined) {\r\n            uq = _.clone(values);\r\n        }\r\n        else {\r\n            uq = _.clone(this.uq);\r\n            _.merge(uq, values);\r\n        }\r\n        uq.unit = this.unitId;\r\n        let ret = await devApi.saveUq(uq);\r\n        uq.id = ret;\r\n        this.uqList.push(uq);\r\n    }\r\n\r\n    deleteUq = async () => {\r\n        await devApi.delUq(this.unitId, this.uq.id);\r\n        let index = this.uqList.findIndex(v => v.id === this.uq.id);\r\n        if (index >= 0) this.uqList.splice(index);\r\n    }\r\n\r\n    async changeServiceProp(service: DevModel.Service, prop:string, value:any):Promise<any> {\r\n        return await devApi.changeServiceProp(this.unitId, service.id, prop, value);\r\n    }\r\n\r\n    async saveService(service: DevModel.Service):Promise<number> {\r\n        let svc = _.clone(service);\r\n        svc.unit = this.unitId;\r\n        let ret = await devApi.saveService(svc);\r\n        svc.id = ret;\r\n        this.services.push(svc);\r\n        return ret;\r\n    }\r\n\r\n    async delService(service: DevModel.Service) {\r\n        await devApi.delService(this.unitId, service.id);\r\n        let index = this.services.findIndex(v => v.id == service.id);\r\n        if (index >= 0) this.services.splice(index);\r\n    }\r\n\r\n    showNewServicePage = async () => {\r\n        await this.openVPage(NewServicePage);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {LMR, Badge, Muted} from 'tonva-react-form';\r\n\r\nexport interface RowProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    vice: string|JSX.Element;\r\n}\r\n\r\nexport class Row extends React.Component<RowProps> {\r\n    render() {\r\n        let {icon, main, vice} = this.props;\r\n        return <LMR className=\"py-1 px-3 align-items-stretch\"\r\n            left={<Badge size=\"sm\" className=\"pt-1\"><img src={icon} /></Badge>}>\r\n            <div className=\"px-3\">\r\n                <div><b>{main}</b></div>\r\n                <div><Muted>{vice}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport _ from 'lodash';\r\nimport {FormRow, EasyDate, Media, \r\n    Prop, ListProp, PropGrid, List, SearchBox, LMR, Badge, Muted} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates, ServerSpan} from '../tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {Row} from './row';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\n@observer\r\nclass Info extends React.Component<DevModel.Bus> {\r\n    /*\r\n    private rows: Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n    }*/\r\n    async componentDidMount() {\r\n        //await store.dev.buses.loadCurApis();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n\r\n@observer\r\nexport class SchemaView extends React.Component {\r\n    render() {\r\n        let bus = store.dev.buses.cur;\r\n        if (bus === null) return '...';\r\n        let content = bus.schema;\r\n        return <div className=\"d-flex py-2 w-100 align-items-center\" style={{flex:1}}>\r\n            <pre>\r\n                {content}\r\n            </pre>\r\n        </div>;\r\n\r\n    }\r\n}\r\n\r\nconst busesProps:ObjViewProps<DevModel.Bus> = {\r\n    title: 'BUS',\r\n    formRows: [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n        {\r\n            label: 'Schema',\r\n            field: {name: 'schema', type: 'string', maxLength: 2500},\r\n            face: {type: 'textarea', rows: 8}\r\n        },\r\n    ],\r\n    row: (item:DevModel.Bus):JSX.Element => {\r\n        let {owner, name, discription} = item;\r\n        return <Row icon={appItemIcon} main={owner + ' / ' + name} vice={discription} />;\r\n    },\r\n    items: ()=>store.dev.buses,\r\n    repeated: {\r\n        name: 'name',\r\n        err: '跟已有的名称重复',\r\n    },\r\n    info: Info,\r\n};\r\n\r\nexport default busesProps;\r\n","import * as React from 'react';\r\nimport {Prop, PropGrid, LMR, Muted, FA} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates} from '../tools';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\nclass Info extends React.Component<DevModel.Server> {\r\n    render() {\r\n        let {discription, cloud, ip, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;        \r\n        //<Media icon={appIcon} main={discription} discription={ip} />},\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <LMR className=\"py-2\"\r\n                left={<FA name=\"server\" className=\"text-primary fa-2x mr-3\" />}>\r\n                <div><b>{ip}</b></div>\r\n                {disp}\r\n            </LMR>},\r\n            '',\r\n            {type: 'component', label: '开发号', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst serversProps:ObjViewProps<DevModel.Server> = {\r\n    title: 'Server',\r\n    info: Info,\r\n    formRows: [\r\n        {\r\n            label: '描述', \r\n            field: {name: 'discription', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '云服务商', \r\n            field: {name: 'cloud', type: 'string', maxLength: 20, required: true},\r\n        },\r\n        {\r\n            label: 'IP地址', \r\n            field: {name: 'ip', type: 'string', maxLength: 20},\r\n        },\r\n    ],\r\n    row: (item: DevModel.Server):JSX.Element => {\r\n        let {discription, cloud} = item;\r\n        //return <Row main={item.discription} vice={<>{item.cloud}  {item.ip}</>} />;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n            left={<FA name=\"server\" className=\"text-primary fa-lg\" />}>\r\n            <div className=\"px-3\">\r\n                <div><b>{discription}</b></div>\r\n                <div><Muted>{cloud}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    },\r\n    items: ()=>store.dev.servers,\r\n    repeated: {\r\n        name: 'discription',\r\n        err: '重复的描述',\r\n    }\r\n};\r\n\r\nexport default serversProps;\r\n","import * as React from 'react';\r\nimport {Step, Field, Prop, PropGrid, Media} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates, ServerSpan, UqSpan, AppSpan} from '../tools';\r\nimport {Row} from './row';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\nimport {createIdPick, IdPickProps} from '../createIdPick';\r\n\r\nclass Info extends React.Component<DevModel.Service> {\r\n    render() {\r\n        let {url, type, discription, server, app, uq, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let obj:Prop;\r\n        if (app !== undefined)\r\n            obj = {type: 'component', label: 'APP', component: <div className=\"py-2\"><AppSpan id={app} isLink={true} /></div> };\r\n        else\r\n            obj = {type: 'component', label: 'UQ', component: <div className=\"py-2\"><UqSpan id={uq} isLink={true} /></div> };\r\n\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={url} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'component', label: '服务器', component: <div className=\"py-2\"><ServerSpan id={server} isLink={true} /></div> },\r\n            obj,\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\">{item.discription + ' ' + item.cloud + ' ' + item.ip}</div>;\r\n    },\r\n};\r\n\r\nconst idPickAppProps: IdPickProps = {\r\n    caption: '选择APP',\r\n    searchPlaceHolder: '搜索APP',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchApp.first(key);\r\n        return store.dev.searchApp.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchApp.more();\r\n    },\r\n    row: (item:DevModel.App, index:number) => {\r\n        return <div>{item.name + ' ' + item.discription}</div>;\r\n    },\r\n};\r\n\r\nconst idPickUqProps: IdPickProps = {\r\n    caption: '选择UQ',\r\n    searchPlaceHolder: '搜索UQ',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchUq.first(key);\r\n        return store.dev.searchUq.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchUq.more();\r\n    },\r\n    row: (item:DevModel.UQ, index:number) => {\r\n        return <div>{item.name + ' ' + item.discription}</div>;\r\n    },\r\n};\r\n\r\nconst serviceTypeNames = ['中心', '交换', 'APP', 'UQ'];\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst discriptionField:Field = {name: 'discription', type: 'string', maxLength:100};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst bindTypeField:Field = {name: 'type', type: 'number'};\r\nconst bindIdField:Field = {name: 'bindId', type: 'number'};\r\nconst authField:Field = {name: 'auth', type: 'string', maxLength:200};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\nconst discriptionRow = {\r\n    label: '描述',\r\n    field: discriptionField,\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: item.discription + ' ' + item.ip,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n\r\nconst servicesProps:ObjViewProps<DevModel.Service> = {\r\n    title: 'Service',\r\n    info: Info,\r\n    formRows: [\r\n        urlRow,\r\n        discriptionRow,\r\n        serverRow,\r\n    ],\r\n    steps: {\r\n        step1: {\r\n            formRows: [\r\n                {\r\n                    label: '服务类型', \r\n                    field: bindTypeField,\r\n                    face: {\r\n                        type: 'select', \r\n                        list: [\r\n                            {text:'APP', value:2}, \r\n                            {text:'UQ', value:3}\r\n                        ]\r\n                    }\r\n                },\r\n            ],\r\n            next: (values:any) => {\r\n                switch (values['type']) {\r\n                    case 2: return 'appStep';\r\n                    case 3: return 'uqStep';\r\n                }\r\n            },\r\n            ex: '服务类型',\r\n        },\r\n        appStep: {\r\n            formRows: [\r\n                urlRow,\r\n                discriptionRow,\r\n                serverRow,\r\n                {\r\n                    label: 'APP', \r\n                    field: bindIdField,\r\n                    face:{\r\n                        type: 'pick-id', \r\n                        initCaption: '请选择APP', \r\n                        pick: createIdPick(idPickAppProps), //this.idPick,\r\n                        fromPickedItem: (item:DevModel.App)=>{\r\n                            return {id: item.id, caption: item.name + ' ' + item.discription}\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n            next: undefined,\r\n            ex: '绑定APP'\r\n        },\r\n        uqStep: {\r\n            formRows: [\r\n                urlRow,\r\n                discriptionRow,\r\n                serverRow,\r\n                {\r\n                    label: 'UQ', \r\n                    field: bindIdField,\r\n                    face:{\r\n                        type: 'pick-id', \r\n                        initCaption: '请选择UQ', \r\n                        pick: createIdPick(idPickUqProps), //this.idPick,\r\n                        fromPickedItem: (item:DevModel.UQ)=>{\r\n                            return {id: item.id, caption: item.name + ' ' + item.discription}\r\n                        },\r\n                    },\r\n                },                \r\n                { label: 'Auth', field: authField },\r\n            ],\r\n            next: undefined,\r\n            ex: '绑定UQ',\r\n        },\r\n    },\r\n    stepHeader: (step:Step, num:number):JSX.Element => {\r\n        return <div className=\"d-flex justify-content-center align-items-center\">\r\n            <h4><small className=\"text-muted\">第{num}步</small> {step.ex}</h4>\r\n        </div>;\r\n    },\r\n    row: (item:DevModel.Service):JSX.Element => {\r\n        return <Row\r\n            icon={appItemIcon}\r\n            main={item.url}\r\n            vice={serviceTypeNames[item.type] + ': ' + item.discription} />;\r\n    },\r\n    items: ()=>store.dev.services,\r\n    repeated: {\r\n        name: 'url',\r\n        err: 'url重复',\r\n    }\r\n};\r\n\r\nexport default servicesProps;\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {FormRow, TonvaForm, Step, MultiStep, DropdownActions, Action, List, FA, SubmitResult} from 'tonva-react-form';\r\nimport {DevModel} from '../model';\r\nimport { ObjViewProps } from './ObjViewProps';\r\n\r\n@observer\r\nexport class ObjView<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    async componentDidMount() {\r\n        await this.props.items().load();\r\n    }\r\n    //converter(item:T):ListItem {\r\n    //    return this.props.converter(item);\r\n    //}\r\n    newItem() {\r\n        this.props.items().cur = undefined;\r\n        nav.push(<New {...this.props} />);\r\n    }\r\n    itemClick = (item:T) => {\r\n        this.props.items().cur = observable(item);\r\n        nav.push(<Info {...this.props} />);\r\n    }\r\n    render() {\r\n        let {title, items} = this.props;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header={title} right={right}>\r\n            <List items={items().items}\r\n                item={{render: this.props.row, onClick: this.itemClick}}\r\n                // converter={this.props.converter} \r\n                //itemClick={this.itemClick} \r\n                />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass New<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        let ret = await this.props.items().saveCur(values);\r\n        if (ret === true) {\r\n            nav.pop();\r\n        }\r\n        else {\r\n            let repeated = this.props.repeated;\r\n            //this.formView.setError(repeated.name, repeated.err);\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let content;\r\n        let {title, steps, stepHeader} = this.props;\r\n        let {formRows, items} = this.props;\r\n        if (steps !== undefined) {\r\n            content = <MultiStep className=\"mt-4\" header={stepHeader} steps={steps} first=\"step1\" onSubmit={this.onSubmit} />;\r\n        }\r\n        else if (formRows !== undefined) {\r\n            content = <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={formRows} \r\n                onSubmit={this.onSubmit} initValues={items().cur} />;\r\n        }\r\n        else {\r\n            content = \"ObjViewProps: no steps and no formRows\";\r\n        }\r\n        return <Page header={'新增'+title}>\r\n            {content}\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass Info<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private menuItems = [\r\n        {caption:'修改' + this.props.title, action:this.editItem.bind(this), icon:'edit' },\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    editItem() {\r\n        nav.push(<Edit {...this.props} />);\r\n    }\r\n    render() {\r\n        let actions = [];\r\n        let ex = this.props.extraMenuActions;\r\n        if (ex !== undefined) actions.push(...ex);\r\n        actions.push(...this.menuItems);        \r\n        let right = <DropdownActions actions={actions} />\r\n        let item = this.props.items().cur;\r\n        return <Page header={this.props.title + ' - 详细资料'} right={right}>\r\n            <this.props.info {...item} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass Edit<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private actions = [\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentWillMount() {\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        await this.props.items().saveCur(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    render() {\r\n        let right = <DropdownActions actions={this.actions} />\r\n        return <Page header={'修改 '+this.props.title} right={right} back=\"close\">\r\n            <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={this.props.formRows} \r\n                onSubmit={this.onSubmit} initValues={this.props.items().cur} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers } from './cUsers';\r\n\r\nexport class VApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (appUsers: AppUsers, index:number):JSX.Element => {\r\n        let {app, users} = appUsers;\r\n        let {id, name, discription} = app;\r\n        let right = <small className=\"text-muted\">{discription}</small>;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <LMR className=\"mb-2\" right={right}>\r\n                <FA name=\"address-card-o\" className=\"text-primary mr-3\" />\r\n                <b>{name}</b>\r\n            </LMR>\r\n            <div>\r\n                <small className=\"text-muted\">用户: </small>\r\n                {users.length===0?'[无]':users.map(u => u.assigned || u.nick || u.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {appUsersList, searchApp, onAppsClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchApp} \r\n            placeholder=\"搜索App\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={appUsersList} \r\n                item={{render: this.renderRow, onClick:onAppsClick,  key: (item=>item.app.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps } from './cUsers';\r\n\r\nexport class VUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (userApps: UserApps, index:number):JSX.Element => {\r\n        let {user, apps} = userApps;\r\n        let {id, name, nick, icon, assigned} = user;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <div className=\"mb-2\">\r\n                <FA name=\"user-o\" className=\"text-primary mr-3\" />\r\n                <b>{assigned || nick || name}</b>\r\n            </div>\r\n            <div>\r\n                <small className=\"text-muted\">App: </small>\r\n                {apps.length===0?'[无]':apps.map(a => a.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {userAppsList, searchUser, onUsersClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchUser} \r\n            placeholder=\"搜索用户\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={userAppsList} \r\n                item={{render: this.renderRow, onClick:onUsersClick, key: (item=>item.user.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, Muted } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, User } from './cUsers';\r\n\r\nexport class VApp extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, curAppUsers, onAppEditUsers} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onAppEditUsers()}>增减用户</button>;\r\n        return <Page header={'App - ' + (curApp.name)} right={right}>\r\n            <List items={curAppUsers} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (user: User, index:number):JSX.Element => {\r\n        let {name, nick, assigned} = user;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <span>{assigned} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else if (nick)\r\n            content = <span>{nick} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else\r\n            content = <>{name}</>\r\n        return <div className=\"px-3 py-2\">{content}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, App } from './cUsers';\r\n\r\nexport class VUser extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, curUserApps, onUserEditApps} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onUserEditApps()}>增减App</button>;\r\n        return <Page header={'用户 - ' + (curUser.assigned || curUser.nick || curUser.name)}\r\n            right={right}>\r\n            <List items={curUserApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (app: App, index:number):JSX.Element => {\r\n        let {name, discription} = app;\r\n        return <div className=\"px-3 py-2\">{name} {discription}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, Muted, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, User, EditUser } from './cUsers';\r\n\r\nexport class VAppEditUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, appEditUsers, onAppEditUsers} = this.controller;\r\n        return <Page header={curApp.name + ' - 增减用户'} >\r\n            <List items={appEditUsers} item={{render:this.renderUser}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderUser = (editUser: EditUser, index:number):JSX.Element => {\r\n        let {name, nick, assigned, bind} = editUser;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <>{assigned} <Muted>{name}</Muted></>;\r\n        else if (nick)\r\n            content = <>{nick} <Muted>{name}</Muted></>;\r\n        else\r\n            content = <>{name}</>\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onUserChanged(editUser, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={right}>\r\n            {content}\r\n        </LMR>\r\n    }\r\n\r\n    private onUserChanged = async (editUser: EditUser, checked:boolean) => {\r\n        await this.controller.bindAppUser(editUser, checked);\r\n        editUser.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, App, EditApp } from './cUsers';\r\n\r\nexport class VUserEditApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, userEditApps, onUserEditApps} = this.controller;\r\n        return <Page header={'增减App - ' + (curUser.assigned || curUser.nick || curUser.name)}>\r\n            <List items={userEditApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (editApp: EditApp, index:number):JSX.Element => {\r\n        let {name, discription, bind} = editApp;\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onAppChanged(editApp, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2\" right={right}>\r\n            {name} {discription}\r\n        </LMR>\r\n    }\r\n\r\n    private onAppChanged = async (editApp: EditApp, checked:boolean) => {\r\n        await this.controller.bindUserApp(editApp, checked);\r\n        editApp.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, Image, nav } from \"tonva-tools\";\r\nimport { UsersController, User } from \"./cUsers\";\r\nimport { SearchBox } from 'tonva-react-form';\r\nimport { mainApi } from 'api';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VAddUser extends VPage<UsersController> {\r\n    @observable private user: User = null;\r\n    //@observable private addedUser: User;\r\n    private searchBox: SearchBox;\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let searchBox = <SearchBox ref={v=>this.searchBox=v}\r\n            className=\"w-100\"\r\n            onSearch={this.onSearch}\r\n            onFocus={this.onSearchFocus}\r\n            placeholder=\"用户全名/手机号/邮箱\"\r\n             />;\r\n        let content:any;\r\n        if (this.user === null) {\r\n        }\r\n        else if (this.user === undefined) {\r\n            content = <div className=\"text-info p-3\">没有找到用户</div>;\r\n        }\r\n        else {\r\n            let {name, nick, icon} = this.user;\r\n            let divUser:any;\r\n            if (nick) {\r\n                divUser = <><div><b>{nick}</b></div><div>{name}</div></>;\r\n            }\r\n            else {\r\n                divUser = <div><b>{name}</b></div>;\r\n            }\r\n            content = <div>\r\n                <div className=\"m-3 p-3 d-flex bg-white\">\r\n                    <Image src={icon} />\r\n                    <div className=\"ml-3\">{divUser}</div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <button className=\"btn btn-success text-center\" onClick={this.onAddUser}>增加用户</button>\r\n                </div>\r\n            </div>;\r\n        }\r\n        /*\r\n        let divUserAdded:any;\r\n        if (this.addedUser) {\r\n            divUserAdded = <div className=\"p-3\">\r\n                <div>\r\n                    新增用户: {this.addedUser.name} &nbsp; &nbsp; \r\n                    <button className=\"btn btn-success\" \r\n                        onClick={()=>this.controller.onUserEditApps()}>\r\n                        为用户添加App\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        }\r\n        */\r\n        return <Page header={searchBox}>\r\n            {content}\r\n        </Page>;\r\n    })\r\n    //{divUserAdded}\r\n\r\n    private onSearch = async (key:string) => {\r\n        this.user = await mainApi.userFromKey(key);\r\n    }\r\n\r\n    private onAddUser = async () => {\r\n        await this.controller.addUser(this.user.id);\r\n        this.controller.curUser = this.user;\r\n        this.user = null;\r\n        this.searchBox.clear();\r\n        this.replacePage(this.addedPage);\r\n    }\r\n\r\n    private onSearchFocus = () => {\r\n        this.user = null;\r\n        //this.addedUser = null;\r\n        if (this.searchBox) this.searchBox.clear();\r\n    }\r\n\r\n    private onAddApps = () => {\r\n        this.closePage();\r\n        this.controller.onUserEditApps();\r\n    }\r\n\r\n    private onContinueAddUser = () => {\r\n        this.closePage();\r\n        this.controller.onAddUser();\r\n    }\r\n\r\n    private addedPage = () => {\r\n        return <Page header=\"添加成功\">\r\n            <div className=\"p-3 text-center\">\r\n                <div>\r\n                    新增用户: {this.controller.curUser.name}\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-success mr-3\" \r\n                        onClick={this.onAddApps}>\r\n                        为用户添加App\r\n                    </button>\r\n                    <button className=\"btn btn-outline-primary\"\r\n                        onClick={this.onContinueAddUser}>\r\n                        继续添加新用户\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Controller, VPage, Page } from \"tonva-tools\";\r\nimport { mainApi } from 'api';\r\nimport { LMR, FA } from 'tonva-react-form';\r\nimport { VApps } from './vApps';\r\nimport { VUsers } from './vUsers';\r\nimport { VApp } from './vApp';\r\nimport { VUser } from './vUser';\r\nimport { VAppEditUsers } from './vAppEditUsers';\r\nimport { VUserEditApps } from './vUserEditApps';\r\nimport { VAddUser } from './VAddUser';\r\nimport { Unit } from 'model';\r\n\r\nexport interface User {\r\n    id: number;\r\n    name: string;\r\n    nick: string;\r\n    icon: string;\r\n    assigned: string;\r\n}\r\nexport interface App {\r\n    id: number;\r\n    name: string;\r\n    discription: string;\r\n}\r\nexport interface UserApps {\r\n    user: User;\r\n    apps: App[];\r\n}\r\nexport interface AppUsers {\r\n    app: App;\r\n    users: User[];\r\n}\r\nexport interface EditApp extends App {\r\n    bind: number;   // 0: not bind, 1: bind\r\n}\r\nexport interface EditUser extends User {\r\n    bind: number;  // 0: not bind, 1: bind\r\n}\r\n\r\nexport class UsersController extends Controller {\r\n    private unit: Unit;\r\n    @observable userAppsList: UserApps[];\r\n    @observable appUsersList: AppUsers[];\r\n    curUser: User;\r\n    @observable curUserApps: App[];\r\n    @observable userEditApps: EditApp[];\r\n    curApp: App;\r\n    @observable curAppUsers: User[];\r\n    @observable appEditUsers: EditUser[];\r\n\r\n    protected async internalStart(unit:Unit) {\r\n        this.unit = unit;\r\n        let cn = \"bg-white px-3 py-2 my-1\";\r\n        let appIcon = <FA name=\"columns\" className=\"text-primary mr-3\" />;\r\n        let userIcon = <FA name=\"user-plus\" className=\"text-primary mr-3\" />;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.onAddUser}><FA name=\"plus\" /></button>;\r\n        this.openPage(<Page header={'用户管理 - ' +  this.unit.name} right={right}>\r\n            <LMR className={cn} onClick={this.onAppUsers} left={appIcon}>App</LMR>\r\n            <LMR className={cn} onClick={this.onUserApps} left={userIcon}>用户</LMR>\r\n        </Page>);\r\n    }\r\n\r\n    private onAppUsers = async () => {\r\n        await this.loadAppUsers(undefined);\r\n        this.openVPage(VApps);\r\n    }\r\n\r\n    private onUserApps = async () => {\r\n        await this.loadUserApps(undefined);\r\n        this.openVPage(VUsers);\r\n    }\r\n\r\n    private async loadAppUsers(key:string) {\r\n        let list:AppUsers[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitAppUsers(this.unit.id, key, pageStart, pageSize);\r\n        let apps = ret[0];\r\n        let users = ret[1];\r\n        let coll: {[id:number]:AppUsers} = {}\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.id,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            };\r\n            list.push(coll[a.id] = {app:app, users:[]});\r\n        }\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.user,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            }\r\n            coll[u.app].users.push(user);\r\n        }\r\n        this.appUsersList = list;\r\n    }\r\n\r\n    private async loadUserApps(key:string) {\r\n        let list:UserApps[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitUsers(this.unit.id, key, pageStart, pageSize);\r\n        let users = ret[0];\r\n        let apps = ret[1];\r\n        let coll: {[id:number]:UserApps} = {}\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.id,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            };\r\n            list.push(coll[u.id] = {user:user, apps:[]});\r\n        }\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.app,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            }\r\n            coll[a.user].apps.push(app);\r\n        }\r\n        this.userAppsList = list;\r\n    }\r\n\r\n    searchUser = async(key:string) => {\r\n        await this.loadUserApps(key);\r\n    }\r\n\r\n    searchApp = async(key:string) => {\r\n        await this.loadAppUsers(key);\r\n    }\r\n\r\n    onAppsClick = async (appUsers: AppUsers) => {\r\n        this.curApp = appUsers.app;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curAppUsers = await mainApi.unitOneAppUsers(this.unit.id, this.curApp.id, pageStart, pageSize);\r\n        this.openVPage(VApp);\r\n    }\r\n\r\n    onUsersClick = async (userApps: UserApps) => {\r\n        this.curUser = userApps.user;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curUserApps = await mainApi.unitOneUserApps(this.unit.id, this.curUser.id, pageStart, pageSize);\r\n        this.openVPage(VUser);\r\n    }\r\n\r\n    onAppEditUsers = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.appEditUsers = await mainApi.unitAppEditUsers(this.unit.id, this.curApp.id, key, pageStart, pageSize);\r\n        this.openVPage(VAppEditUsers);\r\n    }\r\n\r\n    onAddUser = () => {\r\n        this.openVPage(VAddUser);\r\n    }\r\n\r\n    onUserEditApps = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.userEditApps = await mainApi.unitUserEditApps(this.unit.id, this.curUser.id, key, pageStart, pageSize);\r\n        this.openVPage(VUserEditApps);\r\n    }\r\n\r\n    bindAppUser = async(user:User, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, this.curApp.id, user.id, checked===true? 1:0);\r\n        let appUsers = this.appUsersList.find(v => v.app.id === this.curApp.id);\r\n        if (checked === true) {\r\n            this.curAppUsers.push(user);\r\n            if (appUsers) appUsers.users.push(user);\r\n        }\r\n        else {\r\n            let index = this.curAppUsers.findIndex(v => v.id === user.id);\r\n            if (index>=0) this.curAppUsers.splice(index, 1);\r\n            if (appUsers) {\r\n                index = appUsers.users.findIndex(v => v.id === user.id);\r\n                if (index>=0) appUsers.users.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    bindUserApp = async(app:App, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, app.id, this.curUser.id, checked===true? 1:0);\r\n        if (this.userAppsList === undefined) return;\r\n        let userApps = this.userAppsList.find(v => v.user.id === this.curUser.id);\r\n        if (checked === true) {\r\n            this.curUserApps.push(app);\r\n            if (userApps) userApps.apps.push(app);\r\n        }\r\n        else {\r\n            let index = this.curUserApps.findIndex(v => v.id === app.id);\r\n            if (index>=0) this.curUserApps.splice(index, 1);\r\n            if (userApps) {\r\n                index = userApps.apps.findIndex(v => v.id === app.id);\r\n                if (index>=0) userApps.apps.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    addUser = async (userId: number) => {\r\n        await mainApi.unitAddUser(this.unit.id, userId);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, appInFrame, Controller, VPage, Image, Edit, ItemSchema, UiSchema, StringSchema, ImageSchema, UiImageItem, UiTextItem} from  'tonva-tools'; \r\nimport {List, LMR, FA, StackedFA, PropGrid, Prop, Muted} from 'tonva-react-form';\r\nimport {StringValueEdit} from './tools';\r\nimport {Unit, UnitApps, UnitAdmin, DevModel} from './model';\r\nimport {store} from './store';\r\nimport Administors from './Administors';\r\nimport AppsPage from './Apps';\r\nimport {Members} from './Members';\r\nimport { mainApi } from 'api';\r\nimport { COrganization } from 'organization';\r\nimport {\r\n    ObjViewProps, ObjView,\r\n    //appsProps, \r\n    busesProps, \r\n    serversProps, /*uqdbsProps, */servicesProps, UQController} from './Dev';\r\nimport { AppController } from './Dev';\r\nimport { UsersController } from 'Users';\r\n\r\nexport class CAdmin extends Controller {\r\n    isProduction: boolean;\r\n    adminUnits: UnitAdmin[]; // 仅仅为Admins调试用。从登录用户获取units\r\n\r\n    private async loadAdminUnits(): Promise<void> {        \r\n        let ret = await mainApi.userAdminUnits();\r\n        let adminUnits = this.adminUnits = ret[0];\r\n        console.log('loadAdminUnits', adminUnits);\r\n        if (adminUnits.length === 1) {\r\n            appInFrame.unit = adminUnits[0].id;\r\n            await store.loadUnit();\r\n        }\r\n    }\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        store.init();\r\n        \r\n        this.isProduction = document.location.hash.startsWith('#tv');\r\n        console.log('admins isProduction %s', this.isProduction);\r\n\r\n        if (this.isProduction === false) {\r\n            await this.loadAdminUnits();\r\n            this.openVPage(VAdmin);\r\n            return;\r\n        }\r\n        await store.loadUnit();\r\n        this.openVPage(VAdmin);\r\n    /*\r\n        let user = nav.user;\r\n        if (user === undefined) {\r\n            console.log('autorun: user has logged out');\r\n            return;\r\n        }\r\n    \r\n        console.log('autorun login');\r\n        */\r\n       /*\r\n        setTimeout(async () => {\r\n            // 等待 tonva-tools 里面的initSubWin的nav.user的赋值\r\n            // 这个地方实际上有问题的，不应该这么写。程序逻辑顺序逻辑错误。\r\n            // 2018-11-5: 临时凑合用延时的方式来解决。\r\n            await store.loadUnit();\r\n            this.showVPage(VAdmin);\r\n        }, 200);\r\n        */\r\n    }\r\n}\r\n\r\nexport class VAdmin extends VPage<CAdmin> {\r\n    async open() {\r\n        let {isProduction, adminUnits} = this.controller;\r\n        if (isProduction === false) {\r\n            switch (adminUnits.length) {\r\n                default: this.openPage(this.selectUnitPage); return;\r\n                case 0: this.openPage(this.noUnitPage); return;\r\n                case 1: this.openPageElement(<AdminPage />); return;\r\n            }\r\n        }\r\n\r\n        if (store.unit === undefined) {\r\n            this.openPage(this.noUnitPage);\r\n            return;\r\n        }\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n\r\n    private selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={logout}>\r\n            <List items={this.controller.adminUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>;\r\n    }\r\n\r\n    private noUnitPage = () => {\r\n        let {nick, name} = nav.user;\r\n        return <Page header=\"没有小号\" logout={logout}>\r\n            <div className=\"p-3 small text-info\">\r\n                {nick || name}: 没有需要管理的小号\r\n            </div>\r\n        </Page>\r\n    }\r\n\r\n    protected get view() {return undefined}\r\n\r\n    renderRow = (item: UnitAdmin, index: number):JSX.Element => {\r\n        return <LMR className=\"p-2\" right={'id: ' + item.id}>\r\n            <div>{item.nick || item.name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: UnitAdmin) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        await store.loadUnit();\r\n        this.closePage();\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n}\r\n\r\nconst logout = async () => {\r\n    store.logout();\r\n}\r\n\r\ninterface ActionItem {\r\n    main: string | JSX.Element;\r\n    right?: string | JSX.Element;\r\n    icon: string|JSX.Element;\r\n    page?: new (props:any) => React.Component;\r\n    //onClick: () => nav.push(<Administors />),\r\n    controller?: Controller;\r\n}\r\n\r\ninterface DevItem<T extends DevModel.ObjBase> {\r\n    title: string;\r\n    count: number;\r\n    icon: string;\r\n    objProps?: ObjViewProps<T>;\r\n    onClick?: ()=>void;\r\n}\r\n\r\ntype Item = ActionItem|DevItem<DevModel.ObjBase>|string;\r\n\r\nconst rArrow = <FA name=\"chevron-right\" />;\r\nconst typeCaptions = {\r\n    1: '开发号',\r\n    2: '小号',\r\n    3: '系统号'\r\n}\r\n@observer\r\ndefault class AdminPage extends React.Component {\r\n    private caption:string;\r\n\r\n    async componentWillMount() {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        this.caption = typeCaptions[type];\r\n        /*\r\n        switch (type) {\r\n            case 1: this.caption = '开发号'; break;\r\n            case 2: this.caption = '小号'; break;\r\n            case 3: this.caption = '系统号'; break;\r\n        }*/\r\n        if ((type & 1) !== 0) {\r\n            await store.dev.loadCounts();\r\n        }\r\n    }\r\n\r\n    private appsAction:ActionItem = {\r\n        main: '启停App',\r\n        right: rArrow, //'增减',\r\n        icon: 'play-circle-o',\r\n        page: AppsPage,\r\n    };\r\n    private usersAction:ActionItem = {\r\n        main: '用户角色',\r\n        right: rArrow,\r\n        icon: 'users',\r\n        page: Members,\r\n    };\r\n    private newUsersAction:ActionItem = {\r\n        main: '用户管理',\r\n        right: rArrow,\r\n        icon: 'user-o',\r\n        controller: new UsersController(undefined),\r\n    };\r\n    /*\r\n    private devAction:Item = {\r\n        main: <DevActions />,\r\n        right: '程序开发相关管理',\r\n        icon: 'laptop',\r\n        //page: Dev,\r\n    };*/\r\n    private adminsAction:ActionItem = {\r\n        main: '管理员',\r\n        right: rArrow,\r\n        icon: 'universal-access',\r\n        page: Administors,\r\n    };\r\n\r\n    private cOrganization = new COrganization;\r\n    private organizeAction:ActionItem = {\r\n        main: this.cOrganization.label,\r\n        right: rArrow,\r\n        icon: this.cOrganization.icon,\r\n        controller: this.cOrganization\r\n    };\r\n\r\n    private noneAction:ActionItem = {\r\n        main: '请耐心等待分配任务',\r\n        icon: 'hourglass-start',\r\n    };\r\n\r\n    private buildItems():Item[] {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        let items:Item[] = [];\r\n        if (isOwner === 1) {\r\n            items.push(this.adminsAction);\r\n        }\r\n        console.log('unit:', unit);\r\n        if (isAdmin === 1) {\r\n            if ((type & 2) !== 0) {\r\n                // unit\r\n                items.push(\r\n                    '小号管理',\r\n                    this.appsAction, \r\n                    //this.usersAction, \r\n                    this.newUsersAction, \r\n                    //this.organizeAction\r\n                );\r\n            }\r\n            if ((type & 1) !== 0) {\r\n                // dev unit\r\n                let {counts} = dev;\r\n                //if (counts !== undefined) {\r\n                let devItems:(DevItem<DevModel.ObjBase>|string)[] = [\r\n                    '开发号管理',\r\n                    {\r\n                        title: 'APP', \r\n                        count: counts && counts.app, \r\n                        icon: 'tablet', \r\n                        onClick: () => new AppController(undefined).start(unit.id),\r\n                    },\r\n                    {\r\n                        title: 'UQ', \r\n                        count: counts && counts.uq, \r\n                        icon: 'database', \r\n                        onClick: () => new UQController(undefined).start(unit.id),\r\n                    },\r\n                    {\r\n                        title: 'BUS', \r\n                        count: counts && counts.bus, \r\n                        icon: 'cogs', \r\n                        objProps: busesProps,\r\n                    },\r\n                    {\r\n                        title: 'Server', \r\n                        count: counts && counts.server, \r\n                        icon: 'server', \r\n                        objProps: serversProps,\r\n                    },\r\n                ];\r\n                items.push(...devItems);\r\n            //}\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n    private row = (item:Item, index:number):JSX.Element => {\r\n        if (typeof item === 'string') {\r\n            return <div className=\"px-3 pt-3 pb-1 small text-muted\" style={{backgroundColor:'#f0f0f0'}}>{item}</div>;\r\n        }\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        let left:any, mid:any, r:any;\r\n        if (title !== undefined) {\r\n            let {icon, count} = item as DevItem<DevModel.ObjBase>;\r\n            left = <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" />;\r\n            mid = title;\r\n            r = count>0 && <span>{count}</span>;\r\n        }\r\n        else {\r\n            let {right, main, icon} = item as ActionItem;\r\n            left = typeof icon === 'string'? \r\n                <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" /> :\r\n                item.icon;\r\n            mid = main;\r\n            r = <span>{right}</span>;\r\n        }\r\n        return <LMR className=\"px-3 py-2 align-items-center\" left={left} right={r}>\r\n            <div className=\"px-3\"><b>{mid}</b></div>\r\n        </LMR>;\r\n    }\r\n    private rowClick = async (item:Item) => {\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        if (title !== undefined) {\r\n            let {objProps, onClick} = item as DevItem<DevModel.ObjBase>;\r\n            if (objProps !== undefined)\r\n                return nav.push(<ObjView {...objProps} />);\r\n            else {\r\n                onClick();\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            let {page:P, controller} = item as ActionItem;\r\n            if (P !== undefined)\r\n                nav.push(<P />);\r\n            else {\r\n                await controller.start(store.unit);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        if (unit === undefined) {\r\n            console.log(\"admin render without unit\");\r\n            return null;\r\n        }\r\n        console.log(\"admin render with unit\");\r\n        let items = this.buildItems();\r\n        if (items === undefined) {\r\n            return <Page header=\"\" />;\r\n        }\r\n        let header:any, top:any;\r\n        if (unit !== undefined) {\r\n            let {name, nick, icon, discription} = unit;\r\n            header = nick || name;\r\n            if (this.caption !== undefined) header = this.caption + ' - ' + header;            \r\n            top = <LMR className='px-3 my-4 bg-white py-2 cursor-pointer' onClick={()=>nav.push(<UnitProps />)}\r\n                left={<div><Image className=\"w-3c h-3c\" src={icon} /></div>}>\r\n                <div className=\"px-3\">\r\n                    <h6 className='text-dark'>{name}</h6>\r\n                    <h6><small className='text-secondary'>{nick}</small></h6>\r\n                    <div className='small text-info'>{discription}</div>\r\n                </div>\r\n            </LMR>;\r\n        }\r\n        else {\r\n            header = '系统管理';\r\n        }\r\n        return <Page header={header} logout={logout}>\r\n            {top}\r\n            <List items={items} item={{render:this.row, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass UnitProps extends React.Component {\r\n    /*\r\n    private rows:Prop[] = [\r\n        '',\r\n        {label: '标志图', type: 'string', name: 'icon'},\r\n        '=',\r\n        {label: '唯一号', type: 'string', name: 'name'},\r\n        {\r\n            label: '名称', \r\n            type: 'string',\r\n            name: 'nick', \r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改名称\"\r\n                value={store.unit.nick}\r\n                onChanged={this.onNickChanged} \r\n                info=\"好的名字会提升接受度\" />)\r\n        },\r\n        {\r\n            label: '说明',\r\n            type: 'string',\r\n            name: 'discription',\r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改说明\"\r\n                value={store.unit.discription}\r\n                onChanged={this.onDiscriptionChanged} \r\n                info=\"对小号做一个说明\" />)\r\n        },\r\n    ];\r\n    */\r\n    private schema:ItemSchema[] =[\r\n        {name: 'icon', type: 'image'} as ImageSchema,\r\n        {name: 'nick', type: 'string'} as StringSchema,\r\n        {name: 'discription', type: 'string'} as StringSchema,\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'标志图'} as UiImageItem,\r\n            discription: {widget:'text', label:'描述', placeholder:'简短清晰的描述'} as UiTextItem,\r\n        }\r\n    }\r\n    /*\r\n    async onNickChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('nick', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('discription', value);\r\n    }\r\n    */\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        //await userApi.userSetProp(name, newValue);\r\n        await store.unitChangeProp(name, newValue);\r\n        //this.data[name] = newValue;\r\n        //nav.user[name] = newValue;\r\n        //nav.saveLocalUser();\r\n    }\r\n    //<PropGrid rows={this.rows} values={store.unit} alignValue=\"right\" />\r\n    render() {\r\n        return <Page header=\"小号信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={store.unit}\r\n                onItemChanged={this.onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\nimport { nav, NavView } from 'tonva-tools';\nimport { CAdmin } from './Admin';\nimport './App.css';\n\nclass App extends React.Component {\n    async onLogined() {\n        let loc = document.location;\n        nav.clear();\n        //nav.push(<StartPage />);\n        let cAdmin = new CAdmin({});\n        await cAdmin.start();\n    }\n    render() {\n        return (\n            <NavView onLogined={this.onLogined} />\n        )\n    }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}