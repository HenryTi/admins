{"version":3,"sources":["tonva-tools/index.ts","tonva-react-form/index.ts","tonva-react-uq/controllers/CVEntity.tsx","tonva-tools/ui/nav.tsx","tonva-react-uq/controllers/form/viewModel.tsx","tonva-tools/net/guestApi.ts","tonva-tools/net/index.ts","tonva-react-uq/tools/jsonStringify.ts","tonva-react-uq/tools/tv.tsx","tonva-react-uq/tools/index.ts","tonva-tools/net/appBridge.ts","tonva-tools/ui/index.ts","tonva-tools/ui/page.tsx","tonva-tools/net/httpChannelUI.ts","tonva-tools/net/uqApi.ts","tonva-react-uq/controllers/link/cLink.tsx","tonva-react-uq/controllers/link/index.ts","tonva-tools/net/wsChannel.ts","tonva-react-form/uid.ts","tonva-tools/ui/image.tsx","tonva-tools/net/host.ts","tonva-tools/user.ts","tonva-tools/ui/edit/itemEdit.tsx","tonva-tools/uid.ts","tonva-react-uq/controllers/tuid/vTuidMain.tsx","tonva-react-uq/controllers/tuid/vTuidEdit.tsx","tonva-react-uq/controllers/tuid/vTuidSelect.tsx","tonva-react-uq/controllers/tuid/vTuidView.tsx","tonva-react-uq/controllers/tuid/vTuidInfo.tsx","tonva-react-uq/controllers/tuid/pageItems.ts","tonva-react-uq/controllers/tuid/vTuidList.tsx","tonva-react-uq/controllers/tuid/cTuid.ts","tonva-react-uq/controllers/tuid/index.tsx","tonva-react-uq/controllers/form/vBand.tsx","tonva-react-uq/controllers/form/vSubmit.tsx","tonva-react-uq/controllers/form/rule.ts","tonva-react-uq/controllers/form/vField/vField.tsx","tonva-react-uq/controllers/form/vField/vComputeField.tsx","tonva-react-uq/controllers/form/vArr.tsx","tonva-react-uq/controllers/form/vField/vTuidField.tsx","tonva-react-uq/controllers/form/bandsBuilder.ts","tonva-react-uq/controllers/form/vField/buildVmField.ts","tonva-react-uq/controllers/form/vForm.tsx","tonva-react-uq/controllers/form/index.ts","tonva-tools/net/httpChannel.ts","tonva-tools/ui/res.ts","tonva-react-uq/controllers/index.ts","tonva-react-form/form/control/control.tsx","tonva-react-form/form/control/buttonsControl.tsx","tonva-react-form/form/control/charsControl.tsx","tonva-react-form/form/control/stringControl.tsx","tonva-react-form/form/control/numberControl.tsx","tonva-react-form/form/control/unknownControl.tsx","tonva-react-form/form/control/pickIdControl.tsx","tonva-react-form/form/control/pickTuidControl.tsx","tonva-react-form/form/control/pickControl.tsx","tonva-react-form/form/control/index.ts","tonva-react-form/form/control/checkControl.tsx","tonva-react-form/form/control/radioControl.tsx","tonva-react-form/form/control/selectControl.tsx","tonva-react-form/form/control/textAreaControl.tsx","tonva-react-uq/entities/entity.ts","tonva-react-uq/entities/tuid.ts","tonva-react-uq/entities/action.ts","tonva-react-uq/entities/sheet.ts","tonva-react-uq/entities/query.ts","tonva-react-uq/entities/book.ts","tonva-react-uq/entities/history.ts","tonva-react-uq/entities/map.ts","tonva-react-uq/entities/pending.ts","tonva-react-uq/entities/entities.ts","tonva-react-uq/entities/index.ts","tonva-react-form/form/rowContainer/index.tsx","tonva-tools/net/apiBase.ts","tonva-tools/ui/pageHeader.tsx","tonva-react-uq/controllers/query/defaultRow.tsx","tonva-react-uq/controllers/query/vQueryMain.tsx","tonva-react-uq/controllers/query/vQuerySelect.tsx","tonva-react-uq/controllers/query/cQuery.ts","tonva-react-uq/controllers/query/index.ts","tonva-tools/ui/edit/imageItemEdit.tsx","tonva-tools/ui/loading.tsx","tonva-tools/ui/resUploader.tsx","tonva-react-form/form/index.ts","tonva-react-form/form/formView.tsx","tonva-react-uq/controllers/CApp.tsx","tonva-react-uq/controllers/icons.tsx","tonva-react-uq/controllers/ControllerUq.ts","tonva-react-uq/centerApi.ts","tonva-react-uq/controllers/sheet/vMain.tsx","tonva-react-uq/controllers/sheet/vNew.tsx","tonva-react-uq/controllers/sheet/vSheetView.tsx","tonva-react-uq/controllers/sheet/vEdit.tsx","tonva-react-uq/controllers/sheet/vSheetAction.tsx","tonva-react-uq/controllers/sheet/vSchema.tsx","tonva-react-uq/controllers/sheet/vArchives.tsx","tonva-react-uq/controllers/sheet/vList.tsx","tonva-react-uq/controllers/sheet/vArchived.tsx","tonva-react-uq/controllers/sheet/vSheet.tsx","tonva-react-uq/controllers/sheet/vSaved.tsx","tonva-react-uq/controllers/sheet/vSheetProcessing.tsx","tonva-react-uq/controllers/sheet/cSheet.ts","tonva-react-uq/controllers/sheet/index.ts","tonva-react-uq/controllers/book/vBookMain.tsx","tonva-react-uq/controllers/book/cBook.ts","tonva-react-uq/controllers/uq/vUq.tsx","tonva-react-uq/controllers/uq/cUq.tsx","tonva-react-uq/controllers/uq/index.ts","tonva-react-uq/controllers/map/vMain.tsx","tonva-react-uq/controllers/map/inputValues.tsx","tonva-react-uq/controllers/map/cMap.ts","tonva-react-uq/controllers/map/index.ts","tonva-react-uq/controllers/action/vActionMain.tsx","tonva-react-uq/controllers/action/cAction.ts","tonva-react-uq/controllers/action/index.ts","tonva-react-uq/controllers/history/vHistoryMain.tsx","tonva-react-uq/controllers/history/cHistory.ts","tonva-react-uq/controllers/history/index.ts","tonva-react-uq/controllers/pending/vPendingMain.tsx","tonva-react-uq/controllers/pending/cPending.ts","tonva-react-uq/controllers/pending/index.ts","tonva-tools/net/netToken.ts","tonva-tools/entry/userApi.ts","tonva-tools/left0.ts","tonva-tools/ui/VM.tsx","tonva-tools/ui/schema/index.ts","tonva-tools/ui/rules/index.ts","tonva-tools/pageItems.ts","tonva-tools/cacheIds.ts","tonva-react-form/form/TonvaForm.tsx","tonva-react-form/dropDownActions/index.tsx","tonva-react-form/easyDate/index.tsx","tonva-react-form/media.tsx","tonva-react-form/searchBox.tsx","tonva-react-form/multiStep/index.tsx","tonva-tools/ui/form/rules/index.ts","tonva-tools/ui/form/widgets/widget.tsx","tonva-tools/ui/form/widgets/textWidget.tsx","tonva-tools/ui/form/widgets/numberWidget.tsx","tonva-tools/ui/form/widgets/updownWidget.tsx","tonva-tools/ui/form/widgets/dateWidget.tsx","tonva-tools/ui/form/widgets/checkBoxWidget.tsx","tonva-tools/ui/form/widgets/selectWidget.tsx","tonva-tools/ui/form/widgets/idWidget.tsx","tonva-tools/ui/form/widgets/unknown.tsx","tonva-tools/ui/form/widgets/buttonWidget.tsx","tonva-tools/ui/form/context.tsx","tonva-tools/ui/form/widgets/arrComponent.tsx","tonva-tools/ui/form/widgets/imageWidget.tsx","tonva-tools/ui/form/widgets/factory.tsx","tonva-tools/ui/form/widgets/textareaWidget.tsx","tonva-tools/ui/form/widgets/passwordWidget.tsx","tonva-tools/ui/form/widgets/radioWidget.tsx","tonva-tools/ui/form/widgets/rangeWidget.tsx","tonva-tools/ui/form/formRes.ts","tonva-tools/ui/form/form.tsx","tonva-tools/ui/form/field.tsx","tonva-tools/ui/form/index.ts","tonva-react-form/components/Badge.tsx","tonva-react-form/components/LMR.tsx","tonva-react-form/components/FA.tsx","tonva-react-form/components/Muted.tsx","tonva-react-form/components/index.ts","tonva-react-form/list/base.tsx","tonva-react-form/list/clickable.tsx","tonva-react-form/list/static.tsx","tonva-react-form/list/selectable.tsx","tonva-react-form/list/index.tsx","tonva-tools/ui/edit/stringItemEdit.tsx","tonva-tools/ui/edit/radioItemEdit.tsx","tonva-tools/ui/edit/selectItemEdit.tsx","tonva-tools/ui/edit/edit.tsx","tonva-tools/ui/edit/index.tsx","tonva-react-form/propGrid/row.tsx","tonva-react-form/propGrid/propView.tsx","tonva-react-form/propGrid/PropGrid.tsx","tonva-react-form/propGrid/index.tsx","tonva-react-form/listView/listRow.tsx","tonva-react-form/listView/listView.tsx","tonva-tools/ui/tabs/tabs.tsx","tonva-tools/entry/meInfo.tsx","tonva-tools/ui/fetchErrorView.tsx","tonva-tools/local.ts","tonva-tools/img/logo.svg","api/mainApi.ts","api/devApi.ts","store/admins.ts","store/dev.ts","store/cacheIds.ts","store/index.ts","Administors/NewFellow.tsx","Administors/EditAdmin.tsx","Administors/index.tsx","tools/idDates.tsx","tools/span.tsx","tools/unitSpan.tsx","consts.ts","tools/uqSpan.tsx","tools/appSpan.tsx","tools/serverSpan.tsx","tools/stringValueEdit.tsx","tools/idPickPage.tsx","Apps/info.tsx","Apps/new.tsx","Apps/index.tsx","Members/newRole.tsx","Members/roleApps.tsx","Members/memberPage.tsx","Members/membersPage.tsx","Members/rolePage.tsx","Members/index.tsx","organization/ui/map/teamPerson/index.tsx","organization/ui/index.ts","organization/ui/map/index.ts","organization/ui/tuid/index.ts","organization/ui/tuid/user.tsx","organization/ui/tuid/organization.tsx","organization/ui/query/index.ts","organization/ui/query/teamPosts.tsx","organization/ui/res/index.ts","organization/ui/res/zh/CN.tsx","organization/op/vOpBinding.tsx","organization/op/vAllPosts.tsx","organization/op/vFullFunction.tsx","organization/op/vSearchUser.tsx","organization/op/cOpBinding.tsx","organization/organization.tsx","Dev/apps/editPage.tsx","Dev/apps/appsPage.tsx","Dev/apps/appUqs.tsx","Dev/apps/appPage.tsx","Dev/apps/uqBindPage.tsx","Dev/apps/index.tsx","Dev/uqs/uqUpload.tsx","createIdPick.tsx","Dev/uqs/newServicePage.tsx","Dev/uqs/servicePage.tsx","Dev/uqs/editPage.tsx","Dev/uqs/uqPage.tsx","Dev/uqs/listPage.tsx","Dev/uqs/index.tsx","Dev/row.tsx","Dev/buses.tsx","Dev/servers.tsx","Dev/services.tsx","Dev/ObjView.tsx","Users/vApps.tsx","Users/vUsers.tsx","Users/vApp.tsx","Users/vUser.tsx","Users/vAppEditUsers.tsx","Users/vUserEditApps.tsx","Users/VAddUser.tsx","Users/cUsers.tsx","Admin.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["_left0__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_net__WEBPACK_IMPORTED_MODULE_2__","_ui__WEBPACK_IMPORTED_MODULE_3__","o","_pageItems__WEBPACK_IMPORTED_MODULE_5__","_cacheIds__WEBPACK_IMPORTED_MODULE_6__","_form__WEBPACK_IMPORTED_MODULE_0__","_list__WEBPACK_IMPORTED_MODULE_1__","_dropDownActions__WEBPACK_IMPORTED_MODULE_2__","_easyDate__WEBPACK_IMPORTED_MODULE_3__","_propGrid__WEBPACK_IMPORTED_MODULE_4__","_components__WEBPACK_IMPORTED_MODULE_5__","_media__WEBPACK_IMPORTED_MODULE_6__","_searchBox__WEBPACK_IMPORTED_MODULE_8__","_multiStep__WEBPACK_IMPORTED_MODULE_9__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_3__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_2__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_1__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","__awaiter","_ownerField","cTuidSelect","cSelectFrom","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","tonva_tools__WEBPACK_IMPORTED_MODULE_0__","controller","createForm","mobileHeaderStyle","RegExp","test","navigator","userAgent","minHeight","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_0__","props","waitCount","isHistoryBack","clearError","setState","fetchError","back","bind","navBack","stack","state","wait","window","addEventListener","nav","set","start","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","view","disposer","clear","push","history","pushState","key","ceased","refresh","item","pop","dispose","p","i","len","backLevel","popAndDispose","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","className","_loading__WEBPACK_IMPORTED_MODULE_10__","_fetchErrorView__WEBPACK_IMPORTED_MODULE_4__","assign","map","index","style","visibility","Nav","local","_local__WEBPACK_IMPORTED_MODULE_6__","user","lang","district","_res__WEBPACK_IMPORTED_MODULE_9__","language","culture","guest","g","get","handler","ws","onWsReceiveAny","handlerId","endWsReceive","msg","receive","unitRes","fetch","json","unit","unitName","envUnit","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","REACT_APP_ICON","REACT_APP_ITEM_ICON","REACT_APP_UNIT","Number","_net__WEBPACK_IMPORTED_MODULE_7__","getPredefinedUnitName","unitId","unitFromName","settings","navSettings","hash","document","location","pos","_net_appBridge__WEBPACK_IMPORTED_MODULE_5__","hashParam","substring","startWait","url","resHost","centerHost","resUrl","wsHost","setGuest","exHash","appInFrame","parent","_net_wsChannel__WEBPACK_IMPORTED_MODULE_8__","predefinedUnit","loadPredefinedUnit","notLogined","logined","endWait","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_3__","token","callback","connect","JSON","stringify","saveLocalUser","showAppView","defaultTop","loginTop","withBack","lv","e","then","loginView","default","_page__WEBPACK_IMPORTED_MODULE_2__","header","onClick","logout","logoutClear","cp","ChangePasswordPage","onError","show","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","open","date","Date","getTime","toTimeString","step","__decorate","mobx__WEBPACK_IMPORTED_MODULE_1__","ViewModel","PureJSONContent","JSONContent","RowContent","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","guestApi","uqApi","wsChannel","apiBase","appBridge","host","replacer","value","substr","jsonStringify","Tv","index_module","tuidValue","nullUI","react","ttv","divObj","bi","_$tuid","_$com","t","controllers","com","getTuidContent","val","valueFromId","tonva_react_form","boxIdContent","tv","uqTokens","logoutUqTokens","appsInFrame","_unit","isBridged","setAppInFrame","appHash","parts","split","page","slice","getExHashPos","lastIndexOf","getExHash","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_2__","evt","data","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_4__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_0___default","a","clone","_ui__WEBPACK_IMPORTED_MODULE_1__","subFrameStarted","onReceive","_uqApi__WEBPACK_IMPORTED_MODULE_3__","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","apiName","urlDebug","uqOwner","uqName","uq","onReceiveAppApiMessage","action","uqTokenActions","realUrl","_host__WEBPACK_IMPORTED_MODULE_5__","getUrlOrDebug","onAppApiReturn","buildAppUq","realUnit","getUnit","uqToken","at","opener","appUq","bridgeCenterApi","_nav__WEBPACK_IMPORTED_MODULE_0__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_edit__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_image__WEBPACK_IMPORTED_MODULE_10__","_rules__WEBPACK_IMPORTED_MODULE_12__","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","lodash__WEBPACK_IMPORTED_MODULE_3___default","isSelected","isMounted","t0","onTabClick","load","footer","right","keepHeader","headerClassName","title","redDot","img","redDotView","cn","classnames__WEBPACK_IMPORTED_MODULE_2___default","pageHeader","_pageHeader__WEBPACK_IMPORTED_MODULE_4__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqLocalEntities","localUqs","ls","localStorage","getItem","parse","uqs","loginedUserId","isNet","un","__loadAccess","saveLocal","lodash_default","cloneDeep","removeItem","accessValue","str","setItem","isMatch","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","channel","httpChannel","acc","join","loadAccess","checkAccess","names","post","params","owner","pageStart","pageSize","order","$order","ids","proxy","put","uqApi_UnitxApi","buildChannel","centerAppApi","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","setCenterToken","userId","uqApi_CenterApi","path","uqTokenApi","unitParam","nowTick","tick","callCenterapi","appUqs","appOwner","appName","rLs","rAppOwner","rAppName","uqsPure","obj","cachedUqs","cachedId","retId","retUqs","loadAppUqs","checkUqs","Link","cLink_CLink","classnames_default","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","Image","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","n","_nav__WEBPACK_IMPORTED_MODULE_2__","altImage","startsWith","currentTarget","isDevelopment","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","fetchOptions","headers","Content-Type","tryLocal","getCenterHost","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","findIndex","fetchUrl","debugHostUrl","localCheck","results","all","j","hostString","indexOf","timeout","text","catch","Error","fetchLocalCheck","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","ItemEdit","itemSchema","uiItem","isChanged","internalStart","internalEnd","rules","nv","newValue","verifyRule","rule","Array","isArray","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","render","newButton","proxyLinks","isFrom","size","placeholder","entityRender","entityClick","tonva_tools","vTuidEdit_VTuidEdit","next","vTuidEdit_awaiter","vForm","reset","closePage","finish","getValues","save","unique","setError","isCalling","returnCall","openPageElement","editView","vTuidSelect_VTuidSelect","mainView","react_default","createElement","initKey","onSearchMain","PageItems","renderMainRow","clickMainRow","before","vTuidSelect_awaiter","searchMain","mainRowContent","ceasePage","showDiv","getIdFromObj","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divs","divItems","getDivItems","vTuidView_VTuidView","vTuidView_awaiter","alert","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","tuid","search","vTuidList_VTuidMainListBase","vTuidList_awaiter","renderRow","clickRow","callOnSelected","rowKey","ownerTop","ownerObj","ownerId","onSelected","VTuidMainList","cTuid_CTuid","buildPageItems","first","searchArr","cTuid_CTuidBase","proxies","linkFromName","cFrom","cUqFrom","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","VTuidList","schemaFrom","openVPage","onEdit","itemChanged","cTuidInfo","cTuid_CTuidInfo","cTuidEdit","CTuidEdit","edit","cTuidList","CTuidList","merge","CTuidMain","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","submit","isOk","disabled","caption","mobx_module","Rule","RuleRequired","defy","trim","NaN","RuleNum","RuleInt","isNaN","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","init","buildRules","required","null","checkRules","r","errors","readonly","FormMode","editable","vField_decorate","vField_VInputControl","renderError","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","setValue","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","ch","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","VDateField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","vArr_awaiter","valueBoxs","onRowChanged","rowValues","$owner","list","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","vTuidField_awaiter","showInfo","boxId","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","build","band","getVFields","f","getVArr","getVSubmit","rows","row","fn","initValues","arrList","ctrl","fieldName","valueFromFieldName","propName","buildFieldValues","array","deep","buildObservableValues","vForm_decorate","HttpChannel","isCenter","hostUrl","apiToken","showError","_host__WEBPACK_IMPORTED_MODULE_2__","keys","k","buildOptions","innerFetch","buildError","timeOutHandler","encodeURI","ok","statusText","ct","retJson","toLowerCase","_ui_nav__WEBPACK_IMPORTED_MODULE_1__","_appBridge__WEBPACK_IMPORTED_MODULE_0__","Headers","append","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","_","l","languages","setResOptions","_CApp__WEBPACK_IMPORTED_MODULE_0__","_uq__WEBPACK_IMPORTED_MODULE_2__","_tuid__WEBPACK_IMPORTED_MODULE_4__","_query__WEBPACK_IMPORTED_MODULE_6__","_map__WEBPACK_IMPORTED_MODULE_7__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","_formUI__WEBPACK_IMPORTED_MODULE_12__","_ControllerUq__WEBPACK_IMPORTED_MODULE_13__","_link__WEBPACK_IMPORTED_MODULE_15__","_icons__WEBPACK_IMPORTED_MODULE_16__","control_ControlBase","formView","renderControl","hasError","filled","validate","control_Control","face","setProps","element","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","String","controlContent","component","pickIdControl_decorate","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickTuidControl_decorate","pickControl_PickControl","pickControl_awaiter","Content","pickControl_decorate","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","password","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","ln","Entity","entities","typeId","fieldMaps","sys","sName","jName","tvApi","returns","schema","setSchema","buildFieldsTuid","buildFieldTuid","buildArrFieldsTuid","getTuid","arrName","fieldArr","an","buildFieldsParams","arrResult","pa","rowResult","packRow","packArr","charCodeAt","escape","unpackRow","unpackArr","ch0","fLen","to","vals","maxCacheSize","tuid_Tuid","queue","waitingIds","cache","BoxId","prototype","defineProperty","writable","enumerable","getObj","getCacheValue","toJSON","buildIdBoxer","idName","mainFields","mf","splice","_id","delete","defer","util","has","cacheTuids","moveToHead","shift","proxied","cacheValue","unpackTuidIds","api","getApiFrom","tuids","tuidIds","cacheTuidFieldValues","afterCacheId","cacheDivIds","tuidGet","divName","cacheFieldsInValue","arrValues","tuidDiv","getDiv","tuidSave","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","showTuid","TuidMain","Main","TuidDiv","cacheIds","cApp","cUqFrm","getImportUq","cTuidMainFromName","action_Action","pack","sheet_Sheet","states","op","ops","actions","discription","appId","sheetSave","app","flow","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","mySheets","getStateSheets","query_Query","isPaged","more","hasMore","startField","buildParams","unpackReturns","$page","query","table","book_Book","queryApiName","history_History","map_Map","queries","newAction","newQuery","add","del","pending_Pending","fieldDefaultValue","entities_Entities","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","loadIds","clearCacheTimer","accesses","buildEntities","loadEntities","buildTuids","buildAccess","div","tuidUrl","cacheTimer","newTuid","fromType","fromObj","book","pending","uqId","newBook","newMap","newHistory","newSheet","newPending","buildSheet","ownerField","af","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","refetchApi","ApiBase","getHttpChannel","callFetch","PageHeader","logoutClick","_nav__WEBPACK_IMPORTED_MODULE_1__","showLogout","navChange","hasBack","href","debugLogout","rightView","b","nick","openWindow","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","vQuerySelect_awaiter","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","ImageItemEdit","_itemEdit__WEBPACK_IMPORTED_MODULE_7__","overSize","upload","resUploader","resId","_page__WEBPACK_IMPORTED_MODULE_6__","_resUploader__WEBPACK_IMPORTED_MODULE_3__","multiple","maxSize","border","padding","_image__WEBPACK_IMPORTED_MODULE_4__","_nav__WEBPACK_IMPORTED_MODULE_5__","mobx__WEBPACK_IMPORTED_MODULE_2__","Loading","ResUploader","files","fileInput","FormData","file","abortController","AbortController","signal","onFilesChange","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_4__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_3__","buttons","CApp","tonva_tools__WEBPACK_IMPORTED_MODULE_2__","cImportUqs","cUqCollection","tonva_react_form__WEBPACK_IMPORTED_MODULE_3__","onRowClick","selectUnitPage","appUnits","setSettings","tonvaApp","retErrors","promiseChecks","roleAppUI","buildRoleAppUI","uqUI","newCUq","checks","retError","roles","lodash__WEBPACK_IMPORTED_MODULE_1___default","getCUq","CUq","_uq__WEBPACK_IMPORTED_MODULE_4__","cUqArr","VAppMain","_centerApi__WEBPACK_IMPORTED_MODULE_5__","userAppUnits","showUnsupport","appUnit","loadUqs","clearPrevPages","showMainPage","renderView","userName","sheetTypeId","getCUqFromId","navSheet","appPage","appContent","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","tonva_react_form__WEBPACK_IMPORTED_MODULE_1__","fixWidth","ControllerUq","centerApi","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","getStateLabel","templet","statesCount","filter","isDev","vNew_VSheetNew","vNew_awaiter","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","vEdit_awaiter","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","vSheetAction_awaiter","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","vArchives_awaiter","processing","archiveRow","getArchives","vList_VSheetList","rowClick","vList_awaiter","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSaved_awaiter","vSheetProcessing_VSheetProcessing","cSheet_CSheet","cSheet_awaiter","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","beforeStart","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","schemaLoaded","controllers_tuid","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","baseUrl","loadEntites","collection","warn","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityName","entityType","cFromName","tUI","cEntity","getUI","VUq","vMain_VMapMain","itemRender","ItemRow","remove","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","inputValues_awaiter","cMap_MapItem","cMap_CMap","cMap_awaiter","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","template","v0","q","retFields","newItem","addItem","VMapMain","callParam","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","userApi","_net__WEBPACK_IMPORTED_MODULE_0__","_user__WEBPACK_IMPORTED_MODULE_1__","account","verify","prop","left0","zero","num","fix","Controller","_net__WEBPACK_IMPORTED_MODULE_3__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","_resolve_$","View","VPage","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","mobileRegex","emailRegex","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","mobx__WEBPACK_IMPORTED_MODULE_0__","topDiv","_uid__WEBPACK_IMPORTED_MODULE_1__","bottomDiv","setPageStart","unshift","reverse","CacheIds","maxCount","dict","Map","loadId","_loadIds","_loadId","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_2__","DropdownActions","handleDocumentClick","dropdownOpen","contains","menu","toggle","removeEventListener","isRight","hasIcon","data-toggle","aria-expanded","dropdown-menu","dropdown-menu-right","aria-hidden","EasyDate","now","nDate","getDate","_date","hour","getHours","minute","getMinutes","month","getMonth","hm","getFullYear","Media","disp","px","py","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","MultiStep","lodash__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","_form__WEBPACK_IMPORTED_MODULE_3__","stepViews","topView","onPrev","onNext","stepName","steps","ButtonConten","prefix","btnContent","formProps","setStep","nextStepName","pIcon","sIcon","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","maxMsg","checkMore","integer","widget_Widget","context","fieldProps","contextErrors","onInputChange","changeValue","container","visible","inNode","requiredFlag","FieldContainer","getUiItem","removeErrorWidget","addErrorWidget","isChanging","initData","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","uiLabel","Templet","errorList","tag","textWidget_TextWidget","onKeyDown","internalOnKeyDown","keyCode","onEnter","blur","checkContextRules","renderTemplet","renderErrors","numberWidget_NumberWidget","updownWidget_UpdownWidget","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","selectWidget_decorate","idWidget_IdWidget","idWidget_awaiter","pickId","clearContextError","required-item","cursor-pointer","idWidget_decorate","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","buttonWidget_awaiter","observerRender","widget","widgetType","ButtonClass","context_Context","uiSchema","isRow","widgets","errorWidgets","subContexts","arrRowContexts","itemName","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","buttonName","onButtonClick","checkFieldRules","rowContext","setContextError","clearWidgetsErrors","checkHasError","clearContextErrors","context_decorate","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","itemSchemas","parentData","FormContext","ContextContainer","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","imageWidget_ImageWidget","imageWidget_awaiter","imageItemEdit","imageSrc","end","ui_image","imageWidget_decorate","widgetsFactory","datetime","time","email","updown","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","formRes","zh","form_Form","watch","formData","calcSelectOrDelete","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","ui_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","arrItemOperated","formArrVal","beforeShow","contextType","Badge_Badge","badgeAlign","badgeVertical","LMR_LMR","cursor","LMR_decorate","FA_FA","spin","pull","pulse","rotate","flip","inverse","Muted","base_ListBase","pageItems","selectedItems","nextProps","clickable_Clickable","static_Static","selectable_Selectable","itemsArray","compare","_selectedItems","selected","labelId","si","buildItems","anySelected","onSelect","flex","marginBottom","htmlFor","selectable_decorate","list_List","listBase","nextState","nextContext","updateProps","isLoading","staticRow","list_decorate","stringItemEdit_StringItemEdit","edit_itemEdit","preValue","verifyValue","radioItemEdit_RadioItemEdit","selectItemEdit_SelectItemEdit","edit_Edit","defaultSepClassName","defaultRowContainerClassName","divValue","requireFlag","rowContainerClassName","edit_awaiter","stopEdit","onItemChanged","onItemClick","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","topBorder","bottomBorder","elItems","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","col","labelFixLeft","bk","bg-white","renderLabel","renderProp","align","vAlign","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","row_ComponentPropRow","full","propView_PropView","isGap","PropGrid_PropGrid","propView","listRow_ListRow","pressed","isIcon","noteNum","mid","viceSpan","vice","middle","midSize","unread","uv","va-action","listView_ListView","elHeader","itemClick","converter","ex","listItem","listView_decorate","Tab","_content","contentBuilder","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","tabName","height","display","notifyCircle","userSetProp","FetchErrorView","reApi","_net__WEBPACK_IMPORTED_MODULE_1__","errContent","LocalData","Data","homeTabCur","module","exports","mainApi","toUser","fromUnit","fromApp","fellow","isOwner","isAdmin","apps","member","assigned","devApi","uqsText","service","admins_Admins","store","owners","admins","fellows","unitAdmins","ua","fellowId","unitSetAdmin","removeCur","admin","unitAddAdmin","dev_ObjItems","dev","_load","_save","_inc","_del","_dec","dev_decorate","dev_Apps","searchedUqs","saveApp","delApp","counts","searchUq","searchPageSize","allUqs","appBindUq","dev_Uqs","saveUq","delUq","dev_Buses","buses","saveBus","delBus","bus","dev_Servers","servers","saveServer","delServer","server","dev_Services","services","saveService","delService","changeServiceProp","db","db_type","connection","loadUqServices","SearchItems","dev_Dev","searchApp","searchServer","searchUqdb","cacheIds_CacheUnits","cacheIds_CacheUqs","cacheIds_CacheApps","cacheIds_CacheServers","store_Store","cacheUnits","cacheUqs","cacheApps","cacheServers","memberCount","roleApps","roleMember","roleMembers","memberRoles","unitChangeProp","unitApps","unitMemberCount","uqServer","uqBuilderUrl","unitDeleteApp","inUnit","unitAddApp","unitRoles","unitAddRole","unitRoleChangeProp","unitRoleApps","unitRoleSetApps","unitMembers","unitAssignMember","unitMemberRoles","rId","unitSetMemberRoles","org","store_decorate","store_store","NewFellow_NewFellowPage","onSendInvitation","NewFellow_awaiter","addNew","NewFellow","NewFellow_decorate","EditAdmin_EditAdmin","EditAdmin_awaiter","isRoot","unitAdmin","Fellow","Administors_EditAdmin","EditAdmin_decorate","Administors_AdministorsPage","onNewOwner","newAdmin","onNewAdmin","ownersView","adminsView","onNewFellow","showOwners","showAdmins","Administors","Administors_decorate","idDates_IdDates","date_init","date_update","span","isLink","unitSpan_UnitSpan","unitSpan_UnitInfo","unitSpan_decorate","unitSpan_UnitName","consts_appIcon","appItemIcon","uqSpan_UqSpan","uqSpan_UqInfo","uqSpan_decorate","appSpan_AppSpan","appSpan_AppInfo","public","appSpan_decorate","apis","appSpan_AppRow","serverSpan_ServerSpan","serverSpan_ServerInfo","cloud","ip","serverSpan_decorate","stringValueEdit_StringValueEdit","stringValueEdit_awaiter","errorDiv","info","stringValueEdit_TextValueEdit","onTextAreaChange","idPickPage_IdPickPage","idPickPage_awaiter","candidateItems","searchPlaceHolder","idPickPage_decorate","info_Info","renderUqRow","uqAccess","act","info_awaiter","appActed","newInUnit","restoreUnitApp","stopUnitApp","newApp","addUnitApp","uqAccesses","faName","info_decorate","new_PageApps","new_NewApp","new_awaiter","appClick","renderApp","new_decorate","Apps_AppsPage","loadApps","ban","src_Apps","Apps_decorate","newRole_NewRole","newRole_awaiter","roleApps_RoleApps","renderRoleApp","memberPage_MemberPage","renderMemberRole","setRole","memberPage_SetRole","loadRoles","loadMemberRoles","orgValue","roleUser","onAssigned","roleClick","memberPage_decorate","setMemberRoles","selectRole","renderRole","roleSelect","membersPage_MembersPage","loadMembers","MemberRow","setRoleUser","roleId","membersPage_MemberSearch","renderMember","userClick","membersPage_decorate","members","rolePage_RolePage","roleAppClick","rolePage_RoleApps","loadRoleApps","rolePage_EditRole","onMembersClick","membersLeft","membersRight","editRole","addRoleApp","rolePage_decorate","roleChangeProp","isSysRole","onNameChanged","onDiscriptionChanged","setRoleApps","appSelect","midClassName","Members_Members","newRole","allUsersClick","Members_decorate","src_organization_ui","teamPerson","tonva_react_uq","_super","searchOnPost","querySelect","team","noStaff","staff","noPost","organization","teamPosts","CN","tuidNullCaption","arrNew","arrEdit","fromUser","subject","getMessage","newMessage","editSumbit","sectionTeam","teamOrganization","person","given","sur","gender","section","vOpBinding_VOpBinding","sheetOpsChanged","stateTosView","tosText","tos","organizationRow","teamRow","observableTeamRow","sectionRow","observableSectionRow","postRow","observablePostRow","stateView","vOpBinding_awaiter","saveOps","selectablePosts","teamsList","teams","defaultSelected","onPostSelectChanged","sections","onTeamSelectChanged","onSectionSelectChanged","organizations","posts","postTos","pid","pto","buildSelectablePost","buildSelectableTeams","teamTos","hasAllTeams","teamId","tto","teamTo0","teamTo0Sections","buildSelectableSections","teamTo","selectableTeam0","hasSection","selectableSection","selectableSections","stateTo","configable","stateClick","tosView","opTos","tosTexts","stateToName","toArr","sp","postId","teamCount","st","sectionCount","ss","sectionId","saveSheetStatePosts","vAllPosts_VAllPosts","onCheckChanged","def","saveChange","vAllPosts_awaiter","saveEntityOpForAll","pageRender","buttonSave","lineHeight","fontWeight","listStyleType","blocks","block","getEntityOpForAll","entityOpForAllResult","entityOpForAll","eaa","vAllPosts_decorate","vFullFunction_VFullFunction","users","onStopFully","vFullFunction_awaiter","onSumitStopFully","onCancelStop","_uq","_user","entityOpUserFully","callSearchUser","onUserSelected","renderUser","pageUsers","onSetFully","tuidUser","onCancelFully","renderSelectUser","usersView","vFullFunction_decorate","vSearchUser_VSearchUser","vSearchUser_PageUsers","onUserClick","vSearchUser_awaiter","cOpBinding_COpBinding","appRender","appView","appsView","cOpBinding_awaiter","entityPosts","opTo","postDict","teamDict","sectionDict","sheetClick","sheetClickOld","renderSetting","settingClick","V","uqRender","nameRender","sheetRender","buildPosts","buildAppsUqs","setUqEntities","queryAllTeams","organizationDict","tm","og","sec","lns","setEntities","setSheets","lines","actionSaveEntityOpPost","opName","organization_COrganization","links","organization_VOrganization","organization_awaiter","ServerCaption","editPage_schema","editPage_EditBasePage","editPage_awaiter","moreCandidates","pickServerId","renderServerInput","itemId","editPage_EditPage","editPage_NewPage","appsPage_AppsPage","appList","listRowClick","appRow","spanCaption","appUqs_SearchUqPage","appUqs_awaiter","onUq","getMyUqs","appUqs_decorate","appUqs_AppUqs","removeBind","btnProps","appUqs_Uqs","listHeader","btn","onBind","appPage_AppPage","editItem","appPage_awaiter","deleteItem","deleteApp","menuItems","btnAddUq","uqClick","elAccess","bind_access","uqBindPage_UqBindPage","accessChecked","saveUqBind","uqBindPage_awaiter","removeUqBind","btnDelete","checkAccessList","bc","apps_AppController","apps_awaiter","service_count","buildBindUqs","isNew","uaUq","apps_decorate","uqUpload_UqUpload","upFiles","fileClick","fr","FileReader","onload","uqUpload_UqPage","readAsText","onUpdate","uqUpload_awaiter","update","onUpdateThoroughly","lastModifiedDate","trunc","sz","thoroughly","uqUpload_CompileResult","fileList","fileRender","encType","compiled","doubleClick","pane","getParent","topIntoView","bottomIntoView","texts","seconds","abort","timeHandler","tagName","parentElement","clearTimeHandler","scrollIntoView","reader","getReader","pump","read","done","scrollToBottom","uintArray","encodedString","fromCharCode","apply","decodeURIComponent","uintToString","byteLength","onDoubleClick","wordWrap","whiteSpace","createIdPick","createIdPick_IdPickPage","newServicePage_ServerCaption","urlRow","serverRow","newServicePage_awaiter","dbTypeRow","dbRow","connectionRow","newServicePage_NewServicePage","tonvaForm","bindId","servicePage_ServicePage","onUrlChanged","servicePage_awaiter","changeProp","onDbChanged","onDbTypeChanged","onConnectionChanged","onDeleteClick","servicePage_decorate","editPage_formRows","uqs_editPage_EditBasePage","uqs_editPage_awaiter","uqs_editPage_EditPage","uqs_editPage_NewPage","uqPage_UQPage","uqPage_awaiter","deleteUq","onServiceClick","onUqUpload","serviceClick","btnAddService","showNewServicePage","renderService","compile_time","compile","listPage_ListPage","uqList","uqs_UQController","uqs_awaiter","loadUqEntities","uqGetEntities","r0","svc","uqs_decorate","row_Row","buses_Info","buses_SchemaView","buses_decorate","repeated","idPickAppProps","services_awaiter","idPickUqProps","serviceTypeNames","bindIdField","services_urlRow","discriptionRow","services_serverRow","ObjView_ObjView","ObjView_Info","ObjView_New","ObjView_decorate","saveCur","stepHeader","ObjView_Edit","extraMenuActions","vApps_VApps","appUsers","appUsersList","onAppsClick","searchBox","vUsers_VUsers","userApps","userAppsList","searchUser","onUsersClick","vApp_VApp","curApp","curAppUsers","onAppEditUsers","vUser_VUser","curUser","curUserApps","onUserEditApps","vAppEditUsers_VAppEditUsers","appEditUsers","editUser","onUserChanged","vAppEditUsers_awaiter","bindAppUser","vUserEditApps_VUserEditApps","userEditApps","editApp","onAppChanged","vUserEditApps_awaiter","bindUserApp","VAddUser_VAddUser","onSearchFocus","divUser","onAddUser","VAddUser_awaiter","userFromKey","addUser","addedPage","onAddApps","onContinueAddUser","VAddUser_decorate","cUsers_UsersController","onAppUsers","cUsers_awaiter","loadAppUsers","onUserApps","loadUserApps","unitOneAppUsers","unitOneUserApps","unitAppEditUsers","unitUserEditApps","unitAddUser","appIcon","userIcon","unitAppUsers","coll","unitUsers","cUsers_decorate","Admin_CAdmin","userAdminUnits","adminUnits","loadUnit","isProduction","loadAdminUnits","Admin_VAdmin","noUnitPage","Admin_awaiter","Admin_AdminPage","rArrow","typeCaptions","1","2","3","appsAction","usersAction","newUsersAction","adminsAction","cOrganization","organizeAction","noneAction","objProps","P","loadCounts","appAction","uqAction","busAction","serverAction","Admin_UnitProps","Admin_decorate","src_App_0","cAdmin","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","origin","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0695c184.chunk.js","sourcesContent":["export {left0} from './left0';\r\nexport * from './user';\r\nexport * from './net';\r\nexport * from './ui';\r\nexport * from './uid';\r\nexport {PageItems} from './pageItems';\r\nexport {CacheIds} from './cacheIds';\r\nexport * from './entry';\r\n\r\n","export * from './form';\r\nexport * from './list';\r\nexport * from './dropDownActions';\r\nexport * from './easyDate';\r\nexport * from './propGrid';\r\nexport * from './components';\r\nexport * from './media';\r\nexport * from './listView';\r\nexport * from './searchBox';\r\nexport * from './multiStep';\r\nexport * from './uid';\r\n","import * as React from 'react';\r\nimport { Controller, VPage, View } from 'tonva-tools';\r\nimport { Entity, Field, TuidMain } from '../entities';\r\nimport { CUq } from './uq/cUq';\r\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\r\nimport { CQuerySelect } from './query';\r\nimport { FormUI, FieldTuidUI } from './formUI';\r\nimport { entityIcons } from './icons';\r\nimport { ControllerUq } from './ControllerUq';\r\n\r\nexport interface EntityUI {\r\n    form?: FormUI;\r\n}\r\n\r\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\r\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\r\n        super(cUq, res);\r\n        Object.setPrototypeOf(this.x, cUq.x);\r\n        let {name, typeName} = entity;\r\n        this.entity = entity;\r\n        this.ui = ui; // || entityUI.ui;\r\n        this.label = this.res.label || name;\r\n        this.icon = entityIcons[typeName];\r\n    }\r\n    readonly entity: T;\r\n    readonly ui: UI;\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        return true;\r\n    }\r\n\r\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\r\n        let options = this.buildFormOptions(mode);\r\n        let ret = new VForm(options, onSubmit);\r\n        ret.setValues(values);\r\n        return ret;\r\n    }\r\n\r\n    private buildFormOptions(mode?:FormMode):FormOptions {\r\n        let {fields, arrFields} = this.entity;\r\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\r\n        if (this.res !== undefined) {\r\n            none = this.res['none'];\r\n            submitCaption = this.res['submit'];\r\n            arrNewCaption = this.res['arrNew'];\r\n            arrEditCaption = this.res['arrEdit'];\r\n            arrTitleNewButton = this.res['arrTitleNewButton'];\r\n        }\r\n        if (none === undefined) {\r\n            none = this.cUq.res['none'] || 'none';\r\n        }\r\n        if (submitCaption === undefined)\r\n            submitCaption = this.cUq.res['submit'] || 'Submit';\r\n        if (arrNewCaption === undefined)\r\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\r\n        if (arrEditCaption === undefined)\r\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\r\n        if (arrTitleNewButton === undefined)\r\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\r\n        if (mode === undefined) mode = FormMode.new;\r\n        let formUI = this.ui.form;\r\n        let ret:FormOptions = {\r\n            fields: fields,\r\n            arrs: arrFields,\r\n            ui: formUI,\r\n            res: this.res || {},\r\n            inputs: this.buildInputs(formUI),\r\n            none: none,\r\n            submitCaption: submitCaption,\r\n            arrNewCaption: arrNewCaption,\r\n            arrEditCaption: arrEditCaption,\r\n            arrTitleNewButton: arrTitleNewButton,\r\n            mode: mode,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildInputs(formUI: FormUI):FieldInputs {\r\n        let {fields, arrFields} = this.entity;\r\n        let ret:FieldInputs = {};\r\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\r\n        if (arrFields !== undefined) {\r\n            for (let arr of arrFields) {\r\n                let {name, fields} = arr;\r\n                let items = formUI && formUI.items;\r\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\r\n        if (arr !== undefined) {\r\n            let arrFieldInputs = ret[arr];\r\n            if (arrFieldInputs === undefined) {\r\n                ret[arr] = arrFieldInputs = {};\r\n                ret = arrFieldInputs;\r\n            }\r\n        }\r\n        for (let field of fields) {\r\n            let {name, _tuid} = field;\r\n            if (_tuid === undefined) continue;\r\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\r\n            ret[name] = {\r\n                select: this.buildSelect(field, arr, fieldUI),\r\n                content: this.buildContent(field, arr),\r\n                placeHolder: this.cUq.getTuidPlaceHolder(_tuid),\r\n            };\r\n        }\r\n    }\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\r\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n            let {_tuid, _ownerField} = field;\r\n            let cTuidSelect = await (_tuid as TuidMain).cSelectFrom();\r\n            let param:any = undefined;\r\n            if (_ownerField !== undefined) param = form.getValue(_ownerField.name);\r\n            if (fieldUI && fieldUI.autoList === true) {\r\n                console.log('select search set param=empty string');\r\n                param = '';\r\n            }\r\n            let ret = await cTuidSelect.call(param);\r\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\r\n            if (ret === undefined) return undefined;\r\n            let id = cTuidSelect.idFromItem(ret);\r\n            _tuid.useId(id);\r\n            return id;\r\n        };\r\n    }\r\n\r\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\r\n        return;\r\n    }\r\n\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        return this.cUq.cQuerySelect(queryName);\r\n    }\r\n}\r\n\r\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\r\n    protected readonly entity: T;\r\n    protected readonly ui: UI;\r\n    constructor(controller: C) {\r\n        super(controller);\r\n        this.entity = controller.entity;\r\n        this.ui = controller.ui;\r\n    }\r\n\r\n    get label():string {return this.controller.label}\r\n\r\n    //private _form_$: VForm;\r\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\r\n        //if (this._form_$ !== undefined) return this._form_$;\r\n        return this.controller.createForm(onSubmit, values, mode);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, has} from 'mobx';\r\nimport {User, Guest/*, UserInNav*/} from '../user';\r\nimport {Page} from './page';\r\nimport {netToken} from '../net/netToken';\r\nimport FetchErrorView from './fetchErrorView';\r\nimport {FetchError} from '../fetchError';\r\nimport {appUrl, setAppInFrame, logoutUqTokens, getExHash, getExHashPos} from '../net/appBridge';\r\nimport {LocalData} from '../local';\r\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, appInFrame, isDevelopment, host} from '../net';\r\nimport { WsBase, wsBridge } from '../net/wsChannel';\r\nimport { resOptions } from './res';\r\nimport { Loading } from './loading';\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../css/va-form.css';\r\nimport '../css/va.css';\r\nimport '../css/animation.css';\r\n\r\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\r\n    'BlackBerry|Windows Phone|'  +\r\n    'Opera Mini|IEMobile|Mobile' , \r\n    'i');\r\nconst isMobile = regEx.test(navigator.userAgent);\r\nexport const mobileHeaderStyle = isMobile? {\r\n    minHeight:  '3em'\r\n} : undefined;\r\n\r\nconst logo = require('../img/logo.svg');\r\nlet logMark: number;\r\nconst logs:string[] = [];\r\n\r\nexport interface Props //extends React.Props<Nav>\r\n{\r\n    //view: JSX.Element | (()=>JSX.Element);\r\n    //start?: ()=>Promise<void>;\r\n    onLogined: ()=>Promise<void>;\r\n    notLogined?: ()=>Promise<void>;\r\n};\r\nlet stackKey = 1;\r\nexport interface StackItem {\r\n    key: number;\r\n    view: JSX.Element;\r\n    ceased: boolean;\r\n    confirmClose?: ()=>Promise<boolean>;\r\n    disposer?: ()=>void;\r\n}\r\nexport interface State {\r\n    stack: StackItem[];\r\n    wait: 0|1|2;\r\n    fetchError: FetchError\r\n}\r\n\r\nexport class NavView extends React.Component<Props, State> {\r\n    private stack: StackItem[];\r\n    private htmlTitle: string;\r\n    private waitCount: number = 0;\r\n    private waitTimeHandler?: NodeJS.Timer;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.back = this.back.bind(this);\r\n        this.navBack = this.navBack.bind(this);\r\n        this.stack = [];\r\n        this.state = {\r\n            stack: this.stack,\r\n            wait: 0,\r\n            fetchError: undefined\r\n        };\r\n    }\r\n    async componentWillMount() {\r\n        window.addEventListener('popstate', this.navBack);\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        nav.set(this);\r\n        /*\r\n        let start = this.props.start;\r\n        if (start !== undefined) {\r\n            await start();\r\n        }\r\n        else {\r\n        */\r\n            await nav.start();\r\n        //}\r\n    }\r\n\r\n    get level(): number {\r\n        return this.stack.length;\r\n    }\r\n\r\n    startWait() {\r\n        if (this.waitCount === 0) {\r\n            this.setState({wait: 1});\r\n            this.waitTimeHandler = global.setTimeout(\r\n                () => {\r\n                    this.waitTimeHandler = undefined;\r\n                    this.setState({wait: 2});\r\n                },\r\n                1000) as NodeJS.Timer;\r\n        }\r\n        ++this.waitCount;\r\n        this.setState({\r\n            fetchError: undefined,\r\n        });\r\n    }\r\n\r\n    endWait() {\r\n        setTimeout(() => {\r\n            /*\r\n            this.setState({\r\n                fetchError: undefined,\r\n            });*/\r\n            --this.waitCount;\r\n            if (this.waitCount === 0) {\r\n                if (this.waitTimeHandler !== undefined) {\r\n                    clearTimeout(this.waitTimeHandler);\r\n                    this.waitTimeHandler = undefined;\r\n                }\r\n                this.setState({wait: 0});\r\n            }\r\n        },100);\r\n    }\r\n\r\n    async onError(fetchError: FetchError)\r\n    {\r\n        let err = fetchError.error;\r\n        if (err !== undefined && err.unauthorized === true) {\r\n            await nav.showLogin(undefined);\r\n            return;\r\n        }\r\n        this.setState({\r\n            fetchError: fetchError,\r\n        });\r\n    }\r\n\r\n    show(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.clear();\r\n        return this.push(view, disposer);\r\n    }\r\n\r\n    push(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.removeCeased();\r\n        if (this.stack.length > 0) {\r\n            window.history.pushState('forward', null, null);\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key,\r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        this.refresh();\r\n        //console.log('push: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    replace(view: JSX.Element, disposer?: ()=>void): number {\r\n        let item:StackItem = undefined;\r\n        let stack = this.stack;\r\n        if (stack.length > 0) {\r\n            item = stack.pop();\r\n            //this.popAndDispose();\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key, \r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        if (item !== undefined) this.dispose(item.disposer);\r\n        this.refresh();\r\n        //console.log('replace: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    ceaseTop(level:number = 1) {\r\n        let p = this.stack.length - 1;\r\n        for (let i=0; i<level; i++, p--) {\r\n            if (p < 0) break;\r\n            let item = this.stack[p];\r\n            item.ceased = true;\r\n        }\r\n    }\r\n\r\n    pop(level:number = 1) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        //console.log('pop start: %s pages level=%s', len, level);\r\n        if (level <= 0 || len <= 1) return;\r\n        if (len < level) level = len;\r\n        let backLevel = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            if (stack.length === 0) break;\r\n            //stack.pop();\r\n            this.popAndDispose();\r\n            ++backLevel;\r\n        }\r\n        if (backLevel >= len) backLevel--;\r\n        this.refresh();\r\n        if (this.isHistoryBack !== true) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(backLevel);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n        //console.log('pop: %s pages', stack.length);\r\n    }\r\n\r\n    popTo(key: number) {\r\n        if (key === undefined) return;\r\n        if (this.stack.find(v => v.key === key) === undefined) return;\r\n        while (this.stack.length >0) {\r\n            let len = this.stack.length;\r\n            let top = this.stack[len-1];\r\n            if (top.key === key) break;\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    topKey():number {\r\n        let len = this.stack.length;\r\n        if (len === 0) return undefined;\r\n        return this.stack[len-1].key;\r\n    }\r\n\r\n    removeCeased() {\r\n        for (;;) {\r\n            let p=this.stack.length-1;\r\n            if (p < 0) break;\r\n            let top = this.stack[p];\r\n            if (top.ceased === false) break;\r\n            let item = this.stack.pop();\r\n            let {disposer} = item;\r\n            this.dispose(disposer);\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    private popAndDispose() {\r\n        this.removeCeased();\r\n        let item = this.stack.pop();\r\n        if (item === undefined) return;\r\n        let {disposer} = item;\r\n        this.dispose(disposer);\r\n        this.removeCeased();\r\n        return item;\r\n    }\r\n\r\n    private dispose(disposer:()=>void) {\r\n        if (disposer === undefined) return;\r\n        let item = this.stack.find(v => v.disposer === disposer);\r\n        if (item === undefined) disposer();\r\n    }\r\n\r\n    clear() {\r\n        let len = this.stack.length;\r\n        while (this.stack.length > 0) this.popAndDispose();\r\n        //this.refresh();\r\n        if (len > 1) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(len-1);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n    }\r\n\r\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        let top = stack[len-1];\r\n        top.confirmClose = confirmClose;\r\n    }\r\n\r\n    private isHistoryBack:boolean = false;\r\n    navBack() {\r\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\r\n        this.isHistoryBack = true;\r\n        this.back(true);\r\n        this.isHistoryBack = false;\r\n    }\r\n\r\n    async back(confirm:boolean = true) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        if (len === 1) {\r\n            if (self != window.top) {\r\n                window.top.postMessage({type:'pop-app'}, '*');\r\n            }\r\n            return;\r\n        }\r\n        let top = stack[len-1];\r\n        if (confirm===true && top.confirmClose) {\r\n            if (await top.confirmClose()===true) this.pop();\r\n        }\r\n        else {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    confirmBox(message?:string): boolean {\r\n        return window.confirm(message);\r\n    }\r\n    clearError = () => {\r\n        this.setState({fetchError: undefined});\r\n    }\r\n    render() {\r\n        const {wait, fetchError} = this.state;\r\n        let stack = this.state.stack;\r\n        let top = stack.length - 1;\r\n        let elWait = null, elError = null;\r\n        switch (wait) {\r\n            case 1:\r\n                elWait = <li className=\"va-wait va-wait1\">\r\n                </li>;\r\n                break;\r\n            case 2:\r\n                elWait = <li className=\"va-wait va-wait2\">\r\n                    <Loading />\r\n                </li>;\r\n                break;\r\n                //<i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                //<span className=\"sr-only\">Loading...</span>\r\n        }\r\n        if (fetchError)\r\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\r\n        return (\r\n        <ul className='va'>\r\n            {\r\n                stack.map((item, index) => {\r\n                    let {key, view} = item;\r\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\r\n                        {view}\r\n                    </li>\r\n                })\r\n            }\r\n            {elWait}\r\n            {elError}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    private refresh() {\r\n        // this.setState({flag: !this.state.flag});\r\n        this.setState({stack: this.stack });\r\n        // this.forceUpdate();\r\n    }\r\n}\r\n\r\nexport interface NavSettings {\r\n    loginTop?: JSX.Element;\r\n}\r\n\r\nexport class Nav {\r\n    private nav:NavView;\r\n    private ws: WsBase;\r\n    private wsHost: string;\r\n    private local: LocalData = new LocalData();\r\n    private navSettings: NavSettings;\r\n    @observable user: User/*InNav*/ = undefined;\r\n    language: string;\r\n    culture: string;\r\n    resUrl: string;\r\n\r\n    constructor() {\r\n        let {lang, district} = resOptions;\r\n        this.language = lang;\r\n        this.culture = district;\r\n    }\r\n\r\n    get guest(): number {\r\n        let guest = this.local.guest;\r\n        if (guest === undefined) return 0;\r\n        let g = guest.get();\r\n        if (g === undefined) return 0;\r\n        return g.guest;\r\n    }\r\n\r\n    set(nav:NavView) {\r\n        //this.logo = logo;\r\n        this.nav = nav;\r\n    }\r\n\r\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\r\n        if (this.ws === undefined) return;\r\n        return this.ws.onWsReceiveAny(handler);\r\n    }\r\n\r\n    unregisterReceiveHandler(handlerId:number) {\r\n        if (this.ws === undefined) return;\r\n        if (handlerId === undefined) return;\r\n        this.ws.endWsReceive(handlerId);\r\n    }\r\n\r\n    async onReceive(msg:any) {\r\n        if (this.ws === undefined) return;\r\n        await this.ws.receive(msg);\r\n    }\r\n\r\n    private async getPredefinedUnitName() {\r\n        try {\r\n            let unitRes = await fetch('unit.json', {});\r\n            //if (unitRes)\r\n            let res = await unitRes.json();\r\n            return res.unit;\r\n        }\r\n        catch (err) {\r\n            this.local.unit.clear();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async loadPredefinedUnit() {\r\n        let envUnit = process.env.REACT_APP_UNIT;\r\n        if (envUnit !== undefined) {\r\n            return Number(envUnit);\r\n        }\r\n        let unitName:string;\r\n        let unit = this.local.unit.get();\r\n        if (unit !== undefined) {\r\n            if (isDevelopment !== true) return unit.id;\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n            if (unit.name === unitName) return unit.id;\r\n        }\r\n        else {\r\n            unitName = await this.getPredefinedUnitName();\r\n            if (unitName === undefined) return;\r\n        }\r\n        let unitId = await guestApi.unitFromName(unitName);\r\n        if (unitId !== undefined) {\r\n            this.local.unit.set({id: unitId, name: unitName});\r\n        }\r\n        return unitId;\r\n    }\r\n\r\n    setSettings(settings?: NavSettings) {\r\n        this.navSettings = settings;\r\n    }\r\n\r\n    hashParam: string;\r\n    private centerHost: string;\r\n    async start() {\r\n        try {\r\n            let hash = document.location.hash;\r\n            if (hash !== undefined && hash.length > 0) {\r\n                let pos = getExHashPos();\r\n                if (pos < 0) pos = undefined;\r\n                this.hashParam = hash.substring(1, pos);\r\n            }\r\n            nav.clear();\r\n            this.startWait();\r\n            await host.start();\r\n            let {url, ws, resHost} = host;\r\n            this.centerHost = url;\r\n            this.resUrl = 'http://' + resHost + '/res/';\r\n            this.wsHost = ws;\r\n            setCenterUrl(url);\r\n            \r\n            let guest:Guest = this.local.guest.get();\r\n            if (guest === undefined) {\r\n                guest = await guestApi.guest();\r\n            }\r\n            nav.setGuest(guest);\r\n\r\n            let exHash = getExHash();\r\n            let appInFrame = setAppInFrame(exHash);\r\n            if (exHash !== undefined && window !== window.parent) {\r\n                // is in frame\r\n                if (appInFrame !== undefined) {\r\n                    this.ws = wsBridge;\r\n                    console.log('this.ws = wsBridge in sub frame');\r\n                    //nav.user = {id:0} as User;\r\n                    if (self !== window.parent) {\r\n                        window.parent.postMessage({type:'sub-frame-started', hash: appInFrame.hash}, '*');\r\n                    }\r\n                    // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\r\n                    //await this.showAppView();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let predefinedUnit = await this.loadPredefinedUnit();\r\n            appInFrame.predefinedUnit = predefinedUnit;\r\n\r\n            let user: User = this.local.user.get();\r\n            if (user === undefined) {\r\n                let {notLogined} = this.nav.props;\r\n                if (notLogined !== undefined) {\r\n                    await notLogined();\r\n                }\r\n                else {\r\n                    await nav.showLogin(undefined);\r\n                }\r\n                return;\r\n            }\r\n\r\n            await nav.logined(user);\r\n        }\r\n        catch (err) {\r\n        }\r\n        finally {\r\n            this.endWait();\r\n        }\r\n    }\r\n\r\n    async showAppView() {\r\n        let {onLogined} = this.nav.props;\r\n        if (onLogined === undefined) {\r\n            nav.push(<div>NavView has no prop onLogined</div>);\r\n            return;\r\n        }\r\n        nav.clear();\r\n        await onLogined();\r\n        console.log('logined: AppView shown');\r\n    }\r\n\r\n    setGuest(guest: Guest) {\r\n        this.local.guest.set(guest);\r\n        netToken.set(0, guest.token);\r\n    }\r\n\r\n    saveLocalUser() {\r\n        this.local.user.set(this.user);\r\n    }\r\n\r\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\r\n        logoutApis();\r\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\r\n        ws.connect();\r\n\r\n        console.log(\"logined: %s\", JSON.stringify(user));\r\n        this.user = user;\r\n        this.saveLocalUser();\r\n        netToken.set(user.id, user.token);\r\n        if (callback !== undefined) //this.loginCallbacks.has)\r\n            callback(user);\r\n            //this.loginCallbacks.call(user);\r\n        else {\r\n            await this.showAppView();\r\n        }\r\n    }\r\n\r\n    loginTop(defaultTop:JSX.Element) {\r\n        return (this.navSettings && this.navSettings.loginTop) || defaultTop;\r\n    }\r\n\r\n    async showLogin(callback?: (user:User)=>Promise<void>, withBack?:boolean) {\r\n        let lv = await import('../entry/login');\r\n        let loginView = <lv.default \r\n            withBack={withBack} \r\n            callback={callback} />;\r\n        if (withBack !== true) {\r\n            this.nav.clear();\r\n            this.pop();\r\n        }\r\n        this.nav.push(loginView);\r\n    }\r\n\r\n    async showLogout(callback?: ()=>Promise<void>) {\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\r\n        appInFrame.unit = undefined;\r\n        this.local.logoutClear();\r\n        this.user = undefined; //{} as User;\r\n        logoutApis();\r\n        let guest = this.local.guest.get();\r\n        setCenterToken(0, guest && guest.token);\r\n        this.ws = undefined;\r\n        /*\r\n        if (this.loginCallbacks.has)\r\n            this.logoutCallbacks.call();\r\n        else {\r\n            if (notShowLogin === true) return;\r\n        }\r\n        await nav.start();\r\n        */\r\n        if (callback === undefined)\r\n            await nav.start();\r\n        else\r\n            await callback();\r\n    }\r\n\r\n    async changePassword() {\r\n        let cp = await import('../entry/changePassword');\r\n        nav.push(<cp.ChangePasswordPage />);\r\n    }\r\n\r\n    get level(): number {\r\n        return this.nav.level;\r\n    }\r\n    startWait() {\r\n        this.nav.startWait();\r\n    }\r\n    endWait() {\r\n        this.nav.endWait();\r\n    }\r\n    async onError(error: FetchError) {\r\n        await this.nav.onError(error);\r\n    }\r\n    show (view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.show(view, disposer);\r\n    }\r\n    push(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.push(view, disposer);\r\n    }\r\n    replace(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.replace(view, disposer);\r\n    }\r\n    pop(level:number = 1) {\r\n        this.nav.pop(level);\r\n    }\r\n    topKey():number {\r\n        return this.nav.topKey();\r\n    }\r\n    popTo(key:number) {\r\n        this.nav.popTo(key);\r\n    }\r\n    clear() {\r\n        this.nav.clear();\r\n    }\r\n    navBack() {\r\n        this.nav.navBack();\r\n    }\r\n    ceaseTop(level?:number) {\r\n        this.nav.ceaseTop(level);\r\n    }\r\n    removeCeased() {\r\n        this.nav.removeCeased();\r\n    }\r\n    async back(confirm:boolean = true) {\r\n        await this.nav.back(confirm);\r\n    }\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.nav.regConfirmClose(confirmClose);\r\n    }\r\n    confirmBox(message?:string): boolean {\r\n        return this.nav.confirmBox(message);\r\n    }\r\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\r\n            let uh = sheetId === undefined?\r\n                    appUrl(url, unitId) :\r\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\r\n            console.log('navToApp: %s', JSON.stringify(uh));\r\n            nav.push(<article className='app-container'>\r\n                <span id={uh.hash} onClick={()=>this.back()} style={mobileHeaderStyle}>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </span>\r\n                <iframe src={uh.url} />\r\n            </article>, \r\n            ()=> {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    navToSite(url: string) {\r\n        // show in new window\r\n        window.open(url);\r\n    }\r\n\r\n    get logs() {return logs};\r\n    log(msg:string) {\r\n        logs.push(msg);\r\n    }\r\n    logMark() {\r\n        let date = new Date();\r\n        logMark = date.getTime();\r\n        logs.push('log-mark: ' + date.toTimeString());\r\n    }\r\n    logStep(step:string) {\r\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\r\n    }\r\n}\r\nexport const nav: Nav = new Nav();\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport type TypeViewModel = typeof ViewModel;\r\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\r\nexport type TypeContent = React.StatelessComponent<any>;\r\n\r\nexport abstract class ViewModel {\r\n    protected abstract get view(): TypeView;\r\n    render(className?:string|string[]):JSX.Element {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view, {vm: this, className:className});\r\n    }\r\n}\r\n\r\nexport const PureJSONContent = (values, x?:any) => <>content: {jsonStringify(values)}</>;\r\nexport const JSONContent = observer(PureJSONContent);\r\nexport const RowContent = \r\n    (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\r\n;\r\n","import { decodeGuestToken } from '../user';\r\nimport { CenterApi } from './uqApi';\r\n\r\nexport class GuestApi extends CenterApi {\r\n    async guest(): Promise<any> {\r\n        //let guest = nav.local.guest.get();\r\n        let ret = await this.get('', {});\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeGuestToken(ret);\r\n            case 'object':\r\n                let guest = decodeGuestToken(ret.token);\r\n                return guest;\r\n        }\r\n    }\r\n\r\n    async unitFromName(unitName:string): Promise<number> {\r\n        let ret = await this.get(unitName);\r\n        return ret && ret.unit;\r\n    }\r\n}\r\n\r\nexport const guestApi = new GuestApi('tv/guest/', undefined);\r\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\r\nexport * from './apiBase';\r\nexport * from './guestApi';\r\nexport * from './uqApi';\r\nexport {appInFrame, isBridged, getExHash} from './appBridge';\r\nexport * from './host';\r\nexport {httpGet} from './httpChannel';\r\n","function replacer(key:string, value:any) {\r\n    let first = key.substr(0, 1);\r\n    switch (first) {\r\n        default: return value;\r\n        case '$':\r\n        case '_': return;\r\n    }\r\n}\r\n\r\nexport function jsonStringify(value:any) {\r\n    return JSON.stringify(value, replacer, ' ');\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { BoxId, Tuid } from \"../entities\";\r\nimport { PureJSONContent } from '../controllers';\r\nimport { FA } from 'tonva-react-form';\r\n\r\ntype TvTemplet = (values?:any, x?:any) => JSX.Element;\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: TvTemplet,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\r\n    if (typeof bi === 'number') return <>{bi}</>;\r\n    let {id, _$tuid, _$com} = bi as BoxId;\r\n    if (id === undefined || id === null) return;\r\n    let t:Tuid = _$tuid;\r\n    if (t === undefined) {\r\n        if (ui !== undefined) return ui(bi, x);\r\n        return PureJSONContent(bi, x);\r\n    }\r\n    let com = ui || _$com;\r\n    if (com === undefined) {\r\n        com = bi._$com = t.getTuidContent();\r\n    }\r\n    let val = t.valueFromId(id);\r\n    if (val === undefined) {\r\n        return <>[<FA className=\"text-danger\" name=\"bug\" /> no {t.name} on id={id}]</>;\r\n    }\r\n    switch (typeof val) {\r\n        case 'number': val = {id: val}; break;\r\n    }\r\n    if (ui !== undefined) {\r\n        let ret = ui(val, x);\r\n        if (ret !== undefined) return ret;\r\n        return <>{id}</>;\r\n    }\r\n    return React.createElement(com, val);\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    if (tuidValue === undefined) {\r\n        if (nullUI === undefined) return <>[undefined]</>;\r\n        return nullUI();\r\n    }\r\n    if (tuidValue === null) {\r\n        if (nullUI === undefined) return <>[null]</>;\r\n        return nullUI();\r\n    }\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else {\r\n                let ret = ui(tuidValue, x);\r\n                if (ret !== undefined) return ret;\r\n                return <>{tuidValue}</>;\r\n            }\r\n        case 'object':\r\n            let divObj = boxIdContent(tuidValue, ui, x);\r\n            if (divObj !== undefined) return divObj;\r\n            return nullUI();\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n","export * from './jsonStringify';\r\nexport * from './tv';\r\n","import _ from 'lodash';\r\nimport {nav} from '../ui';\r\nimport {uid} from '../uid';\r\nimport {uqTokenApi as uqTokenApi, callCenterapi, CenterAppApi, AppUq, centerToken, App, setCenterToken} from './uqApi';\r\nimport {setSubAppWindow} from './wsChannel';\r\nimport { host } from './host';\r\n\r\nexport interface UqToken {\r\n    name: string;\r\n    url: string;\r\n    urlDebug: string;\r\n    token: string;\r\n}\r\nconst uqTokens:{[uqName:string]: UqToken}  = {};\r\nexport function logoutUqTokens() {\r\n    for (let i in uqTokens) uqTokens[i] = undefined;\r\n}\r\n\r\nexport interface AppInFrame {\r\n    hash: string;\r\n    unit: number;       // unit id\r\n    page?: string;\r\n    param?: string[];\r\n    predefinedUnit?: number;  // 比如像Cart这样的应用，直接让用户访问的，就需要在unit.json里面定义unitName\r\n}\r\nconst appsInFrame:{[key:string]:AppInFrame} = {};\r\n\r\nclass AppInFrameClass implements AppInFrame {\r\n    hash: string;\r\n    private _unit: number;\r\n    get unit(): number {return this._unit;}       // unit id\r\n    set unit(val:number) { this._unit=val;}\r\n    page?: string;\r\n    param?: string[];\r\n}\r\n\r\nexport let appInFrame:AppInFrame = new AppInFrameClass();\r\n/* {\r\n    hash: undefined,\r\n    get unit():number {return } undefined, //debugUnitId,\r\n    page: undefined;\r\n    param: undefined,\r\n}*/\r\n\r\nexport function isBridged():boolean {\r\n    return self !== window.parent;\r\n}\r\n\r\nwindow.addEventListener('message', async function(evt) {\r\n    var message = evt.data;\r\n    switch (message.type) {\r\n        case 'sub-frame-started':\r\n            subFrameStarted(evt);\r\n            break;\r\n        case 'ws':\r\n            //wsBridge.receive(message.msg);\r\n            await nav.onReceive(message.msg);\r\n            break;\r\n        case 'init-sub-win':\r\n            await initSubWin(message);\r\n            break;\r\n        case 'pop-app':\r\n            nav.navBack();\r\n            break;\r\n        case 'center-api':\r\n            await callCenterApiFromMessage(evt.source as Window, message);\r\n            break;\r\n        case 'center-api-return':\r\n            bridgeCenterApiReturn(message);\r\n            break;\r\n        case 'app-api':\r\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\r\n            (evt.source as Window).postMessage({\r\n                type: 'app-api-return', \r\n                apiName: message.apiName,\r\n                url: ret.url,\r\n                urlDebug: ret.urlDebug,\r\n                token: ret.token} as any, \"*\");\r\n            break;\r\n        case 'app-api-return':\r\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\r\n            console.log('await onAppApiReturn(message);');\r\n            await onAppApiReturn(message);\r\n            break;\r\n        default:\r\n            this.console.log('message: %s', JSON.stringify(message));\r\n            break;\r\n    }\r\n});\r\n\r\nfunction subFrameStarted(evt:any) {\r\n    var message = evt.data;\r\n    let subWin = evt.source as Window;\r\n    setSubAppWindow(subWin);\r\n    hideFrameBack(message.hash);\r\n    let msg:any = _.clone(nav.user);\r\n    msg.type = 'init-sub-win';\r\n    subWin.postMessage(msg, '*');\r\n}\r\nfunction hideFrameBack(hash:string) {\r\n    let el = document.getElementById(hash);\r\n    if (el !== undefined) el.hidden = true;\r\n}\r\nasync function initSubWin(message:any) {\r\n    console.log('initSubWin: set nav.user', message);\r\n    let user = nav.user = message; // message.user;\r\n    setCenterToken(user.id, user.token);\r\n    await nav.showAppView();\r\n}\r\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\r\n    let appInFrame = appsInFrame[hash];\r\n    if (appInFrame === undefined) return {name:apiName, url:undefined, urlDebug:undefined, token:undefined};\r\n    //let unit = getUnit();\r\n    let {unit, predefinedUnit} = appInFrame;\r\n    unit = unit || predefinedUnit;\r\n    if (!unit) {\r\n        console.error('no unit defined in unit.json or not logined in', unit);\r\n    }\r\n    let parts = apiName.split('/');\r\n    let param = {unit: unit, uqOwner: parts[0], uqName: parts[1]};\r\n    console.log('uqTokenApi.uq onReceiveAppApiMessage', param);\r\n    let ret = await uqTokenApi.uq(param);\r\n    return {name: apiName, url: ret.url, urlDebug:ret.urlDebug, token: ret.token};\r\n}\r\n\r\nasync function onAppApiReturn(message:any) {\r\n    let {apiName, url, urlDebug, token} = message;\r\n    let action = uqTokenActions[apiName];\r\n    if (action === undefined) {\r\n        throw 'error app api return';\r\n        //return;\r\n    }\r\n    let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n    console.log('onAppApiReturn(message:any): url=' + url + ', debug=' + urlDebug + ', real=' + realUrl);\r\n    //action.url = realUrl;\r\n    //action.token = token;\r\n    action.resolve({\r\n        name: apiName,\r\n        url: realUrl,\r\n        urlDebug: urlDebug,\r\n        token: token,\r\n    } as UqToken);\r\n}\r\n\r\nexport function setAppInFrame(appHash: string):AppInFrame {\r\n    if (appHash) {\r\n        let parts = appHash.split('-');\r\n        let len = parts.length;\r\n        if (len > 0) {\r\n            let p = 1;\r\n            appInFrame.hash = parts[p++];\r\n            if (len>0) appInFrame.unit = Number(parts[p++]);\r\n            if (len>1) appInFrame.page = parts[p++];\r\n            if (len>2) appInFrame.param = parts.slice(p++);\r\n        }\r\n    }\r\n    return appInFrame;\r\n}\r\n\r\nexport function getExHashPos():number {\r\n    let hash = document.location.hash;\r\n    if (hash !== undefined && hash.length > 0) {\r\n        let pos = hash.lastIndexOf('#tv-');\r\n        if (pos < 0) pos = hash.lastIndexOf('#tvdebug-');\r\n        return pos;\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function getExHash():string {\r\n    let pos = getExHashPos();\r\n    if (pos < 0) return undefined;\r\n    return document.location.hash.substring(pos);\r\n}\r\n\r\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\r\n    let u:string;\r\n    for (;;) {\r\n        u = uid();\r\n        let a = appsInFrame[u];\r\n        if (a === undefined) {\r\n            appsInFrame[u] = {hash:u, unit:unitId};\r\n            break;\r\n        }\r\n    }\r\n    url += '#tv-' + u + '-' + unitId;\r\n    if (page !== undefined) {\r\n        url += '-' + page;\r\n        if (param !== undefined) {\r\n            for (let i=0; i<param.length; i++) {\r\n                url += '-' + param[i];\r\n            }\r\n        }\r\n    }\r\n    return {url: url, hash: u};\r\n}\r\n\r\nfunction getUnit():number {\r\n    let {unit, predefinedUnit} = appInFrame;\r\n    let realUnit = unit || predefinedUnit;\r\n    if (realUnit === undefined) {\r\n        throw 'no unit defined in unit.json or not logined in';\r\n    }\r\n    return realUnit;\r\n}\r\n\r\ninterface UqTokenAction {\r\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\r\n    reject: (reason?: any) => void;\r\n}\r\nconst uqTokenActions:{[uq:string]: UqTokenAction} = {};\r\nexport async function buildAppUq(uq:string, uqOwner:string, uqName:string):Promise<void> {\r\n    if (!isBridged()) {\r\n        let unit = getUnit();\r\n        let uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {url, urlDebug} = uqToken;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"**** before buildAppUq ****\", appInFrame);\r\n    let bp = uqTokenActions[uq];\r\n    if (bp !== undefined) return;\r\n    return new Promise<void>((resolve, reject) => {\r\n        uqTokenActions[uq] = {\r\n            resolve: async (at:any) => {\r\n                let {url, urlDebug, token} = await at;\r\n                uqTokens[uq] = {\r\n                    name: uq,\r\n                    url: url,\r\n                    urlDebug: urlDebug,\r\n                    token: token,\r\n                };\r\n                uqTokenActions[uq] = undefined;\r\n                console.log(\"**** after buildAppUq ****\", appInFrame);\r\n                resolve();\r\n            },\r\n            reject: reject,\r\n        };\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: appInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n\r\nexport function appUq(uq:string):UqToken {\r\n    return uqTokens[uq];\r\n}\r\n/*\r\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\r\n    let uqToken = uqTokens[uq];\r\n    if (uqToken !== undefined) return uqToken;\r\n    if (!isBridged()) {\r\n        let unit = getUnit();\r\n        uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {url, urlDebug} = uqToken;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"appApi parent send: %s\", appInFrame.hash);\r\n    uqToken = {\r\n        name: uq,\r\n        url: undefined,\r\n        urlDebug: undefined,\r\n        token: undefined,\r\n        resolve: undefined,\r\n        reject: undefined,\r\n    };\r\n    uqTokens[uq] = uqToken;\r\n    return new Promise<UqToken>((resolve, reject) => {\r\n        uqToken.resolve = async (at) => {\r\n            let a = await at;\r\n            console.log('return from parent window: %s', JSON.stringify(a));\r\n            uqToken.url = a.url;\r\n            uqToken.urlDebug = a.urlDebug;\r\n            uqToken.token = a.token;\r\n            resolve(uqToken);\r\n        }\r\n        uqToken.reject = reject;\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: appInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n*/\r\ninterface BridgeCenterApi {\r\n    id: string;\r\n    resolve: (value?:any)=>any;\r\n    reject: (reason?:any)=>void;\r\n}\r\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\r\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\r\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\r\n    return await new Promise<any>(async (resolve, reject) => {\r\n        let callId:string;\r\n        for (;;) {\r\n            callId = uid();\r\n            let bca = brideCenterApis[callId];\r\n            if (bca === undefined) {\r\n                brideCenterApis[callId] = {\r\n                    id: callId,\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'center-api',\r\n            callId: callId,\r\n            url: url,\r\n            method: method,\r\n            body: body\r\n        }, '*');\r\n    });\r\n}\r\n\r\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\r\n    let {callId, url, method, body} = message;\r\n    let result = await callCenterapi.directCall(url, method, body);\r\n    from.postMessage({\r\n        type: 'center-api-return',\r\n        callId: callId,\r\n        result: result,\r\n    }, '*');\r\n}\r\n\r\nfunction bridgeCenterApiReturn(message:any) {\r\n    let {callId, result} = message;\r\n    let bca = brideCenterApis[callId];\r\n    if (bca === undefined) return;\r\n    brideCenterApis[callId] = undefined;\r\n    bca.resolve(result);\r\n}\r\n","export * from './nav';\r\nexport * from './pageHeader';\r\nexport * from './page';\r\nexport * from './VM';\r\nexport * from './schema';\r\nexport * from './form';\r\nexport * from './edit';\r\nexport * from './res';\r\nexport * from './tabs';\r\nexport * from './loading';\r\nexport * from './image';\r\nexport * from './resUploader';\r\nexport * from './rules';","import * as React from 'react';\r\nimport {IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport {PageHeader} from './pageHeader';\r\n\r\nexport interface ScrollProps {\r\n    onScroll?: (e:any) => void;\r\n    onScrollTop?: () => void;\r\n    onScrollBottom?: () => void;\r\n}\r\ninterface ScrollViewProps extends ScrollProps {\r\n    className?: string;\r\n}\r\nconst scrollTimeGap = 100;\r\nclass ScrollView extends React.Component<ScrollViewProps, null> {\r\n    private bottomTime:number = 0;\r\n    private topTime:number = 0;\r\n\r\n    private onScroll = async (e) => {\r\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\r\n        if (onScroll) this.props.onScroll(e);\r\n        let el = e.target as HTMLBaseElement;\r\n        if (el.scrollTop < 30) {\r\n            //this.eachChild(this, 'top');\r\n            if (onScrollTop !== undefined) {\r\n                let topTime = new Date().getTime();\r\n                if (topTime-this.topTime > scrollTimeGap) {\r\n                    this.topTime = topTime;\r\n                    onScrollTop();\r\n                }\r\n            }\r\n        }\r\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\r\n            //this.eachChild(this, 'bottom');\r\n            if (onScrollBottom !== undefined) {\r\n                let bottomTime = new Date().getTime();\r\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\r\n                    this.bottomTime = bottomTime;\r\n                    onScrollBottom();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private eachChild(c:any, direct:'top'|'bottom') {\r\n        let { props } = c;\r\n        if (props === undefined)\r\n            return;\r\n        let { children } = props;\r\n        if (children === undefined)\r\n            return;\r\n        React.Children.forEach(children, (child, index) => {\r\n            let {_$scroll} = child as any;\r\n            if (_$scroll) _$scroll(direct);\r\n            console.log(child.toString());\r\n            this.eachChild(child, direct);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <main className={this.props.className} onScroll={this.onScroll}>\r\n                {this.props.children}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface Tab extends ScrollProps {\r\n    title: string;\r\n    icon?: string;\r\n    content?: JSX.Element | (()=>JSX.Element);\r\n    header?: string;\r\n    isSelected?: boolean;\r\n    redDot?: IComputedValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\nexport interface TabState extends Tab {\r\n    isMounted?: boolean;\r\n}\r\nexport interface PageProps extends ScrollProps {\r\n    back?: 'close' | 'back' | 'none';\r\n    header?: boolean | string | JSX.Element;\r\n    keepHeader?: boolean;\r\n    right?: JSX.Element;\r\n    sideBar?: JSX.Element;\r\n    footer?: JSX.Element;\r\n    tabs?: Tab[];\r\n    logout?: boolean | (()=>Promise<void>);\r\n    headerClassName?: string;\r\n}\r\nexport interface PageState {\r\n    cur?: Tab;\r\n    tabs?: TabState[];\r\n}\r\n\r\n@observer\r\nexport class Page extends React.Component<PageProps, PageState> {\r\n    private tabs:TabState[];\r\n    constructor(props: PageProps) {\r\n        super(props);\r\n        let {tabs} = props;\r\n        if (tabs === undefined || tabs.length === 0) return;\r\n        this.tabs = tabs;\r\n        let cur:Tab;\r\n        let tabStates:Tab[] = [];\r\n        for (let tab of tabs) {\r\n            let t:TabState = _.clone(tab);\r\n            if (cur === undefined) {\r\n                if (t.isSelected === true)\r\n                    cur = t;\r\n                else\r\n                    t.isSelected = false;\r\n            }\r\n            else {\r\n                t.isSelected = false;\r\n            }\r\n            t.isMounted = false;\r\n            tabStates.push(t);\r\n        }\r\n        this.state = {\r\n            cur: cur,\r\n            tabs: tabStates,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        let t0 = this.state.tabs[0];\r\n        if (t0 === undefined) return;\r\n        await this.onTabClick(t0);\r\n    }\r\n\r\n    private async onTabClick(tab: TabState) {\r\n        if (tab.isSelected === true) return;\r\n        let cur:TabState;\r\n        let tabs = this.state.tabs;\r\n        for (let t of tabs) {\r\n            if (t === tab) {\r\n                t.isSelected = true;\r\n                cur = t;\r\n            }\r\n            else\r\n                t.isSelected = false;\r\n        }\r\n        if (cur.isMounted !== true) {\r\n            let {load} = cur;\r\n            if (load !== undefined) {\r\n                await load();\r\n            }\r\n        }\r\n        this.setState({\r\n            cur: cur,\r\n            tabs: tabs\r\n        });\r\n    }\r\n\r\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\r\n    }\r\n\r\n    private renderTabs(footer: JSX.Element) {\r\n        const {header, back, right, keepHeader, headerClassName} = this.props;\r\n        let cur = this.state.cur;\r\n        let tabs = <div>{\r\n                this.state.tabs.map((tab, index) => {\r\n                    const {icon, isSelected, title, redDot} = tab;\r\n                    let img:any, redDotView:any, cn:any;\r\n                    if (icon !== undefined) img = <img src={icon} />;\r\n                    if (redDot !== undefined) {\r\n                        let v = redDot.get();\r\n                        if (v < 0) {\r\n                            cn = classNames('red-dot');\r\n                            redDotView = <u />;\r\n                        }\r\n                        else if (v > 0) {\r\n                            cn = classNames('red-dot', 'num');\r\n                            redDotView = <u>{v}</u>;\r\n                        }\r\n                    }\r\n                    return <div key={index}\r\n                        className= {classNames('va-tab', {cur: isSelected})}\r\n                        onClick={() => this.onTabClick(tab)}>\r\n                        {img}<div className={cn}>{title}{redDotView}</div>\r\n                    </div>\r\n                })\r\n            }</div>;\r\n        let pageHeader = header !== false &&\r\n            <PageHeader \r\n                back={back} \r\n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\r\n                right={right}\r\n                className={headerClassName}\r\n            />;\r\n\r\n        return <article className='page-container'>\r\n            {pageHeader}\r\n            <section className=\"position-relative\">\r\n            {this.props.sideBar}\r\n            {\r\n                this.state.tabs.map((tab, index) => {\r\n                    let {isSelected, isMounted, content} = tab;\r\n                    if (isSelected === true || isMounted === true) {\r\n                        tab.isMounted = true;\r\n                        return <ScrollView key={index}\r\n                            className={classNames({invisible: isSelected===false})}\r\n                            onScroll={tab.onScroll}\r\n                            onScrollTop={tab.onScrollTop}\r\n                            onScrollBottom={tab.onScrollBottom}\r\n                        >\r\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\r\n                        </ScrollView>;\r\n                    }\r\n                })\r\n            }\r\n            </section>\r\n            {tabs}\r\n            {footer}\r\n        </article>;\r\n    }\r\n    private renderSingle(footer: JSX.Element) {\r\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children, headerClassName} = this.props;\r\n        let pageHeader = header !== false && <PageHeader \r\n            back={back} \r\n            center={header as any}\r\n            right={right}\r\n            logout={this.props.logout}\r\n            className={headerClassName}\r\n        />;\r\n        return (\r\n            <article className='page-container' onTouchStart={this.onTouchStart}>\r\n                {pageHeader}\r\n                <section className=\"position-relative\">\r\n                    {this.props.sideBar}\r\n                    <ScrollView\r\n                        onScroll={onScroll}\r\n                        onScrollTop={onScrollTop}\r\n                        onScrollBottom={onScrollBottom}\r\n                    >\r\n                        {children}\r\n                    </ScrollView>\r\n                </section>\r\n                {footer}\r\n            </article>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {footer} = this.props;\r\n        let elFooter = footer !== undefined && <footer>{footer}</footer>;\r\n        if (this.tabs !== undefined)\r\n            return this.renderTabs(elFooter);\r\n        else\r\n            return this.renderSingle(elFooter);\r\n    }\r\n}\r\n","import {nav} from '../ui/nav';\r\nimport {FetchError} from '../fetchError';\r\n\r\nexport interface HttpChannelUI {\r\n    startWait():void;\r\n    endWait():void;\r\n    showError(error:FetchError):Promise<void>;\r\n}\r\n\r\nexport class HttpChannelNavUI implements HttpChannelUI {\r\n    startWait() {\r\n        nav.startWait();\r\n    }\r\n    endWait() {\r\n        nav.endWait();\r\n    }\r\n    async showError(error:FetchError):Promise<void> {\r\n        nav.endWait();\r\n        /*\r\n        if (error.name === 'SyntaxError') {\r\n            error = {\r\n                name: error.name,\r\n                message: error.message,\r\n            }\r\n        }*/\r\n        await nav.onError(error);\r\n    }\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {HttpChannel} from './httpChannel';\r\nimport {HttpChannelNavUI} from './httpChannelUI';\r\nimport {appUq, logoutUqTokens, buildAppUq} from './appBridge';\r\nimport {ApiBase} from './apiBase';\r\nimport { host } from './host';\r\nimport { nav } from '../ui';\r\n\r\nlet channelUIs:{[name:string]: HttpChannel} = {};\r\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\r\n\r\nexport function logoutApis() {\r\n    channelUIs = {};\r\n    channelNoUIs = {};\r\n    logoutUnitxApis();\r\n    logoutUqTokens();\r\n}\r\n\r\ninterface UqLocal {\r\n    value: any;\r\n    tick?: number;\r\n    isNet?: boolean;\r\n}\r\ninterface UqLocals {\r\n    user: number;\r\n    unit: number;\r\n    uqs: {[uq:string]: UqLocal};\r\n}\r\n\r\nconst uqLocalEntities = 'uqLocalEntities';\r\nclass CacheUqLocals {\r\n    private local:UqLocals;\r\n\r\n    async loadAccess(uqApi: UqApi):Promise<any> {\r\n        try {\r\n            let {uqOwner, uqName} = uqApi;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqLocalEntities);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {user, uqs} = this.local;\r\n                if (user !== loginedUserId || uqs === undefined) {\r\n                    this.local = undefined;\r\n                }\r\n                else {\r\n                    for (let i in uqs) {\r\n                        let ul = uqs[i];\r\n                        ul.isNet = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: undefined,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let ret: any;\r\n            let un = uqOwner+'/'+uqName;\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {value} = uq;\r\n                ret = value;\r\n            }\r\n            if (ret === undefined) {\r\n                ret = await uqApi.__loadAccess();\r\n                this.saveLocal(un, ret);\r\n            }\r\n            return _.cloneDeep(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqLocalEntities);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private saveLocal(uqName:string, accessValue: any) {\r\n        this.local.uqs[uqName] = {\r\n            value: accessValue,\r\n            isNet: true,\r\n        }\r\n        let str = JSON.stringify(this.local);\r\n        localStorage.setItem(uqLocalEntities, str);\r\n    }\r\n\r\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\r\n        if (this.local === undefined) return false;\r\n        let {uqOwner, uqName} = uqApi;\r\n        let un = uqOwner+'/'+uqName;\r\n        let uq = this.local.uqs[un];\r\n        if (uq === undefined) return false;\r\n        let {isNet, value} = uq;\r\n        if (isNet === true) return true;\r\n        let ret = await uqApi.__loadAccess();\r\n        let isMatch = _.isMatch(value, ret);\r\n        if (isMatch === false) {\r\n            this.saveLocal(un, ret);\r\n            return false;\r\n        }\r\n        uq.isNet = true;\r\n        return true;\r\n    }\r\n}\r\n\r\nconst localUqs = new CacheUqLocals;\r\nexport class UqApi extends ApiBase {\r\n    private access:string[];\r\n    uqOwner: string;\r\n    uqName: string;\r\n    uq: string;\r\n\r\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\r\n        super(basePath, showWaiting);\r\n        if (uqName) {\r\n            this.uqOwner = uqOwner;\r\n            this.uqName = uqName;\r\n            this.uq = uqOwner + '/' + uqName;\r\n        }\r\n        this.access = access;\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    async init() {\r\n        await buildAppUq(this.uq, this.uqOwner, this.uqName);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channels: {[name:string]: HttpChannel};\r\n        let channelUI: HttpChannelNavUI;\r\n        if (this.showWaiting === true || this.showWaiting === undefined) {\r\n            channels = channelUIs;\r\n            channelUI = new HttpChannelNavUI();\r\n        }\r\n        else {\r\n            channels = channelNoUIs;\r\n        }\r\n        let channel = channels[this.uq];\r\n        if (channel !== undefined) return channel;\r\n        let uqToken = appUq(this.uq); //, this.uqOwner, this.uqName);\r\n        this.token = uqToken.token;\r\n        channel = new HttpChannel(false, uqToken.url, uqToken.token, channelUI);\r\n        return channels[this.uq] = channel;\r\n    }\r\n\r\n\r\n    async update():Promise<string> {\r\n        return await this.get('update');\r\n    }\r\n\r\n    async __loadAccess():Promise<any> {\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        let ret = await this.get('access', {acc:acc});\r\n        return ret;\r\n    }\r\n\r\n    async loadAccess():Promise<any> {\r\n        return await localUqs.loadAccess(this);\r\n    }\r\n\r\n    async loadEntities():Promise<any> {\r\n        return await this.get('entities');\r\n    }\r\n\r\n    async checkAccess():Promise<boolean> {\r\n        return await localUqs.checkAccess(this);\r\n    }\r\n\r\n    async schema(name:string):Promise<any> {\r\n        return await this.get('schema/' + name);\r\n    }\r\n\r\n    async schemas(names:string[]):Promise<any[]> {\r\n        return await this.post('schema', names);\r\n    }\r\n\r\n    async tuidGet(name:string, id:number):Promise<any> {\r\n        return await this.get('tuid/' + name + '/' + id);\r\n    }\r\n\r\n    async tuidGetAll(name:string):Promise<any[]> {\r\n        return await this.get('tuid-all/' + name + '/');\r\n    }\r\n\r\n    async tuidSave(name:string, params):Promise<any> {\r\n        return await this.post('tuid/' + name, params);\r\n    }\r\n\r\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret = await this.post('tuids/' + name, {\r\n            arr: arr,\r\n            owner: owner,\r\n            key: key,\r\n            pageStart: pageStart,\r\n            pageSize: pageSize\r\n        });\r\n        return ret;\r\n    }\r\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\r\n    }\r\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\r\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\r\n    }\r\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\r\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\r\n    }\r\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\r\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\r\n            id: id,\r\n            $order: order\r\n        });\r\n    }\r\n\r\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\r\n        try {\r\n            let url = 'tuidids/' + name + '/';\r\n            if (arr !== undefined) url += arr;\r\n            else url += '$';\r\n            let ret = await this.post(url, ids);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async proxied(name:string, proxy:string, id:number):Promise<any> {\r\n        try {\r\n            let url = 'tuid-proxy/' + name + '/' + proxy + '/' + id;\r\n            let ret = await this.get(url);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async sheetSave(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name, data);\r\n    }\r\n\r\n    async sheetAction(name:string, data:object) {\r\n        return await this.put('sheet/' + name, data);\r\n    }\r\n\r\n    async stateSheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/states', data);\r\n    }\r\n\r\n    async stateSheetCount(name:string):Promise<any> {\r\n        return await this.get('sheet/' + name + '/statecount');\r\n    }\r\n\r\n    async mySheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/my-sheets', data);\r\n    }\r\n\r\n    async getSheet(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/get/' + id);\r\n    }\r\n\r\n    async sheetArchives(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name + '/archives', data);\r\n    }\r\n\r\n    async sheetArchive(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/archive/' + id);\r\n    }\r\n\r\n    async action(name:string, data:object):Promise<any> {\r\n        return await this.post('action/' + name, data);\r\n    }\r\n\r\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p:any;\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return await this.post('query-page/' + name, p);\r\n    }\r\n\r\n    async query(name:string, params:any):Promise<any> {\r\n        let ret = await this.post('query/' + name, params);\r\n        return ret;\r\n    }\r\n/*\r\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n\r\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n*/\r\n    async user():Promise<any> {\r\n        return await this.get('user');\r\n    }\r\n}\r\n\r\nlet channels:{[unitId:number]: HttpChannel} = {};\r\n\r\nexport function logoutUnitxApis() {\r\n    channels = {};\r\n}\r\n\r\nexport class UnitxApi extends UqApi {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super('tv/', undefined, undefined, undefined, true);\r\n        this.unitId = unitId;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channel = channels[this.unitId];\r\n        if (channel !== undefined) return channel;\r\n        return channels[this.unitId] = await this.buildChannel();\r\n    }\r\n\r\n    private async buildChannel():Promise<HttpChannel> {\r\n        let channelUI = new HttpChannelNavUI();\r\n        let centerAppApi = new CenterAppApi('tv/', undefined);\r\n        let ret = await centerAppApi.unitxUq(this.unitId);\r\n        let {token, url, urlDebug} = ret;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        this.token = token;\r\n        return new HttpChannel(false, realUrl, token, channelUI);\r\n    }\r\n}\r\n\r\nlet centerHost:string;\r\n\r\nexport function setCenterUrl(url:string) {\r\n    console.log('setCenterUrl %s', url);\r\n    centerHost = url;\r\n    centerToken = undefined;\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nexport let centerToken:string|undefined = undefined;\r\n\r\nlet loginedUserId:number = 0;\r\nexport function setCenterToken(userId:number, t?:string) {\r\n    loginedUserId = userId;\r\n    centerToken = t;\r\n    console.log('setCenterToken %s', t);\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nlet centerChannelUI:HttpChannel;\r\nlet centerChannel:HttpChannel;\r\nfunction getCenterChannelUI():HttpChannel {\r\n    if (centerChannelUI !== undefined) return centerChannelUI;\r\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\r\n}\r\nfunction getCenterChannel():HttpChannel {\r\n    if (centerChannel !== undefined) return centerChannel;\r\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\r\n}\r\n\r\nexport abstract class CenterApi extends ApiBase {\r\n    constructor(path: string, showWaiting?: boolean) {\r\n        super(path, showWaiting);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        return (this.showWaiting === true || this.showWaiting === undefined)?\r\n            getCenterChannelUI():\r\n            getCenterChannel();\r\n    }\r\n}\r\n\r\nconst uqTokens = 'uqTokens';\r\nexport class UqTokenApi extends CenterApi {\r\n    private local: UqLocals;\r\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\r\n        try {\r\n            let {unit:unitParam, uqOwner, uqName} = params;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqTokens);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {unit, user} = this.local;\r\n                if (unit !== unitParam || user !== loginedUserId) this.local = undefined;\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: params.unit,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let un = uqOwner+'/'+uqName;\r\n            let nowTick = new Date().getTime();\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {tick, value} = uq;\r\n                if (value !== undefined && (nowTick - tick) < 24*3600*1000) {\r\n                    return _.clone(value);\r\n                }\r\n            }\r\n            let ret = await this.get('app-uq', params);\r\n            if (ret === undefined) {\r\n                let {unit, uqOwner, uqName} = params;\r\n                let err = `center get app-uq(unit=${unit}, '${uqOwner}/${uqName}') - not exists or no unit-service`;\r\n                throw err;\r\n            }\r\n\r\n            this.local.uqs[un] = {\r\n                tick: nowTick,\r\n                value: ret,\r\n            }\r\n            localStorage.setItem(uqTokens, JSON.stringify(this.local));\r\n            return _.clone(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqTokens);\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\r\n\r\nexport class CallCenterApi extends CenterApi {\r\n    directCall(url:string, method:string, body:any):Promise<any> {\r\n        return this.call(url, method, body);\r\n    }\r\n}\r\nexport const callCenterapi = new CallCenterApi('', undefined);\r\n\r\nexport interface App {\r\n    id: number;\r\n    uqs: AppUq[];\r\n}\r\n\r\nexport interface AppUq {\r\n    id: number;\r\n    uqOwner: string;\r\n    uqName: string;\r\n    access: string;\r\n}\r\n\r\nexport interface UqService {\r\n    id: number;\r\n    url: string;\r\n    urlDebug: string;\r\n    token: string;\r\n}\r\n\r\nconst appUqs = 'appUqs';\r\n\r\nexport class CenterAppApi extends CenterApi {\r\n    private cachedUqs: App;\r\n    async uqs(appOwner:string, appName:string):Promise<App> {\r\n        let ret:any;\r\n        let ls = localStorage.getItem(appUqs);\r\n        if (ls !== null) {\r\n            let rLs = JSON.parse(ls);\r\n            let {appOwner:rAppOwner, appName:rAppName, value} = rLs;\r\n            if (appOwner === rAppOwner && appName === rAppName) ret = value;\r\n        }\r\n        if (ret === undefined) {\r\n            ret = await this.uqsPure(appOwner, appName);\r\n            let obj = {\r\n                appOwner:appOwner, \r\n                appName:appName, \r\n                value: ret,\r\n            }\r\n            localStorage.setItem(appUqs, JSON.stringify(obj));\r\n        }\r\n        return this.cachedUqs = _.cloneDeep(ret);\r\n    }\r\n    private async uqsPure(appOwner:string, appName:string):Promise<App> {\r\n        return await this.get('tie/app-uqs', {appOwner:appOwner, appName:appName});\r\n    }\r\n    async checkUqs(appOwner:string, appName:string):Promise<boolean> {\r\n        let ret = await this.uqsPure(appOwner, appName);\r\n        let {id:cachedId, uqs:cachedUqs} = this.cachedUqs;\r\n        let {id:retId, uqs:retUqs} = ret;\r\n        if (cachedId !== retId) return false;\r\n        if (cachedUqs.length !== retUqs.length) return false;\r\n        let len = cachedUqs.length;\r\n        for (let i=0; i<len; i++) {\r\n            if (_.isMatch(cachedUqs[i], retUqs[i]) === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    async unitxUq(unit:number):Promise<UqService> {\r\n        return await this.get('tie/unitx-uq', {unit:unit});\r\n    }\r\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\r\n        return await this.post('tie/reset-password', param);\r\n    }\r\n}\r\n\r\nexport async function loadAppUqs(appOwner:string, appName:string): Promise<App> {\r\n    let centerAppApi = new CenterAppApi('tv/', undefined);\r\n    //let unit = meInFrame.unit;\r\n    let ret = await centerAppApi.uqs(appOwner, appName);\r\n    centerAppApi.checkUqs(appOwner, appName).then(v => {\r\n        if (v === false) {\r\n            localStorage.removeItem(appUqs);\r\n            nav.start();\r\n        }\r\n    });\r\n    return ret;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Controller } from 'tonva-tools';\r\n\r\nexport abstract class Link {\r\n    abstract onClick: () => void;\r\n    abstract render(className?:string):JSX.Element;\r\n}\r\n\r\nexport class CLink extends Link {\r\n    private controller: Controller;\r\n    protected icon:string|JSX.Element;\r\n    protected label:string|JSX.Element;\r\n\r\n    constructor(controller:Controller) {\r\n        super();\r\n        this.controller = controller;\r\n        this.icon = controller.icon;\r\n        this.label = controller.label;\r\n    }\r\n\r\n    onClick = async () => {\r\n        await this.controller.start();\r\n    }\r\n\r\n    render(className?:string) {\r\n        return <div\r\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\r\n            onClick={this.onClick}>\r\n            {this.icon} &nbsp; {this.label}\r\n        </div>;\r\n        //return React.createElement(this.view, className);\r\n    }\r\n}\r\n","export * from './cLink';\r\n","\r\nlet subAppWindow:Window;\r\nfunction postWsToSubApp(msg:any) {\r\n    if (subAppWindow === undefined) return;\r\n    subAppWindow.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport function setSubAppWindow(win:Window) {\r\n    subAppWindow = win;\r\n}\r\n\r\nexport function postWsToTop(msg:any) {\r\n    window.top.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport abstract class WsBase {\r\n    wsBaseId:string;\r\n    private handlerSeed = 1;\r\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\r\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\r\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.anyHandlers[seed] = handler;\r\n        return seed;\r\n    }\r\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.msgHandlers[seed] = {type:type, handler: handler};\r\n        return seed;\r\n    }\r\n    endWsReceive(handlerId:number) {\r\n        delete this.anyHandlers[handlerId];\r\n        delete this.msgHandlers[handlerId];\r\n    }\r\n    async receive(msg:any) {\r\n        let {$type} = msg;\r\n        for (let i in this.anyHandlers) {\r\n            await this.anyHandlers[i](msg);\r\n        }\r\n        for (let i in this.msgHandlers) {\r\n            let {type, handler} = this.msgHandlers[i];\r\n            if (type !== $type) continue;\r\n            await handler(msg);\r\n        }\r\n    }\r\n}\r\n\r\nlet wsBaseSeed = 1;\r\nexport class WsBridge extends WsBase {\r\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\r\n}\r\n\r\nexport const wsBridge = new WsBridge();\r\n\r\nexport class WSChannel extends WsBase {\r\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\r\n    static centerToken:string;\r\n    private wsHost: string;\r\n    private token: string;\r\n    private ws: WebSocket;\r\n\r\n    constructor(wsHost: string, token: string) {\r\n        super();\r\n        this.wsHost = wsHost;\r\n        this.token = token;\r\n    }\r\n\r\n    static setCenterToken(token?: string) {\r\n        WSChannel.centerToken = token;\r\n    }\r\n    \r\n    connect():Promise<void> {\r\n        //this.wsHost = wsHost;\r\n        //this.token = token || WSChannel.centerToken;\r\n        if (this.ws !== undefined) return;\r\n        let that = this;\r\n        return new Promise((resolve, reject) => {\r\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\r\n            console.log('connect webSocket %s', this.wsHost);\r\n            ws.onopen = (ev) => {\r\n                console.log('webSocket connected %s', this.wsHost);\r\n                that.ws = ws;\r\n                resolve();\r\n            };\r\n            ws.onerror = (ev) => {\r\n                reject('webSocket can\\'t open!');\r\n            };\r\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\r\n            ws.onclose = (ev) => {\r\n                that.ws = undefined;\r\n                console.log('webSocket closed!');\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        if (this.ws !== undefined) {\r\n            this.ws.close();\r\n            this.ws = undefined;\r\n        }\r\n    }\r\n    private async wsMessage(event:any):Promise<void> {\r\n        try {\r\n            console.log('websocket message: %s', event.data);\r\n            let msg = JSON.parse(event.data);\r\n            postWsToSubApp(msg);\r\n            await this.receive(msg);\r\n        }\r\n        catch (err) {\r\n            console.log('ws msg error: ', err);\r\n        }\r\n    }\r\n    sendWs(msg:any) {\r\n        let netThis = this;\r\n        this.connect().then(() => {\r\n            netThis.ws.send(msg);\r\n        });\r\n    }\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav } from './nav';\r\n\r\nexport interface ImageProps {\r\n    src: string;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    altImage?: string;\r\n}\r\n\r\nexport function Image(props: ImageProps) {\r\n    let {className, style, src, altImage} = props;\r\n    if (!src) {\r\n        return <div className={classNames(className, 'image-none')} style={style}>\r\n            <i className=\"fa fa-file-o\" />\r\n        </div>;\r\n    }\r\n    if (src.startsWith(':') === true) {\r\n        src = nav.resUrl + src.substr(1);\r\n    }\r\n    return <img src={src} className={className} \r\n        style={style}\r\n        onError={evt=>evt.currentTarget.src=altImage} />;\r\n}\r\n","export const isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\r\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\r\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\r\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugBuilderHost = 'localhost:3009';\r\ninterface HostValue {\r\n    value: string;\r\n    local: boolean;\r\n}\r\nconst hosts:{[name:string]:HostValue} = {\r\n    centerhost: {\r\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \r\n        local: false\r\n    },\r\n    reshost: {\r\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\r\n        local: false\r\n    },\r\n    uqhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    unitxhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    \"uq-build\": {\r\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \r\n        local: false\r\n    }\r\n}\r\n\r\nfunction centerUrlFromHost(host:string) {return `http://${host}/`}\r\nfunction centerWsFromHost(host:string) {return `ws://${host}/tv/`}\r\n\r\nconst fetchOptions = {\r\n    method: \"GET\",\r\n    mode: \"no-cors\", // no-cors, cors, *same-origin\r\n    headers: {\r\n        \"Content-Type\": \"text/plain\"\r\n    },\r\n};\r\n\r\nclass Host {\r\n    url: string;\r\n    ws: string;\r\n    resHost: string;\r\n\r\n    async start() {\r\n        if (isDevelopment === true) {\r\n            await this.tryLocal();\r\n        }\r\n        let host = this.getCenterHost();\r\n        this.url = centerUrlFromHost(host);\r\n        this.ws = centerWsFromHost(host);\r\n        this.resHost = this.getResHost();\r\n    }\r\n\r\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\r\n    private async tryLocal() {\r\n        let promises:PromiseLike<any>[] = [];\r\n        let hostArr:string[] = [];\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            let {value} = hostValue;\r\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\r\n        }\r\n\r\n        for (let host of hostArr) {\r\n            let fetchUrl = this.debugHostUrl(host);\r\n            promises.push(localCheck(fetchUrl));\r\n        }\r\n        let results = await Promise.all(promises);\r\n        let len = hostArr.length;\r\n        for (let i=0; i<len; i++) {\r\n            let local = results[i];\r\n            let host = hostArr[i];\r\n            for (let j in hosts) {\r\n                let hostValue = hosts[j];\r\n                if (hostValue.value === host) {\r\n                    hostValue.local = local;\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        let p = 0;\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            hostValue.local = results[p];\r\n            ++p;\r\n        }\r\n        */\r\n    }\r\n\r\n    private getCenterHost():string {\r\n        let {value, local} = hosts.centerhost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return centerHost;\r\n    }\r\n\r\n    private getResHost():string {\r\n        let {value, local} = hosts.reshost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return resHost;\r\n    }\r\n\r\n    getUrlOrDebug(url:string, urlDebug:string):string {\r\n        if (isDevelopment !== true) return url;\r\n        if (!urlDebug) return url;\r\n        for (let i in hosts) {\r\n            let host = hosts[i];\r\n            let {value, local} = host;\r\n            let hostString = `://${i}/`;\r\n            let pos = urlDebug.indexOf(hostString);\r\n            if (pos > 0) {\r\n                if (local === false) return url;\r\n                urlDebug = urlDebug.replace(hostString, `://${value}/`);\r\n                return urlDebug;\r\n            }\r\n        }\r\n        return url;\r\n    }\r\n\r\n    async localCheck(urlDebug: string):Promise<boolean> {\r\n        return await localCheck(urlDebug);\r\n    }\r\n}\r\n\r\nexport const host:Host = new Host();\r\n\r\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\r\n// 网上找了上面的fetch timeout代码。\r\n// 尽管timeout了，fetch仍然继续，没有cancel\r\n\r\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\r\n//const timeout = 2000;\r\nconst timeout = 200;\r\n\r\nfunction fetchLocalCheck(url:string):Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url, fetchOptions as any)\r\n      .then(v => {\r\n          v.text().then(resolve).catch(reject);\r\n      })\r\n      .catch(reject);\r\n      const e = new Error(\"Connection timed out\");\r\n      setTimeout(reject, timeout, e);\r\n    });\r\n}\r\n\r\nasync function localCheck(url:string):Promise<boolean> {\r\n    try {\r\n        await fetchLocalCheck(url);\r\n        return true;\r\n    }\r\n    catch (err) {\r\n        return false;\r\n    }\r\n}\r\n","import jwtDecode from 'jwt-decode';\r\n\r\nexport interface Unit {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface Guest {\r\n    id: number;             // id = 0\r\n    guest: number;\r\n    token: string;\r\n}\r\n\r\nexport interface User extends Guest {\r\n    id: number;\r\n    name: string;\r\n    nick?: string;\r\n    icon?: string;\r\n}\r\n\r\n/*\r\nexport class UserInNav {\r\n    private user: User;\r\n    constructor(user: User) {\r\n        this.user = user;\r\n    }\r\n    get id():number {return this.user.id}\r\n    get name(): string {return this.user.name}\r\n    get nick(): string {return this.user.nick}\r\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\r\n    get guest(): number {return this.user.guest}\r\n    get token(): string {return this.user.token}\r\n}\r\n*/\r\nexport function decodeUserToken(token: string): User {\r\n    let ret:any = jwtDecode(token);\r\n    let user: User = {\r\n        id: ret.id,\r\n        name: ret.name,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return user;\r\n}\r\n\r\nexport function decodeGuestToken(token: string): Guest {\r\n    let ret:any = jwtDecode(token);\r\n    let guest: Guest = {\r\n        id: 0,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return guest;\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { Rule, FieldRule } from '../form/rules';\r\n\r\nexport abstract class ItemEdit {\r\n    protected name: string;\r\n    protected itemSchema: ItemSchema;\r\n    protected uiItem:UiItem;\r\n    protected value: any;\r\n    protected label: string;\r\n\r\n    @observable protected error: string;\r\n    @observable protected isChanged: boolean = false;\r\n    protected newValue: any;\r\n\r\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\r\n        this.itemSchema = itemSchema;\r\n        this.uiItem = uiItem\r\n        this.value = value;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.label = label;\r\n    }\r\n    async start():Promise<any> {\r\n        return await this.internalStart();\r\n    }\r\n\r\n    protected abstract internalStart():Promise<any>;\r\n\r\n    async end():Promise<any> {\r\n        await this.internalEnd()\r\n    }\r\n\r\n    protected async internalEnd():Promise<void> {nav.pop()}\r\n\r\n    protected verifyValue() {\r\n        if (this.uiItem === undefined) return;\r\n        let {rules} = this.uiItem;\r\n        if (rules === undefined) return;\r\n        let nv = this.newValue;\r\n        function verifyRule(rule:FieldRule, value: any):string {\r\n            let error = rule(nv);\r\n            if (error !== undefined) {\r\n                if (typeof error !== 'object')\r\n                    return error;\r\n                else\r\n                    return JSON.stringify(error);\r\n            }\r\n        }\r\n        if (Array.isArray(rules)) {\r\n            for (let rule of rules) {\r\n                let error = verifyRule(rule as FieldRule, nv);\r\n                if (error !== undefined) {\r\n                    this.error = error;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.error = verifyRule(rules as FieldRule, nv);\r\n        }\r\n    }\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport { SearchBox, List, Muted, LMR } from 'tonva-react-form';\r\nimport { TuidMain, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { CLink } from '../link';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\n\r\nexport class VTuidMain extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected controller: CTuidMain;\r\n    onNew = () => this.event('new');\r\n    onList = () => this.event('list');\r\n    onSearch = async (key:string) => this.event('list', key);\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected entityRender(link: CLink, index: number): JSX.Element {\r\n        return link.render();\r\n    }\r\n\r\n    protected async entityClick(link: CLink) {\r\n        await link.onClick();\r\n    }\r\n\r\n    protected get view() {\r\n        let {label, proxyLinks, isFrom} = this.controller;\r\n        let newButton:any;\r\n        if (isFrom === false) newButton = <button className=\"btn btn-outline-success ml-2\" onClick={this.onNew}>新增</button>;\r\n        let content:any;\r\n        if (proxyLinks === undefined) {\r\n            let right = <>\r\n                {newButton}\r\n                <button className=\"btn btn-outline-info ml-2\" onClick={this.onList}>全部</button>\r\n            </>;\r\n            content = <LMR className='m-3' right={right}>\r\n                <SearchBox className=\"w-100\" size=\"md\"\r\n                    onSearch={this.onSearch} \r\n                    placeholder={'搜索'+label} />\r\n            </LMR>;\r\n        }\r\n        else {\r\n            content = <List className=\"my-2\"\r\n                header={<Muted>{label} 代理下列Tuid</Muted>}\r\n                items={proxyLinks}\r\n                item={{render: this.entityRender, onClick:this.entityClick}} />\r\n        }\r\n        return () => <Page header={label}>\r\n            {content}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\nimport { TuidMain, Tuid } from '../../entities';\r\n\r\nexport type TypeVTuidEdit = typeof VTuidEdit;\r\n\r\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    private vForm: VForm;\r\n    private id: number;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        if (param !== undefined) {\r\n            this.id = param.id;\r\n        }\r\n        this.openPage(this.editView);\r\n    }\r\n\r\n    protected get editView() {\r\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\r\n            {this.vForm.render('py-3')}\r\n        </Page>;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n        this.event('edit-end');\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.controller.entity.save(this.id, values);\r\n        let {id} = ret;\r\n        if (id < 0) {\r\n            let {unique} = this.controller.entity;\r\n            if (unique !== undefined) {\r\n                for (let u of unique) {\r\n                    this.vForm.setError(u, '不能重复');\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.controller.isCalling) {\r\n            this.returnCall(id);\r\n            this.closePage();\r\n            return;\r\n        }\r\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n\r\n        this.event('item-changed', {id: this.id, values: values});\r\n        return;\r\n    }\r\n\r\n    //protected view = TuidNewPage;\r\n}\r\n/*\r\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\r\n    let {label, id, vmForm} = vm;\r\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\r\n        {vmForm.render('mx-3 my-2')}\r\n    </Page>;\r\n});\r\n*/","import { nav, Page } from 'tonva-tools';\r\nimport { VTuidMainListBase, VTuidDivListBase } from './vTuidList';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../entities';\r\nimport { CTuid, TuidUI } from './cTuid';\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport React from 'react';\r\nimport { RowContent } from '../form/viewModel';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\r\n    protected mainRowContent: (row:any) => JSX.Element;\r\n    protected divRowContent: (row:any) => JSX.Element;\r\n\r\n    async open(param?:any): Promise<void> {\r\n        if (param === undefined)\r\n            await this.showMain(param);\r\n        else\r\n            await this.showDiv(param);\r\n    }\r\n\r\n    private async showMain(param) {\r\n        this.mainRowContent = this.ui.rowContent || RowContent;\r\n        await this.controller.searchMain(param);\r\n        this.openPage(this.mainView);\r\n    }\r\n\r\n    private async showDiv(ownerValue: any) {\r\n        let {divs} = this.ui;\r\n        if (divs !== undefined) {\r\n            this.divRowContent = divs[this.entity.name].rowContent;\r\n        }\r\n        if (this.divRowContent === undefined) {\r\n            this.divRowContent = RowContent;\r\n        }\r\n        let divItems = await this.controller.getDivItems(ownerValue);\r\n        this.openPage(this.divView, {items: divItems});\r\n    }\r\n\r\n    protected mainView = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header} back=\"close\">\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n\r\n    onSearchMain = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\r\n    clickMainRow = async (item:any) => {\r\n        this.ceasePage();\r\n        if (this.controller.entity.owner === undefined) {\r\n            this.returnCall(item);\r\n            return;\r\n        }\r\n        await this.showDiv(this.entity.getIdFromObj(item));\r\n    }\r\n\r\n    protected divView = (param:any) => {\r\n        return <Page header=\"选择Div\">\r\n            <List\r\n                items={param.items}\r\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\r\n        </Page>;\r\n    }\r\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\r\n    clickDivRow = (item:any) => {\r\n        this.ceasePage();\r\n        this.returnCall(item);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidMain } from '../../entities';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\n\r\nexport type TypeVTuidView = typeof VTuidView;\r\n\r\nexport class VTuidView extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    vForm: VForm;\r\n    id: number;\r\n\r\n    protected buildForm(param:any) {\r\n        this.vForm = this.createForm(undefined, param);\r\n    }\r\n\r\n    async open(param:any) {\r\n        this.buildForm(param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    render(param:any) {\r\n        this.buildForm(param);\r\n        return this.vForm.render();\r\n    }\r\n\r\n    async loadId(id: number) {\r\n        this.id = id;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.entity.save(this.id, values);\r\n        if (ret) {\r\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\r\n        }\r\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n            {this.vForm.render('py-3')}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport { VTuidView } from './vTuidView';\r\n\r\nexport class VTuidInfo  extends VTuidView {\r\n/*\r\n    async open(param?:any) {\r\n        this.open(this.view);\r\n    }\r\n*/\r\n/*\r\n    private view = () => {\r\n        return <Page>\r\n            TuidInfo\r\n        </Page>\r\n    }\r\n*/\r\n}\r\n","import { PageItems } from 'tonva-tools';\r\nimport { Tuid } from \"../../entities\";\r\n\r\nexport class TuidPageItems<T> extends PageItems<T> {\r\n    private tuid: Tuid;\r\n    constructor(tuid: Tuid) {\r\n        super(true);\r\n        this.tuid = tuid;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.tuid.search(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { TuidMain, Entity, Tuid, TuidDiv } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\r\nimport { JSONContent, RowContent } from '../form/viewModel';\r\n\r\nexport abstract class VTuidMainListBase  extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected rowContent: (row:any) => JSX.Element;\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        this.rowContent = this.ui.rowContent || RowContent;\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n    private rowKey = (item:any) => {\r\n        let {id} = item;\r\n        return id;\r\n    }\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidMainList extends VTuidMainListBase {\r\n    protected async onSelected(item:any) {\r\n        if (this.controller.isFrom === false)\r\n            this.event('edit', item.id);\r\n        else\r\n            this.event('info', item.id);\r\n    }\r\n}\r\n\r\nexport abstract class VTuidDivListBase  extends VEntity<TuidDiv, TuidUI, CTuidDiv> {\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        //this.PageItems = new TuidPageItems(this.entity);\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => {\r\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\r\n    }\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidDivList extends VTuidDivListBase {\r\n    protected async onSelected(item:any) {\r\n        this.event('edit', item.id);\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { TypeVPage, PageItems } from 'tonva-tools';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { TuidMain, Tuid, TuidDiv } from \"../../entities\";\r\nimport { VTuidMain } from './vTuidMain';\r\nimport { VTuidEdit } from './vTuidEdit';\r\nimport { VTuidSelect } from './vTuidSelect';\r\nimport { CUq } from \"../uq/cUq\";\r\nimport { CLink } from \"../link\";\r\nimport { VTuidInfo } from \"./vTuidInfo\";\r\nimport { TuidPageItems } from \"./pageItems\";\r\nimport { VTuidMainList } from './vTuidList';\r\n\r\nexport interface TuidUI extends EntityUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    content?: React.StatelessComponent<any>;\r\n    rowContent?: React.StatelessComponent<any>;\r\n    divs?: {\r\n        [div:string]: {\r\n            CTuidSelect?: typeof CTuidSelect;\r\n            content?: React.StatelessComponent<any>;\r\n            rowContent?: React.StatelessComponent<any>;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\r\n    PageItems:PageItems<any>;\r\n\r\n    protected buildPageItems():PageItems<any> {\r\n        return new TuidPageItems(this.entity.owner || this.entity);\r\n    }\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first(key);\r\n    }\r\n\r\n    async getDivItems(ownerId:number):Promise<any[]> {\r\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport abstract class CTuidBase extends CTuid<TuidMain> {\r\n    constructor(cUq: CUq, entity: TuidMain, ui: TuidUI, res:any) {\r\n        super(cUq, entity, ui, res);\r\n        //let tuid = this.entity;\r\n        //this.proxies = tuid.proxies;\r\n        if (this.proxies !== undefined) {\r\n            this.proxyLinks = [];\r\n            for (let i in this.proxies) {\r\n                let link = this.cUq.linkFromName('tuid', i);\r\n                this.proxyLinks.push(link);\r\n            }\r\n        }\r\n    }\r\n\r\n    from():CTuidBase {\r\n        let ret = this.entity.cFrom();\r\n        if (ret === undefined) return this;\r\n        return ret;\r\n    }\r\n\r\n    cUqFrom():CUq {\r\n        return this.entity.cUqFrom();\r\n    }\r\n    cEditFrom(): CTuidEdit {\r\n        let cUq = this.entity.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.entity.name);\r\n    }\r\n    cInfoFrom(): CTuidInfo {\r\n        let cUq = this.entity.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.entity.name);\r\n    }\r\n    cSelectFrom(): CTuidSelect {\r\n        let cUq = this.entity.cUqFrom();\r\n        return cUq.cTuidSelectFromName(this.entity.name);\r\n    }\r\n\r\n    getLable(tuid:Tuid):string {\r\n        if (tuid === this.entity) return this.label;\r\n        let {name} = tuid;\r\n        let {arrs} = this.res;\r\n        if (arrs !== undefined) {\r\n            let arr = arrs[name];\r\n            if (arr !== undefined) {\r\n                let label = arr.label;\r\n                if (label !== undefined) return label;\r\n            }\r\n        }\r\n        return name;\r\n    }\r\n\r\n    proxies: {[name:string]: TuidMain};\r\n    proxyLinks: CLink[];\r\n    isFrom: boolean;\r\n\r\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\r\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\r\n    protected get VTuidList():typeof VTuidMainList {return VTuidMainList}\r\n\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n        //let v: TypeVPage<CTuidMain>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': await this.onNew(); break;\r\n            case 'list': await this.onList(); break;\r\n            case 'edit': await this.onEdit(value); return;\r\n            case 'item-changed': this.itemChanged(value); return;\r\n            case 'info': \r\n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\r\n                await cTuidInfo.start(value);\r\n                return;\r\n        }\r\n        //await this.openVPage(v, value);\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        let cTuidEdit = this.ui && this.ui.CTuidEdit;\r\n        if (cTuidEdit === undefined) {\r\n            await this.openVPage(this.VTuidEdit, values);\r\n        }\r\n        else {\r\n            await (new cTuidEdit(this.cUq, this.entity, this.ui, this.res)).start(values);\r\n        }\r\n    }\r\n\r\n    private async onNew() {\r\n        await this.edit(undefined);\r\n    }\r\n\r\n    private async onList() {\r\n        let cTuidList = this.ui && this.ui.CTuidList;\r\n        if (cTuidList === undefined) {\r\n            await this.openVPage(this.VTuidList, undefined);\r\n        }\r\n        else {\r\n            await (new cTuidList(this.cUq, this.entity, this.ui, this.res)).start(undefined);\r\n        }\r\n    }\r\n\r\n    protected async onEdit(id:number) {\r\n        let values:any = undefined;\r\n        if (id !== undefined) {\r\n            values = await this.entity.load(id);\r\n        }\r\n        this.edit(values);\r\n        //await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n\r\n    private itemChanged({id, values}:{id:number, values: any}) {\r\n        if (this.PageItems === undefined) return;\r\n        let items = this.PageItems.items;\r\n        let item = items.find(v => v.id === id);\r\n        if (item !== undefined) {\r\n            _.merge(item, values);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CTuidMain extends CTuidBase {\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n}\r\n\r\nexport class CTuidEdit extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        if (typeof(id) === 'number') {\r\n            await this.onEdit(id);\r\n        }\r\n        else {\r\n            await this.edit(id);\r\n        }\r\n    }\r\n\r\n    protected async edit(values:any) {\r\n        await this.openVPage(this.VTuidEdit, values);\r\n    }\r\n}\r\n\r\nexport class CTuidList extends CTuidBase {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidList);\r\n    }\r\n}\r\n\r\nexport class CTuidDiv extends CTuid<TuidDiv> {\r\n    protected async internalStart():Promise<void> {\r\n        alert('tuid div: ' + this.entity.name);\r\n    }\r\n}\r\n\r\nexport class CTuidSelect extends CTuid<Tuid> {\r\n    protected async internalStart(param?: any):Promise<void> {\r\n        await this.openVPage(this.VTuidSelect, param);\r\n    }\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        if (this.PageItems !== undefined) this.PageItems.reset();\r\n        return true;\r\n    }\r\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\r\n    idFromItem(item:any) {\r\n        return item.id;\r\n    }\r\n}\r\n\r\nexport class CTuidInfo extends CTuid<Tuid> {\r\n    protected async internalStart(id: any):Promise<void> {\r\n        let data = await this.entity.load(id)\r\n        await this.openVPage(this.VTuidInfo, data);\r\n    }\r\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\r\n}\r\n","export * from './cTuid';\r\nexport * from './vTuidMain';\r\nexport * from './vTuidEdit';\r\nexport * from './vTuidInfo';\r\nexport * from './vTuidView';\r\nexport * from './vTuidSelect';\r\n","import * as React from 'react';\r\nimport { VField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VSubmit } from './vSubmit';\r\nimport { uid } from 'tonva-react-form';\r\n\r\nexport abstract class VBand {\r\n    protected label: string;\r\n    protected view = () => <div />;\r\n\r\n    constructor(label:string) {\r\n        this.label = label;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        //text-sm-right\r\n        return <div key={this.key} className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">\r\n                    {this.label}\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                    {this.renderContent()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {}\r\n    get key() {return this.label}\r\n    public getVFields():VField[] {return;}\r\n    public getVArr():VArr {return;}\r\n    public getVSubmit():VSubmit {return;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\r\n    }\r\n}\r\n\r\nexport interface FieldRes {\r\n    label: string;\r\n    placeHolder: string;\r\n    suffix: string;\r\n}\r\nexport class VFieldBand extends VBand {\r\n    protected vField:VField;\r\n    constructor(label:string, vField:VField) {\r\n        super(label);\r\n        this.vField = vField;\r\n    }\r\n\r\n    get key() {return this.vField.name}\r\n    public getVFields():VField[] {return [this.vField];}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return this.vField.render();\r\n        /*\r\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            {this.vField.render()}\r\n        </div>;*/\r\n    }\r\n}\r\n\r\nexport class VArrBand extends VBand {\r\n    protected vArr:VArr;\r\n    constructor(label:string, vArr:VArr) {\r\n        super(label);\r\n        this.vArr = vArr;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\r\n    get key() {return this.vArr.name}\r\n    public getVArr():VArr {return this.vArr;}\r\n\r\n    render():JSX.Element {\r\n        return <React.Fragment key={this.key}>\r\n            {this.vArr && this.vArr.render()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport class VFieldsBand extends VBand {\r\n    protected vFields: VField[];\r\n    constructor(label:string, vFields:VField[]) {\r\n        super(label);\r\n        this.vFields = vFields;\r\n    }\r\n\r\n    get key() {return this.vFields[0].name}\r\n    public getVFields():VField[] {return this.vFields;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            fields\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class VSubmitBand extends VBand {\r\n    protected vSubmit: VSubmit;\r\n    constructor(vSubmit:VSubmit) {\r\n        super(undefined);\r\n        this.vSubmit = vSubmit;\r\n    }\r\n\r\n    get key() {return '$submit'}\r\n\r\n    public getVSubmit():VSubmit {return this.vSubmit;}\r\n\r\n    render():JSX.Element {\r\n        return <div key=\"$submit\" className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <div className=\"offset-sm-2 col-sm-10\">\r\n                    {this.vSubmit.render()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames'\r\nimport { ViewModel } from \"./viewModel\";\r\nimport { VForm } from './vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VSubmit extends ViewModel {\r\n    private vForm: VForm;\r\n    constructor(vForm: VForm) {\r\n        super();\r\n        this.vForm = vForm;\r\n        this.caption = this.vForm.submitCaption;\r\n        this.className = 'btn btn-primary w-25';\r\n    }\r\n    @observable caption: string;\r\n    @observable className: string;\r\n\r\n    private onClickSubmit = async () => {\r\n        this.vForm.submit();\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let {isOk} = this.vForm;\r\n        return <button type=\"button\" \r\n            onClick={this.onClickSubmit}\r\n            className={this.className}\r\n            disabled={isOk === false}>\r\n            {this.caption}\r\n        </button>;\r\n    });\r\n}","\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any);\r\n}\r\n\r\nexport class RuleRequired extends Rule {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push('不能为空');\r\n    }\r\n}\r\n\r\nexport class RuleNum extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) defy.push('必须是数字');\r\n    }\r\n}\r\n\r\nexport class RuleInt extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\r\n            defy.push('必须是整数');\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleMin extends RuleNum {\r\n    constructor(min: number) {\r\n        super();\r\n        this.min = min;\r\n    }\r\n    min: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\r\n    }\r\n}\r\n\r\nexport class RuleMax extends RuleNum {\r\n    constructor(max: number) {\r\n        super();\r\n        this.max = max;\r\n    }\r\n    max: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { computed, action } from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { ViewModel } from \"../viewModel\";\r\nimport { VForm, FormMode } from '../vForm';\r\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\r\n\r\nexport abstract class VField extends ViewModel {\r\n    protected form: VForm;\r\n    protected fieldUI: FieldUI;\r\n    protected fieldRes:FieldRes;\r\n    protected field: Field;\r\n    protected rules: Rule[];\r\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super();\r\n        this.form = form;\r\n        this.field = field;\r\n        this.name = field.name;\r\n        this.fieldUI = fieldUI || {} as any;\r\n        this.fieldRes = fieldRes || {} as any;\r\n        this.init();\r\n    }\r\n\r\n    name: string;\r\n\r\n    protected init() {\r\n        this.buildRules();\r\n    }\r\n\r\n    protected buildRules() {\r\n        this.rules = [];\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field !== undefined && this.field.null === false) {\r\n            this.rules.push(new RuleRequired);\r\n        }\r\n    }\r\n\r\n    @computed get checkRules(): string[] {\r\n        let defy = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        return defy;\r\n    }\r\n\r\n    @computed get isOk() {\r\n        if (this.rules.length === 0) return true;\r\n        let defy = this.checkRules;\r\n        return defy.length === 0;\r\n    }\r\n\r\n    @computed get value() { return this.form.values[this.name]; }\r\n    setValue(v:any) {\r\n        this.form.values[this.name]=v; \r\n    }\r\n    get error() { return this.form.errors[this.name]; }\r\n    set error(err:any) { this.form.errors[this.name]=err; }\r\n    protected parse(str:string):any {return str;}\r\n    get readonly():boolean {\r\n        let {mode} = this.form;\r\n        return mode === FormMode.readonly || \r\n            mode === FormMode.edit && this.fieldUI.editable === false;\r\n    }\r\n}\r\n\r\nexport class VUnknownField extends VField {\r\n    protected view = () => {\r\n        //let {name, type} = this.fieldUI;\r\n        let type='', name = '';\r\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\r\n            placeholder={'unkown control: ' + type + '-' + name} />;\r\n    }\r\n}\r\n\r\nexport abstract class VInputControl extends VField {\r\n    protected fieldUI: FieldInputUI;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected inputType:string;\r\n    protected get maxLength():number {return}\r\n\r\n    protected renderError = (className:string) => {\r\n        let {errors} = this.form;\r\n        let error = errors[this.name];\r\n        if (error === undefined) return;\r\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\r\n    }\r\n\r\n    /*\r\n    get value() {\r\n        return super.value;\r\n    }*/\r\n    setValue(v:any) {\r\n        super.setValue(v); this.setInputValue(); \r\n    }\r\n\r\n    protected ref = (input:HTMLInputElement) => {\r\n        this.input = input;\r\n        this.setInputValue();\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    protected onBlur = () => {\r\n        let defy = this.checkRules;\r\n        if (defy.length > 0) {\r\n            this.error = defy[0];\r\n        }\r\n        this.form.computeFields();\r\n    }\r\n\r\n    protected onChange = (evt: React.ChangeEvent<any>) => {\r\n        let v = this.parse(evt.currentTarget.value);\r\n        if (v === null) {\r\n            return;\r\n        }\r\n        this.setValue(v);\r\n    }\r\n\r\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\r\n    \r\n    protected view = observer(() => {\r\n        let {required} = this.fieldUI;\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = ['form-control', 'form-control-input'];\r\n        let errCN = 'text-danger small mt-1 mx-2';\r\n    \r\n        let redDot;\r\n        let input;\r\n        if (this.readonly === true) {\r\n            input = <input className={classNames(ctrlCN, 'bg-light')}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                readOnly={true}\r\n            />;\r\n        }\r\n        else {\r\n            input = <input className={classNames(ctrlCN)}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                onFocus={this.onFocus}\r\n                onBlur={this.onBlur}\r\n                onChange={this.onChange}\r\n                placeholder={placeHolder}\r\n                readOnly={false}\r\n                maxLength={this.maxLength}\r\n                onKeyPress={this.onKeyPress}\r\n            />;\r\n            if (required === true || this.field.null === false) {\r\n                redDot = <RedMark />;\r\n            }\r\n        }\r\n\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n\r\n        return <>\r\n            {redDot}\r\n            {inputGroup}\r\n            {this.renderError(errCN)}\r\n        </>\r\n    });\r\n}\r\n\r\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\r\n\r\nexport class VStringField extends VInputControl {\r\n    protected fieldUI: FieldStringUI;\r\n    protected inputType:string = 'text';\r\n    protected get maxLength():number {return this.field.size}\r\n}\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport abstract class VNumberControl extends VInputControl {\r\n    protected fieldUI: FieldNumberUI;\r\n    protected extraChars: number[];\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        if (this.fieldUI !== undefined) {\r\n            let {min, max} = this.fieldUI;\r\n            if (min !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n            }\r\n            else {\r\n                this.extraChars.push(KeyCode_Neg);\r\n            }\r\n    \r\n            if (max !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n            }\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'bigint':\r\n            case 'int':\r\n            case 'smallint':\r\n            case 'tinyint':\r\n                this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleNum);\r\n        let {min, max} = this.fieldUI;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n    }\r\n\r\n    inputType:string = 'number';\r\n\r\n    protected parse(text:string):any {\r\n        try {\r\n            if (text.trim().length === 0) return undefined;\r\n            let ret = Number(text);\r\n            return (ret === NaN)? null : ret;\r\n        }\r\n        catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        if (this.parse(this.input.value) == v) return;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.input.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.input.value = v;\r\n    }\r\n}\r\n\r\nexport class VIntField extends VNumberControl {\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleInt);\r\n    }\r\n}\r\n\r\nexport class VDecField extends VNumberControl {\r\n}\r\n\r\nexport class VTextField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateTimeField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateField extends VStringField {\r\n\r\n}\r\n","import React from 'react';\r\nimport { VField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { VForm } from '../vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { FieldRes } from '../vBand';\r\n\r\nexport class VComputeField extends VField {\r\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\r\n        super(form, field, undefined, fieldRes);\r\n    }\r\n    protected view = observer(() => {\r\n        let value = this.form.values[this.field.name];\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = 'form-control form-control-input bg-light';\r\n        if (value === null) value = '';\r\n        let input = <input className={ctrlCN}\r\n            type=\"text\"\r\n            placeholder={placeHolder}\r\n            readOnly={true}\r\n            value={value}/>\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n        return inputGroup;\r\n        /*\r\n            return <div \r\n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\r\n            {value} &nbsp;\r\n        </div>;\r\n        */\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { IObservableArray, observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { List, FA, Muted } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\r\nimport { ArrFields, Field } from '../../entities';\r\nimport { VForm, FieldInputs, FormMode } from './vForm';\r\nimport { FormArr } from '../formUI';\r\n\r\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\r\n\r\nexport class VArr extends ViewModel {\r\n    protected mode: FormMode;\r\n    protected label: any;\r\n    protected header: any;\r\n    protected footer: any;\r\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\r\n    protected onEditRow: ArrEditRow;\r\n    protected ownerForm:VForm;\r\n    protected vForm:VForm;\r\n    protected rowContent:TypeContent;\r\n    protected none: string;\r\n    protected newSubmitCaption: string;\r\n    protected editSubmitCaption: string;\r\n    protected addRow: ()=>Promise<void>;\r\n\r\n    name:string;\r\n    list: IObservableArray<any>;\r\n\r\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\r\n        super();\r\n        this.ownerForm = ownerForm;\r\n        let {name, fields} = arr;\r\n        this.name = name;\r\n        let {ui, res, mode, inputs, values} = ownerForm;\r\n        let arrsRes = res.arrs;\r\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\r\n        let {label, none, newSubmit, editSubmit} = arrRes;\r\n        this.none = none || ownerForm.none;\r\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\r\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\r\n        this.label = label || name;\r\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\r\n        this.rowContent = arrUI.rowContent;// || JSONContent;\r\n        this.mode = mode;\r\n        if (this.onEditRow === undefined) {\r\n            this.vForm = new VForm({\r\n                fields: fields,\r\n                arrs: undefined,\r\n                ui: arrUI,\r\n                res: arrRes,\r\n                inputs: inputs[name] as FieldInputs,\r\n                none: ownerForm.none,\r\n                submitCaption: 'submit',\r\n                arrNewCaption: undefined,\r\n                arrEditCaption: undefined,\r\n                arrTitleNewButton: undefined,\r\n                mode: mode,\r\n            }, \r\n            mode===FormMode.readonly? undefined: this.onSubmit);\r\n        }\r\n        else {\r\n            this.onEditRow = onEditRow;\r\n        }\r\n        this.list = values[name];\r\n    }\r\n\r\n    reset() {\r\n        this.vForm.reset();\r\n        this.list.clear();\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {\r\n        this.addRow = addRow;\r\n    }\r\n\r\n    protected rowPage = () => {\r\n        return <Page header={this.label} back=\"close\">\r\n            {this.vForm.render('py-3')}\r\n        </Page>\r\n    }\r\n    private onSubmit = async () => {\r\n        let {valueBoxs} = this.vForm;\r\n        await this.onRowChanged(valueBoxs);\r\n    }\r\n\r\n    private onRowChanged = async (rowValues:any) => {\r\n        if (this.rowValues === undefined) {\r\n            rowValues.$owner = this.ownerForm.values;\r\n            this.list.push(rowValues);\r\n            if (this.onEditRow === undefined)\r\n                this.vForm.reset();\r\n            else\r\n                await this.onEditRow(undefined, this.onRowChanged);\r\n        }\r\n        else {\r\n            _.merge(this.rowValues, rowValues);\r\n            if (this.onEditRow === undefined) nav.pop();\r\n        }\r\n    }\r\n\r\n    private renderItem = (item:any, index:number) => {\r\n        if (this.rowContent === undefined)\r\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\r\n        return <this.rowContent {...item} />;\r\n    }\r\n    private showRow = async (rowValues:any):Promise<any> => {\r\n        if (this.onEditRow !== undefined) {\r\n            await this.onEditRow(rowValues, this.onRowChanged);\r\n            return;\r\n        }\r\n        this.vForm.reset();\r\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\r\n        nav.push(<this.rowPage />);\r\n    }\r\n    private editRow = async (rowValues:any): Promise<void> => {\r\n        this.rowValues = rowValues;\r\n        let {vSubmit} = this.vForm;\r\n        if (vSubmit !== undefined) {\r\n            vSubmit.caption = this.editSubmitCaption;\r\n            vSubmit.className = 'btn btn-outline-success';\r\n        }\r\n        this.vForm.mode = this.ownerForm.mode;\r\n        await this.showRow(rowValues);\r\n    }\r\n    private internalAddRow = async () => {\r\n        this.rowValues = undefined;\r\n        let {vSubmit} = this.vForm;\r\n        vSubmit.caption = this.newSubmitCaption;\r\n        vSubmit.className = 'btn btn-outline-success';\r\n        this.vForm.reset();\r\n        this.vForm.mode = FormMode.new;\r\n        await this.showRow(undefined);\r\n    }\r\n\r\n    protected view = () => {\r\n        let button;\r\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\r\n            button = <button onClick={this.addRow || this.internalAddRow}\r\n                type=\"button\" \r\n                className=\"btn btn-link p-0\">\r\n                {this.ownerForm.arrTitleNewButton}\r\n            </button>;\r\n        }\r\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\r\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\r\n            {button}\r\n        </div>;\r\n        return <List className=\"pb-3\"\r\n            header={header}\r\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\r\n            items={this.list}\r\n            item={{render: this.renderItem, onClick: this.editRow}} />;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from '../../../tools';\r\nimport { Field, Tuid } from '../../../entities';\r\nimport { VField, RedMark } from \"./vField\";\r\nimport { FieldUI } from '../../formUI';\r\nimport { VForm, FieldInput, FormMode } from '../vForm';\r\nimport { FieldRes } from '../vBand';\r\n\r\nconst buttonStyle:React.CSSProperties = {\r\n    textAlign:'left', \r\n    paddingLeft:'0.75rem', \r\n    paddingRight:'0.75rem', \r\n    overflow: 'hidden'\r\n};\r\n\r\nexport class VTuidField extends VField {\r\n    protected vForm: VForm;\r\n    protected input: FieldInput;\r\n    protected tuid: Tuid;\r\n\r\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super(vForm, field, fieldUI, fieldRes);\r\n        this.tuid = field._tuid;\r\n        this.vForm = vForm;\r\n        this.input = vForm.inputs[field.name] as FieldInput;\r\n    }\r\n\r\n    onClick = async () => {\r\n        if (this.readonly === true) {\r\n            if (!this.value) return;\r\n            await this.tuid.showInfo(this.value.id);\r\n            return;\r\n        }\r\n        let id:number;\r\n        if (this.input !== undefined) {\r\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\r\n        }\r\n        else {\r\n            alert('call undefined');\r\n            id = 0;\r\n        }\r\n        this.setValue(this.tuid.boxId(id));\r\n    }\r\n    protected view = observer(() => {\r\n        let {placeHolder} = this.fieldRes;\r\n        let disabled:boolean = false;\r\n        let {_ownerField} = this.field;\r\n        if (_ownerField !== undefined) {\r\n            let {name, arr} = _ownerField;\r\n            disabled = this.vForm.getValue(name) === null;\r\n        }\r\n        let content;\r\n        if (this.value === null)\r\n            content = <>{placeHolder || this.input.placeHolder}</>;\r\n        else if (typeof this.value === 'object') {\r\n            content = tv(this.value);\r\n        }\r\n        else {\r\n            let idBox = this.tuid.boxId(this.value);\r\n            content = tv(idBox); // idBox.content();\r\n        }\r\n        if (this.readonly === true)\r\n        {\r\n            return <div \r\n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </div>;\r\n        }\r\n        let redDot;\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field.null === false) {\r\n            redDot = <RedMark />;\r\n        }\r\n        return <>\r\n            {redDot}\r\n            <button className=\"form-control btn btn-outline-info\"\r\n                type=\"button\"\r\n                disabled={disabled}\r\n                style={buttonStyle}\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </button>\r\n        </>;\r\n    })\r\n}\r\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from \"./vBand\";\r\nimport { Field, ArrFields } from \"../../entities\";\r\nimport { VForm, FormOptions } from \"./vForm\";\r\nimport { FormItems, FieldUI, FormItem } from \"../formUI\";\r\nimport { VSubmit } from \"./vSubmit\";\r\nimport { VField, buildVField, VComputeField } from \"./vField\";\r\nimport { VArr } from \"./vArr\";\r\nimport { VTuidField } from \"./vField/vTuidField\";\r\n\r\nexport class BandsBuilder {\r\n    private vForm: VForm;\r\n    private onSubmit: (values:any)=>Promise<void>;\r\n    private fields: Field[];\r\n    private arrs: ArrFields[];\r\n    private formItems: FormItems;\r\n    private layout: string[];\r\n    private res: any;\r\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.vForm = vForm;\r\n        this.onSubmit = onSubmit;\r\n        let {fields, arrs, ui, res} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        if (ui !== undefined) {\r\n            let {items, layout} = ui;\r\n            this.formItems = items;\r\n            this.layout = layout;\r\n        }\r\n        this.res = res;\r\n    }\r\n\r\n    build():VBand[] {\r\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\r\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\r\n    }\r\n\r\n    private resFromName(name:string, res:any):string|FieldRes {\r\n        if (res === undefined) return;\r\n        let {fields} = res;\r\n        if (fields === undefined) return;\r\n        return fields[name] || name;\r\n    }\r\n\r\n    private bandsOnFly():VBand[] {\r\n        let bands:VBand[] = [];\r\n        this.bandsFromFields(bands, this.fields, this.res);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\r\n        }\r\n        if (this.onSubmit !== undefined) {\r\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\r\n        }\r\n        return bands;\r\n    }\r\n\r\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\r\n        if (fields === undefined) return;\r\n        for (let field of fields) bands.push(this.bandFromField(field, res));\r\n    }\r\n\r\n    private bandsFromLayout():VBand[] {\r\n        let bands:VBand[] = [];\r\n        /*\r\n        for (let bandUI of this.bandUIs)  {\r\n            let band = this.bandFromUI(bandUI);\r\n            bands.push(band);\r\n        }\r\n        */\r\n        return bands;\r\n    }\r\n\r\n    /*\r\n    private bandFromUI(bandUI:BandUI):VBand {\r\n        let {band} = bandUI;\r\n        switch (band) {\r\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\r\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\r\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\r\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\r\n        }\r\n    }\r\n    \r\n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\r\n        let {label} = bandUI;\r\n        let vField = this.vFieldFromUI(bandUI);\r\n        return new VFieldBand(label, vField);\r\n    }\r\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\r\n        let {label, name} = bandUI;\r\n        let vArr = this.vArrFromUI(bandUI);\r\n        return new VArrBand(label, vArr);\r\n    }\r\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\r\n        let {label, fieldUIs} = bandUI;\r\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\r\n        return new VFieldsBand(label, vFields);\r\n    }\r\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\r\n        if (this.onSubmit === undefined) return;\r\n        let vSubmit = new VSubmit(this.vForm);\r\n        return new VSubmitBand(vSubmit);\r\n    }\r\n    */\r\n/*\r\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\r\n        let fieldUI:FieldUI = undefined;\r\n        if (formItem !== undefined) {\r\n            if (typeof formItem === 'function') {\r\n                return new VComputeField(this.vForm, field, fieldRes);\r\n            }\r\n        }\r\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\r\n        if (ret !== undefined) return ret;\r\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\r\n    }\r\n*/\r\n    private bandFromField(field:Field, res:any):VBand {\r\n        let {name} = field;\r\n        let fieldRes:FieldRes;\r\n        let rfn = this.resFromName(name, res);\r\n        let label:string;\r\n        if (typeof rfn === 'object') {\r\n            label = rfn.label;\r\n            fieldRes = rfn;\r\n        }\r\n        else {\r\n            label = rfn as string;\r\n            fieldRes = undefined;\r\n        }\r\n        let vField:VField;\r\n        let formItem:FormItem;\r\n        if (this.formItems !== undefined) formItem = this.formItems[name];\r\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\r\n        //let fieldUI:FieldUI = undefined;\r\n        if (typeof formItem === 'function') {\r\n            vField = new VComputeField(this.vForm, field, fieldRes);\r\n        }\r\n        else {\r\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        if (vField === undefined) {\r\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        return new VFieldBand(label || name, vField);\r\n    }\r\n\r\n    private bandFromArr(arr: ArrFields):VBand {\r\n        let {name, fields} = arr;\r\n        //let row = JSONContent;\r\n        //let bands:VBand[] = [];\r\n        //this.bandsFromFields(bands, fields, res);\r\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\r\n        return new VArrBand(name, vArr);\r\n    }\r\n\r\n    /*\r\n    private vFieldFromUI(fieldUI:FieldUI):VField {\r\n        return;\r\n    }\r\n\r\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\r\n        return;\r\n    }\r\n    */\r\n}\r\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField, VDateField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { VForm } from '../vForm';\r\nimport { FieldUI } from '../../formUI';\r\n\r\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\r\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\r\n    switch (field.type) {\r\n        default: return;\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n            vField = VIntField;\r\n            break;\r\n        case 'bigint':\r\n            let {_tuid} = field;\r\n            if (_tuid !== undefined) return;\r\n            vField = VIntField;\r\n            break;\r\n        case 'dec':\r\n            vField = VDecField;\r\n            break;\r\n        case 'char':\r\n            vField = VStringField;\r\n            break;\r\n        case 'text':\r\n            vField = VTextField;\r\n            break;\r\n        case 'datetime':\r\n            vField = VDateTimeField;\r\n            break;\r\n        case 'date':\r\n            vField = VDateField;\r\n            break;\r\n    }\r\n    return new vField(form, field, fieldUI, fieldRes);\r\n}\r\n\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { observer } from \"mobx-react\";\r\nimport { VBand } from './vBand';\r\nimport { BandsBuilder } from './bandsBuilder';\r\nimport { Field, ArrFields } from '../../entities';\r\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\r\nimport { VArr } from './vArr';\r\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\r\nimport { VField } from './vField';\r\nimport { VSubmit } from './vSubmit';\r\nimport { IObservableArray } from 'mobx';\r\nimport { FA } from 'tonva-react-form';\r\n\r\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\r\nexport interface FieldInput {\r\n    select: FieldCall;\r\n    content: React.StatelessComponent<any>;\r\n    placeHolder: string;\r\n}\r\nexport interface FieldInputs {\r\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\r\n}\r\nexport enum FormMode {new, edit, readonly}\r\n\r\nexport interface FormOptions {\r\n    fields: Field[];\r\n    arrs?: ArrFields[];\r\n    ui: FormUIBase;\r\n    res: any;\r\n    inputs: FieldInputs;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n    none: string;\r\n    mode: FormMode;\r\n}\r\n\r\nexport class VForm {\r\n    protected fields: Field[];\r\n    protected arrs: ArrFields[];\r\n    protected bands: VBand[];\r\n    protected bandColl: {[key:string]: VBand};\r\n    protected onSubmit: ()=>Promise<void>;\r\n\r\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\r\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        this.ui = ui;\r\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\r\n        this.res = res;\r\n        this.inputs = inputs;\r\n        this.none = none;\r\n        this.submitCaption = submitCaption;\r\n        this.arrNewCaption = arrNewCaption;\r\n        this.arrEditCaption = arrEditCaption;\r\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\r\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\r\n        else this.mode = mode;\r\n        this.buildFormValues();\r\n        this.buildBands(options, onSubmit);\r\n        this.onSubmit = onSubmit;\r\n    }\r\n\r\n    ui: FormUI;\r\n    res: any;\r\n    values: any;\r\n    errors: any;\r\n    formItems: FormItems;\r\n    mode: FormMode;\r\n    vFields: {[name:string]:VField} = {};\r\n    vArrs: {[name:string]: VArr} = {};\r\n    vSubmit: VSubmit;\r\n    inputs: FieldInputs;\r\n    none: string;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n\r\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.bandColl = {};\r\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\r\n        this.bands = bandsBuilder.build();\r\n        for (let band of this.bands) {\r\n            this.bandColl[band.key] = band;\r\n            let vFields = band.getVFields();\r\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\r\n            let vArr = band.getVArr();\r\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\r\n            let vSubmit = band.getVSubmit();\r\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\r\n        }\r\n    }\r\n\r\n    private onFormSubmit = (event:React.FormEvent<any>) => {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    protected view = observer(({className}:{className:string}) => {\r\n        return <form className={className} onSubmit={this.onFormSubmit}>\r\n            {this.bands.map(v => v.render())}\r\n        </form>;\r\n    });\r\n\r\n    getBand(name:string) {\r\n        return this.bandColl[name];\r\n    }\r\n\r\n    computeFields() {\r\n        if (this.formItems === undefined) return;\r\n        let values = this.values;\r\n        for (let i in this.formItems) {\r\n            let item = this.formItems[i];\r\n            if (typeof item !== 'function') continue;\r\n            values[i] = item.call(this, values);\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.onSubmit === undefined) return;\r\n        await this.onSubmit();\r\n    }\r\n    \r\n    getValues() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name} = f;\r\n            let v = values[name]\r\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\r\n        }\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                let {name, fields, id, order} = arr;\r\n                let list = ret[name] = [];\r\n                let rows = this.vArrs[name].list;\r\n                for (let row of rows) {\r\n                    let item = {} as any;\r\n                    if (id !== undefined) item[id] = row[id];\r\n                    if (order !== undefined) item[order] = row[order];\r\n                    for (let f of fields) {\r\n                        let {name:fn} = f;\r\n                        let v = row[fn]\r\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\r\n                    }\r\n                    list.push(item);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    get valueBoxs() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name, _tuid} = f;\r\n            let v = values[name]\r\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n        }\r\n        if (this.arrs === undefined) return ret;\r\n        for (let arr of this.arrs) {\r\n            let {name, fields, id, order} = arr;\r\n            let list = ret[name] = this.vArrs[name].list.slice();\r\n            for (let row of list) {\r\n                for (let f of fields) {\r\n                    let {name:fn, _tuid} = f;\r\n                    let v = row[fn]\r\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setValues(initValues:any) {\r\n        if (initValues === undefined) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            errors[fn] = undefined;\r\n            let v =  initValues[fn];\r\n            values[fn] = v;\r\n        }\r\n        // 还要设置arrs的values\r\n        for (let i in this.vArrs) {\r\n            let list = initValues[i];\r\n            if (list === undefined) continue;\r\n            let arrList = values[i] as IObservableArray<any>;\r\n            arrList.clear();\r\n            arrList.push(...list);\r\n        }\r\n    }\r\n\r\n    @computed get isOk():boolean {\r\n        for (let i in this.vFields) {\r\n            if (this.vFields[i].isOk === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    reset() {\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\r\n            values[fn] = null;\r\n            errors[fn] = undefined;\r\n        }\r\n        for (let i in this.vFields) {\r\n            let ctrl = this.vFields[i];\r\n            let cn = ctrl.name;\r\n            if (cn === undefined) continue;\r\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\r\n            ctrl.setValue(null);\r\n        }\r\n        for (let i in this.vArrs) {\r\n            let vArr = this.vArrs[i];\r\n            vArr.reset();\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        return this.values[fieldName];\r\n    }\r\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\r\n\r\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\r\n\r\n    private buildFieldValues(fields: Field[]):any {\r\n        let v: {[p:string]: any} = {\r\n            valueFromFieldName: function(propName:string) {\r\n                return this[propName];\r\n            }\r\n        };\r\n        for (let f of fields) {\r\n            let fn = f.name;\r\n            v[fn] = null;\r\n        }\r\n        return v;\r\n    }\r\n    private buildObservableValues():IObservableObject {\r\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                v[arr.name] = observable.array([], {deep:true});\r\n            }\r\n        }\r\n        let ret = observable(v);\r\n        return ret;\r\n    }\r\n    private buildFormValues() {\r\n        this.values = this.buildObservableValues();\r\n        this.errors = observable(this.buildFieldValues(this.fields));\r\n    }\r\n\r\n    render(className:string = \"py-3\"):JSX.Element {\r\n        return <this.view className={className} />\r\n    }\r\n}\r\n","export * from './vForm';\r\n","import {bridgeCenterApi, isBridged} from './appBridge';\r\nimport {FetchError} from '../fetchError';\r\nimport {HttpChannelUI} from './httpChannelUI';\r\nimport {nav} from '../ui/nav';\r\nimport { isDevelopment } from './host';\r\n\r\nexport async function httpGet(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.get('', params);\r\n    return ret;\r\n}\r\n\r\nexport async function httpPost(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.post('', params);\r\n    return ret;\r\n}\r\n\r\nexport class HttpChannel {\r\n    private isCenter: boolean;\r\n    private hostUrl: string;\r\n    private apiToken: string;\r\n    private ui?: HttpChannelUI;\r\n    private timeout: number;\r\n\r\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\r\n        this.isCenter = isCenter;\r\n        this.hostUrl = hostUrl;\r\n        this.apiToken = apiToken;\r\n        this.ui = ui;\r\n        this.timeout = isDevelopment === true? 500000:5000;\r\n    }\r\n\r\n    private startWait = () => {\r\n        if (this.ui !== undefined) this.ui.startWait();\r\n    }\r\n\r\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\r\n        if (this.ui !== undefined) this.ui.endWait();\r\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\r\n    }\r\n\r\n    private showError = async (error:FetchError) => {\r\n        if (this.ui !== undefined) await this.ui.showError(error);\r\n    }\r\n\r\n    used() {\r\n        this.post('', {});\r\n    }\r\n\r\n    async get(url: string, params: any = undefined): Promise<any> {\r\n        if (params) {\r\n            let keys = Object.keys(params);\r\n            if (keys.length > 0) {\r\n                let c = '?';\r\n                for (let k of keys) {\r\n                    let v = params[k];\r\n                    if (v === undefined) continue;\r\n                    url += c + k + '=' + params[k];\r\n                    c = '&';\r\n                }\r\n            }\r\n        }\r\n        let options = this.buildOptions();\r\n        options.method = 'GET';\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async post(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'POST';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async put(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'PUT';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async delete(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'DELETE';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\r\n        let that = this;\r\n        this.startWait();\r\n        let path = url;\r\n        function buildError(err: string) {\r\n            return {\r\n                channel: that,\r\n                url: path,\r\n                options: options,\r\n                resolve: resolve,\r\n                reject: reject,\r\n                error: err,\r\n            }\r\n        }\r\n        try {\r\n            console.log('%s %s', options.method, path);\r\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\r\n            let res = await fetch(encodeURI(path), options);\r\n            if (res.ok === false) {\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                console.log('call error %s', res.statusText);\r\n                throw res.statusText;\r\n            }\r\n            let ct = res.headers.get('content-type');\r\n            if (ct && ct.indexOf('json')>=0) {\r\n                return res.json().then(async retJson => {\r\n                    clearTimeout(timeOutHandler);\r\n                    that.endWait();\r\n                    if (retJson.ok === true) {\r\n                        return resolve(retJson.res);\r\n                    }\r\n                    if (retJson.error === undefined) {\r\n                        await that.showError(buildError('not valid tonva json'));\r\n                    }\r\n                    else {\r\n                        await that.showError(buildError(retJson.error));\r\n                        reject(retJson.error);\r\n                    }\r\n                    //throw retJson.error;\r\n                }).catch(async error => {\r\n                    await that.showError(buildError(error.message));\r\n                });\r\n            }\r\n            else {\r\n                let text = await res.text();\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                resolve(text);\r\n            }\r\n        }\r\n        catch(error) {\r\n            if (typeof error === 'string') {\r\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\r\n                    nav.logout();\r\n                    return;\r\n                }\r\n            }\r\n            await this.showError(buildError(error.message));\r\n        };\r\n    }\r\n\r\n    private async innerFetch(url: string, options: any): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\r\n            return await bridgeCenterApi(u, options.method, options.body);\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    async callFetch(url:string, method:string, body:any):Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = method;\r\n        options.body = body;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(url, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    private buildOptions(): any {\r\n        let {language, culture} = nav;\r\n        let headers = new Headers();\r\n        //headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\r\n        let lang = language;\r\n        if (culture) lang += '-' + culture;\r\n        headers.append('Accept-Language', lang);\r\n        if (this.apiToken) { \r\n            headers.append('Authorization', this.apiToken); \r\n        }\r\n        let options = {\r\n            headers: headers,\r\n            // cache: 'no-cache',\r\n        };\r\n        return options;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport interface KeyValueRes {\r\n    [key:string]: any;\r\n}\r\n\r\nexport interface Res<T extends KeyValueRes> {\r\n    [lang:string]: T | {[district:string]: T};\r\n}\r\n\r\nexport const resOptions:{lang:string, district:string} = {\r\n    lang: undefined,\r\n    district: undefined,\r\n}\r\n\r\nexport function setResOptions(lang:string, district:string) {\r\n    resOptions.lang = lang;\r\n    resOptions.district = district;\r\n}\r\n\r\n(function() {\r\n    let lang: string, district: string;\r\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\r\n        navigator.language; // ||   // All browsers\r\n    //navigator.userLanguage; // IE <= 10\r\n    if (!language) {\r\n        lang = 'zh';\r\n        district = 'CN';\r\n    }\r\n    else {\r\n        let parts = language.split('-');\r\n        lang = parts[0];\r\n        if (parts.length > 1) district = parts[1];\r\n    }\r\n    setResOptions(lang, district);\r\n}());\r\n\r\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\r\n    let {lang, district} = resOptions;\r\n    let ret:T = {} as T;\r\n    if (res === undefined) return ret;\r\n    _.merge(ret, res._);\r\n    let l = res[lang];\r\n    if (l === undefined) return ret;\r\n    _.merge(ret, l._);\r\n    let d = l[district];\r\n    if (d === undefined) return ret;\r\n    _.merge(ret, d);\r\n    let {entity} = ret;\r\n    if (entity !== undefined) {\r\n        for (let i in entity) {\r\n            entity[i.toLowerCase()] = entity[i];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","export * from './CApp';\r\nexport * from './startApp';\r\nexport * from './uq';\r\nexport * from './action';\r\nexport * from './tuid';\r\nexport * from './sheet';\r\nexport * from './query';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './form/viewModel';\r\nexport * from './form';\r\nexport * from './formUI';\r\nexport * from './ControllerUq';\r\nexport * from './CVEntity';\r\nexport * from './link';\r\nexport * from './icons';\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Rule} from '../rule';\r\n\r\nexport abstract class ControlBase {\r\n    protected formView: FormView;\r\n    constructor(formView:FormView) {\r\n        this.formView = formView;\r\n    }\r\n    render():JSX.Element {\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n        </div>;\r\n    }\r\n    protected abstract renderControl():JSX.Element;\r\n    @computed get hasError():boolean {return false;}\r\n    @computed get filled():boolean {return false;}\r\n    clear() {}\r\n    clearErrors() {}\r\n    readValues(values:any):any {}\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    isOk():boolean {this.validate(); return !this.hasError;}\r\n    protected validate() {}\r\n}\r\n\r\nexport abstract class Control extends ControlBase {\r\n    protected field: Field;\r\n    protected face: Face;\r\n    protected props: any;\r\n    protected rules: Rule[];\r\n\r\n    protected element: HTMLElement;\r\n    @observable protected isOK?: boolean;\r\n    @observable protected error: string;\r\n    @observable protected value: any;\r\n\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView);\r\n        this.field = field;\r\n        this.face = face;\r\n        this.init();\r\n        this.setProps();\r\n    }\r\n    protected ref(element: HTMLElement) {\r\n        this.element = element;\r\n    }\r\n    protected init() {\r\n        this.rules = [];\r\n        let r = this.field.rules;\r\n        if (r !== undefined) {\r\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\r\n            else this.rules.push(r as Rule);\r\n        }\r\n    };\r\n    protected setProps():any {\r\n        return this.props = {\r\n            ref: this.ref.bind(this),\r\n            name: this.field.name,\r\n        }\r\n    };\r\n    @computed get hasError():boolean {return this.error !== undefined;}\r\n    @computed get filled():boolean {\r\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\r\n        return ret;\r\n    }\r\n    clearValue() { this.value = undefined; }\r\n    clear() { this.clearErrors(); this.clearValue(); }\r\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\r\n    readValues(values:any):any {\r\n        values[this.field.name] = this.value;\r\n    }\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    protected getValueFromElement():any {return this.value;}\r\n    protected validate() {\r\n        try {\r\n            let v = this.getValueFromElement();\r\n            if (this.rules.length > 0) {\r\n                let isOk:boolean;\r\n                for (let rule of this.rules) {\r\n                    console.log('validate: %s', v);\r\n                    let err = rule(v);\r\n                    console.log('validate: %s err: %s', v, err);\r\n                    if (err === true) {\r\n                        this.error = undefined;\r\n                        isOk = true;\r\n                    }\r\n                    else if (err !== undefined) {\r\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \r\n                        //    this.field.name, JSON.stringify(v), rule, err);\r\n                        this.error = err;\r\n                        this.isOK = false;\r\n                        return;\r\n                    }\r\n                }\r\n                this.isOK = isOk;\r\n            }\r\n            this.value = v;\r\n        }\r\n        catch (e) {\r\n            this.error = e.message;\r\n        }\r\n    }\r\n    render():JSX.Element {\r\n        let n;\r\n        if (this.face !== undefined) {\r\n            let {notes} = this.face;\r\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\r\n        }\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n            {n}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {ControlBase} from './control';\r\n\r\nexport class ButtonsControl extends ControlBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.otherClick = this.otherClick.bind(this);\r\n    }\r\n    private otherClick() {\r\n        let onOther = this.formView.props.onOther;\r\n        if (onOther === undefined) return;\r\n        let values = this.formView.readValues();\r\n        onOther(values);\r\n    }\r\n    renderControl():JSX.Element {\r\n        console.log('buttons.renderControl');\r\n        let nothing = this.formView.nothing;\r\n        let hasError = this.formView.hasError;\r\n        let props = this.formView.props;\r\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\r\n        let {submitButton, otherButton, onOther} = props;\r\n        let btnOther;\r\n        if (otherButton !== undefined) {\r\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\r\n                {otherButton}\r\n            </button>\r\n        }\r\n        return <div className=\"d-flex justify-content-start\">\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\" \r\n                disabled={nothing || hasError}>\r\n                {submitButton || '提交'}\r\n            </button>\r\n            {btnOther}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, Placeholder} from '../face';\r\nimport {Control} from './control';\r\n\r\nconst TxtRequired = '必须填入要求内容';\r\n\r\nexport abstract class CharsControl extends Control {\r\n    protected init() {\r\n        super.init();\r\n        if (this.field.required === true) {\r\n            this.rules.push((v) => {\r\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected element: HTMLInputElement;\r\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onBlur: this.onBlur.bind(this),\r\n            onFocus: this.onFocus.bind(this),\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n        let face = this.face as Placeholder;\r\n        if (face !== undefined) {\r\n            _.assign(this.props, {\r\n                placeholder: face.placeholder,\r\n            });\r\n        }\r\n        return this.props;\r\n    };\r\n    protected parseValue(value?:string):any {return value;}\r\n    private onBlur() {\r\n        //console.log('field %s onBlure', this.field.name);\r\n        this.validate();\r\n    }\r\n    private onChange() {\r\n        console.log('onChange');\r\n        this.validate();\r\n    }\r\n    private onFocus() {\r\n        this.clearErrors();\r\n        //this.error = undefined;\r\n        //this.formView.clearErrors();\r\n    }\r\n    protected className() {\r\n        return classNames({\r\n            \"form-control\": true,\r\n            \"has-success\": this.isOK === true,\r\n            \"is-invalid\": this.error !== undefined,\r\n            \"is-valid\": this.error === undefined && this.isOK === true,\r\n        });\r\n    }\r\n    protected renderInput():JSX.Element {\r\n        return <input className={this.className()} {...this.props} />;\r\n    }\r\n    protected ref(element: HTMLInputElement) {\r\n        super.ref(element);\r\n        if (element) {\r\n            element.value = this.value === undefined? '':this.value;\r\n        }\r\n    }\r\n    protected renderError():JSX.Element {\r\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\r\n        if (this.error === undefined) return null;\r\n        return <div className=\"invalid-feedback\">{this.error}</div>\r\n    }\r\n    clearValue() { super.clearValue(); this.element.value = ''; }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.field.name === fieldName) this.error = error;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) return;\r\n        //this.element.value = v;\r\n        this.value = v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <React.Fragment>\r\n            {this.renderInput()}\r\n            {this.renderError()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\n\r\nexport class StringControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'text',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class PasswordControl extends StringControl {\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'password',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {IntField, DecField, NumberField} from '../field';\r\nimport {CharsControl} from './charsControl';\r\n\r\nconst ErrInvalidNumber = '无效的数字';\r\nconst ErrMin = '最小值为';\r\nconst ErrMax = '最大值为';\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport class NumberControl extends CharsControl {\r\n    protected field: IntField | DecField | NumberField;\r\n    protected value: number;\r\n    protected extraChars: number[];\r\n    \r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        let {min, max} = this.field;\r\n        if (min !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n        }\r\n        else {\r\n            this.extraChars.push(KeyCode_Neg);\r\n        }\r\n\r\n        if (max !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        let n = Number.parseFloat(value);\r\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\r\n        return n;\r\n    }\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            type: 'number',\r\n            step: (this.field as DecField).step,\r\n            onKeyPress: this.onKeyPress.bind(this),\r\n        });\r\n    }\r\n\r\n    onKeyPress(event:KeyboardEvent) {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.element.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.element.value = v;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Control, ControlBase} from './control';\r\nimport {FormView} from '../formView';\r\n\r\nexport class UnknownControl extends Control {\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n            don't know how to create control<br/>\r\n            field: {JSON.stringify(this.field)} must be object <br/>\r\n            face: {JSON.stringify(this.face)} must be object <br/>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class EmptyControl extends ControlBase {\r\n    private element:JSX.Element;\r\n    constructor(formView:FormView, element:JSX.Element) {\r\n        super(formView);\r\n        this.element = element;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.element}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, IdPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickIdControl extends Control {\r\n    protected face: IdPickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    onPicked = (value: any) => {\r\n        this.value = value.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private controlContent():string|JSX.Element {\r\n        let {itemFromId, fromPicked, initCaption} = this.face;\r\n        if (this.value === undefined) {\r\n            return initCaption || '请选择Id';\r\n        }\r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        if (itemFromId !== undefined) {\r\n            if (fromPicked !== undefined) {\r\n                let item = itemFromId(this.value);\r\n                if (item) {\r\n                    let ret = fromPicked(item);\r\n                    if (ret !== undefined) return ret.caption;\r\n                }\r\n            }\r\n        }\r\n        return String(this.value);\r\n    }\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {this.controlContent()}\r\n            </div>;\r\n        }\r\n        return <div className=\"form-control-static \">\r\n            <input.component id={this.value} \r\n                ui={tuid}\r\n                //input={input}\r\n                //entitiesUI={this.formView.props.context} \r\n                //params={this.formView.readValues()}\r\n                //onPicked={this.onPicked}\r\n                />\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, TuidPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickTuidControl extends Control {\r\n    protected face: TuidPickFace;\r\n    // protected value: number;\r\n    @observable private caption: string|JSX.Element;\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.onIdChanged = this.onIdChanged.bind(this);\r\n        //this.onClick = this.onClick.bind(this);\r\n    }\r\n    /*\r\n    private async onClick() {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }*/\r\n    onIdChanged(id: any) {\r\n        this.value = id.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private buildContent():JSX.Element {\r\n        //let {tuid, input} = this.face;\r\n        return <this.face.input.component \r\n            {...this.face}\r\n            id={this.value}\r\n            //ui={this.face.ui}\r\n            //input={input}\r\n            //entitiesUI={this.formView.props.context} \r\n            onFormValues={()=>this.formView.readValues()}\r\n            onIdChanged={this.onIdChanged} />;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static \">\r\n            {this.buildContent()}\r\n        </div>;\r\n    }\r\n}\r\n/*\r\n<button className=\"form-control btn btn-outline-info\"\r\ntype=\"button\"\r\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\r\nonClick={this.onClick}>\r\n{this.buildContent()}\r\n</button>\r\n*/","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, PickFace} from '../face';\r\nimport {Control} from './control';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class PickControl extends Control {\r\n    protected face: PickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    /*\r\n    private controlContent():string|JSX.Element {\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined) {\r\n            return '请选择';\r\n        }\r\n        \r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        return <Content id={this.value} />;\r\n    }*/\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        return <this.view />;\r\n        /*\r\n        let {content:Content} = this.face;\r\n        //if (this.value === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n        //}\r\n        //return <div className=\"form-control-static \">\r\n        //    <Content />\r\n        //</div>;\r\n        */\r\n    }\r\n\r\n    private view = observer(() => {\r\n        let content;\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = '请选择';\r\n        }\r\n        /*\r\n        else if (this.caption !== undefined) {\r\n            content = this.caption;\r\n        }*/\r\n        else {\r\n            content = <Content id={this.value} />;\r\n        } \r\n        return <div\r\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\r\n            onClick={this.onClick}>\r\n            {content}\r\n        </div>\r\n    });\r\n}\r\n","export * from './control';\r\nexport * from './buttonsControl';\r\nexport * from './stringControl';\r\nexport * from './numberControl';\r\n\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Control, ControlBase} from './control';\r\nimport {ButtonsControl} from './buttonsControl';\r\nimport {CheckControl} from './checkControl';\r\nimport {RadioControl} from './radioControl';\r\nimport {TextAreaControl} from './textAreaControl';\r\nimport {SelectControl} from './selectControl';\r\nimport {UnknownControl, EmptyControl} from './unknownControl';\r\nimport {StringControl, PasswordControl} from './stringControl';\r\nimport {NumberControl} from './numberControl';\r\n\r\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\r\nimport { PickIdControl } from './pickIdControl';\r\nimport { PickTuidControl } from './pickTuidControl';\r\nimport { PickControl } from './pickControl';\r\n\r\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\r\n\r\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\r\n    let label = row.label;\r\n    if ((<GroupRow>row).group !== undefined)\r\n        return createGroupControl(form, label, row as GroupRow);\r\n    if ((<FieldRow>row).field !== undefined)\r\n        return createFieldControl(form, label, row as FieldRow);\r\n    return new EmptyControl(form, row.help);\r\n}\r\n\r\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\r\n    \"string\": StringControl,\r\n    \"password\": PasswordControl,\r\n    \"number\": NumberControl,\r\n    \"checkbox\": CheckControl,\r\n    \"radiobox\": RadioControl,\r\n    \"select\": SelectControl,\r\n    \"pick-id\": PickIdControl,\r\n    \"pick-tuid\": PickTuidControl,\r\n    \"textarea\": TextAreaControl,\r\n    \"pick\": PickControl,\r\n};\r\nconst defaultFaces:{[type:string]: Face} = {\r\n    \"string\": {type:'string'},\r\n    \"number\": {type:'number'},\r\n    \"int\": {type:'number'},\r\n    \"dec\": {type:'number'},\r\n    \"bool\": {type:'checkbox'},\r\n}\r\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\r\n    let {field, face} = fieldRow;\r\n    switch (typeof field) {\r\n        case 'string':\r\n            field = {\r\n                name: (field as any) as string,\r\n                type: 'string',\r\n            }\r\n            break;\r\n        case 'object':\r\n            break;\r\n        default:\r\n            return new UnknownControl(form, field, face);\r\n    }\r\n    let fieldType = field.type || 'string';\r\n    if (face === undefined) {\r\n        face = defaultFaces[fieldType];\r\n        if (face === undefined) return new UnknownControl(form, field, face);\r\n    }\r\n    else if (face.type === undefined) {\r\n        let f = defaultFaces[fieldType];\r\n        face.type = f===undefined? 'string' : f.type;\r\n    }\r\n    let control = controls[face.type || fieldType] || UnknownControl;\r\n    return new control(form, field, face);\r\n}\r\n\r\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\r\n    return new UnknownControl(form, groupRow as any, undefined);\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field, BoolField} from '../field';\r\nimport {Face, CheckBoxFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class CheckControl extends Control {    \r\n    protected element: HTMLInputElement;\r\n    protected field: BoolField;\r\n    protected face: CheckBoxFace;\r\n    private trueValue: any;\r\n    private falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        let {trueValue, falseValue} = this.field;\r\n        if (trueValue === undefined) this.trueValue = 1;\r\n        if (falseValue === undefined) this.falseValue = 0;\r\n    }\r\n\r\n    setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n    }\r\n\r\n    clearValue() {\r\n        this.element.checked = this.field.defaultValue === this.trueValue;\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) {\r\n            v = this.field.defaultValue;\r\n        }\r\n        if (v !== undefined) {\r\n            //this.element.checked = v === this.trueValue;\r\n            //this.value = this.getValueFromElement();\r\n        }\r\n    }\r\n\r\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\r\n\r\n    private onChange() {\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <label className=\"form-control\">\r\n                <label className=\"custom-control custom-checkbox mb-0\">\r\n                    <input type='checkbox'\r\n                        name={this.field.name}\r\n                        ref={this.props.ref}\r\n                        onChange={this.props.onChange}\r\n                        className=\"custom-control-input\" />\r\n                    <span className=\"custom-control-indicator\" />\r\n                    <span className=\"custom-control-description\">{this.face.label}</span>\r\n                </label>\r\n            </label>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, RadioFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class RadioControl extends Control {\r\n    protected face: RadioFace;\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <div className=\"form-control\">\r\n            {\r\n                this.face.list.map((item, index) => {\r\n                    let t, v;\r\n                    if (typeof item !== 'object') t = v = item;\r\n                    else {\r\n                        t = item.text;\r\n                        v = item.value;\r\n                    }\r\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\r\n                        <input type='radio'\r\n                            name={this.field.name} \r\n                            className=\"custom-control-input\" />\r\n                        <span className=\"custom-control-indicator\"></span>\r\n                        <span className=\"custom-control-description\">{t}</span>\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, SelectFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class SelectControl extends Control {\r\n    constructor (formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.ref = this.ref.bind(this);\r\n    }\r\n    protected face: SelectFace;\r\n    protected element: HTMLSelectElement;\r\n    protected getValueFromElement():any {\r\n        let {selectedIndex, selectedOptions} = this.element;\r\n        let v:any = selectedOptions[0].value;\r\n        switch (this.field.type) {\r\n            case 'number': v = Number(v); break;\r\n            case 'date': v = new Date(v); break;\r\n            case 'bool': \r\n                if (typeof v === 'string') {\r\n                    v = ((v as string).toLowerCase() === 'true');\r\n                }\r\n                break;\r\n        }\r\n        return v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        let {list} = this.face;\r\n        let def = this.face.default;\r\n        let options: any[] = [];\r\n        if (def === undefined)\r\n            options.push(<option key={-1} value={undefined}>请选择</option>);\r\n        options.push(...list.map((item, index) => {\r\n            let t, v;\r\n            if (typeof item !== 'object') t = v = item;\r\n            else {\r\n                t = item.text;\r\n                v = item.value;\r\n            }\r\n            return <option key={index} value={v}>{t}</option>;\r\n        }));\r\n        return <div className=\"form-control-static\">\r\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\r\n                {options}\r\n            </select>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\nimport {TextAreaFace} from '../face';\r\n\r\nexport class TextAreaControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected face: TextAreaFace;\r\n    private el: HTMLTextAreaElement;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        let {maxLength} = this.field;\r\n        let {rows} = this.face;\r\n        _.assign(p, {\r\n            maxLength: maxLength,\r\n            rows: rows,\r\n        });\r\n        return p;\r\n    };\r\n    protected renderInput():JSX.Element {\r\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\r\n    }\r\n}\r\n","import { Entities, Field, ArrFields, FieldMap } from './entities';\r\nimport { TuidMain, Tuid } from './tuid';\r\n\r\nconst tab = '\\t';\r\nconst ln = '\\n';\r\n\r\nexport abstract class Entity {\r\n    protected entities: Entities;\r\n    protected schema: any;\r\n    private jName: string;\r\n    sys?: boolean;\r\n    readonly name: string;\r\n    readonly typeId: number;\r\n    abstract get typeName(): string;\r\n    get sName():string {return this.jName || this.name}\r\n    fields: Field[];\r\n    arrFields: ArrFields[];\r\n    returns: ArrFields[];\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        this.entities = entities;\r\n        this.name = name;\r\n        this.typeId = typeId;\r\n        this.sys = this.name.indexOf('$') >= 0;\r\n    }\r\n\r\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\r\n\r\n    protected get tvApi() {return this.entities.uqApi;}\r\n    getApiFrom() {return this.entities.uqApi;}\r\n\r\n    private fieldMaps: {[arr:string]: FieldMap} = {};\r\n    fieldMap(arr?:string): FieldMap {\r\n        if (arr === undefined) arr = '$';\r\n        let ret = this.fieldMaps[arr];\r\n        if (ret === undefined) {\r\n            let fields:Field[];\r\n            if (arr === '$') fields = this.fields;\r\n            else if (this.arrFields !== undefined) {\r\n                let arrFields = this.arrFields.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            else if (this.returns !== undefined) {\r\n                let arrFields = this.returns.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            if (fields === undefined) return {};\r\n            ret = {};\r\n            for (let f of fields) ret[f.name] = f;\r\n            this.fieldMaps[arr] = ret;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public async loadSchema():Promise<void> {\r\n        if (this.schema !== undefined) return;\r\n        let schema = await this.entities.uqApi.schema(this.name);\r\n        this.setSchema(schema);\r\n        this.buildFieldsTuid();\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        if (schema === undefined) return;\r\n        if (this.schema !== undefined) return;\r\n        this.schema = schema;\r\n        let {name} = schema;\r\n        if (name !== this.name) this.jName = name;\r\n        this.buildFieldsTuid();\r\n    }\r\n\r\n    public buildFieldsTuid() {\r\n        let {fields, arrs, returns} = this.schema;\r\n        this.entities.buildFieldTuid(this.fields = fields);\r\n        this.entities.buildArrFieldsTuid(this.arrFields = arrs, fields);\r\n        this.entities.buildArrFieldsTuid(this.returns = returns, fields);\r\n        //this.newMain = this.buildCreater(fields);\r\n        //this.newArr = this.buildArrCreater(arrs);\r\n        //this.newRet = this.buildArrCreater(returns);\r\n    }\r\n\r\n    schemaStringify():string {\r\n        return JSON.stringify(this.schema, (key:string, value:any) => {\r\n            if (key === '_tuid') return undefined;\r\n            return value;\r\n        }, 4);\r\n    }\r\n\r\n    tuidFromField(field:Field):Tuid {\r\n        let {_tuid, tuid} = field;\r\n        if (tuid === undefined) return;\r\n        if (_tuid !== undefined) return _tuid;\r\n        return field._tuid = this.entities.getTuid(tuid, undefined);\r\n    }\r\n\r\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\r\n        if (this.schema === undefined) return;\r\n        let {fields, arrs} = this.schema;\r\n        let entities = this.entities;\r\n        function getTuid(fn:string, fieldArr:Field[]) {\r\n            if (fieldArr === undefined) return;\r\n            let f = fieldArr.find(v => v.name === fn);\r\n            if (f === undefined) return;\r\n            return entities.getTuid(f.tuid, undefined);\r\n        }\r\n        let fn = fieldName.toLowerCase();\r\n        if (arrName === undefined) return getTuid(fn, fields);\r\n        if (arrs === undefined) return;\r\n        let an = arrName.toLowerCase();\r\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\r\n        if (arr === undefined) return;\r\n        return getTuid(fn, arr.fields);\r\n    }\r\n\r\n    protected buildParams(params:any):any {\r\n        let result = {};\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\r\n        let arrs = this.arrFields;\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                let {name, fields} = arr;\r\n                let paramsArr:any[] = params[name];\r\n                if (paramsArr === undefined) continue;\r\n                let arrResult = [];\r\n                result[name] = arrResult;\r\n                for (let pa of params) {\r\n                    let rowResult = {};\r\n                    this.buildFieldsParams(rowResult, fields, pa);\r\n                    arrResult.push(rowResult);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\r\n        for (let field of fields) {\r\n            let {name} = field;\r\n            let d = params[name];\r\n            let val:any;\r\n            switch (typeof d) {\r\n                default: val = d; break;\r\n                case 'object':\r\n                    let tuid = field._tuid;\r\n                    if (tuid === undefined) val = d.id;\r\n                    else val = tuid.getIdFromObj(d);\r\n                    break;\r\n            }\r\n            result[name] = val;\r\n        }\r\n    }\r\n\r\n    pack(data:any):string {\r\n        let ret:string[] = [];\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.packRow(ret, fields, data);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                this.packArr(ret, arr.fields, data[arr.name]);\r\n            }\r\n        }\r\n        return ret.join('');\r\n    }\r\n\r\n    private escape(row:any, field:Field):any {\r\n        let d = row[field.name];\r\n        switch (typeof d) {\r\n            default: return d;\r\n            case 'object':\r\n                let tuid = field._tuid;\r\n                if (tuid === undefined) return d.id;\r\n                return tuid.getIdFromObj(d);\r\n            case 'string':\r\n                let len = d.length;\r\n                let r = '', p = 0;\r\n                for (let i=0;i<len;i++) {\r\n                    let c = d.charCodeAt(i);\r\n                    switch(c) {\r\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\r\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\r\n                    }\r\n                }\r\n                return r + d.substring(p);\r\n            case 'undefined': return '';\r\n        }\r\n    }\r\n\r\n    private packRow(result:string[], fields:Field[], data:any) {\r\n        let len = fields.length;\r\n        if (len === 0) return;\r\n        let ret = '';\r\n        ret += this.escape(data, fields[0]);\r\n        for (let i=1;i<len;i++) {\r\n            let f = fields[i];\r\n            ret += tab + this.escape(data, f);\r\n        }\r\n        result.push(ret + ln);\r\n    }\r\n\r\n    private packArr(result:string[], fields:Field[], data:any[]) {\r\n        if (data !== undefined) {\r\n            for (let row of data) {\r\n                this.packRow(result, fields, row);\r\n            }\r\n        }\r\n        result.push(ln);\r\n    }\r\n\r\n    unpackSheet(data:string):any {\r\n        let ret = {} as any; //new this.newMain();\r\n        //if (schema === undefined || data === undefined) return;\r\n        let fields = this.fields;\r\n        let p = 0;\r\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    unpackReturns(data:string):any {\r\n        let ret = {} as any;\r\n        //if (schema === undefined || data === undefined) return;\r\n        //let fields = schema.fields;\r\n        let p = 0;\r\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\r\n        let arrs = this.returns; //schema['returns'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                //let creater = this.newRet[arr.name];\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    protected unpackRow(ret:any, fields:Field[], data:string, p:number):number {\r\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\r\n        for (;p<len;p++) {\r\n            ch0 = ch;\r\n            ch = data.charCodeAt(p);\r\n            if (ch === 9) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                c = p+1;\r\n                ++i;\r\n                if (i>=fLen) {\r\n                    p = data.indexOf('\\n', c);\r\n                    if (p >= 0) ++p;\r\n                    else p = len;\r\n                    break;\r\n                }\r\n            }\r\n            else if (ch === 10) {\r\n                let f = fields[i];\r\n                let {name} = f;\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[name] = null;\r\n                }\r\n                ++p;\r\n                ++i;\r\n                break;\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n\r\n    private to(ret:any, v:string, f:Field):any {\r\n        switch (f.type) {\r\n            default: return v;\r\n            case 'datetime':\r\n            case 'date':\r\n            case 'time':\r\n                let date = new Date(Number(v));\r\n                return date;\r\n            case 'id':\r\n            case 'tinyint':\r\n            case 'smallint':\r\n            case 'int':\r\n            case 'dec': return Number(v);\r\n            case 'bigint':\r\n                let id = Number(v);\r\n                let {_tuid} = f;\r\n                if (_tuid === undefined) return id;\r\n                _tuid.useId(id, true);\r\n                return _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\r\n        let vals:any[] = [], len = data.length;\r\n        let {name, fields} = arr;\r\n        while (p<len) {\r\n            let ch = data.charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let val = {} as any; //new creater();\r\n            vals.push(val);\r\n            p = this.unpackRow(val, fields, data, p);\r\n        }\r\n        ret[name] = vals;\r\n        return p;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Entity } from './entity';\r\nimport { Entities, Field, ArrFields } from './entities';\r\nimport { isNumber } from 'util';\r\nimport { CUq, CTuidMain, CTuidEdit, CTuidInfo, CTuidSelect } from '../controllers';\r\n\r\nexport class BoxId {\r\n    id: number;\r\n    obj?: any;\r\n    content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\r\n    valueFromFieldName: (fieldName:string)=>BoxId|any;\r\n    _$com?: any;\r\n    _$tuid?: Tuid;\r\n    getObj: ()=>any;\r\n}\r\n\r\nconst maxCacheSize = 1000;\r\nexport abstract class Tuid extends Entity {\r\n    private BoxId: ()=>void;\r\n    get typeName(): string { return 'tuid';}\r\n    private queue: number[] = [];               // 每次使用，都排到队头\r\n    private waitingIds: number[] = [];          // 等待loading的\r\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\r\n    idName: string;\r\n    owner: TuidMain;                    // 用这个值来区分是不是TuidArr\r\n    unique: string[];\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    constructor(entities:Entities, owner:TuidMain, name:string, typeId:number) {\r\n        super(entities, name, typeId);\r\n        this.owner = owner;\r\n        //this.buildIdBoxer();\r\n    }\r\n\r\n    abstract get Main():Tuid;\r\n\r\n    private buildIdBoxer() {\r\n        if (this.BoxId !== undefined) return;\r\n        this.BoxId = function():void {};\r\n        let prototype = this.BoxId.prototype;\r\n        Object.defineProperty(prototype, '_$tuid', {\r\n            value: this, //.from(),\r\n            writable: false,\r\n            enumerable: false,\r\n        });\r\n        Object.defineProperty(prototype, 'obj', {\r\n            enumerable: false,\r\n            get: function() {\r\n                if (this.id === undefined || this.id<=0) return undefined;\r\n                return this._$tuid.valueFromId(this.id);\r\n            }\r\n        });\r\n        prototype.valueFromFieldName = function(fieldName:string):BoxId|any {\r\n            let t:Tuid = this._$tuid;\r\n            return t.valueFromFieldName(fieldName, this.obj);\r\n        };\r\n        prototype.getObj = function():any {\r\n            if (this._$tuid !== undefined) {\r\n                return this._$tuid.getCacheValue(this.id);\r\n            }\r\n        };\r\n        prototype.toJSON = function() {return this.id};\r\n    }\r\n    boxId(id:number):BoxId {\r\n        if (typeof id === 'object') return id as any;\r\n        this.useId(id);\r\n        this.buildIdBoxer();\r\n        let ret:BoxId = new this.BoxId();\r\n        ret.id = id;\r\n        return ret;\r\n    }\r\n    getTuidContent() {\r\n        return this.entities.cUq.getTuidContent(this);\r\n    }\r\n    getIdFromObj(item:any):number {\r\n        return item[this.idName];\r\n    }\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {id, unique} = schema;\r\n        this.idName = id;\r\n        this.unique = unique;\r\n        this.schemaFrom = this.schema.from;\r\n    }\r\n    public buildFieldsTuid() {\r\n        super.buildFieldsTuid();\r\n        let {mainFields} = this.schema;\r\n        if (mainFields !== undefined) {\r\n            for (let mf of mainFields) {\r\n                let f = this.fields.find(v => v.name === mf.name);\r\n                if (f === undefined) continue;\r\n                mf._tuid = f._tuid;\r\n            }\r\n        }\r\n    }\r\n    private moveToHead(id:number) {\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.queue.push(id);\r\n    }\r\n\r\n    valueFromId(id:number|BoxId):any {\r\n        let _id:number;\r\n        let tId = typeof id;\r\n        switch (typeof id) {\r\n            case 'object': _id = (id as BoxId).id; break;\r\n            case 'number': _id = id as number; break;\r\n            default: return;\r\n        }\r\n        return this.getCacheValue(_id);\r\n    }\r\n    getCacheValue(id:number) {\r\n        let v = this.cache.get(id);\r\n        if (this.owner !== undefined && typeof v === 'object') {\r\n            v.$owner = this.owner.boxId(v.owner); // this.owner.valueFromId(v.owner);\r\n        }\r\n        return v;\r\n    }\r\n    valueFromFieldName(fieldName:string, obj:any):BoxId|any {\r\n        if (obj === undefined) return;\r\n        if (this.fields === undefined) return;\r\n        let f = this.fields.find(v => v.name === fieldName);\r\n        if (f === undefined) return;\r\n        let v = obj[fieldName];\r\n        let {_tuid} = f;\r\n        if (_tuid === undefined) return v;\r\n        return _tuid.valueFromId(v);\r\n    }\r\n    resetCache(id:number) {\r\n        this.cache.delete(id);\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.useId(id);\r\n    }\r\n    useId(id:number, defer?:boolean) {\r\n        if (id === undefined || id === 0) return;\r\n        if (isNumber(id) === false) return;        \r\n        if (this.cache.has(id) === true) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n        this.entities.cacheTuids(defer===true?70:20);\r\n        //let idVal = this.createID(id);\r\n        this.cache.set(id, id);\r\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n\r\n        if (this.queue.length >= maxCacheSize) {\r\n            // 缓冲已满，先去掉最不常用的\r\n            let r = this.queue.shift();\r\n            if (r === id) {\r\n                // 如果移除的，正好是现在用的，则插入\r\n                this.queue.push(r);\r\n                return;\r\n            }\r\n\r\n            //let rKey = String(r);\r\n            if (this.cache.has(r) === true) {\r\n                // 如果移除r已经缓存\r\n                this.cache.delete(r);\r\n            }\r\n            else {\r\n                // 如果移除r还没有缓存\r\n                let index = this.waitingIds.findIndex(v => v === r);\r\n                this.waitingIds.splice(index, 1);\r\n            }\r\n        }\r\n        this.waitingIds.push(id);\r\n        this.queue.push(id);\r\n        return;\r\n    }\r\n    async proxied(name:string, id:number):Promise<any> {\r\n        let proxyTuid = this.entities.getTuid(name, undefined);\r\n        proxyTuid.useId(id);\r\n        let proxied = await this.tvApi.proxied(this.name, name, id);\r\n        this.cacheValue(proxied);\r\n        return proxied;\r\n    }\r\n    cacheValue(val:any):boolean {\r\n        if (val === undefined) return false;\r\n        let id = this.getIdFromObj(val);\r\n        if (id === undefined) return false;\r\n        let index = this.waitingIds.findIndex(v => v === id);\r\n        if (index>=0) this.waitingIds.splice(index, 1);\r\n        //let cacheVal = this.createID(id, val);\r\n        this.cache.set(id, val);\r\n        // 下面的代码应该是cache proxy id, 需要的时候再写吧\r\n        /*\r\n        let {tuids, fields} = this.schema;\r\n        if (tuids !== undefined && fields !== undefined) {\r\n            for (let f of fields) {\r\n                let {name, tuid} = f;\r\n                if (tuid === undefined) continue;\r\n                let t = this.entities.tuid(tuid);\r\n                if (t === undefined) continue;\r\n                t.useId(val[name]);\r\n            }\r\n        }*/\r\n        return true;\r\n    }\r\n    protected afterCacheId(tuidValue:any) {\r\n        if (this.fields === undefined) return;\r\n        for (let f of this.fields) {\r\n            let {_tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            _tuid.useId(tuidValue[f.name]);\r\n        }\r\n    }\r\n    from(): Tuid {return;}\r\n    private unpackTuidIds(values:any[]|string):any[] {\r\n        if (this.schemaFrom === undefined) {\r\n            let {mainFields} = this.schema;\r\n            if (mainFields === undefined) return values as any[];\r\n            let ret:any[] = []\r\n            let len = (values as string).length;\r\n            let p = 0;\r\n            while (p<len) {\r\n                let ch = (values as string).charCodeAt(p);\r\n                if (ch === 10) {\r\n                    ++p;\r\n                    break;\r\n                }\r\n                let row = {};\r\n                p = this.unpackRow(row, mainFields, values as string, p);\r\n                ret.push(row);\r\n            }\r\n            return ret;\r\n        }\r\n        else {\r\n            let tuidMain = this.from();\r\n            let ret = tuidMain.unpackTuidIds(values);\r\n            return ret;\r\n        }\r\n    }\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let name:string, arr:string;\r\n        if (this.owner === undefined) {\r\n            name = this.name;\r\n        }\r\n        else {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        let api = this.getApiFrom();\r\n        let tuids = await api.tuidIds(name, arr, this.waitingIds);\r\n        tuids = this.unpackTuidIds(tuids);\r\n        for (let tuidValue of tuids) {\r\n            if (this.cacheValue(tuidValue) === false) continue;\r\n            this.cacheTuidFieldValues(tuidValue);\r\n            this.afterCacheId(tuidValue);\r\n        }\r\n        await this.cacheDivIds();\r\n    }\r\n    protected async cacheDivIds():Promise<void> {\r\n    }\r\n    async load(id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = this.getApiFrom();\r\n        let values = await api.tuidGet(this.name, id);\r\n        if (values === undefined) return;\r\n        for (let f of this.schema.fields) {\r\n            let {tuid} = f;\r\n            if (tuid === undefined) continue;\r\n            let t = this.entities.getTuid(tuid);\r\n            if (t === undefined) continue;\r\n            let n = f.name;\r\n            values[n] = t.boxId(values[n]);\r\n        }\r\n        //values._$tuid = this;\r\n        this.cacheValue(values);\r\n        this.cacheTuidFieldValues(values);\r\n        return values;\r\n    }\r\n    getDiv(divName:string):TuidDiv {return;}\r\n    private cacheTuidFieldValues(values:any) {\r\n        let {fields, arrs} = this.schema;\r\n        this.cacheFieldsInValue(values, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs as ArrFields[]) {\r\n                let {name, fields} = arr;\r\n                let arrValues = values[name];\r\n                if (arrValues === undefined) continue;\r\n                let tuidDiv = this.getDiv(name);\r\n                for (let row of arrValues) {\r\n                    row._$tuid = tuidDiv;\r\n                    row.$owner = this.boxId(row.owner);\r\n                    tuidDiv.cacheValue(row);\r\n                    this.cacheFieldsInValue(row, fields);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private cacheFieldsInValue(values:any, fields:Field[]) {\r\n        for (let f of fields as Field[]) {\r\n            let {name, _tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            let id = values[name];\r\n            //_tuid.useId(id);\r\n            values[name] = _tuid.boxId(id);\r\n        }\r\n    }\r\n    async save(id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        let ret = await this.tvApi.tuidSave(this.name, params);\r\n        /*\r\n        let {id:retId, inId} = ret;\r\n        if (retId === undefined) {\r\n            params.id = id;\r\n            this.cacheValue(params);\r\n        }\r\n        else if (retId > 0) {\r\n            params.id = retId;\r\n            this.cacheValue(params);\r\n        }\r\n        */\r\n        return ret;\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let {fields} = this.schema;\r\n        let name:string, arr:string;\r\n        if (this.owner !== undefined) {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        else {\r\n            name = this.name;\r\n            arr = undefined;\r\n        }\r\n        let api = this.getApiFrom();\r\n        let ret = await api.tuidSearch(name, arr, owner, key, pageStart, pageSize);\r\n        for (let row of ret) {\r\n            this.cacheFieldsInValue(row, fields);\r\n            if (this.owner !== undefined) row.$owner = this.owner.boxId(row.owner);\r\n        }\r\n        return ret;\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = this.getApiFrom();\r\n        return await api.tuidArrGet(this.name, arr, owner, id);\r\n    }\r\n    /*\r\n    async loadArrAll(owner:number):Promise<any[]> {\r\n        return this.all = await this.tvApi.tuidGetAll(this.name);\r\n    }*/\r\n    async saveArr(arr:string, owner:number, id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        return await this.tvApi.tuidArrSave(this.name, arr, owner, params);\r\n    }\r\n    async posArr(arr:string, owner:number, id:number, order:number) {\r\n        return await this.tvApi.tuidArrPos(this.name, arr, owner, id, order);\r\n    }\r\n\r\n    // cache放到Tuid里面之后，这个函数不再需要公开调用了\r\n    //private async ids(idArr:number[]) {\r\n    //    return await this.tvApi.tuidIds(this.name, idArr);\r\n    //}\r\n    async showInfo(id:number) {\r\n        await this.entities.cUq.showTuid(this, id);\r\n    }\r\n}\r\n\r\nexport class TuidMain extends Tuid {\r\n    get Main() {return this}\r\n    get uqApi() {return this.entities.uqApi};\r\n\r\n    divs: {[name:string]: TuidDiv};\r\n    //proxies: {[name:string]: TuidMain};\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {arrs} = schema;\r\n        if (arrs !== undefined) {\r\n            this.divs = {};\r\n            for (let arr of arrs) {\r\n                let {name} = arr;\r\n                let tuidDiv = new TuidDiv(this.entities, this, name, this.typeId);\r\n                this.divs[name] = tuidDiv;\r\n                tuidDiv.setSchema(arr);\r\n            }\r\n        }\r\n    }\r\n    getDiv(divName:string):TuidDiv {return this.divs[divName];}\r\n    /* 努力回避async里面的super调用，edge不兼容\r\n    async cacheIds():Promise<void> {\r\n        await super.cacheIds();\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n    */\r\n    protected async cacheDivIds():Promise<void> {\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n\r\n    cUqFrom(): CUq {\r\n        if (this.schemaFrom === undefined) return this.entities.cUq;\r\n        let {owner, uq} = this.schemaFrom;\r\n        let cUq = this.entities.cUq;\r\n        let cApp = cUq.cApp;\r\n        if (cApp === undefined) return cUq;\r\n        let cUqFrm = cApp.getImportUq(owner, uq);\r\n        if (cUqFrm === undefined) {\r\n            console.error(`${owner}/${uq} 不存在`);\r\n            debugger;\r\n            return cUq;\r\n        }\r\n        /*\r\n        let retErrors = await cUqFrm.loadSchema();\r\n        if (retErrors !== undefined) {\r\n            console.error('cUq.loadSchema: ' + retErrors);\r\n            debugger;\r\n            return cUq;\r\n        }*/\r\n        return cUqFrm;\r\n    }\r\n\r\n    getApiFrom() {\r\n        let from = this.from();\r\n        if (from !== undefined) {\r\n            return from.entities.uqApi;\r\n        }\r\n        return this.entities.uqApi;\r\n    }\r\n\r\n    from(): TuidMain {\r\n        if (this.schemaFrom === undefined) return this;\r\n        let cUq = this.cUqFrom();\r\n        return cUq.tuid(this.name);\r\n    }\r\n\r\n    cFrom(): CTuidMain {\r\n        let cUq = this.cUqFrom();\r\n        return cUq.cTuidMainFromName(this.name);\r\n    }\r\n\r\n    cEditFrom(): CTuidEdit {\r\n        let cUq = this.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.name);\r\n    }\r\n\r\n    cInfoFrom(): CTuidInfo {\r\n        let cUq = this.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.name);\r\n    }\r\n\r\n    cSelectFrom(): CTuidSelect {\r\n        let cUq = this.cUqFrom();\r\n        if (cUq === undefined) return;\r\n        return cUq.cTuidSelectFromName(this.name);\r\n    }\r\n    /*\r\n    protected afterCacheId(tuidValue:any) {\r\n        super.afterCacheId(tuidValue);\r\n        if (this.proxies === undefined) return;\r\n        let {type, $proxy} = tuidValue;\r\n        let pTuid = this.proxies[type];\r\n        pTuid.useId($proxy);\r\n    }*/\r\n}\r\n\r\nexport class TuidDiv extends Tuid {\r\n    get Main() {return this.owner}\r\n    from(): Tuid {\r\n        let from = this.owner.from();\r\n        return from.getDiv(this.name);\r\n    }\r\n    getApiFrom() {\r\n        return this.owner.getApiFrom();\r\n    }\r\n}\r\n","import {Entity} from './entity';\r\n\r\nexport class Action extends Entity {\r\n    get typeName(): string { return 'action';}\r\n    async submit(data:object) {\r\n        await this.loadSchema();\r\n        let text = this.pack(data);\r\n        return await this.tvApi.action(this.name, {data:text});\r\n    }\r\n}\r\n\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Entity} from './entity';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SheetState {\r\n    name: string;\r\n    actions: SheetAction[];\r\n}\r\n\r\nexport interface SheetAction {\r\n    name: string;\r\n}\r\n\r\nexport interface StateCount {\r\n    state: string;\r\n    count: number;\r\n}\r\n\r\nexport class Sheet extends Entity {\r\n    get typeName(): string { return 'sheet';}\r\n    states: SheetState[];\r\n\r\n    /*\r\n    setStates(states: SheetState[]) {\r\n        for (let state of states) {\r\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\r\n        }\r\n    }*/\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.states = schema.states;\r\n    }\r\n    build(obj:any) {\r\n        this.states = [];\r\n        for (let op of obj.ops) {\r\n            this.states.push({name: op, actions:undefined});\r\n        }\r\n        /*\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }\r\n    /*\r\n    private setStateAccess(s:SheetState, s1:SheetState) {\r\n        if (s === undefined) return;\r\n        for (let action of s1.actions) {\r\n            let acn = action.name;\r\n            let ac = s.actions.find(a=>a.name === acn);\r\n            if (ac === undefined) continue;\r\n            s.actions.push(action);\r\n        }\r\n    }*/\r\n    async save(discription:string, data:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let {appId} = this.entities;\r\n        let text = this.pack(data);\r\n\r\n        let ret = await this.tvApi.sheetSave(this.name, {app: appId, discription: discription, data:text});\r\n        return ret;\r\n        /*\r\n        let {id, state} = ret;\r\n        if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n        */\r\n    }\r\n    async action(id:number, flow:number, state:string, action:string) {\r\n        await this.loadSchema();\r\n        return await this.tvApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\r\n    }\r\n    private async unpack(data:any):Promise<any> {\r\n        //if (this.schema === undefined) await this.loadSchema();\r\n        let ret = data[0];\r\n        let brief = ret[0];\r\n        let sheetData = this.unpackSheet(brief.data);\r\n        let flows = data[1];\r\n        return {\r\n            brief: brief,\r\n            data: sheetData,\r\n            flows: flows,\r\n        }\r\n    }\r\n    async getSheet(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.getSheet(this.name, id);\r\n        if (ret[0].length === 0) return await this.getArchive(id);\r\n        return await this.unpack(ret);\r\n    }\r\n    async getArchive(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchive(this.name, id)\r\n        return await this.unpack(ret);\r\n    }\r\n\r\n    async getArchives(pageStart:number, pageSize:number) {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n\r\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\r\n\r\n    async stateSheetCount():Promise<StateCount[]> {\r\n        await this.loadSchema();\r\n        let ret:StateCount[] = await this.tvApi.stateSheetCount(this.name);\r\n        return this.states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = ret.find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n    }\r\n\r\n    async mySheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.mySheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport class PageStateItems<T> extends PageItems<T> {\r\n    private sheet: Sheet;\r\n    constructor(sheet: Sheet) {\r\n        super(true);\r\n        this.sheet = sheet;\r\n        this.pageSize = 10;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Field, ArrFields} from './entities';\r\nimport {Entity} from './entity';\r\n\r\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\r\nexport class Query extends Entity {\r\n    get typeName(): string { return 'query';}\r\n    private pageStart: any;\r\n    private pageSize:number;\r\n    private params:any;\r\n    private more: boolean;\r\n    private startField: Field;\r\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\r\n    returns: ArrFields[];\r\n    isPaged: boolean;\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {returns} = schema;\r\n        this.returns = returns;\r\n        this.isPaged = (returns as any[]).find(v => v.name === '$page') !== undefined;\r\n    }\r\n\r\n    resetPage(size:number, params:any) {\r\n        this.pageStart = undefined;\r\n        this.pageSize = size;\r\n        this.params = params;\r\n        this.more = false;\r\n        this.list = undefined;\r\n    }\r\n    get hasMore() {return this.more;}\r\n    async loadPage():Promise<void> {\r\n        if (this.pageSize === undefined) {\r\n            throw 'call resetPage(size:number, params:any) first';\r\n        }\r\n        let pageStart:any;\r\n        if (this.pageStart !== undefined) {\r\n            switch (this.startField.type) {\r\n                default: pageStart = this.pageStart; break;\r\n                case 'date':\r\n                case 'time':\r\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\r\n            }\r\n        }\r\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\r\n        let data = await this.unpackReturns(res);\r\n        let page = data['$page'] as any[];\r\n        */\r\n        this.list = observable.array([], {deep: false});\r\n        if (page !== undefined) {\r\n            if (page.length > this.pageSize) {\r\n                this.more = true;\r\n                page.pop();\r\n                let ret = this.returns.find(r => r.name === '$page');\r\n                this.startField = ret.fields[0];\r\n                this.pageStart = page[page.length-1][this.startField.name];\r\n            }\r\n            else {\r\n                this.more = false;\r\n            }\r\n            this.list.push(...page);\r\n        }\r\n        //this.loaded = true;\r\n    }\r\n\r\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data.$page;// as any[];\r\n    }\r\n    async query(params:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.query(this.name, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data;\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Book extends Query {\r\n    get typeName(): string { return 'book';}\r\n    protected queryApiName = 'book';\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class History extends Query {\r\n    get typeName(): string { return 'history';}\r\n    protected queryApiName = 'history';\r\n}\r\n","import { Entity } from './entity';\r\nimport { Action } from './action';\r\nimport { Query } from './query';\r\nimport { Field } from './entities';\r\n\r\ninterface MapActions {\r\n    add: Action;\r\n    del: Action;\r\n}\r\ninterface MapQueries {\r\n    all: Query;\r\n    page: Query;\r\n    query: Query;\r\n}\r\n\r\nexport class Map extends Entity {\r\n    get typeName(): string { return 'map';}\r\n    keys: Field[];\r\n    actions: MapActions = {} as any;\r\n    queries: MapQueries = {} as any;\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.schemaFrom = this.schema.from;\r\n        let {actions, queries, keys} = schema;\r\n        this.entities.buildFieldTuid(this.keys = keys);\r\n        //let t = this.schemaStringify();\r\n        for (let i in actions) {\r\n            let schema = actions[i];\r\n            let {name} = schema;\r\n            let action = this.entities.newAction(name, undefined);\r\n            action.setSchema(schema);\r\n            this.actions[i] = action;\r\n        }\r\n        for (let i in queries) {\r\n            let schema = queries[i];\r\n            let {name} = schema;\r\n            let query = this.entities.newQuery(name, undefined);\r\n            query.setSchema(schema);\r\n            this.queries[i] = query;\r\n        }\r\n    }\r\n\r\n    async add(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.add.submit(param);\r\n    }\r\n\r\n    async del(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.del.submit(param);\r\n    }\r\n\r\n    async all() {\r\n        await this.loadSchema();\r\n        return await this.queries.all.query({});\r\n    }\r\n\r\n    async page(param:any, pageStart:any, pageSize: number) {\r\n        await this.loadSchema();\r\n        return await this.queries.page.page(param, pageStart, pageSize);\r\n    }\r\n\r\n    async query(param:any) {\r\n        await this.loadSchema();\r\n        return await this.queries.query.query(param);\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Pending extends Query {\r\n    get typeName(): string { return 'pending';}\r\n    protected queryApiName = 'pending';\r\n}\r\n","import {TuidMain, Tuid} from './tuid';\r\nimport {Action} from './action';\r\nimport {Sheet, SheetState, SheetAction} from './sheet';\r\nimport {Query} from './query';\r\nimport {Book} from './book';\r\nimport {History} from './history';\r\nimport { UqApi } from 'tonva-tools';\r\nimport { Map } from './map';\r\nimport { Pending } from './pending';\r\nimport { CUq } from '../controllers';\r\n\r\nexport type FieldType = 'id' | 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text'\r\n    | 'datetime' | 'date' | 'time';\r\n\r\nexport function fieldDefaultValue(type:FieldType) {\r\n    switch (type) {\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n        case 'dec':\r\n            return 0;\r\n        case 'char':\r\n        case 'text':\r\n            return '';\r\n        case 'datetime':\r\n        case 'date':\r\n            return '2000-1-1';\r\n        case 'time':\r\n            return '0:00';\r\n    }\r\n}\r\n\r\nexport interface Field {\r\n    name: string;\r\n    type: FieldType;\r\n    tuid?: string;\r\n    arr?: string;\r\n    url?: string;\r\n    null?: boolean;\r\n    size?: number;\r\n    owner?: string;\r\n    _ownerField: Field;\r\n    _tuid: Tuid;\r\n}\r\nexport interface ArrFields {\r\n    name: string;\r\n    fields: Field[];\r\n    id?: string;\r\n    order?: string;\r\n}\r\nexport interface FieldMap {\r\n    [name:string]: Field;\r\n}\r\n\r\nexport class Entities {\r\n    private tuids: {[name:string]: TuidMain} = {};\r\n    private actions: {[name:string]: Action} = {};\r\n    private sheets: {[name:string]: Sheet} = {};\r\n    private queries: {[name:string]: Query} = {};\r\n    private books: {[name:string]: Book} = {};\r\n    private maps: {[name:string]: Map} = {};\r\n    private histories: {[name:string]: History} = {};\r\n    private pendings: {[name:string]: Pending} = {};\r\n    private cacheTimer: any;\r\n    cUq: CUq;\r\n    uqApi: UqApi;\r\n    appId: number;\r\n    uqId: number;\r\n\r\n    constructor(cUq: CUq, uqApi:UqApi, appId: number) {\r\n        this.cUq = cUq;\r\n        this.uqApi = uqApi;\r\n        this.appId = appId;\r\n    }\r\n\r\n    tuid(name:string):TuidMain {return this.tuids[name.toLowerCase()]}\r\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\r\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\r\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\r\n    book(name:string):Book {return this.books[name.toLowerCase()]}\r\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\r\n    history(name:string):History {return this.histories[name.toLowerCase()]}\r\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\r\n\r\n    sheetFromTypeId(typeId:number):Sheet {\r\n        for (let i in this.sheets) {\r\n            let sheet = this.sheets[i];\r\n            if (sheet.typeId === typeId) return sheet;\r\n        }\r\n    }\r\n\r\n    tuidArr: TuidMain[] = [];\r\n    actionArr: Action[] = [];\r\n    sheetArr: Sheet[] = [];\r\n    queryArr: Query[] = [];\r\n    bookArr: Book[] = [];\r\n    mapArr: Map[] = [];\r\n    historyArr: History[] = [];\r\n    pendingArr: Pending[] = [];\r\n\r\n    async init() {\r\n        await this.uqApi.init();\r\n    }\r\n\r\n    async loadAccess() {\r\n        let accesses = await this.uqApi.loadAccess();\r\n        if (accesses === undefined) return;\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    async loadEntities() {\r\n        let accesses = await this.uqApi.loadEntities();\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    private buildEntities(entities:any) {\r\n        if (entities === undefined) {\r\n            debugger;\r\n        }\r\n        let {access, tuids} = entities;\r\n        this.buildTuids(tuids);\r\n        this.buildAccess(access);\r\n    }\r\n\r\n    getTuid(name:string, div?:string, tuidUrl?:string): Tuid {\r\n        let tuid = this.tuids[name];\r\n        if (tuid === undefined) return;\r\n        if (div === undefined) return tuid;\r\n        return tuid.divs[div];\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.clearCacheTimer();\r\n        this.cacheTimer = setTimeout(this.loadIds, defer);\r\n    }\r\n    private clearCacheTimer() {\r\n        if (this.cacheTimer === undefined) return;\r\n        clearTimeout(this.cacheTimer);\r\n        this.cacheTimer = undefined;\r\n    }\r\n    private loadIds = () => {\r\n        this.clearCacheTimer();\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.cacheIds();\r\n        }\r\n    }\r\n\r\n    private buildTuids(tuids:any) {\r\n        //let proxyColl = {} as any;\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name, typeId/*, proxies*/} = schema;\r\n            let tuid = this.newTuid(i, typeId);\r\n            tuid.sys = true;\r\n            //tuid.setSchema(schema);\r\n            //if (proxies !== undefined) proxyColl[i] = proxies;\r\n        }\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name} = schema;\r\n            let tuid = this.getTuid(i);\r\n            //tuid.sys = true;\r\n            tuid.setSchema(schema);\r\n        }\r\n        /*\r\n        for (let i in proxyColl) {\r\n            let proxies:string[] = proxyColl[i];\r\n            let tuid = this.tuids[i];\r\n            tuid.proxies = {};\r\n            for (let p of proxies) {\r\n                tuid.proxies[p] = this.tuids[p];\r\n            }\r\n        }*/\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.buildFieldsTuid();\r\n        }\r\n    }\r\n\r\n    private buildAccess(access:any) {\r\n        for (let a in access) {\r\n            let v = access[a];\r\n            switch (typeof v) {\r\n                case 'string': this.fromType(a, v); break;\r\n                case 'object': this.fromObj(a, v); break;\r\n            }\r\n        }\r\n        /*\r\n        for (let tuid of this.tuidArr) {\r\n            tuid.setProxies(this);\r\n        }*/\r\n    }\r\n\r\n    newAction(name:string, id:number):Action {\r\n        let action = this.actions[name];\r\n        if (action !== undefined) return action;\r\n        action = this.actions[name] = new Action(this, name, id)\r\n        this.actionArr.push(action);\r\n        return action;\r\n    }\r\n    newTuid(name:string, id:number):TuidMain {\r\n        let tuid = this.tuids[name];\r\n        if (tuid !== undefined) return tuid;\r\n        tuid = this.tuids[name] = new TuidMain(this, undefined, name, id);\r\n        this.tuidArr.push(tuid);\r\n        return tuid;\r\n    }\r\n    newQuery(name:string, id:number):Query {\r\n        let query = this.queries[name];\r\n        if (query !== undefined) return query;\r\n        query = this.queries[name] = new Query(this, name, id)\r\n        this.queryArr.push(query);\r\n        return query;\r\n    }\r\n    newBook(name:string, id:number):Book {\r\n        let book = this.books[name];\r\n        if (book !== undefined) return book;\r\n        book = this.books[name] = new Book(this, name, id);\r\n        this.bookArr.push(book);\r\n        return book;\r\n    }\r\n    newMap(name:string, id:number):Map {\r\n        let map = this.maps[name];\r\n        if (map !== undefined) return map;\r\n        map = this.maps[name] = new Map(this, name, id)\r\n        this.mapArr.push(map);\r\n        return map;\r\n    }\r\n    newHistory(name:string, id:number):History {\r\n        let history = this.histories[name];\r\n        if (history !== undefined) return;\r\n        history = this.histories[name] = new History(this, name, id)\r\n        this.historyArr.push(history);\r\n        return history;\r\n    }\r\n    newPending(name:string, id:number):Pending {\r\n        let pending = this.pendings[name];\r\n        if (pending !== undefined) return;\r\n        pending = this.pendings[name] = new Pending(this, name, id)\r\n        this.pendingArr.push(pending);\r\n        return pending;\r\n    }\r\n    newSheet(name:string, id:number):Sheet {\r\n        let sheet = this.sheets[name];\r\n        if (sheet !== undefined) return sheet;\r\n        sheet = this.sheets[name] = new Sheet(this, name, id);\r\n        this.sheetArr.push(sheet);\r\n        return sheet;\r\n    }\r\n    private fromType(name:string, type:string) {\r\n        let parts = type.split('|');\r\n        type = parts[0];\r\n        let id = Number(parts[1]);\r\n        switch (type) {\r\n            case 'uq': this.uqId = id; break;\r\n            case 'tuid':\r\n                let tuid = this.newTuid(name, id);\r\n                tuid.sys = false;\r\n                break;\r\n            case 'action': this.newAction(name, id); break;\r\n            case 'query': this.newQuery(name, id); break;\r\n            case 'book': this.newBook(name, id); break;\r\n            case 'map': this.newMap(name, id); break;\r\n            case 'history': this.newHistory(name, id); break;\r\n            case 'sheet':this.newSheet(name, id); break;\r\n            case 'pending': this.newPending(name, id); break;\r\n        }\r\n    }\r\n    private fromObj(name:string, obj:any) {\r\n        switch (obj['$']) {\r\n            case 'sheet': this.buildSheet(name, obj); break;\r\n        }\r\n    }\r\n    private buildSheet(name:string, obj:any) {\r\n        let sheet = this.sheets[name];\r\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\r\n        sheet.build(obj);\r\n        /*\r\n        let states = sheet.states;\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    /*\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }*/\r\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {tuid, arr, url} = f;\r\n            if (tuid === undefined) continue;\r\n            f._tuid = this.getTuid(tuid, arr, url);\r\n        }\r\n        for (let f of fields) {\r\n            let {owner} = f;\r\n            if (owner === undefined) continue;\r\n            let ownerField = fields.find(v => v.name === owner);\r\n            if (ownerField === undefined) {\r\n                if (mainFields !== undefined) {\r\n                    ownerField = mainFields.find(v => v.name === owner);\r\n                }\r\n                if (ownerField === undefined) {\r\n                    throw `owner field ${owner} is undefined`;\r\n                }\r\n            }\r\n            f._ownerField = ownerField;\r\n            let {arr, url} = f;\r\n            f._tuid = this.getTuid(ownerField._tuid.name, arr, url);\r\n            if (f._tuid === undefined) throw 'owner field ${owner} is not tuid';\r\n        }\r\n    }\r\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\r\n        if (arrFields === undefined) return;\r\n        for (let af of arrFields) {\r\n            let {fields} = af;\r\n            if (fields === undefined) continue;\r\n            this.buildFieldTuid(fields, mainFields);\r\n        }\r\n    }\r\n}\r\n","export * from './entities';\r\nexport * from './entity';\r\nexport * from './action';\r\nexport * from './query';\r\nexport * from './sheet';\r\nexport * from './tuid';\r\nexport * from './book';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\n","import * as React from 'react';\r\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\r\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\r\n\r\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\r\n\r\nexport abstract class RowContainer {\r\n    protected form:FormView;\r\n    protected row: FormRow;\r\n    protected control: ControlBase;\r\n    constructor(form:FormView, row: FormRow) {\r\n        this.form = form;\r\n        this.row = row;\r\n        if ((row as JSX.Element).type === undefined) {\r\n            let cc:CreateControl = (row as LabelFormRow).createControl;\r\n            if (cc === undefined) cc = form.createControl;\r\n            if (cc === undefined) cc = createControl;\r\n            this.control = cc(form, row);\r\n        }\r\n    }\r\n    abstract render(key:string):JSX.Element;\r\n    \r\n    isOk():boolean {\r\n        if (this.control === undefined) return true;\r\n        return this.control.isOk();\r\n    }\r\n\r\n    contains(fieldName:string):boolean {\r\n        let field = (this.row as FieldRow).field;\r\n        if (field !== undefined) return fieldName === field.name;\r\n        let group = (this.row as GroupRow).group;\r\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\r\n        return false;\r\n    }\r\n    get hasError():boolean {return this.control.hasError;}\r\n    get filled():boolean {return this.control.filled;}\r\n    clear() {\r\n        if (this.control !== undefined) this.control.clear();\r\n    }\r\n    clearErrors() {\r\n        if (this.control !== undefined) this.control.clearErrors();\r\n    }\r\n    readValues(values:any):any {\r\n        if (this.control !== undefined) this.control.readValues(values);\r\n    }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.control !== undefined) this.control.setError(fieldName, error);\r\n    }\r\n    setInitValues(values:any) {\r\n        if (this.control !== undefined) this.control.setInitValues(values);\r\n    }\r\n}\r\n\r\nclass ElementRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\r\n    }\r\n    get hasError():boolean {return false;}\r\n    get filled():boolean {return false;}\r\n}\r\n\r\nclass BootStrapRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className='form-group row'>\r\n            <label className='col-sm-2 col-form-label'>\r\n                {(this.row as LabelFormRow).label}\r\n            </label>\r\n            {this.control.render()}\r\n        </div>;\r\n\r\n        //has-success is-valid\r\n    }\r\n}\r\n\r\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new BootStrapRowContainer(form, row);\r\n}\r\n\r\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new ElementRowContainer(form, row);\r\n}\r\n","//import {isDevelopment} from '../local';\r\nimport {HttpChannel} from './httpChannel';\r\n\r\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\r\n    await channel.fetch(url, options, resolve, reject);\r\n}\r\n\r\nexport abstract class ApiBase {\r\n    protected token: string;\r\n    protected path: string;\r\n    protected showWaiting: boolean;\r\n\r\n    constructor(path: string, showWaiting: boolean) {\r\n        this.path = path || '';\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\r\n\r\n    public async call(url:string, method:string, body:any):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.callFetch(url, method, body);\r\n    }\r\n\r\n    public async get(path:string, params:any=undefined): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.get(this.path + path, params);\r\n    }\r\n\r\n    public async post(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.post(this.path + path, params);\r\n    }\r\n\r\n    public async put(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.put(this.path + path, params);\r\n    }\r\n\r\n    public async delete(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.delete(this.path + path, params);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {nav, mobileHeaderStyle} from './nav';\r\n\r\nexport interface PageHeaderProps {\r\n    back?: 'back' | 'close' | 'none';\r\n    center: string | JSX.Element;\r\n    right?: JSX.Element;\r\n    logout?: boolean | (()=>Promise<void>);\r\n    className?: string;\r\n}\r\nexport interface PageHeaderState {\r\n    hasBack: boolean;\r\n}\r\nexport class PageHeader extends React.Component<PageHeaderProps, PageHeaderState> {\r\n    constructor(props: PageHeaderProps) {\r\n        super(props);\r\n        this.navChange = this.navChange.bind(this);\r\n        this.state = {\r\n            hasBack: false,\r\n        };\r\n    }\r\n    navChange() {\r\n        this.setState({\r\n            hasBack: nav.level > 1\r\n        })\r\n    }\r\n    componentWillMount() {\r\n        this.navChange();\r\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\r\n    }\r\n    componentWillUnmount() {\r\n        //nav.events.remove('change', this.navChangeHandler);\r\n    }\r\n    async back() {\r\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\r\n    }\r\n    openWindow() {\r\n        window.open(document.location.href);\r\n    }\r\n    private logoutClick = () => {\r\n        nav.showLogout(this.logout);\r\n        /*\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout()}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        */\r\n    }\r\n    private logout = async () => {\r\n        let {logout} = this.props;\r\n        if (typeof logout === 'function') {\r\n            await logout(); \r\n        }\r\n        await nav.logout(undefined);\r\n    }\r\n    render() {\r\n        let b = this.state.hasBack || self != top;\r\n        let {right, center, logout, className} = this.props;\r\n        let back, pop, debugLogout;\r\n        if (logout !== undefined && self === top) {\r\n            if (typeof logout === 'boolean' && logout === true\r\n                || typeof logout === 'function')\r\n            {\r\n                let {user} = nav;\r\n                if (user !== undefined) {\r\n                    let {nick, name} = user;\r\n                    debugLogout = <div className=\"d-flex align-items-center\">\r\n                        <small className=\"text-light\">{nick || name}</small>\r\n                        <a className=\"dropdown-toggle btn btn-secondary btn-sm ml-2\"\r\n                            role=\"button\"\r\n                            onClick={this.logoutClick}>\r\n                            <i className=\"fa fa-sign-out\" />\r\n                        </a>\r\n                    </div>;\r\n                }\r\n            }\r\n        }\r\n        if (b) {\r\n            switch (this.props.back) {\r\n                case 'none': back = undefined; break;\r\n                default:\r\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\r\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\r\n            }\r\n        }\r\n        if (self != top) {\r\n            console.log(document.location.href);\r\n            pop = <header onClick={this.openWindow} />;\r\n        }\r\n        let rightView;\r\n        if (right || debugLogout) rightView = <aside>{right} {debugLogout}</aside>;\r\n        return <header className={className} style={mobileHeaderStyle}>\r\n            {pop}\r\n            {back}\r\n            <div>{center}</div>\r\n            {rightView}\r\n        </header>;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { TuidMain, Query, Entity } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuery } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\r\n    protected vForm: VForm;\r\n    private row: React.StatelessComponent;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        let {row, queryRow} = this.ui;\r\n        this.row = queryRow || row || DefaultRow;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let params = this.vForm.getValues();\r\n        if (this.entity.isPaged === true) {\r\n            await this.entity.resetPage(30, params);\r\n            await this.entity.loadPage();\r\n            this.replacePage(this.pageResult);\r\n        }\r\n        else {\r\n            let data = await this.entity.query(params);\r\n            this.replacePage(this.queryResult, data);\r\n        }\r\n    }\r\n\r\n    again = () => {\r\n        this.vForm.reset();\r\n        this.replacePage(this.view);\r\n    }\r\n\r\n    renderExtra() {\r\n        return;\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render('mx-3 my-2')}\r\n        {this.renderExtra()}\r\n    </Page>;\r\n\r\n    protected pageResult = () => {\r\n        let {name, list} = this.entity;\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <List items={list} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    }\r\n\r\n    protected queryResult = observer((result:any) => {\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { Query } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuerySelect } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\r\n    private row: React.StatelessComponent;\r\n\r\n    PageItems:QueryPageItems;\r\n    ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        let {row, selectRow} = this.ui;\r\n        this.row = selectRow || row || DefaultRow;\r\n        //this.entity = this.controller.entity;\r\n        this.PageItems = new QueryPageItems(this.entity);\r\n        await this.onSearch(param);\r\n        this.openPage(this.view);\r\n    }\r\n    onSearch = async (key:string) => {\r\n        await this.PageItems.first(key);\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    private callOnSelected(item:any) {\r\n       this.closePage();\r\n       this.returnCall(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    view = () => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\nexport class QueryPageItems extends PageItems<any> {\r\n    private query: Query;\r\n    constructor(query: Query) {\r\n        super();\r\n        this.query = query;\r\n    }\r\n    protected async load():Promise<any[]> {\r\n        await  this.query.loadSchema();\r\n        let ret:any[];\r\n        if (this.query.isPaged === true)\r\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\r\n        else {\r\n            let data = await this.query.query(this.param);\r\n            //let data = await this.query.unpackReturns(res);\r\n            ret = data[this.query.returns[0].name];\r\n        }\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        if (item === undefined) this.pageStart = 0;\r\n    }\r\n}\r\n","import { StatelessComponent } from \"react\";\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Query } from \"../../entities\";\r\nimport { VQueryMain } from \"./vQueryMain\";\r\nimport { VQuerySelect } from \"./vQuerySelect\";\r\n\r\nexport interface QueryUI extends EntityUI {\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    main?: typeof VQueryMain;\r\n    row?: StatelessComponent;\r\n    queryRow?: StatelessComponent;\r\n    selectRow?: StatelessComponent;\r\n}\r\n\r\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\r\n}\r\n\r\nexport class CQuery extends CQueryBase {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VQueryMain);\r\n    }\r\n\r\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\r\n}\r\n\r\nexport class CQuerySelect extends CQueryBase {\r\n    protected async internalStart(param?:any) {\r\n        await this.openVPage(this.VQuerySelect, param);\r\n    }\r\n\r\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\r\n}\r\n","export * from './cQuery';\r\nexport * from './vQueryMain';\r\nexport * from './vQuerySelect';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { ResUploader } from '../resUploader';\r\nimport { Image } from '../image';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class ImageItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    private resUploader: ResUploader;\r\n    @observable private resId: string;\r\n    @observable private overSize: boolean = false;\r\n\r\n    protected async internalStart():Promise<any> {\r\n        this.resId = this.value;        \r\n        return new Promise<any>((resolve, reject) => {\r\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\r\n        });\r\n    }\r\n\r\n    private upload = async () => {\r\n        if (!this.resUploader) return;\r\n        let ret = await this.resUploader.upload();\r\n        if (ret === null) {\r\n            this.overSize = true;\r\n            setTimeout(() => this.overSize = false, 3000);\r\n            return;\r\n        }\r\n        this.resId = ret;\r\n        this.isChanged = (this.resId != this.value);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.resId)}>保存</button>;\r\n        let overSize:any;\r\n        if (this.overSize === true) {\r\n            overSize = <div className=\"text-danger\">\r\n                <i className=\"fa fa-times-circle\" /> 图片文件大小超过2M，无法上传\r\n            </div>;\r\n        }\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"my-3 px-3 py-3 bg-white\">\r\n                <div>\r\n                    <div>上传图片：</div>\r\n                    <div className=\"my-3\">\r\n                        <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-primary\" onClick={this.upload}>上传</button>\r\n                    </div>\r\n                </div>\r\n                {overSize}\r\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"w-12c h-12c mr-4\"\r\n                        style={{border: '1px dotted gray', padding: '8px'}}>\r\n                        <Image className=\"w-100 h-100\" src={this.resId} />\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"small\">图片预览</div>\r\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function Loading() {\r\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\r\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\r\n    </div>;\r\n}\r\n\r\n/*\r\nexport function Loading() {\r\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\r\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\r\n        加载中...\r\n    </div>\r\n    </div>\r\n}\r\n*/\r\n\r\n\r\n","import * as React from 'react';\r\nimport { nav } from './nav';\r\n\r\nexport interface ResUploaderProps {\r\n    className?: string;\r\n    multiple?: boolean;\r\n    maxSize?: number;\r\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport class ResUploader extends React.Component<ResUploaderProps> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    upload = async ():Promise<string> => {\r\n        let {maxSize} = this.props;\r\n        if (maxSize === undefined || maxSize <= 0) \r\n            maxSize = 100000000000;\r\n        else\r\n            maxSize = maxSize * 1024;\r\n        let resUrl = nav.resUrl + 'upload';\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            if (file.size > maxSize) return null;\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(resUrl, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            let json = await res.json();\r\n            return ':' + json.res.id;\r\n        }\r\n        catch (err) {\r\n            console.error('%s %s', resUrl, err);\r\n        }\r\n    }\r\n    render() {\r\n        let {className, multiple, onFilesChange} = this.props;\r\n        return <input \r\n            className={className}\r\n            ref={t=>this.fileInput=t} \r\n            onChange={onFilesChange}\r\n            type='file' name='file' multiple={multiple} />\r\n    }\r\n}\r\n","export * from './rule';\r\nexport * from './field';\r\nexport * from './face';\r\nexport * from './rowContainer';\r\nexport * from './formView';\r\nexport * from './TonvaForm';\r\nexport {ControlBase} from './control';\r\n","import * as React from 'react';\r\nimport {FormEvent} from 'react';\r\nimport {computed} from 'mobx';\r\nimport {uid} from '../uid';\r\nimport {Rule} from './rule';\r\nimport {Field} from './field';\r\nimport {Face} from './face';\r\nimport {CreateControl, ButtonsControl} from './control';\r\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\r\n\r\nexport interface FieldView {\r\n    field: Field;\r\n    face?: Face;\r\n}\r\n\r\nexport interface LabeledRow {\r\n    label?: string;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    help?: JSX.Element;\r\n}\r\n\r\nexport interface FieldRow extends LabeledRow, FieldView {\r\n}\r\n\r\nexport interface GroupRow extends LabeledRow {\r\n    group: FieldView[];\r\n}\r\n\r\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\r\nexport type FormRow = LabelFormRow|JSX.Element;\r\n\r\nexport interface SubmitResult {\r\n    success: boolean;\r\n    message?: string\r\n    result?: any;\r\n}\r\n\r\nexport interface FormProps {\r\n    formRows: FormRow[];\r\n    //context?: any;              // form context，比如，可以是EntitiesUI\r\n    rules?: Rule | Rule[];\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n    otherButton?: string|JSX.Element;\r\n    onOther?: (values:any) => void;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport class FormView {\r\n    uid:string;\r\n    private rows: RowContainer[] = [];\r\n    private buttonsRow: RowContainer;\r\n    props: FormProps;\r\n    createControl?: CreateControl;\r\n    constructor(props:FormProps) {\r\n        this.uid = uid();\r\n        this.props = props;\r\n        this.buildRows(props);\r\n        this.createControl = props.createControl;\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\r\n        console.log(ret);\r\n        return this.rows.some(row => row.hasError);\r\n    }\r\n    @computed get nothing():boolean {\r\n        let ret = this.rows.every(row => !row.filled);\r\n        return ret;\r\n    }\r\n\r\n    readValues():any {\r\n        let values = {} as any;\r\n        for (let row of this.rows) {\r\n            row.readValues(values);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    clear() {\r\n        for (let row of this.rows) {\r\n            row.clear();\r\n        }\r\n    }\r\n\r\n    clearErrors() {\r\n        for (let row of this.rows) {\r\n            row.clearErrors();\r\n        }\r\n    }\r\n\r\n    setError(fieldName:string, error:string) {\r\n        for (let row of this.rows) {\r\n            row.setError(fieldName, error);\r\n        }\r\n    }\r\n\r\n    setInitValues(initValues:any) {\r\n        if (initValues === undefined) return;\r\n        for (let row of this.rows) {\r\n            row.setInitValues(initValues);\r\n        }\r\n    }\r\n\r\n    private buildRows(props:FormProps) {\r\n        let {formRows, createRow} = props;\r\n        if (formRows !== undefined) {\r\n            for (let row of formRows) {\r\n                this.rows.push(this.buildRow(row, createRow));\r\n            }\r\n            if (this.props.readOnly !== true) {\r\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\r\n            }\r\n        }\r\n        else {\r\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\r\n        }\r\n    }\r\n\r\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\r\n        let createRow:CreateRow;\r\n        let type = (formRow as JSX.Element).type;\r\n        if (type !== undefined) {\r\n            createRow = elementCreateRow;\r\n        }\r\n        else {\r\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\r\n            if (createRow === undefined) {\r\n                createRow = formRowCreator;\r\n                if (createRow === undefined) createRow = bootstrapCreateRow;\r\n            }\r\n        }\r\n        let row = createRow(this, formRow);\r\n        return row;\r\n    }\r\n\r\n    private createButtons(form:FormView, row: FormRow) {\r\n        return new ButtonsControl(form);\r\n    }\r\n\r\n    private isOk():boolean {\r\n        let isOk = true;\r\n        for (let row of this.rows) {\r\n            if (!row.isOk()) isOk = false;\r\n        }\r\n        return isOk;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        return <form onSubmit={this.onSubmit}>\r\n            {this.rows.map((row,index) => row.render(this.uid + index))}\r\n            {this.buttons()}\r\n        </form>;\r\n    }\r\n\r\n    buttons():JSX.Element {\r\n        if (this.buttonsRow === undefined) return;\r\n        return this.buttonsRow.render(this.uid + this.rows.length);\r\n    }\r\n    \r\n    async onSubmit(event:FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (!this.isOk()) return;\r\n        let values = this.readValues();\r\n        await this.props.onSubmit(values);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Page, loadAppUqs, nav, appInFrame, Controller, TypeVPage, VPage, resLang, getExHash, isDevelopment, NavSettings, App} from 'tonva-tools';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { CUq, UqUI } from './uq';\r\nimport { centerApi } from '../centerApi';\r\n\r\nexport interface RoleAppUI {\r\n    CApp?: typeof CApp;\r\n    CUq?: typeof CUq;\r\n    main?: TypeVPage<CApp>;\r\n    uqs: {[uq:string]: UqUI | (()=>Promise<UqUI>)};\r\n    res?: any;\r\n}\r\n\r\nexport interface AppUI extends RoleAppUI, NavSettings {\r\n    appName: string; // 格式: owner/appName\r\n    roles?: {[role:string]: RoleAppUI | (()=>Promise<RoleAppUI>)};\r\n}\r\n\r\nexport class CApp extends Controller {\r\n    private appOwner:string;\r\n    private appName:string;\r\n    private cImportUqs: {[uq:string]: CUq} = {};\r\n    protected ui:AppUI;\r\n    id: number;\r\n    appUnits:any[];\r\n\r\n    constructor(ui:AppUI) {\r\n        super(resLang(ui && ui.res));\r\n        nav.setSettings(ui);\r\n        let tonvaApp = ui.appName;\r\n        if (tonvaApp === undefined) {\r\n            throw 'appName like \"owner/app\" must be defined in UI';\r\n        }\r\n        let parts = tonvaApp.split('/');\r\n        if (parts.length !== 2) {\r\n            throw 'tonvaApp name must be / separated, owner/app';\r\n        }\r\n        this.appOwner = parts[0];\r\n        this.appName = parts[1];\r\n        if (ui.uqs === undefined) ui.uqs = {};\r\n        this.ui = ui;\r\n        this.caption = this.res.caption || 'Tonva';\r\n    }\r\n    \r\n    readonly caption: string; // = 'View Model 版的 Uq App';\r\n    cUqCollection: {[uq:string]: CUq} = {};\r\n\r\n    async startDebug() {\r\n        let appName = this.appOwner + '/' + this.appName;\r\n        let cApp = new CApp({appName: appName, uqs:{}} );\r\n        let keepNavBackButton = true;\r\n        await cApp.start(keepNavBackButton);    \r\n    }\r\n\r\n    protected async loadUqs(app:App): Promise<string[]> {\r\n        let retErrors:string[] = [];\r\n        let unit = appInFrame.unit;\r\n        //let app = await loadAppUqs(this.appOwner, this.appName);\r\n        let {id, uqs} = app;\r\n        this.id = id;\r\n\r\n        let promises: PromiseLike<string>[] = [];\r\n        let promiseChecks: PromiseLike<boolean>[] = [];\r\n        let roleAppUI = await this.buildRoleAppUI();\r\n        this.ui = roleAppUI;\r\n        for (let appUq of uqs) {\r\n            let {id:uqId, uqOwner, uqName, access} = appUq;\r\n            let uq = uqOwner + '/' + uqName;\r\n            let uqUI = roleAppUI && roleAppUI.uqs && roleAppUI.uqs[uq];\r\n            let cUq = this.newCUq(uq, uqId, access, uqUI || {});\r\n            this.cUqCollection[uq] = cUq;\r\n            promises.push(cUq.loadSchema());\r\n            promiseChecks.push(cUq.entities.uqApi.checkAccess());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        Promise.all(promiseChecks).then((checks) => {\r\n            for (let c of checks) {\r\n                if (c === false) {\r\n                    //debugger;\r\n                    //nav.start();\r\n                    //return;\r\n                }\r\n            }\r\n        });\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) return;\r\n        return retErrors;\r\n    }\r\n\r\n    private async buildRoleAppUI():Promise<AppUI> {\r\n        if (!this.ui) return undefined;\r\n        let {hashParam} = nav;\r\n        if (!hashParam) return this.ui;\r\n        let {roles} = this.ui;\r\n        let roleAppUI = roles && roles[hashParam];\r\n        if (!roleAppUI) return this.ui;\r\n        let ret:AppUI = {} as any;\r\n        for (let i in this.ui) {\r\n            if (i === 'roles') continue;\r\n            ret[i] = this.ui[i];\r\n        }\r\n        if (typeof roleAppUI === 'function') roleAppUI = await roleAppUI();\r\n        _.merge(ret, roleAppUI);\r\n        return ret;\r\n    }\r\n\r\n    getImportUq(uqOwner:string, uqName:string):CUq {\r\n        let uq = uqOwner + '/' + uqName;\r\n        let cUq = this.cImportUqs[uq];\r\n        if (cUq !== undefined) return cUq;\r\n        let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n        let uqId = -1; // unknown\r\n        this.cImportUqs[uq] = cUq = this.getCUq(uq);\r\n        //this.newCUq(uq, uqId, undefined, ui || {});\r\n        /*\r\n        let retError = await cUq.loadSchema();\r\n        if (retError !== undefined) {\r\n            console.error(retError);\r\n            debugger;\r\n            return;\r\n        }\r\n        */\r\n        return cUq;\r\n    }\r\n\r\n    protected newCUq(uq:string, uqId:number, access:string, ui:any) {\r\n        let cUq = new (this.ui.CUq || CUq)(this, uq, this.id, uqId, access, ui);        \r\n        Object.setPrototypeOf(cUq.x, this.x);\r\n        return cUq;\r\n    }\r\n\r\n    get cUqArr():CUq[] {\r\n        let ret:CUq[] = [];\r\n        for (let i in this.cUqCollection) {\r\n            ret.push(this.cUqCollection[i]);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getCUq(uq:string):CUq {\r\n        return this.cUqCollection[uq];\r\n    }\r\n\r\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\r\n    protected async beforeStart():Promise<boolean> {\r\n        try {\r\n            let app = await loadAppUqs(this.appOwner, this.appName);\r\n            // if (isDevelopment === true) {\r\n            // 这段代码原本打算只是在程序员调试方式下使用，实际上，也可以开放给普通用户，production方式下\r\n                let {predefinedUnit} = appInFrame;\r\n                let {id} = app;\r\n                this.id = id;\r\n                let {user} = nav;\r\n                if (user !== undefined && user.id > 0) {\r\n                    this.appUnits = await centerApi.userAppUnits(this.id);\r\n                    switch (this.appUnits.length) {\r\n                        case 0:\r\n                            this.showUnsupport(predefinedUnit);\r\n                            return false;\r\n                        case 1:\r\n                            let appUnit = this.appUnits[0].id;\r\n                            if (appUnit === undefined || appUnit < 0 || \r\n                                predefinedUnit !== undefined && appUnit != predefinedUnit)\r\n                            {\r\n                                this.showUnsupport(predefinedUnit);\r\n                                return false;\r\n                            }\r\n                            appInFrame.unit = appUnit;\r\n                            break;\r\n                        default:\r\n                            if (predefinedUnit>0 && this.appUnits.find(v => v.id===predefinedUnit) !== undefined) {\r\n                                appInFrame.unit = predefinedUnit;\r\n                                break;\r\n                            }\r\n                            nav.push(<this.selectUnitPage />)\r\n                            return false;\r\n                    }\r\n                }\r\n            //}\r\n\r\n            let retErrors = await this.loadUqs(app);\r\n            if (retErrors !== undefined) {\r\n                this.openPage(<Page header=\"ERROR\">\r\n                    <div className=\"m-3\">\r\n                        <div>Load Uqs 发生错误：</div>\r\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\r\n                    </div>\r\n                </Page>);\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            nav.push(<Page header=\"App start error!\">\r\n                <pre>\r\n                    {typeof err === 'string'? err : err.message}\r\n                </pre>\r\n            </Page>);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    protected async internalStart(param:any) {\r\n        if (param !== true) {\r\n            this.clearPrevPages();\r\n        }\r\n        await this.showMainPage();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return this.renderView(this.VAppMain);\r\n    }\r\n\r\n    // 如果是独立app，删去显示app之前的页面。\r\n    // 如果非独立app，则不删\r\n    protected clearPrevPages() {\r\n        nav.clear();\r\n    }\r\n\r\n    private showUnsupport(predefinedUnit: number) {\r\n        this.clearPrevPages();\r\n        let {user} = nav;\r\n        let userName:string = user? user.name : '[未登录]';\r\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\r\n            <div className=\"m-3 text-danger container\">\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">登录用户: </div>\r\n                    <div className=\"col\">{userName}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">App:</div>\r\n                    <div className=\"col\">{`${this.appOwner}/${this.appName}`}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">预设小号:</div>\r\n                    <div className=\"col\">{predefinedUnit || <small className=\"text-muted\">[无预设小号]</small>}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">\r\n                        <FA name=\"exclamation-triangle\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"text-muted\">无法运行可能原因：</div>\r\n                        <ul className=\"p-0\">\r\n                            <li>没有小号运行 {this.ui.appName}</li>\r\n                            <li>用户 <b>{userName}</b> 没有加入任何一个运行{this.ui.appName}的小号</li>\r\n                            {\r\n                                predefinedUnit && \r\n                                <li>预设小号 <b>{predefinedUnit}</b> 没有运行App {this.ui.appName}</li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    predefinedUnit || \r\n                    <div className=\"form-group row\">\r\n                    <div className=\"col-2\"></div>\r\n                    <div className=\"col\">\r\n                        预设小号定义在 public/unit.json 文件中。\r\n                        定义了这个文件的程序，只能由url直接启动。\r\n                        用户第一次访问app之后，会缓存在localStorage里。<br/>\r\n                        如果要删去缓存的预定义Unit，logout然后再login。\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        </Page>)\r\n    }\r\n\r\n    private async showMainPage() {\r\n        // #tv-RwPBwMef-23-sheet-api-108\r\n        let exHash = getExHash();\r\n        if (exHash !== undefined) {\r\n            let parts = exHash.split('-');\r\n            if (parts.length > 3) {\r\n                let action = parts[3];\r\n                // sheet_debug 表示centerUrl是debug方式的\r\n                if (action === 'sheet' || action === 'sheet_debug') {\r\n                    let uqId = Number(parts[4]);\r\n                    let sheetTypeId = Number(parts[5]);\r\n                    let sheetId = Number(parts[6]);\r\n                    let cUq = this.getCUqFromId(uqId);\r\n                    if (cUq === undefined) {\r\n                        alert('unknown uqId: ' + uqId);\r\n                        return;\r\n                    }\r\n                    this.clearPrevPages();\r\n                    await cUq.navSheet(sheetTypeId, sheetId);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.openVPage(this.VAppMain);\r\n    }\r\n\r\n    private getCUqFromId(uqId:number): CUq {\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            if (cUq.id === uqId) return cUq;\r\n        }\r\n        return;\r\n    }\r\n\r\n    renderRow = (item: any, index: number):JSX.Element => {\r\n        let {id, nick, name} = item;\r\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\r\n            <div>{nick || name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: any) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        await this.start();\r\n    }\r\n\r\n    protected selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={true}>\r\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>\r\n    }\r\n}\r\n\r\nclass VAppMain extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    render(param?:any) {\r\n        return this.appContent();\r\n    }\r\n\r\n    protected appPage = () => {\r\n        let {caption} = this.controller;\r\n        return <Page header={caption} logout={async()=>{appInFrame.unit = undefined}}>\r\n            {this.appContent()}\r\n        </Page>;\r\n    }\r\n\r\n    protected appContent = () => {\r\n        let {cUqArr} = this.controller;\r\n        let content:any;\r\n        if (cUqArr.length === 0) {\r\n            content = <div className=\"text-danger\">\r\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <>{content}</>;\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { FA } from \"tonva-react-form\";\r\n\r\nfunction icon(className:string, name:string) {\r\n    return <FA className={className} name={name} fixWidth={true} />;\r\n}\r\n/*\r\nexport interface EntityRes {\r\n    caption: string;\r\n    icon: JSX.Element;\r\n}\r\n*/\r\n\r\nexport const entityIcons:{[type:string]:JSX.Element} = {\r\n    tuid: icon('text-info', 'list-alt'),\r\n    action: icon('text-info', 'hand-o-right'),\r\n    map: icon('text-muted', 'list-ul'),\r\n    book: icon('text-muted', 'book'),\r\n    query: icon('text-warning', 'search'),\r\n    history: icon('text-info', 'hand-o-right'),\r\n    pending: icon('text-info', 'forward'),\r\n    sheet: icon('text-primary', 'wpforms'),\r\n};\r\n","import { Controller } from \"tonva-tools\";\r\nimport { CUq } from \"./uq\";\r\n\r\nexport abstract class ControllerUq extends Controller {\r\n    constructor(cUq: CUq, res:any) {\r\n        super(res);\r\n        this.cUq = cUq;\r\n    }\r\n    cUq: CUq;\r\n}\r\n","import {CenterApi as CenterApiBase} from 'tonva-tools';\r\n\r\n//\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page } from 'tonva-tools';\r\nimport { List, Muted, LMR } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open() {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    newClick = () => this.event('new');\r\n    schemaClick = () => this.event('schema'); \r\n    archivesClick = () => this.event('archives');\r\n    sheetStateClick = (state) => this.event('state', state);\r\n\r\n    renderState = (item:any, index:number) => {\r\n        let {state, count} = item;\r\n        if (count === 0) return null;\r\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\r\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let list = this.controller.statesCount.filter(row=>row.count);\r\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\r\n        let templet:any;\r\n        if (this.isDev === true) {\r\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\r\n        }\r\n        return <Page header={this.label}>\r\n            <LMR\r\n                className=\"mx-3 my-2\"\r\n                right={right}>\r\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\r\n                {templet}\r\n            </LMR>\r\n            <List className=\"my-2\"\r\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\r\n                none=\"[ 无 ]\"\r\n                items={list}\r\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\r\n    vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        let valuesWithBox = this.vForm.values;\r\n        //let ret = \r\n        await this.controller.onSave(values, valuesWithBox);\r\n        /*\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.controller.showSaved(ret);\r\n        */\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import * as React from 'react';\r\nimport {List, Muted, LMR, EasyDate, FA} from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nconst leftFlowStyle = {width: '8rem'};\r\n\r\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected vForm: VForm;\r\n    protected sheetData: SheetData;\r\n    //data: any;\r\n    //state: string;\r\n    //flows:any[];\r\n\r\n    flowRow = (item:any, index:number):JSX.Element => {\r\n        let {date, user, preState, state, action} = item;\r\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\r\n        let to;\r\n        switch (state) {\r\n            case '$': break;\r\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\r\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\r\n        }\r\n        /*\r\n        return <div className=\"row\">\r\n            <div className=\"col-sm\"></div>\r\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\r\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\r\n        </div>;\r\n        */\r\n        return <LMR \r\n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\r\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\r\n            <div className=\"p-2\">{to}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    protected sheetView = () => {\r\n        let {brief, flows} = this.sheetData;\r\n        let removed;\r\n        if (brief.state === '-')\r\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\r\n        return <div>\r\n            {removed}\r\n            {this.vForm.render()}\r\n    \r\n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\r\n                items={flows}\r\n                item={{render:this.flowRow}}/>\r\n        </div>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm, FormMode } from '../form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\r\n    protected sheetData: SheetData;\r\n    async open(param: SheetData) {\r\n        this.sheetData = param;\r\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        await this.controller.saveSheet(values, this.vForm.values);\r\n        this.closePage();\r\n        this.returnCall(this.vForm.values);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetAction extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        let {id, flow, state} = this.sheetData.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.ceasePage();\r\n        this.openPage(this.acted);\r\n        //alert(jsonStringify(res));\r\n        //await this.backPage();\r\n    }\r\n\r\n    deleteClick = async () => {\r\n        alert('单据作废：程序正在设计中');\r\n    }\r\n\r\n    editClick = async () => {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.controller.editSheet(this.sheetData);\r\n        this.vForm.setValues(values);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        let {states} = this.entity;\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons, startButtons;\r\n        if (s === undefined) {\r\n            let text:string, cn:string;\r\n            switch (state) {\r\n                default:\r\n                    text = '不认识的单据状态\\'' + state + '\\'';\r\n                    cn = 'text-info';\r\n                    break;\r\n                case '-': \r\n                    text = '已作废';\r\n                    cn = 'text-danger';\r\n                    break;\r\n                case '#':\r\n                    text = '已归档';\r\n                    cn = 'text-success';\r\n                    break;\r\n            }\r\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\r\n        }\r\n        else {\r\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \r\n                <button\r\n                    key={index}\r\n                    className=\"btn btn-primary mr-2\"\r\n                    onClick={()=>this.actionClick(v)}\r\n                >\r\n                    {this.controller.getActionLabel(state, v.name)}\r\n                </button>)}\r\n            </div>;\r\n            if (state === '$') {\r\n                startButtons = <div>\r\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\r\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\r\n                </div>\r\n            }\r\n        };\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    {actionButtons}\r\n                    {startButtons}\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        let {discription} = this.sheetData.brief;\r\n        return <Page header=\"已处理\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"p-3\">{discription}</div>\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open(param?:any) {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label + \"模板\"}>\r\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\r\n    </Page>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport {List, LMR, FA, EasyDate, Muted} from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\r\n    list: any[];\r\n\r\n    async open() {\r\n        this.list = await this.entity.getArchives(undefined, 10);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    archiveClick = async (brief:any) => {\r\n        if (brief.processing===1) return;\r\n        this.event('archived', brief);\r\n    }\r\n    archiveRow = (row:any, index:number) => {\r\n        let {id, no, discription, date} = row;\r\n        let left = <>\r\n            {row.processing===1? '... ' : ''}\r\n            {row.no} &nbsp; {row.discription}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\r\n    }\r\n\r\n    protected view = () => {\r\n        return <Page header={'已归档' + this.label}>\r\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { List, Muted, FA, LMR, EasyDate } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected row: (values) => JSX.Element;\r\n    stateName: string;\r\n    stateLabel: string;\r\n\r\n    async open(item:any) {\r\n        this.row = this.ui.listRow || this.rowContent;\r\n        this.stateName = item.state;\r\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\r\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\r\n        await this.controller.pageStateItems.first(this.stateName);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    rowClick = async (brief:any) => {\r\n        if (brief.processing===1) {\r\n            this.event('processing', brief.id);\r\n            return;\r\n        }\r\n        this.event('action', brief.id);\r\n    }\r\n\r\n    private onScrollBottom = () => {\r\n        console.log('onScrollBottom');\r\n        this.controller.pageStateItems.more();\r\n    }\r\n\r\n    protected rowContent = (row:any):JSX.Element => {\r\n        let {id, no, discription, date, processing} = row;\r\n        let left = <>            \r\n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\r\n    }\r\n\r\n    private renderRow = (row:any, index:number) => <this.row {...row} />\r\n\r\n    protected view = () => {\r\n        //let sheets = this.controller.stateSheets;\r\n        let {pageStateItems} = this.controller;\r\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\r\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Page} from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nexport interface State {\r\n    flows: any;\r\n    data: any;\r\n}\r\nexport class VArchived extends VSheetView {\r\n    //protected controller: CSheet;\r\n    //brief: any;\r\n\r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        /*\r\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\r\n        this.brief = brief;\r\n        this.data = data;\r\n        this.flows = flows;\r\n        */\r\n        this.vForm = this.createForm(undefined, this.sheetData.data);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {brief} = this.sheetData;\r\n        return <Page header={this.label + ':' + '-' + brief.no}>\r\n            <this.sheetView />\r\n        </Page>;\r\n    };\r\n}\r\n","import { Sheet } from \"../../entities\";\r\nimport { SheetUI, CSheet } from \"./cSheet\";\r\nimport { VEntity } from \"../CVEntity\";\r\n\r\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheet } from \"./vSheet\";\r\n\r\nexport class VSheetSaved extends VSheet {\r\n    private brief: any;\r\n    async open(brief?:any) {\r\n        this.brief = brief;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private restart = async () => {\r\n        this.ceasePage();\r\n        await this.event('new');\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        this.ceasePage();\r\n        let {id, flow, state} = this.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.openPage(this.acted);\r\n    }\r\n\r\n    private buttons = <>\r\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\r\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n    </>;\r\n\r\n    private view = () => {\r\n        let {states} = this.entity;\r\n        const state = '$';\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons = <>{s.actions.map((v,index) => \r\n            <button\r\n                key={index}\r\n                className=\"btn btn-primary mr-3\"\r\n                onClick={()=>this.actionClick(v)}\r\n            >\r\n                {this.controller.getActionLabel(state, v.name)}\r\n            </button>)}\r\n        </>;\r\n        return <Page header=\"已保存\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\r\n                <div className=\"p-3\">\r\n                    {actionButtons}\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        return <Page>\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetProcessing extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    正在处理中...\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import { IObservableArray, observable } from \"mobx\";\r\nimport { TypeVPage, VPage, PageItems, postWsToTop } from 'tonva-tools';\r\nimport { Sheet, StateCount } from \"../../entities\";\r\nimport { CEntity, EntityUI, VEntity } from \"../CVEntity\";\r\nimport { VSheetMain } from \"./vMain\";\r\nimport { VSheetNew } from \"./vNew\";\r\nimport { VSheetEdit } from \"./vEdit\";\r\nimport { VSheetAction } from \"./vSheetAction\";\r\nimport { VSheetSchema } from \"./vSchema\";\r\nimport { VArchives } from \"./vArchives\";\r\nimport { VSheetList } from \"./vList\";\r\nimport { VArchived } from \"./vArchived\";\r\nimport { VSheetSaved } from \"./vSaved\";\r\nimport { VSheetProcessing } from \"./vSheetProcessing\";\r\n\r\nexport interface SheetActionUI {\r\n    label: string;\r\n}\r\n\r\nexport interface StateUI {\r\n    label: string;\r\n    actions: {[name:string]: SheetActionUI}\r\n}\r\n\r\nexport interface SheetUI extends EntityUI {\r\n    CSheet?: typeof CSheet;\r\n    states?: {[name:string]: StateUI};\r\n    main?: TypeVPage<CSheet>;\r\n    sheetNew?: TypeVPage<CSheet>;\r\n    sheetSaved?: TypeVPage<CSheet>;\r\n    sheetEdit?: TypeVPage<CSheet>;\r\n    sheetAction?: TypeVPage<CSheet>;\r\n    listRow?: (row:any) => JSX.Element;\r\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\r\n}\r\n\r\nexport interface SheetData {\r\n    brief: any;\r\n    data: any;\r\n    flows: any[];\r\n}\r\n\r\nexport class CSheet extends CEntity<Sheet, SheetUI> {\r\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\r\n    curState:string;\r\n    pageStateItems: PageItems<any>;\r\n\r\n    protected async internalStart() {\r\n        await this.loadStateSheetCount();\r\n        this.pageStateItems = this.entity.createPageStateItems();\r\n        await this.openVPage(this.VSheetMain);\r\n    }\r\n\r\n    protected async onMessage(msg: any):Promise<void> {\r\n        let {type, body, from, to, push} = msg;\r\n        if (type === 'sheet') this.onSheet(from, to, body);\r\n    }\r\n    private onSheet(from:number, to:number[], sheetData:any) {\r\n        let me = this.user.id;\r\n        let {id, preState, state} = sheetData;\r\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\r\n        if (from === me) {\r\n            this.sheetActPreState(id, preState);\r\n        }\r\n        if (to.find(v=>v===me) !== undefined) {\r\n            this.sheetActState(id, state, sheetData);\r\n        }\r\n    }\r\n    private sheetActPreState(id:number, preState:string) {\r\n        this.changeStateCount(preState, -1);\r\n        if (this.curState === undefined || this.curState !== preState) return;\r\n        /*\r\n        let index = this.stateSheets.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.stateSheets.splice(index, 1);\r\n        }*/\r\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.pageStateItems.items.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private sheetActState(id:number, state:string, msg:any) {\r\n        this.changeStateCount(state, 1);\r\n        if (this.curState === undefined || this.curState !== state) return;\r\n        /*\r\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\r\n            this.stateSheets.push(msg);\r\n        }\r\n        */\r\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\r\n            this.pageStateItems.items.push(msg);\r\n        }\r\n    }\r\n\r\n    private changeStateCount(state:string, delta:number) {\r\n        if (state === undefined) return;\r\n        let index = this.statesCount.findIndex(v => v.state === state);\r\n        console.log({$:'changeState', state: state, delta: delta, index: index});\r\n        if (index < 0) return;\r\n        let stateCount = this.statesCount[index];\r\n        stateCount.count += delta;\r\n        if (stateCount.count < 0) stateCount.count = 0;\r\n    }\r\n\r\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\r\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\r\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\r\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\r\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\r\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\r\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\r\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\r\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\r\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\r\n    protected async onEvent(type:string, value:any) {\r\n        let c: TypeVPage<CSheet>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': c = this.VSheetNew; break;\r\n            case 'schema': c = this.VSheetSchema; break;\r\n            case 'archives': c = this.VArchives; break;\r\n            case 'state':\r\n                this.curState = value.state;\r\n                c = this.VSheetList;\r\n                break;\r\n            case 'archived':\r\n                await this.showArchived(value); return;\r\n            case 'action':\r\n                await this.showAction(value); return;\r\n            case 'processing':\r\n                await this.showProcessing(value); return;\r\n        }\r\n        await this.openVPage(c, value);\r\n    }\r\n\r\n    async startSheet(sheetId:number) {\r\n        if (await this.beforeStart() === false) return;\r\n        await this.onEvent('action', sheetId);\r\n    }\r\n\r\n    async showAction(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        postWsToTop({\r\n            body: {\r\n                $type: 'msg',\r\n                action: '$sheet',\r\n                msg: {\r\n                    id: sheetId,\r\n                    uq: this.cUq.id,\r\n                    state: sheetData.brief.state\r\n                }\r\n            }\r\n        });\r\n        await this.openVPage(this.VSheetAction, sheetData);\r\n    }\r\n\r\n    async showProcessing(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        await this.openVPage(this.VSheetProcessing, sheetData);\r\n    }\r\n\r\n    async editSheet(sheetData:SheetData):Promise<any> {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.vCall(this.VSheetEdit, sheetData);\r\n        return values;\r\n    }\r\n\r\n    async showArchived(inBrief:any) {\r\n        let sheetData = await this.getArchived(inBrief.id);\r\n        await this.openVPage(this.VArchived, sheetData);\r\n    }\r\n\r\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\r\n        //let values = this.vForm.getValues();\r\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\r\n        let ret = await this.saveSheet(values, valuesWithBox);\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.showSaved(ret);\r\n    }\r\n\r\n    async showSaved(sheetData:any) {\r\n        await this.openVPage(this.VSheetSaved, sheetData);\r\n    }\r\n\r\n    private getStateUI(stateName:string) {\r\n        let {states} = this.res;\r\n        if (states === undefined) return;\r\n        return states[stateName];\r\n    }\r\n    getStateLabel(stateName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        let ret = (state && state.label) || stateName;\r\n        switch (ret) {\r\n            default: return ret;\r\n            case '$': return '新单';\r\n        }\r\n    }\r\n    getActionLabel(stateName:string, actionName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        if (state === undefined) return actionName;\r\n        let actions = state.actions;\r\n        if (actions === undefined) return actionName;\r\n        let action = actions[actionName];\r\n        return (action && action.label) || actionName;\r\n    }\r\n\r\n    private async loadStateSheetCount():Promise<void> {\r\n        this.statesCount.clear();\r\n        let statesCount = await this.entity.stateSheetCount();\r\n        this.statesCount.splice(0, 0, ...statesCount);\r\n    }\r\n\r\n    async getSheetData(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getSheet(sheetId);\r\n    }\r\n\r\n    async getArchived(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getArchive(sheetId);\r\n    }\r\n\r\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\r\n        let {sheetTitle} = this.ui;\r\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\r\n        let ret = await this.entity.save(disc, values);\r\n        //let {id, state} = ret;\r\n        //if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n    }\r\n\r\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\r\n        return await this.entity.action(id, flow, state, actionName);\r\n    }\r\n}\r\n","export * from './cSheet';\r\nexport * from './vSheet';\r\nexport * from './vMain';\r\nexport * from './vNew';\r\nexport * from './vEdit';\r\nexport * from './vList';\r\nexport * from './vSheetAction';\r\nexport * from './vSchema';\r\nexport * from './vArchived';\r\nexport * from './vSheetView';\r\n","import * as React from 'react';\r\nimport { TuidMain, Book, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CBook, BookUI } from './cBook';\r\n\r\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        Book\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Book } from \"../../entities\";\r\nimport { VBookMain } from \"./vBookMain\";\r\n\r\nexport interface BookUI extends EntityUI {\r\n    CBook?: typeof CBook;\r\n    main: typeof VBookMain,\r\n}\r\n\r\nexport class CBook extends CEntity<Book, BookUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VBookMain);\r\n    }\r\n\r\n    protected get VBookMain():typeof VBookMain {return VBookMain}\r\n}\r\n","import React from \"react\";\r\nimport { View } from \"tonva-tools\";\r\nimport { List, Muted } from \"tonva-react-form\";\r\nimport { Entity } from \"../../entities\";\r\nimport { CLink } from \"../link\";\r\nimport { CUq } from \"./cUq\";\r\n\r\nexport class VUq extends View<CUq> {\r\n    protected isSysVisible = false;\r\n    protected tuidLinks: CLink[];\r\n    protected mapLinks: CLink[];\r\n    protected sheetLinks: CLink[];\r\n    protected actionLinks: CLink[];\r\n    protected queryLinks: CLink[];\r\n    protected bookLinks: CLink[];\r\n    protected historyLinks: CLink[];\r\n    protected pendingLinks: CLink[];\r\n\r\n    constructor(cUq: CUq) {\r\n        super(cUq);\r\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.entities;\r\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\r\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\r\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\r\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\r\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\r\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\r\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\r\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\r\n    }\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n    render(param?:any) {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {res, uq, error} = this.controller;\r\n        let linkItem = {\r\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \r\n            onClick: undefined, \r\n        };\r\n        let lists = [\r\n            {\r\n                header: res.tuid || 'TUID',\r\n                items: this.tuidLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.map || 'MAP',\r\n                items: this.mapLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.sheet || 'SHEET',\r\n                items: this.sheetLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.action || 'ACTION',\r\n                items: this.actionLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.query || 'QUERY',\r\n                items: this.queryLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.book || 'BOOK',\r\n                items: this.bookLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.history || 'HISTORY',\r\n                items: this.historyLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.pending || 'PENDING',\r\n                items: this.pendingLinks\r\n            }\r\n        ];\r\n        let content;\r\n        if (error !== undefined) {\r\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\r\n        }\r\n        else {\r\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\r\n                key={index}\r\n                className={cn}\r\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\r\n                items={items}\r\n                item={linkItem} />\r\n            );\r\n        }\r\n        return <>\r\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\r\n            {content}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { UqApi, Controller, UnitxApi, appInFrame, resLang, nav } from 'tonva-tools';\r\nimport { Entities, TuidMain, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending } from '../../entities';\r\nimport { CLink } from '../link';\r\nimport { CBook, BookUI } from '../book';\r\nimport { CSheet, SheetUI } from '../sheet';\r\nimport { ActionUI, CAction } from '../action';\r\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\r\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\r\nimport { MapUI, CMap } from '../map';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VUq } from './vUq';\r\nimport { CHistory, HistoryUI } from '../history';\r\nimport { CPending, PendingUI } from '../pending';\r\nimport { CApp } from '../CApp';\r\n\r\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\r\n\r\nexport interface UqUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    CMap?: typeof CMap;\r\n    CAction?: typeof CAction;\r\n    CSheet?: typeof CSheet;\r\n    CBook?: typeof CBook;\r\n    CHistory?: typeof CHistory;\r\n    CPending?: typeof CPending;\r\n    tuid?: {[name:string]: TuidUI};\r\n    sheet?: {[name:string]: SheetUI};\r\n    action?: {[name:string]: ActionUI};\r\n    map?: {[name:string]: MapUI};\r\n    query?: {[name:string]: QueryUI};\r\n    book?: {[name:string]: BookUI};    \r\n    history?: {[name:string]: HistoryUI};\r\n    pending?: {[name:string]: PendingUI};\r\n    res?: any;\r\n}\r\n\r\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\r\n    if (entities === undefined) return;\r\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\r\n}\r\n\r\nexport class CUq extends Controller /* implements Uq*/ {\r\n    private ui:any;\r\n    private CTuidMain: typeof CTuidMain;\r\n    private CTuidEdit: typeof CTuidEdit;\r\n    private CTuidList: typeof CTuidList;\r\n    private CTuidSelect: typeof CTuidSelect;\r\n    private CTuidInfo: typeof CTuidInfo;\r\n    private CQuery: typeof CQuery;\r\n    private CQuerySelect: typeof CQuerySelect;\r\n    private CMap: typeof CMap;\r\n    private CAction: typeof CAction;\r\n    private CSheet: typeof CSheet;\r\n    private CBook: typeof CBook;\r\n    private CHistory: typeof CHistory;\r\n    private CPending: typeof CPending;\r\n\r\n    constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\r\n        super(resLang(ui.res));\r\n        this.cApp = cApp;\r\n        this.uq = uq;\r\n        this.id = uqId;\r\n        // 每一个ui都转换成小写的key的版本\r\n        lowerPropertyName(ui.tuid);\r\n        lowerPropertyName(ui.sheet);\r\n        lowerPropertyName(ui.map);\r\n        lowerPropertyName(ui.query);\r\n        lowerPropertyName(ui.action);\r\n        lowerPropertyName(ui.book);\r\n        lowerPropertyName(ui.history);\r\n        lowerPropertyName(ui.pending);\r\n        this.ui = ui;\r\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\r\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\r\n        this.CTuidList = ui.CTuidList || CTuidList;\r\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\r\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\r\n        this.CQuery = ui.CQuery || CQuery;\r\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\r\n        this.CMap = ui.CMap || CMap;\r\n        this.CAction = ui.CAction || CAction;\r\n        this.CSheet = ui.CSheet || CSheet;\r\n        this.CBook = ui.CBook || CBook;\r\n        this.CHistory = ui.CHistory || CHistory;\r\n        this.CPending = ui.CPending || CPending;\r\n\r\n        let token = undefined;\r\n        let uqOwner:string, uqName:string;\r\n        let p = uq.split('/');\r\n        switch (p.length) {\r\n            case 1:\r\n                uqOwner = '$$$';\r\n                uqName = p[0];\r\n                break;\r\n            case 2:\r\n                uqOwner = p[0];\r\n                uqName = p[1];\r\n                break;\r\n            default:\r\n                console.log('uq must be uqOwner/uqName format');\r\n                return;\r\n        }\r\n\r\n        let hash = document.location.hash;\r\n        let baseUrl = hash===undefined || hash===''? \r\n            'debug/':'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        let uqApi:UqApi;\r\n        if (uq === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            uqApi = new UnitxApi(appInFrame.unit);\r\n        }\r\n        else {\r\n            uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\r\n        }\r\n        this.entities = new Entities(this, uqApi, appId);\r\n    }\r\n\r\n    protected async internalStart() {\r\n    }\r\n\r\n    cApp:CApp;\r\n    uq: string;\r\n    id: number;\r\n    res: any;\r\n    entities:Entities;\r\n    error: string;\r\n    private schemaLoaded:boolean = false;\r\n\r\n    protected async loadEntites() {\r\n        await this.entities.init();\r\n        await this.entities.loadAccess();\r\n    }\r\n\r\n    async loadSchema():Promise<string> {\r\n        try {\r\n            if (this.schemaLoaded === true) return;\r\n            await this.loadEntites();\r\n            if (this.id === undefined) this.id = this.entities.uqId;\r\n            for (let i in this.ui) {\r\n                let g = this.ui[i];\r\n                if (g === undefined) continue;\r\n                let {caption, collection} = g;\r\n                if (collection === undefined) continue;\r\n                for (let j in collection) {\r\n                    if (this.entities[i](j) === undefined) {\r\n                        console.warn(i + ':' + '\\'' + j + '\\' is not uq entity');\r\n                    }\r\n                }\r\n            }\r\n            this.schemaLoaded = true;\r\n            return;\r\n        }\r\n        catch(err) {\r\n            console.error(err);\r\n            return this.error = err;\r\n        }\r\n    }\r\n\r\n    async getQuerySearch(name:string):Promise<Query> {\r\n        let query = this.entities.query(name);\r\n        if (query === undefined) \r\n            alert(`QUERY ${name} 没有定义!`);\r\n        else {\r\n            await query.loadSchema();\r\n            let {returns} = query;\r\n            if (returns.length > 1) {\r\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\r\n            }\r\n        }\r\n        return query;\r\n    }\r\n    getTuidPlaceHolder(tuid:Tuid) {\r\n        let {tuidPlaceHolder, entity} = this.res;\r\n        let {name} = tuid;\r\n        let type:string;\r\n        if (entity !== undefined) {\r\n            let en = entity[name];\r\n            if (en !== undefined) {\r\n                type = en.label;\r\n            }\r\n        }\r\n        return (tuidPlaceHolder || 'Select');\r\n    }\r\n    getNone() {\r\n        let {none} = this.res;\r\n        return none || 'none';\r\n    }\r\n    protected isSysVisible = false;\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n\r\n    async navSheet(sheetTypeId:number, sheetId:number) {\r\n        let sheet = this.entities.sheetFromTypeId(sheetTypeId);\r\n        if (sheet === undefined) {\r\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\r\n            return;\r\n        }\r\n        let cSheet = this.cSheet(sheet);\r\n        await cSheet.startSheet(sheetId);\r\n    }\r\n\r\n    sheet(entityName:string) {return this.entities.sheet(entityName);}\r\n    action(entityName:string) {return this.entities.action(entityName);}\r\n    query(entityName:string) {return this.entities.query(entityName);}\r\n    book(entityName:string) {return this.entities.book(entityName);}\r\n    map(entityName:string) {return this.entities.map(entityName);}\r\n    history(entityName:string) {return this.entities.history(entityName);}\r\n    pending(entityName:string) {return this.entities.pending(entityName);}\r\n    tuid(entityName:string) {return this.entities.tuid(entityName)}\r\n    tuidDiv(entityName:string, divName:string) {\r\n        let tuid = this.entities.tuid(entityName);\r\n        if (tuid === undefined) return;\r\n        let {divs} = tuid;\r\n        if (divs === undefined) return;\r\n        return divs[divName];\r\n    }\r\n\r\n    cSheetFromName(entityName:string):CSheet {\r\n        let entity = this.entities.sheet(entityName);\r\n        if (entity !== undefined) return this.cSheet(entity);\r\n    }\r\n    cActionFromName(entityName:string) {\r\n        let entity = this.entities.action(entityName);\r\n        if (entity !== undefined) return this.cAction(entity);\r\n    }\r\n    cQueryFromName(entityName:string) {\r\n        let entity = this.entities.query(entityName);\r\n        if (entity !== undefined) return this.cQuery(entity);\r\n    }\r\n    cBookFromName(entityName:string) {\r\n        let entity = this.entities.book(entityName);\r\n        if (entity !== undefined) return this.cBook(entity);\r\n    }\r\n    cMapFromName(entityName:string) {\r\n        let entity = this.entities.map(entityName);\r\n        if (entity !== undefined) return this.cMap(entity);\r\n    }\r\n    cHistoryFromName(entityName:string) {\r\n        let entity = this.entities.history(entityName);\r\n        if (entity !== undefined) return this.cHistory(entity);\r\n    }\r\n    cPendingFromName(entityName:string) {\r\n        let entity = this.entities.pending(entityName);\r\n        if (entity !== undefined) return this.cPending(entity);\r\n    }\r\n    cTuidMainFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidMain(entity);\r\n    }\r\n    cTuidEditFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidEdit(entity);\r\n    }\r\n    cTuidInfoFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidInfo(entity);\r\n    }\r\n\r\n    cTuidSelectFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidSelect(entity);\r\n    }\r\n\r\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\r\n        switch (entityType) {\r\n            case 'sheet':\r\n                let sheet = this.entities.sheet(entityName);\r\n                if (sheet === undefined) return;\r\n                return this.cSheet(sheet);\r\n            case 'action':\r\n                let action = this.entities.action(entityName);\r\n                if (action === undefined) return;\r\n                return this.cAction(action);\r\n            case 'tuid':\r\n                let tuid = this.entities.tuid(entityName);\r\n                if (tuid === undefined) return;\r\n                return this.cTuidMain(tuid);\r\n            case 'query':\r\n                let query = this.entities.query(entityName);\r\n                if (query === undefined) return;\r\n                return this.cQuery(query);\r\n            case 'book':\r\n                let book = this.entities.book(entityName);\r\n                if (book === undefined) return;\r\n                return this.cBook(book);\r\n            case 'map':\r\n                let map = this.entities.map(entityName);\r\n                if (map === undefined) return;\r\n                return this.cMap(map);\r\n            case 'history':\r\n                let history = this.entities.history(entityName);\r\n                if (history === undefined) return;\r\n                return this.cHistory(history);\r\n            case 'pending':\r\n                let pending = this.entities.pending(entityName);\r\n                if (pending === undefined) return;\r\n                return this.cPending(pending);\r\n        }\r\n    }\r\n\r\n    linkFromName(entityType:EntityType, entityName:string) {\r\n        return this.link(this.cFromName(entityType, entityName));\r\n    }\r\n\r\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\r\n        let ui, res;\r\n        let {name, typeName} = t;\r\n        if (this.ui !== undefined) {\r\n            let tUI = this.ui[typeName];\r\n            if (tUI !== undefined) {\r\n                ui = tUI[name];\r\n            }\r\n        }\r\n        let {entity} = this.res;\r\n        if (entity !== undefined) {\r\n            res = entity[name];\r\n        }\r\n        return {ui: ui || {}, res: res || {} };\r\n    }\r\n\r\n    link(cEntity:CEntity<Entity, EntityUI>) {\r\n        return new CLink(cEntity);\r\n    }\r\n\r\n    get tuidLinks() {\r\n        return this.entities.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\r\n    }\r\n    cTuidMain(tuid:TuidMain):CTuidMain {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\r\n    }\r\n    cTuidEdit(tuid:TuidMain):CTuidEdit {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\r\n    }\r\n    cTuidList(tuid:TuidMain):CTuidList {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\r\n    }\r\n    cTuidSelect(tuid:Tuid):CTuidSelect {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid.owner || tuid);\r\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\r\n    }\r\n    cTuidInfo(tuid:TuidMain):CTuidInfo {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\r\n    }\r\n\r\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\r\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\r\n        //if (sheetUI !== undefined) ui = sheetUI;\r\n        //if (sheetRes !== undefined) res = sheetRes;\r\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\r\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\r\n    }\r\n    get sheetLinks() { \r\n        return this.entities.sheetArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cSheet(v))\r\n        });\r\n    }\r\n\r\n    cAction(action:Action):CAction {\r\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\r\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\r\n    }\r\n    get actionLinks() { \r\n        return this.entities.actionArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cAction(v))\r\n        });\r\n    }\r\n\r\n    cQuery(query:Query):CQuery {\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\r\n    }\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        let query = this.entities.query(queryName);\r\n        if (query === undefined) return;\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\r\n    }\r\n    get queryLinks() {\r\n        return this.entities.queryArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cQuery(v))\r\n        });\r\n    }\r\n    \r\n    cBook(book:Book):CBook {\r\n        let {ui, res} = this.getUI<Book, BookUI>(book);\r\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\r\n    }\r\n    get bookLinks() { \r\n        return this.entities.bookArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cBook(v))\r\n        });\r\n    }\r\n    \r\n    cHistory(history:History):CHistory {\r\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\r\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\r\n    }\r\n    get historyLinks() { \r\n        return this.entities.historyArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cHistory(v))\r\n        });\r\n    }\r\n    \r\n    cPending(pending:Pending):CPending {\r\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\r\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\r\n    }\r\n    get pendingLinks() { \r\n        return this.entities.pendingArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cPending(v))\r\n        });\r\n    }\r\n    \r\n    cMap(map:Map):CMap {\r\n        let {ui, res} = this.getUI<Map, MapUI>(map);\r\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\r\n    }\r\n    get mapLinks() { \r\n        return this.entities.mapArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cMap(v));\r\n        });\r\n    }\r\n\r\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\r\n        let {owner} = tuid;\r\n        if (owner === undefined) {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(tuid);\r\n            return (ui && ui.content) || PureJSONContent;\r\n        }\r\n        else {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(owner);\r\n            return (ui && ui.divs && ui.divs[tuid.name].content) || PureJSONContent;\r\n        }\r\n    }\r\n\r\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\r\n        let {owner} = tuid;\r\n        let c = this.cTuidInfo(owner || (tuid as TuidMain));\r\n        await c.start(id);\r\n    }\r\n\r\n    protected get VUq():typeof VUq {return VUq}\r\n\r\n    render() {\r\n        let v = new (this.VUq)(this);\r\n        return v.render();\r\n    }\r\n}\r\n\r\n","export * from './cUq';\r\nexport * from './vUq';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport className from 'classnames';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { tv } from '../../tools';\r\nimport { Map } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\r\nimport { PureJSONContent } from '../form/viewModel';\r\n\r\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\r\n    private isFrom: boolean;\r\n\r\n    async open(param?:any) {\r\n        this.isFrom = this.controller.isFrom;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    itemRender = (item:MapItem, index:number) => {\r\n        return <this.ItemRow item={item} />;\r\n    }\r\n\r\n    private ItemRow = observer(({item}: {item:MapItem}) => {\r\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\r\n        let keyUI = this.controller.keyUIs[keyIndex];\r\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\r\n        let add:any, remove:any;\r\n        if (this.isFrom === false) {\r\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\r\n                <FA name=\"plus\" />\r\n            </button>;\r\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\r\n                <FA className=\"text-info\" name=\"trash\" />\r\n            </button>;\r\n        }\r\n        let right:any;\r\n        if (isLeaf === false) {\r\n            if (keyIndex === 0)\r\n                right = add;\r\n            else\r\n                right = <>{remove} &nbsp; {add}</>;\r\n        }\r\n        else if (keyIndex > 0) {\r\n            right = remove;\r\n        }\r\n        let content:any, border:any, valuesView:any;\r\n        if (isLeaf === true) {\r\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\r\n            if (values) {\r\n                //valuesView = null; // 现在不显示values content了\r\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\r\n            }\r\n        }\r\n        else {\r\n            border = \"border-bottom\";\r\n            let none = keyNone && keyNone(this.x);\r\n            content = <List \r\n                className=\"ml-4\" \r\n                items={children} \r\n                item={{onClick:undefined, render:this.itemRender}}\r\n                none={none} />\r\n        }\r\n        let left = <div className=\"py-1 pr-3\">{tv(box, keyContent, this.x)}</div>;\r\n        return <div className=\"d-flex flex-column\">\r\n            <LMR className={className('px-3', 'py-2', border)}\r\n                left={left}\r\n                right={right}\r\n            >\r\n                <div className=\"py-1\">{valuesView}</div>\r\n            </LMR>\r\n            {content}\r\n        </div>;\r\n    });\r\n\r\n    protected get view() { return () => <Page header={this.label}>\r\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\r\n        </Page>\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { VEntity } from \"../CVEntity\";\r\nimport { MapUI, CMap } from \"./cMap\";\r\nimport { Map } from \"../../entities\";\r\nimport { Page } from \"tonva-tools\";\r\nimport { VForm } from '../form';\r\n\r\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\r\n    private vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onValuesSubmit);\r\n        this.openPageElement(<this.view />);\r\n    }\r\n\r\n    private onValuesSubmit = async () => {\r\n        this.ceasePage();\r\n        let values = this.vForm.getValues();\r\n        this.returnCall(values);\r\n    }\r\n\r\n    private view = () => {\r\n        return <Page>\r\n            {this.vForm.render()}\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Map, Tuid, BoxId, Field, TuidMain, fieldDefaultValue } from \"../../entities\";\r\nimport { VMapMain } from \"./vMain\";\r\nimport { observable } from \"mobx\";\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VInputValues } from './inputValues';\r\n\r\nexport interface MapKey {\r\n    content: (values, x?:any) => JSX.Element;\r\n    valuesContent?: (values, x?:any) => JSX.Element;\r\n    none?: (x:any)=>string;\r\n}\r\n\r\nexport interface MapUI extends EntityUI {\r\n    CMap?: typeof CMap;\r\n    keys?: MapKey[],\r\n}\r\n\r\nexport class MapItem {\r\n    parent: MapItem;\r\n    tuid: Tuid;\r\n    box: BoxId;\r\n    isLeaf: boolean;\r\n    keyIndex:number;\r\n    children: MapItem[] = observable.array([], {deep: true});\r\n    values: any;\r\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\r\n        this.parent = parent;\r\n        this.tuid = tuid;\r\n        this.box = box;\r\n        this.keyIndex = keyIndex;\r\n        this.isLeaf = false;\r\n    }\r\n}\r\n\r\nexport class CMap extends CEntity<Map, MapUI> {\r\n    isFrom: boolean;\r\n    items:MapItem[];\r\n    keyFields: Field[];\r\n    keyUIs: MapKey[];\r\n\r\n    protected async internalStart() {\r\n        let {keys, schemaFrom} = this.entity;\r\n        this.isFrom = schemaFrom !== undefined;\r\n        let q = this.entity.queries.all;\r\n        let result = await q.query({});\r\n        //let data = await this.entity.unpackReturns(res);\r\n        let ret = result.ret;\r\n        let keysLen = keys.length;\r\n        this.keyUIs = _.clone(this.ui.keys || []);\r\n        this.keyFields = [];\r\n        let retFields = q.returns[0].fields;\r\n        for (let i=0; i<keysLen; i++) {\r\n            this.keyFields.push(retFields[i]);\r\n            if (i >= this.keyUIs.length) {\r\n                this.keyUIs.push({\r\n                    content: PureJSONContent,\r\n                });\r\n            }\r\n        }\r\n        this.items = observable([]);\r\n        let item:MapItem = undefined;\r\n        for (let r of ret) {\r\n            let newItem = this.addItem(item, r);\r\n            if (newItem !== undefined) {\r\n                this.items.push(newItem);\r\n                item = newItem;\r\n            }\r\n        }\r\n\r\n        await this.openVPage(this.VMapMain);\r\n    }\r\n\r\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\r\n        let item = new MapItem(parent, tuid, box, keyIndex);\r\n        if (keyIndex === this.keyFields.length - 1) {\r\n            item.isLeaf = true;\r\n            item.values = values;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    addItem(item:MapItem, row:any):MapItem {\r\n        let ret:MapItem = undefined;\r\n        let keysLen = this.keyFields.length;\r\n        let p = item;\r\n        for (let i=0;i<keysLen;i++) {\r\n            let key = this.keyFields[i];\r\n            let {name} = key;\r\n            let tuid = key._tuid;\r\n            let val:BoxId = row[name];\r\n            if (val === undefined) break;\r\n            let {id} = val;\r\n            if (i === 0) {\r\n                if (id === 0) continue;\r\n                if (p === undefined || p.box.id !== id) {\r\n                    ret = p = this.createItem(undefined, tuid, val, i, row);\r\n                }\r\n                continue;\r\n            }\r\n            let {children, box} = p;\r\n            let len = children.length;\r\n            if (len > 0) {\r\n                let n = children[len-1];\r\n                if (n.box.id === id) {\r\n                    p = n;\r\n                    continue;\r\n                }\r\n            }\r\n            if (id > 0) {\r\n                children.push(p = this.createItem(p, tuid, val, i, row));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        let {_tuid, _ownerField} = keyField;\r\n        let cTuidSelect = this.cUq.cTuidSelect(_tuid);\r\n        let callParam = param;\r\n        if (_ownerField !== undefined) {\r\n            callParam = param[_ownerField.name];\r\n            if (typeof callParam === 'object') {\r\n                callParam = callParam.id;\r\n            }\r\n        }\r\n        let ret = await cTuidSelect.call(callParam);\r\n        return _tuid.getIdFromObj(ret);\r\n    }\r\n\r\n    addClick = async(item:MapItem) => {\r\n        let {keyIndex, children} = item;\r\n        let keysLen = this.keyFields.length;\r\n        let keysLast = keysLen-1;\r\n        let idx = keyIndex + 1;\r\n        if (idx >= keysLen) return;\r\n        let keyField = this.keyFields[idx];\r\n        let kn = keyField.name;\r\n        let tuid = keyField._tuid;\r\n        let searchParam = {} as any;\r\n        let data = {} as any;\r\n        for (let p=item;p!==undefined;p=p.parent) {\r\n            let {keyIndex:ki, box} = p;\r\n            let kn = this.keyFields[ki].name;\r\n            //searchParam[kn] = data['_' + kn] = box.id;\r\n            searchParam[kn] = data[kn] = box.id;\r\n        }\r\n\r\n        let id = await this.searchOnKey(keyField, searchParam);\r\n        if (id === undefined || id <= 0) return;\r\n        tuid.useId(id);\r\n        let idBox = tuid.boxId(id);\r\n        let arr1 = {} as any;\r\n        let values:any = {};\r\n        if (keyIndex+1===keysLast) {\r\n            tuid.useId(id);\r\n            //values[kn] = arr1['_' + kn] = idBox;\r\n            values[kn] = arr1[kn] = idBox;\r\n            if (this.entity.fields.length > 0) {\r\n                let ret = await this.vCall(VInputValues, data);\r\n                for (let i in ret) {\r\n                    //values[i] = arr1['_' + i] = ret[i];\r\n                    values[i] = arr1[i] = ret[i];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //values[kn] = data['_' + kn] = idBox;\r\n            values[kn] = data[kn] = idBox;\r\n            for (let i=idx+1;i<keysLast;i++) {\r\n                //data['_' + this.keyFields[i].name] = 0;\r\n                data[this.keyFields[i].name] = 0;\r\n            }\r\n            // 填map的key field 0 值\r\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\r\n            arr1[this.keyFields[keysLast].name] = 0;\r\n            let {fields} = this.entity;\r\n            for (let f of fields) {\r\n                let {name, type, null:nullable} = f;\r\n                if (!(nullable === true)) {\r\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\r\n                    arr1[f.name] = fieldDefaultValue(type);\r\n                }\r\n            }\r\n        }\r\n        data.arr1 = [arr1];\r\n        await this.entity.actions.add.submit(data);\r\n        let rowIndex = children.findIndex(v => v.box.id === id);\r\n        if (rowIndex < 0) {\r\n            children.push(this.createItem(item, tuid, idBox, idx, values));\r\n        }\r\n        else {\r\n            let {fields} = this.entity;\r\n            if (fields !== undefined && fields.length > 0) {\r\n                let row = children[rowIndex];\r\n                children.splice(rowIndex, 1);\r\n                row.values = values;\r\n                /*\r\n                for (let f of fields) {\r\n                    let {name:fn} = f;\r\n                    row.values[fn] = values[fn];\r\n                }*/\r\n                children.splice(rowIndex, 0, row);\r\n            }\r\n        }\r\n        this.removeCeased();\r\n    }\r\n\r\n    removeClick = async(item:MapItem) => {\r\n        let keyField = this.keyFields[item.keyIndex];\r\n        let tuid = keyField._tuid;\r\n        let cTuidMain = this.cUq.cTuidMain(tuid.Main as TuidMain);\r\n        let label = cTuidMain.getLable(tuid);\r\n        let confirmDelete:_.TemplateExecutor = \r\n            this.res.confirmDelete \r\n            || _.template('do you really want to remove ${label}?');\r\n        if (confirm(confirmDelete({label:label})) === false) return;\r\n        let map:Map = this.entity;\r\n        let data = {} as any;\r\n        let arr1 = data['arr1'] = [];\r\n        let v0 = {} as any;\r\n        arr1.push(v0);\r\n        for (let p=item; p!==undefined;p=p.parent) {\r\n            let ki=p.keyIndex;\r\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\r\n            v0[this.keyFields[ki].name] = p.box.id;\r\n        }\r\n        let len = this.keyFields.length;\r\n        for (let i=item.keyIndex+1; i<len; i++) {\r\n            let k = this.keyFields[i];\r\n            //v0['_'+k.name] = -1;\r\n            v0[k.name] = -1;\r\n        }\r\n        await map.actions.del.submit(data);\r\n        let children = item.parent.children;\r\n        let index = children.findIndex(v => v === item);\r\n        if (index >= 0) children.splice(index, 1);\r\n    }\r\n\r\n    protected get VMapMain():typeof VMapMain {return VMapMain}\r\n}\r\n","export * from './cMap';\r\nexport * from './vMain';\r\n","import * as React from 'react';\r\nimport { VPage, Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CAction, ActionUI } from './cAction';\r\nimport { Action } from '../../entities';\r\n\r\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\r\n    protected vForm: VForm;\r\n    protected returns: any;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.mainPage);\r\n    }\r\n\r\n    private onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        this.returns = await this.controller.submit(values);\r\n        this.closePage();\r\n        this.openPage(this.resultPage);\r\n    }\r\n\r\n    protected mainPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label}>\r\n            {this.vForm.render('mx-3 my-2')}\r\n        </Page>;\r\n    }\r\n\r\n    protected resultPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label} back=\"close\">\r\n            完成！\r\n            <pre>\r\n                {jsonStringify(this.returns)}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Action } from \"../../entities\";\r\nimport { VActionMain } from \"./vActionMain\";\r\n\r\nexport interface ActionUI extends EntityUI {\r\n    CAction?: typeof CAction;\r\n    //main: typeof VActionMain,\r\n}\r\n\r\nexport class CAction extends CEntity<Action, ActionUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VActionMain);\r\n    }\r\n\r\n    protected get VActionMain():typeof VActionMain {return VActionMain}\r\n\r\n    async submit(values:any) {\r\n        return this.entity.submit(values);\r\n    }\r\n}\r\n","export * from './cAction';\r\nexport * from './vActionMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, History, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CHistory, HistoryUI } from './cHistory';\r\n\r\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        History\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { History } from \"../../entities\";\r\nimport { VHistoryMain } from \"./vHistoryMain\";\r\n\r\nexport interface HistoryUI extends EntityUI {\r\n    CHistory?: typeof CHistory;\r\n    main: typeof VHistoryMain,\r\n}\r\n\r\nexport class CHistory extends CEntity<History, HistoryUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VHistoryMain);\r\n    }\r\n\r\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\r\n}\r\n","export * from './cHistory';\r\nexport * from './vHistoryMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, Pending, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CPending, PendingUI } from './cPending';\r\n\r\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        pending\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Pending } from \"../../entities\";\r\nimport { VPendingMain } from \"./vPendingMain\";\r\n\r\nexport interface PendingUI extends EntityUI {\r\n    CPending?: typeof CPending;\r\n    main: typeof VPendingMain,\r\n}\r\n\r\nexport class CPending extends CEntity<Pending, PendingUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VPendingMain);\r\n    }\r\n\r\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\r\n}\r\n","export * from './cPending';\r\nexport * from './vPendingMain';\r\n","\r\nimport {setCenterToken} from './uqApi';\r\nimport {WSChannel} from './wsChannel';\r\n\r\nexport const netToken = {\r\n    set(userId:number, token:string) {\r\n        setCenterToken(userId, token);\r\n        WSChannel.setCenterToken(token);\r\n    },\r\n    clear() {\r\n        setCenterToken(0, undefined);\r\n        WSChannel.setCenterToken(undefined);\r\n    }\r\n};\r\n","import {CenterApi} from '../net';\r\nimport {User, decodeUserToken} from '../user';\r\n//import { nav } from '../ui';\r\n\r\nexport class UserApi extends CenterApi {\r\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\r\n        //(params as any).device = nav.local.device.get();\r\n        let ret = await this.get('login', params);\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeUserToken(ret);\r\n            case 'object':\r\n                let token = ret.token;\r\n                let user = decodeUserToken(token);\r\n                let {nick, icon} = ret;\r\n                if (nick) user.nick = nick;\r\n                if (icon) user.icon = icon;\r\n                return user;\r\n        }\r\n        // !== undefined) return decodeToken(token);\r\n    }\r\n    async register(params: {\r\n        nick:string, \r\n        user:string, \r\n        pwd:string,\r\n        country:number, \r\n        mobile:number, \r\n        email:string,\r\n        verify:string,\r\n    }): Promise<any>\r\n    {\r\n        return await this.post('register', params);\r\n    }\r\n\r\n    async setVerify(account:string, type:'mobile'|'email') {\r\n        return await this.post('set-verify', {account:account, type:type});\r\n    }\r\n\r\n    async checkVerify(account:string, verify:string) {\r\n        return await this.post('check-verify', {account:account, verify:verify});\r\n    }\r\n\r\n    async isExists(account:string) {\r\n        return await this.get('is-exists', {account:account});\r\n    }\r\n\r\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email') {\r\n        return await this.post('reset-password', {account:account, password, verify, type});\r\n    }\r\n    \r\n    async userSetProp(prop:string, value:any) {\r\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\r\n    }\r\n}\r\n\r\nconst userApi = new UserApi('tv/user/', undefined);\r\n\r\nexport default userApi;\r\n","\r\nconst zero = '00000000000000';\r\nexport function left0(num:number, fix:number) {\r\n    if (num === undefined) return '';\r\n    let r = num.toString();\r\n    let len = fix - r.length;\r\n    if (len <= 0) return r;\r\n    return zero.substr(0, len) + r;\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {User} from '../user';\r\nimport {nav} from './nav';\r\nimport {Page} from './page';\r\nimport { isDevelopment } from '../net';\r\n\r\nexport abstract class Controller {\r\n    readonly res: any;\r\n    readonly x: any;\r\n    icon: string|JSX.Element;\r\n    label:string;\r\n    readonly isDev:boolean = isDevelopment;\r\n    get user():User {return nav.user}\r\n    get isLogined():boolean {\r\n        let {user} = nav;\r\n        if (user === undefined) return false;\r\n        return user.id > 0;\r\n    }\r\n    constructor(res:any) {\r\n        this.res = res || {};\r\n        this.x = this.res.x || {};\r\n    }\r\n\r\n    private receiveHandlerId:number;\r\n    private disposer:()=>void;\r\n\r\n    private dispose() {\r\n        // message listener的清理\r\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\r\n        this.onDispose();\r\n    }\r\n\r\n    protected onDispose() {\r\n    }\r\n\r\n    protected async openVPage<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp((this as any) as C)).open(param);\r\n    }\r\n\r\n    protected renderView<C extends Controller>(view: new (controller: C)=>View<C>, param?:any) {\r\n        return (new view((this as any) as C)).render(param);\r\n    }\r\n\r\n    async event(type:string, value:any) {\r\n        await this.onEvent(type, value);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n    }\r\n\r\n    protected msg(text:string) {\r\n        alert(text);\r\n    }\r\n    protected errorPage(header:string, err:any) {\r\n        this.openPage(<Page header=\"App error!\">\r\n            <pre>\r\n                {typeof err === 'string'? err : err.message}\r\n            </pre>\r\n        </Page>);\r\n    }\r\n\r\n    protected onMessage(message:any):Promise<void> {\r\n        return;\r\n    }\r\n\r\n    private onMessageReceive = async (message:any):Promise<void> => {\r\n        await this.onMessage(message);\r\n    }\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        /*\r\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n        console.log('return true');\r\n        */\r\n        return true;\r\n    }\r\n    protected registerReceiveHandler() {\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n    }\r\n\r\n    protected abstract internalStart(param?:any):Promise<void>;\r\n    async start(param?:any):Promise<void> {\r\n        this.disposer = this.dispose.bind(this);\r\n        this.registerReceiveHandler();\r\n        let ret = await this.beforeStart();\r\n        if (ret === false) return;\r\n        await this.internalStart(param);\r\n    }\r\n\r\n    get isCalling():boolean {return this._resolve_$ !== undefined}\r\n\r\n    private _resolve_$:((value:any) => void)[];\r\n    async call<T>(param?:any):Promise<T> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<T> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await this.start(param);\r\n        });\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await (new vp(this as any)).open(param);\r\n        });\r\n    }\r\n\r\n    returnCall(value:any) {\r\n        if (this._resolve_$ === undefined) return;\r\n        let resolve = this._resolve_$.pop();\r\n        if (resolve === undefined) {\r\n            alert('the Controller call already returned, or not called');\r\n            return;\r\n        }\r\n        resolve(value);\r\n    }\r\n\r\n    openPage(page:JSX.Element) {\r\n        nav.push(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    replacePage(page:JSX.Element) {\r\n        nav.replace(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    backPage() {\r\n        nav.back();\r\n    }\r\n\r\n    closePage(level?:number) {\r\n        nav.pop(level);\r\n    }\r\n\r\n    ceasePage(level?:number) {\r\n        nav.ceaseTop(level);\r\n    }\r\n\r\n    removeCeased() {\r\n        nav.removeCeased();\r\n    }\r\n\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        nav.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\n\r\nexport abstract class View<C extends Controller> {\r\n    protected controller: C;\r\n    protected readonly res: any;\r\n    protected readonly x: any;\r\n\r\n    constructor(controller: C) {\r\n        this.controller = controller;\r\n        this.res = controller.res;\r\n        this.x = controller.x;\r\n    }\r\n\r\n    protected get isDev() {return isDevelopment}\r\n\r\n    abstract render(param?:any): JSX.Element;\r\n\r\n    protected renderVm(vm: new (controller: C)=>View<C>, param?:any) {\r\n        return (new vm(this.controller)).render(param);\r\n    }\r\n\r\n    protected async openVPage(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp(this.controller)).open(param);\r\n    }\r\n\r\n    protected async event(type:string, value?:any) {\r\n        /*\r\n        if (this._resolve_$_ !== undefined) {\r\n            await this._resolve_$_({type:type, value:value});\r\n            return;\r\n        }*/\r\n        await this.controller.event(type, value);\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        return await this.controller.vCall(vp, param);\r\n    }\r\n\r\n    protected returnCall(value:any) {\r\n        this.controller.returnCall(value);\r\n    }\r\n\r\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.openPage(React.createElement(view, param));\r\n    }\r\n\r\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.replacePage(React.createElement(view, param));\r\n    }\r\n\r\n    protected openPageElement(page: JSX.Element) {\r\n        this.controller.openPage(page);\r\n    }\r\n\r\n    protected replacePageElement(page: JSX.Element) {\r\n        this.controller.replacePage(page);\r\n    }\r\n\r\n    protected backPage() {\r\n        this.controller.backPage();\r\n    }\r\n\r\n    protected closePage(level?:number) {\r\n        this.controller.closePage(level);\r\n    }\r\n\r\n    protected ceasePage(level?:number) {\r\n        this.controller.ceasePage(level);\r\n    }\r\n\r\n    protected removeCeased() {\r\n        this.controller.removeCeased();\r\n    }\r\n\r\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.controller.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\nexport abstract class VPage<C extends Controller> extends View<C> {\r\n    abstract open(param?:any):Promise<void>;\r\n\r\n    render(param?:any):JSX.Element {return null;}\r\n}\r\n\r\nexport type TypeVPage<C extends Controller> = new (controller: C)=>VPage<C>;\r\n\r\n","export * from './schema';\r\nexport * from './uiSchema';\r\n","\r\nexport const mobileRegex = /^[0-9]*$/;\r\nexport const emailRegex = /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\r\n// /^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/\r\n\r\nexport const EmailFieldRule = (value:any): string|string[] => {\r\n    if (emailRegex.test(value as string) === false) return '电子邮件格式错误';\r\n}\r\n\r\nexport const MobileFieldRule = (value:any): string|string[] => {\r\n    if (emailRegex.test(value as string) === false) return '手机格式错误';\r\n}\r\n","import {observable, IObservableArray, computed} from 'mobx';\r\nimport {uid} from './uid';\r\n\r\nexport abstract class PageItems<T> {\r\n    constructor(itemObservable:boolean = false) {\r\n        this._items = observable.array<T>([], {deep:itemObservable});\r\n    }\r\n    private isFirst: boolean = true;\r\n    @observable loading: boolean = false;\r\n    @observable private beforeLoad: boolean = true;\r\n    @observable protected loaded: boolean = false;\r\n    protected _items:IObservableArray<T>;\r\n    @observable allLoaded: boolean = false;\r\n    @computed get items():IObservableArray<T> {\r\n        if (this.beforeLoad === true) return null;\r\n        if (this.loaded === false) return undefined;\r\n        return this._items;\r\n    }\r\n\r\n    @observable topDiv:string;\r\n    @observable bottomDiv:string;\r\n    scrollToTop() {\r\n        this.topDiv = '$$'+uid();\r\n    }\r\n    scrollToBottom() {\r\n        this.bottomDiv = '$$'+uid();\r\n    }\r\n\r\n    protected param: any;\r\n    protected firstSize = 100;\r\n    protected pageStart = undefined;\r\n    protected pageSize = 30;\r\n    protected appendPosition:'head'|'tail' = 'tail';\r\n\r\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\r\n    protected abstract setPageStart(item:T);\r\n\r\n    reset() {\r\n        this.isFirst = true;\r\n        this.beforeLoad = true;\r\n        this.loaded = false;\r\n        this.param = undefined;\r\n        this.allLoaded = false;\r\n        this._items.clear();\r\n        this.setPageStart(undefined);\r\n    }\r\n\r\n    append(item:T) {\r\n        if (this.appendPosition === 'tail')\r\n            this._items.unshift(item);\r\n        else\r\n            this._items.push(item);\r\n    }\r\n\r\n    async first(param:any):Promise<void> {\r\n        this.reset();\r\n        this.beforeLoad = false;\r\n        this.param = param;\r\n        await this.more();        \r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        if (this.loading === true) return;\r\n        this.loading = true;\r\n        let pageSize = this.pageSize + 1;\r\n        if (this.isFirst === true) {\r\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\r\n        }\r\n        let ret = await this.load(\r\n                this.param, \r\n                this.pageStart,\r\n                pageSize);\r\n        this.loading = false;\r\n        this.loaded = true;\r\n        let len = ret.length;\r\n        if (this.isFirst===true && len>this.firstSize ||\r\n            this.isFirst===false && len>this.pageSize)\r\n        {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len === 0) {\r\n            this._items.clear();\r\n            return;\r\n        }\r\n        this.setPageStart(ret[len-1]);\r\n        if (this.appendPosition === 'tail')\r\n            this._items.push(...ret);\r\n        else\r\n            this._items.unshift(...ret.reverse());\r\n        this.isFirst = false;\r\n    }\r\n}\r\n","import {observable, computed} from 'mobx';\r\n\r\nexport interface Id {\r\n    id: number;\r\n}\r\n\r\nexport abstract class CacheIds<T extends Id> {\r\n    constructor(maxCount:number = 100) {\r\n        this.maxCount = maxCount;\r\n    }\r\n    private maxCount:number;\r\n    private arr:T[] = [];\r\n    @observable dict = new Map<number, T>();\r\n\r\n    loadIds(ids:number[]) {\r\n        let arr:number[] = [];\r\n        for (let id of ids) {\r\n            if (id === null) continue;\r\n            let item = this.dict.get(id);\r\n            if (item === undefined) {\r\n                arr.push(id);\r\n                item = {id:id} as T;\r\n                this.dict.set(id, item);\r\n            }\r\n        }                \r\n        this.loadId(arr);\r\n    }\r\n\r\n    get(id:number):T {\r\n        if (id === undefined || id === null) return null;\r\n        let item = this.dict.get(id);\r\n        if (item === undefined) {\r\n            this.dict.set(id, {id:id} as T);\r\n            this.loadId([id]);\r\n            item = this.dict.get(id);\r\n        }\r\n        return item;\r\n    }\r\n    private setItem(id:number, item:T) {\r\n        if (item === undefined) {\r\n            this.dict.set(id, null);\r\n            this.arr.push({id: id} as T);\r\n        }\r\n        else {\r\n            this.dict.set(id, item);\r\n            this.arr.push(item);\r\n        }\r\n        if (this.arr.length > this.maxCount) {\r\n            item = this.arr.shift();\r\n            this.dict.delete(item.id);\r\n        }\r\n    }\r\n    private async loadId(ids:number[]) {\r\n        let items = await this._loadIds(ids);\r\n        if (items === undefined) {\r\n            for (let id of ids) {\r\n                if (id === null) continue;\r\n                let item = await this._loadId(id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n        else {\r\n            for (let id of ids) {\r\n                let item = items.find(v => v.id === id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\r\n    protected abstract async _loadId(id:number):Promise<T>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {FormView, FormProps} from './formView';\r\n\r\nexport function tonvaDebug() {\r\n    let a = 0;\r\n}\r\n\r\nexport interface TonvaFormProps extends FormProps {\r\n    className?: string;\r\n    initValues?: any;\r\n}\r\n\r\n@observer \r\nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\r\n    formView: FormView;\r\n    constructor(props:TonvaFormProps) {\r\n        super(props);\r\n        this.formView = new FormView(this.props);\r\n    }\r\n    componentWillMount() {\r\n        this.formView.setInitValues(this.props.initValues);\r\n    }\r\n    debug() {\r\n        let s = null;\r\n    }\r\n    render() {\r\n        let {className, children, initValues} = this.props;\r\n        return <div className={className}>\r\n            {\r\n                children === undefined? \r\n                    this.formView.render() : \r\n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport interface Action {\r\n    icon?: string;\r\n    caption?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface DropdownActionsProps {\r\n    icon?: string;\r\n    actions: Action[];\r\n    isRight?: boolean;\r\n}\r\n\r\nexport interface DropdownActionsState {\r\n    dropdownOpen: boolean;\r\n}\r\n\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    private menu: HTMLDivElement;\r\n    private button: HTMLElement;\r\n    constructor(props:DropdownActionsProps) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('click', this.handleDocumentClick);\r\n        document.addEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleDocumentClick);\r\n        document.removeEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    private handleDocumentClick = (evt:any) => {\r\n        if (this.state.dropdownOpen === false) return;\r\n        if (this.button && this.button.contains(evt.target)) return;\r\n        if (!this.menu) return;\r\n        //if (!this.menu.contains(evt.target)) \r\n        this.toggle();\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        let {dropdownOpen} = this.state;\r\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\r\n        return <div className=\"dropdown\">\r\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={dropdownOpen}\r\n                onClick={this.toggle}>\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </button>\r\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\r\n                {\r\n                    actions.map((v,index) => {\r\n                        let {icon, caption, action} = v;\r\n                        if (icon === undefined && caption === undefined) \r\n                            return <div className=\"dropdown-divider\" />;\r\n                        let i:any;\r\n                        if (hasIcon === true) {\r\n                            if (icon !== undefined) icon = 'fa-' + icon;\r\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                        }\r\n                        if (action === undefined) \r\n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n/*\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right={isRight}>\r\n                {actions.map((v,index) => {\r\n                    let {icon, caption, action} = v;\r\n                    if (icon === undefined && caption === undefined) \r\n                        return <div className=\"dropdown-divider\" />;\r\n                    let i;\r\n                    if (hasIcon === true) {\r\n                        if (icon !== undefined) icon = 'fa-' + icon;\r\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                    }\r\n                    if (action === undefined) \r\n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\r\n                })}\r\n            </DropdownMenu>\r\n        </UncontrolledButtonDropdown>\r\n    }\r\n}\r\n*/","import * as React from 'react';\r\n\r\nexport interface EasyDateProps {\r\n    date: Date | string;\r\n}\r\n\r\nexport class EasyDate extends React.Component<EasyDateProps> {\r\n    render() {\r\n        let {date} = this.props;\r\n        if (!date) return null;\r\n        let d = (typeof date === 'string')? new Date(Date.parse(date)) : date;\r\n        let now = new Date();\r\n        let tick = now.getTime() - d.getTime();\r\n        let nDate=now.getDate();\r\n        let _date=d.getDate(), hour=d.getHours(), minute=d.getMinutes(), month=d.getMonth()+1;\r\n        let hm = hour + ((minute<10?':0':':') + minute);\r\n        if (tick < -24*3600*1000) return d.getFullYear()+'年'+month+'月'+_date+'日 ' + hm;\r\n        if (tick < 24*3600*1000) {\r\n            return _date!==nDate? \r\n                (tick < 0? '明天 ' : '昨天 ') + hm \r\n                : hm;\r\n        }\r\n        if (tick < 365*24*3600*1000) {\r\n            return month+'月'+_date+'日 ';\r\n        }\r\n        return d.getFullYear()+'年'+month+'月'+_date+'日';\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Image } from 'tonva-tools';\r\n\r\nexport interface MediaProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    discription?: string | JSX.Element;\r\n    px?: number;\r\n    py?: number;\r\n}\r\n\r\nexport class Media extends React.Component<MediaProps> {\r\n    render() {\r\n        let {icon, main, discription, px, py} = this.props;\r\n        let disp:any;\r\n        if (typeof discription === 'string')\r\n            disp = <div>{discription}</div>;\r\n        else\r\n            disp = discription;\r\n        let cn = classNames(\r\n            'media', \r\n            px===undefined? 'px-0':'px-'+px, \r\n            py===undefined? 'py-2':'py-'+py);\r\n        return <div className={cn}>\r\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\r\n            <div className=\"media-body\">\r\n                <h5 className=\"mt-0\">{main}</h5>\r\n                {disp}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\n\r\nexport interface SearchBoxProps {\r\n    className?: string;\r\n    label?: string;\r\n    initKey?: string;\r\n    placeholder?: string;\r\n    buttonText?: string;\r\n    maxLength?: number;\r\n    size?: 'sm' | 'md' | 'lg';\r\n    inputClassName?: string;\r\n    onSearch: (key:string)=>Promise<void>;\r\n    onFocus?: ()=>void;\r\n    allowEmptySearch?: boolean;\r\n}\r\n\r\n/*\r\nexport interface SearchBoxState {\r\n    disabled: boolean;\r\n}*/\r\n\r\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\r\n    private input: HTMLInputElement;\r\n    private key: string = null;\r\n    @observable private disabled: boolean;\r\n\r\n    private onChange = (evt: React.ChangeEvent<any>) => {\r\n        this.key = evt.target.value;\r\n        if (this.key !== undefined) {\r\n            this.key = this.key.trim();\r\n            if (this.key === '') this.key = undefined;\r\n        }\r\n        if (this.props.allowEmptySearch !== true) {\r\n            this.disabled = !this.key;\r\n        }\r\n    }\r\n    private onSubmit = async (evt: React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n        if (this.key === null) this.key = this.props.initKey || '';\r\n        if (this.props.allowEmptySearch !== true) {\r\n            if (!this.key) return;\r\n            if (this.input) this.input.disabled = true;\r\n        }\r\n        await this.props.onSearch(this.key);\r\n        if (this.input) this.input.disabled = false;\r\n    }\r\n    clear() {\r\n        if (this.input) this.input.value = '';\r\n    }\r\n    render() {\r\n        let {className, inputClassName, onFocus,\r\n            label, placeholder, buttonText, maxLength, size} = this.props;\r\n        let inputSize:string;\r\n        switch (size) {\r\n            default:\r\n            case 'sm': inputSize = 'input-group-sm'; break;\r\n            case 'md': inputSize = 'input-group-md'; break;\r\n            case 'lg': inputSize = 'input-group-lg'; break;\r\n        }\r\n        let lab:any;\r\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\r\n        return <form className={className} onSubmit={this.onSubmit} >\r\n            <div className={classNames(\"input-group\", inputSize)}>\r\n                {lab}\r\n                <input ref={v=>this.input=v} onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"key\"\r\n                    onFocus={onFocus}\r\n                    className={classNames('form-control', inputClassName || 'border-primary')}\r\n                    placeholder={placeholder}\r\n                    defaultValue={this.props.initKey}\r\n                    maxLength={maxLength} />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        disabled={this.disabled}>\r\n                        <i className='fa fa-search' />\r\n                        <i className=\"fa\"/>\r\n                        {buttonText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport className from 'classnames';\r\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\r\n\r\nexport interface Step {\r\n    formRows: FormRow[];\r\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\r\n    ex?: any;                                   // 每一步额外的参数\r\n}\r\n\r\nexport interface MultiStepProps {\r\n    className?: string;\r\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    steps: {[name:string]: Step};\r\n    first: string;         // 第一步的名字\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n}\r\n\r\nexport interface StepView {\r\n    stepName: string;\r\n    step: Step;\r\n    props: FormProps;\r\n    //view: JSX.Element;\r\n}\r\nexport interface MultiStepState {\r\n    //num: number;\r\n    //step: Step;\r\n    //formView: FormView;\r\n    topView: StepView;\r\n    stepViews: StepView[];\r\n}\r\n\r\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\r\n    private values: any = {};\r\n    private stepViews: StepView[] = [];\r\n    private topView: StepView;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topView: undefined,\r\n            stepViews: [],\r\n        }\r\n        this.onPrev = this.onPrev.bind(this);\r\n        this.onNext = this.onNext.bind(this);\r\n    }\r\n    \r\n    private setStep(stepName: string) {\r\n        let step = this.props.steps[stepName];\r\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\r\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\r\n        let otherButton, onOther;\r\n        if (this.stepViews.length > 0) {\r\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\r\n            onOther = this.onPrev;\r\n        }\r\n        let {header, footer} = this.props;\r\n        let btnContent = step.next === undefined?\r\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\r\n            {suffix: 'arrow-right', text: '下一步'}\r\n        let formProps = {\r\n            formRows: step.formRows,\r\n            submitButton: <ButtonConten {...btnContent} />,\r\n            onSubmit: this.onNext,\r\n            otherButton: otherButton,\r\n            onOther: onOther,\r\n        };\r\n        let num = this.stepViews.length + 1;\r\n        this.topView = {\r\n            stepName: stepName,\r\n            step: step,\r\n            props: formProps,\r\n        };\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        this.setStep(this.props.first);\r\n    }\r\n    private onPrev(values:any) {\r\n        _.assign(this.values, values);\r\n        this.topView = this.stepViews.pop();\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    private onNext(values:any): Promise<SubmitResult|undefined> {\r\n        _.assign(this.values, values);\r\n        //let {num, step} = this.state;\r\n        let {next} = this.topView.step;\r\n        if (next === undefined) {\r\n            return this.props.onSubmit(this.values)\r\n        }\r\n        let nextStepName:string;\r\n        if (typeof next === 'string') {\r\n            nextStepName = next;\r\n        }\r\n        else {\r\n            nextStepName = next(this.values);\r\n        }\r\n        this.setStep(nextStepName);\r\n    }\r\n    render() {\r\n        let {className, header, footer} = this.props;\r\n        let {topView, stepViews} = this.state;\r\n        let {stepName, step} = topView;\r\n        let hidden = {visibility: 'hidden'};\r\n        let num = stepViews.length + 1;\r\n        return <div className={className}>\r\n            <div>\r\n                {header && header(step, num)}\r\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\r\n                {footer && footer(step, num)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\r\n    let {prefix, text, suffix} = props;\r\n    let pIcon, sIcon;\r\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\r\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\r\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\r\n}\r\n    \r\n","import _ from 'lodash';\r\nimport { Context } from '../context';\r\nimport { FormRes } from '../formRes';\r\n\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any):void;\r\n}\r\n\r\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\r\nexport type FieldRule = (value:any) => string[] | string;\r\n\r\nexport class RuleCustom extends Rule {\r\n    private func: FieldRule;\r\n    constructor(func: FieldRule) {\r\n        super();\r\n        this.func = func;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        let ret = this.func(value);\r\n        if (ret === undefined) return;\r\n        switch (typeof ret) {\r\n            case 'undefined': return;\r\n            case 'string': defy.push(ret as string); return;\r\n            default: defy.push(...ret); return;\r\n        }        \r\n    }\r\n}\r\n\r\nexport abstract class RulePredefined extends Rule {\r\n    protected res: FormRes;\r\n    constructor(res: FormRes) {\r\n        super();\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class RuleRequired extends RulePredefined {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push(this.res.required);\r\n    }\r\n}\r\n\r\nexport class RuleNum extends RulePredefined {\r\n    private minMsg: _.TemplateExecutor;\r\n    private maxMsg: _.TemplateExecutor;\r\n    protected min: number;\r\n    protected max: number\r\n    constructor(res: FormRes, min?: number, max?: number) {\r\n        super(res);\r\n        this.minMsg = _.template(res.min);\r\n        this.maxMsg = _.template(res.max);\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) {\r\n            defy.push(this.res.number);\r\n        }\r\n        else {\r\n            this.checkMore(defy, n);\r\n        }\r\n    }\r\n\r\n    protected checkMore(defy:string[], value: number) {\r\n        if (this.min !== undefined && Number(value) < this.min) {\r\n            defy.push(this.minMsg({min:this.min}));\r\n        }\r\n        if (this.max !== undefined && Number(value) > this.max) {\r\n            defy.push(this.maxMsg({max:this.max}));\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleInt extends RuleNum {\r\n    protected checkMore(defy:string[], n: number) {\r\n        super.checkMore(defy, n);\r\n        if (Number.isInteger(n) === false) {\r\n            defy.push(this.res.integer);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { ItemSchema } from '../../schema';\r\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\r\nimport { computed, observable, reaction } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Widget {\r\n    protected name: string;\r\n    protected context: Context;\r\n    protected fieldProps:FieldProps;\r\n    protected children: React.ReactNode;\r\n    protected itemSchema: ItemSchema;\r\n    protected ui: UiItem;\r\n    protected defaultValue: any;\r\n    protected value: any;\r\n    protected rules: Rule[];\r\n    @observable protected errors: string[] = [];\r\n    @observable protected contextErrors: string[] = [];\r\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\r\n    protected readOnly:boolean;\r\n    protected disabled:boolean;\r\n    @observable visible:boolean;\r\n\r\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\r\n        this.context = context;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.itemSchema = itemSchema;\r\n        this.fieldProps = fieldProps;\r\n        this.children = children;\r\n        this.ui = context.getUiItem(name);\r\n        if (this.ui === undefined) {\r\n            this.readOnly = false;\r\n            this.disabled = false;\r\n            this.visible = true;\r\n        }\r\n        else {\r\n            let {readOnly, disabled, visible} = this.ui;\r\n            this.readOnly = (readOnly === true);\r\n            this.disabled = (disabled === true);\r\n            this.visible = !(visible === false);            \r\n        }\r\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\r\n        this.init();\r\n    }\r\n\r\n    protected init() {\r\n        this.rules = [];\r\n        if (this.itemSchema.required === true) {\r\n            this.rules.push(new RuleRequired(this.context.form.res));\r\n        }\r\n        this.buildRules();\r\n        if (this.ui === undefined) return;\r\n        let {rules} = this.ui;\r\n        if (rules === undefined) return;\r\n        if (Array.isArray(rules) === false) {\r\n            this.rules.push(new RuleCustom(rules as FieldRule));\r\n            return;\r\n        }\r\n        for (let rule of rules as FieldRule[]) {\r\n            this.rules.push(new RuleCustom(rule));\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n    }\r\n\r\n    checkRules() {\r\n        let defy:string[] = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        if (defy.length === 0) {\r\n            this.context.removeErrorWidget(this);\r\n        }\r\n        else {\r\n            this.context.addErrorWidget(this);\r\n            this.errors.push(...defy);\r\n        }\r\n    }\r\n\r\n    @computed get isOk() {\r\n        return this.errors.length ===0;\r\n    }\r\n\r\n    setError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.errors.push(err);\r\n        else this.errors.push(...err);\r\n    }\r\n\r\n    setContextError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.contextErrors.push(err);\r\n        else this.contextErrors.push(...err);\r\n    }\r\n\r\n    clearError() {\r\n        this.errors.splice(0);\r\n    }\r\n\r\n    clearContextError() {\r\n        this.contextErrors.splice(0);\r\n    }\r\n\r\n    protected parse(value:any):any {return value}\r\n\r\n    protected setElementValue(value:any) {}\r\n    protected setDataValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        this.context.initData[this.name] = this.value = this.parse(value);\r\n    }\r\n\r\n    setValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        //this.setDataValue(value);\r\n        //this.setElementValue(value);\r\n        this.changeValue(value, false);\r\n    }\r\n\r\n    getValue() {\r\n        return this.context.getValue(this.name);\r\n    }\r\n\r\n    getReadOnly():boolean {return this.readOnly}\r\n    getDisabled():boolean {return this.disabled}\r\n    getVisible():boolean {return this.visible}\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}\r\n    setVisible(value:boolean) {this.visible = value}\r\n\r\n    private isChanging: boolean;\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n\r\n    protected changeValue(newValue: any, fromElement: boolean) {\r\n        let prev = this.value;\r\n        let onChanging: ChangingHandler;\r\n        let onChanged: ChangedHandler;\r\n        if (this.ui !== undefined) {\r\n            onChanging = this.ui.onChanging;\r\n            onChanged = this.ui.onChanged;\r\n        }\r\n        let allowChange = true;\r\n        if (onChanging !== undefined) {\r\n            this.isChanging = true;\r\n            allowChange = onChanging(this.context, this.value, prev);\r\n            this.isChanging = false;\r\n        }\r\n        if (allowChange === true) {\r\n            this.setDataValue(newValue);\r\n            if (fromElement !== true) this.setElementValue(newValue);\r\n            if (onChanged !== undefined) {\r\n                this.isChanging = true;\r\n                onChanged(this.context, this.value, prev);\r\n                this.isChanging = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get className():string {\r\n        let fieldClass:string;\r\n        if (this.context.inNode === false) fieldClass = 'form-control';\r\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\r\n    }\r\n\r\n    protected abstract render():JSX.Element;\r\n\r\n    container = observer(():JSX.Element => {\r\n        if (this.visible === false) return null;\r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        let label:any = this.label;\r\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\r\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\r\n        }\r\n        return form.FieldContainer(label, this.render());\r\n    })\r\n\r\n    protected get label():string {\r\n        let label:any;\r\n        if (this.ui === undefined) {\r\n            label = this.name;\r\n        }\r\n        else {\r\n            let uiLabel = this.ui.label;\r\n            if (uiLabel === null) label = null;\r\n            else label = uiLabel || this.name;\r\n        }\r\n        return label;\r\n    }\r\n\r\n    protected renderTemplet():JSX.Element | undefined {\r\n        if (this.children !== undefined) {\r\n            return <>{this.children}</>;\r\n        }\r\n        if (this.ui === undefined) return undefined;\r\n        let {Templet} = this.ui;\r\n        if (typeof Templet === 'function') return Templet(this.value);\r\n        return Templet;\r\n    }\r\n\r\n    protected renderErrors() {\r\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\r\n        if (errorList.length === 0) return null;\r\n        let {inNode} = this.context;\r\n        let tag = inNode === true? 'span' : 'div';\r\n        return errorList.map(err => React.createElement(tag, \r\n            {\r\n                key: err, \r\n                className: 'text-danger d-inline-block my-2 ml-3'\r\n            },\r\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\r\n        ));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextItem, StringSchema } from '../../schema';\r\n\r\nexport class TextWidget extends Widget {\r\n    protected inputType = 'text';\r\n    protected ui: UiTextItem;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected setElementValue(value:any) {\r\n        if (this.input === null) return;\r\n        this.input.value = value;\r\n    }\r\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\r\n    protected onKeyDown = async (evt:React.KeyboardEvent<HTMLInputElement>) => {\r\n        this.internalOnKeyDown(evt);\r\n        if (evt.keyCode !== 13) return;\r\n        let {onEnter} = this.context.form.props;\r\n        if (onEnter === undefined) return;\r\n\r\n        this.changeValue(evt.currentTarget.value, true);\r\n\r\n        //this.checkRules();\r\n        //this.context.checkContextRules();\r\n        this.input.blur();\r\n\r\n        let ret = await onEnter(this.name, this.context);\r\n        if (ret !== undefined) {\r\n            this.context.setError(this.name, ret);\r\n        }\r\n    }\r\n\r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n    }\r\n\r\n    protected onBlur(evt: React.FocusEvent<any>) {\r\n        this.onInputChange(evt);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n    }\r\n    protected onFocus(evt: React.FocusEvent<any>) {\r\n        this.clearError();\r\n        this.context.removeErrorWidget(this);\r\n        this.context.clearErrors();\r\n    }\r\n    protected onChange(evt: React.ChangeEvent<any>) {\r\n    }\r\n\r\n    setReadOnly(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.readOnly = this.readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.disabled = this.disabled = value;\r\n    }\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {\r\n            //'form-control': true,\r\n        };\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, cn)}\r\n            type={this.inputType}\r\n            defaultValue={this.value}\r\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\r\n            placeholder={this.placeholder}\r\n            readOnly={this.readOnly}\r\n            disabled={this.disabled}\r\n            onKeyDown = {this.onKeyDown}\r\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\r\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\r\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\nimport { RuleNum, RuleInt } from '../rules';\r\nimport { NumBaseSchema } from '../../schema';\r\n\r\nexport class NumberWidget extends TextWidget {\r\n    protected inputType = 'number';\r\n    protected itemSchema: NumBaseSchema;\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        let res = this.context.form.res;\r\n        let {min, max} = this.itemSchema;\r\n        this.rules.push(\r\n            this.itemSchema.type === 'integer'?\r\n                new RuleNum(res, min, max) :\r\n                new RuleInt(res, min, max)\r\n        );\r\n        /*\r\n        if (this.itemSchema.type === 'integer') {\r\n            this.rules.push(new RuleInt);\r\n        }\r\n        let {min, max} = this.itemSchema;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n        */\r\n    }\r\n\r\n    protected parse(value:any):any {\r\n        if (value === undefined || value === null) return;\r\n        return Number(value);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { NumberWidget } from './numberWidget';\r\n\r\nexport class UpdownWidget extends NumberWidget {\r\n    protected inputType = 'number';\r\n\r\n    protected isValidKey(key:number):boolean {\r\n        return key===46 || key===8 || key===37 || key===39\r\n            || key>=48 && key<=57\r\n            || key>=96 && key<=105\r\n            || key===109 || key===189;\r\n    }\r\n    \r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n        let key = evt.keyCode;\r\n        event.returnValue = this.isValidKey(key);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class DateWidget extends TextWidget {\r\n    protected inputType = 'date';\r\n}\r\n\r\nexport class DateTimeWidget extends TextWidget {\r\n    protected inputType = 'datetime';\r\n}\r\n\r\nexport class TimeWidget extends TextWidget {\r\n    protected inputType = 'time';\r\n}\r\n\r\nexport class MonthWidget extends TextWidget {\r\n    protected inputType = 'month';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiCheckItem } from '../../schema';\r\n\r\nexport class CheckBoxWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiCheckItem;\r\n    protected trueValue: any;\r\n    protected falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        if (this.ui !== undefined) {\r\n            let {trueValue, falseValue} = this.ui;\r\n            if (trueValue === undefined) this.trueValue = true;\r\n            else this.trueValue = trueValue;\r\n            if (falseValue === undefined) this.falseValue = false;\r\n            else this.falseValue = falseValue;\r\n        }\r\n        else {\r\n            this.trueValue = true;\r\n            this.falseValue = false;\r\n        }\r\n    }\r\n    protected setElementValue(value:any) {\r\n        this.input.checked = value === this.trueValue;\r\n    }\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\r\n    }\r\n\r\n    protected onClick = () => {\r\n        this.context.clearErrors();\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames(this.className, 'form-check-inline p-0');\r\n        let input = <input\r\n            ref={(input)=>this.input = input}\r\n            className={'align-self-center'}\r\n            type=\"checkbox\"\r\n            defaultChecked={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            onClick={this.onClick} />;\r\n        if (this.context.inNode === true) {\r\n            return <label className={cn}>\r\n                {input} {(this.ui&&this.ui.label) || this.name}\r\n            </label>\r\n        }\r\n        else {\r\n            return <div className={cn}>\r\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\r\n            </div>;\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { Widget } from './widget';\r\nimport { UiSelect } from '../../schema';\r\n\r\nexport class SelectWidget extends Widget {\r\n    protected select: HTMLSelectElement;\r\n    protected ui: UiSelect;\r\n    @observable protected readOnly: boolean;\r\n\r\n    protected setElementValue(value:any) {this.select.value = value}\r\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setDataValue(evt.target.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\r\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        if (this.readOnly === true) {\r\n            let option = this.ui.list.find(v => v.value === this.value);\r\n            let title = (option === undefined)? '(???)' : option.title;\r\n            return <span className=\"form-control w-min-6c\">{title}</span>;\r\n        }\r\n        return <select\r\n            ref={(select)=>this.select = select}\r\n            className={classNames(this.className, 'form-control')}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}>\r\n            {this.ui.list.map((v,index) => {\r\n                let {title, value} = v;\r\n                let cn:string;\r\n                //if (value === undefined || value === null) cn = 'text-light small';\r\n                //else cn = 'text-danger';\r\n                return <option className={cn} key={index} value={value}>{title || value}</option>\r\n            })}\r\n        </select>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiIdItem, TempletType } from '../../schema';\r\nimport { observable } from 'mobx';\r\n\r\nexport class IdWidget extends Widget {\r\n    protected ui: UiIdItem;\r\n    @observable protected value:number;\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}    \r\n\r\n    protected onClick = async () => {\r\n        let pickId = this.ui && this.ui.pickId;\r\n        if (pickId === undefined) {\r\n            alert('no pickId defined!');\r\n            return;\r\n        }\r\n        let id = await pickId(this.context, this.name, this.value);        \r\n        this.setDataValue(id);\r\n        this.clearError();\r\n        this.clearContextError();\r\n        this.checkRules();\r\n    }\r\n\r\n    render() {\r\n        let placeholder:string|JSX.Element, Templet: TempletType;\r\n        if (this.ui !== undefined) {\r\n            placeholder = this.ui.placeholder;\r\n            Templet = this.ui.Templet;\r\n        }\r\n        let cn = {\r\n            'form-control': true,\r\n            'required-item': this.itemSchema.required === true,\r\n            'cursor-pointer': true,\r\n            'is-invalid': this.hasError,\r\n        };\r\n        let content;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = placeholder || 'placeholder';\r\n            cn['text-muted'] = true;\r\n        }\r\n        else if (Templet === undefined) {\r\n            content = <>{this.value}</>;\r\n        }\r\n        else if (typeof Templet === 'function') {\r\n            content = Templet(this.value);\r\n        }\r\n        else {\r\n            content = Templet;\r\n        }\r\n        return <>\r\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DataType } from '../../schema';\r\nimport { UiType } from '../../schema';\r\n\r\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\r\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\r\n};\r\n","import * as React from 'react';\r\nimport { UiButton, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { Widget } from './widget';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class ButtonWidget extends Widget {\r\n    protected ui: UiButton;\r\n\r\n    protected onClick = async () => {\r\n        this.clearError();\r\n        this.clearContextError();\r\n        let {name, type} = this.itemSchema;\r\n        if (type === 'submit') {\r\n            await this.context.submit(name);\r\n        }\r\n        /*\r\n        let {onButtonClick} = this.context.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${name} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(name, this.context);\r\n        if (ret === undefined) return;\r\n        this.context.setError(name, ret);\r\n        */\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let {name, type} = this.itemSchema;\r\n        let Templet:TempletType, cn:string, caption:string;\r\n        if (this.ui !== undefined) {\r\n            let {widget:widgetType} = this.ui;\r\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\r\n            Templet = this.ui.Templet;\r\n            cn = this.ui.className;\r\n            caption = this.ui.label;\r\n        }\r\n        let {form, hasError} = this.context;\r\n        let context = this.context;\r\n        let disabled = type==='submit' && hasError;\r\n        let content:any;\r\n        if (this.children !== undefined) content = this.children;\r\n        else if (typeof Templet === 'function') content = Templet();\r\n        else if (Templet !== undefined) content = Templet;\r\n        else content = caption; \r\n        let button = <button \r\n            className={cn} \r\n            type=\"button\"\r\n            disabled={disabled}\r\n            onClick={this.onClick}>\r\n            {content || name}\r\n        </button>;\r\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\r\n        return <div className={form.ButtonClass}>\r\n            <div>{this.renderErrors()}</div>\r\n            {button}\r\n        </div>;\r\n    });\r\n    \r\n    protected get label():string {return null}\r\n\r\n    render() {\r\n        return <this.observerRender />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Form } from './form';\r\nimport { UiSchema, UiArr, UiItem } from '../schema';\r\nimport { ArrSchema, ItemSchema } from '../schema';\r\nimport { Widget as Widget } from './widgets/widget';\r\n//import { ArrRow } from './arrRow';\r\nimport { observable, computed } from 'mobx';\r\nimport { ContextRule } from './rules';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Context {\r\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\r\n    readonly form: Form;\r\n    readonly uiSchema: UiSchema;\r\n    readonly initData: any;\r\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\r\n    readonly widgets: {[name:string]: Widget} = {};\r\n    readonly rules: ContextRule[];\r\n    readonly isRow: boolean;\r\n    @observable errors: string[] = [];\r\n    @observable errorWidgets:Widget[] = [];\r\n\r\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\r\n        this.form = form;\r\n        this.uiSchema = uiSchema;\r\n        this.initData = data;\r\n        this.inNode = inNode;\r\n        this.isRow = isRow;\r\n        if (uiSchema !== undefined) {\r\n            let {rules} = uiSchema;\r\n            if (rules !== undefined) {\r\n                this.rules = [];\r\n                if (Array.isArray(rules) === false)\r\n                    this.rules.push(rules as ContextRule);\r\n                else\r\n                    this.rules.push(...rules as ContextRule[]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getArrRowContexts(arrName: string) {\r\n        if (this.subContexts === undefined) this.subContexts = {};\r\n        let arrRowContexts = this.subContexts[name];\r\n        if (arrRowContexts === undefined) this.subContexts[name] = arrRowContexts = {};\r\n        return arrRowContexts;\r\n    }\r\n\r\n    abstract get data():any;\r\n    abstract getItemSchema(itemName:string):ItemSchema;\r\n    abstract getUiItem(itemName:string):UiItem;\r\n    get arrName():string {return undefined}\r\n    getValue(itemName:string):any {return this.initData[itemName]}\r\n    setValue(itemName:string, value:any) {\r\n        this.initData[itemName] = value;\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setValue(value);\r\n    }\r\n    getDisabled(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) return widget.getDisabled();\r\n        return undefined;\r\n    }\r\n    setDisabled(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setDisabled(value);\r\n    }\r\n    getReadOnly(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getReadOnly();\r\n        return undefined;\r\n    }\r\n    setReadOnly(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setReadOnly(value);\r\n    }\r\n    getVisible(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getVisible();\r\n        return undefined;\r\n    }\r\n    setVisible(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setVisible(value);\r\n    }\r\n\r\n    async submit(buttonName: string) {\r\n        this.checkRules()\r\n        if (this.hasError === true) return;\r\n        let {onButtonClick} = this.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${buttonName} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this);\r\n        if (ret === undefined) return;\r\n        this.setError(buttonName, ret);\r\n\r\n    }\r\n\r\n    checkFieldRules() {\r\n        for (let i in this.widgets) {\r\n            this.widgets[i].checkRules();\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                arrRowContexts[j].checkFieldRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    checkContextRules() {\r\n        this.clearErrors();\r\n        if (this.rules === undefined) return;\r\n        for (let rule of this.rules) {\r\n            let ret = rule(this);\r\n            if (ret === undefined) continue;\r\n            if (Array.isArray(ret) === true) {\r\n                this.errors.push(...ret as string[]);\r\n            }\r\n            else if (typeof ret === 'string') {\r\n                this.errors.push(ret as string);\r\n            }\r\n            else {\r\n                for (let i in ret as object) this.setError(i, ret[i]);\r\n            }\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                let rowContext = arrRowContexts[j];\r\n                rowContext.clearErrors();\r\n                rowContext.checkContextRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    setError(itemName:string, error:string) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget === undefined) return;\r\n        widget.setContextError(error);\r\n        this.addErrorWidget(widget);\r\n    }\r\n\r\n    clearContextErrors() {\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearContextError();\r\n        }\r\n    }\r\n\r\n    clearWidgetsErrors() {\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearError();\r\n        }\r\n    }\r\n\r\n    checkRules() {\r\n        this.clearErrors();\r\n        this.clearWidgetsErrors();\r\n        this.checkFieldRules();\r\n        if (this.hasError === true) return;\r\n        this.checkContextRules();\r\n    }\r\n\r\n    addErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos < 0) this.errorWidgets.push(widget);\r\n    }\r\n    removeErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\r\n    }\r\n\r\n    protected checkHasError():boolean {\r\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\r\n        if (ret === true) return true;\r\n        if (this.subContexts === undefined) return false;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                if (arrRowContexts[j].hasError === true) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        return this.checkHasError();\r\n    };\r\n\r\n    clearErrors() {\r\n        this.errors.splice(0);\r\n        this.errorWidgets.splice(0);\r\n        this.clearContextErrors();\r\n    }\r\n\r\n    renderErrors = observer((): JSX.Element => {\r\n        let {errors} = this;\r\n        if (errors.length === 0) return null;\r\n        return <>\r\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\r\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\r\n            </span>)}\r\n        </>\r\n    });\r\n}\r\n\r\nlet rowKeySeed:number = 1;\r\nexport class RowContext extends Context {\r\n    readonly parentContext: Context;\r\n    readonly arrSchema: ArrSchema;\r\n    readonly uiSchema: UiArr;\r\n    //readonly row: ArrRow;\r\n    readonly rowKey: number;\r\n    readonly data: any;\r\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\r\n        let uiArr:UiArr;\r\n        let {uiSchema} = parentContext;\r\n        if (uiSchema !== undefined) {\r\n            let {items} = uiSchema;\r\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\r\n        }\r\n        super(parentContext.form, uiArr, data, inNode, true);\r\n        this.parentContext = parentContext;\r\n        this.arrSchema = arrSchema;\r\n        this.rowKey = rowKeySeed++;\r\n        this.data = data;\r\n    }\r\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        if (this.uiSchema === undefined) return undefined;\r\n        let {items} = this.uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n    get arrName():string {return this.arrSchema.name}\r\n    clearErrors() {\r\n        super.clearErrors();\r\n        this.parentContext.clearErrors();\r\n    }\r\n\r\n    get parentData():any {return this.parentContext.data;}\r\n}\r\n\r\nexport class FormContext extends Context {\r\n    constructor(form:Form, inNode:boolean) {\r\n        super(form, form.uiSchema, form.data, inNode, false);\r\n    }\r\n    get data():any {return this.form.data}\r\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        let {uiSchema} = this.form;\r\n        if (uiSchema === undefined) return undefined;\r\n        let {items} = uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName];\r\n    }\r\n}\r\n\r\nexport const ContextContainer = React.createContext<Context>({} as any);\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\n//import { ArrRow } from '../arrRow';\r\nimport { Context, RowContext, ContextContainer } from '../context';\r\nimport { ArrSchema } from '../../schema';\r\nimport { UiArr, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { factory } from './factory';\r\n\r\nexport const ArrComponent = observer((\r\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \r\n{\r\n    let {name, arr} = arrSchema;\r\n    let data = parentContext.initData[name] as any[];\r\n    let {form} = parentContext;\r\n    let arrRowContexts = parentContext.getArrRowContexts(name);\r\n    let ui = parentContext.getUiItem(name) as UiArr;\r\n    let arrLabel = name;\r\n    let Templet:TempletType;\r\n    let selectable:boolean, deletable:boolean, restorable:boolean;\r\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\r\n    if (uiSchema !== undefined) {\r\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\r\n        if (selectable !== true) selectable = formSelectable;\r\n        if (deletable !== true) deletable = formDeletable;\r\n        if (restorable !== true) restorable = formRestorable;\r\n    }\r\n    if (ui !== undefined) {\r\n        let {widget:widgetType, label, \r\n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\r\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\r\n        } = ui;\r\n        if (arrSelectable !== undefined) selectable = arrSelectable;\r\n        if (arrDeletable !== undefined) deletable = arrDeletable;\r\n        if (arrRestorable !== undefined) restorable = arrRestorable;\r\n        if (ac !== undefined) ArrContainer = ac;\r\n        if (rc !== undefined) RowContainer = rc;\r\n        if (rs !== undefined) RowSeperator = rs;\r\n        Templet = ui.Templet;\r\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\r\n        arrLabel = label || arrLabel;\r\n    }\r\n    let first = true;\r\n    return ArrContainer(arrLabel, <>\r\n        {data.map((row:any, index) => {\r\n            let rowContext: RowContext;\r\n            let rowContent: JSX.Element;\r\n            let sep = undefined;\r\n            if (first === false) sep = RowSeperator;\r\n            else first = false;\r\n            if (children !== undefined) {\r\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                rowContent = <>{children}</>;\r\n            }\r\n            else {\r\n                let typeofTemplet = typeof Templet;\r\n                if (typeofTemplet === 'function') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\r\n                }\r\n                else if (typeofTemplet === 'object') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = Templet as JSX.Element;\r\n                }\r\n                else {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\r\n                    rowContent = <>{\r\n                        arr.map((v, index) => {\r\n                            return <React.Fragment key={v.name}>\r\n                                {factory(rowContext, v, undefined)}\r\n                            </React.Fragment>\r\n                        })}\r\n                    </>;\r\n                }\r\n            }\r\n            let {rowKey} = rowContext;\r\n            arrRowContexts[rowKey] = rowContext;\r\n\r\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\r\n            if (selectable === true) {\r\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\r\n                    let {checked} = (evt.target as HTMLInputElement);\r\n                    row.$isSelected = checked;\r\n                    let {$source} = row;\r\n                    if ($source !== undefined) $source.$isSelected = checked;\r\n                    rowContext.clearErrors();\r\n                }\r\n                selectCheck = <div className=\"form-row-checkbox\">\r\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\r\n                </div>;\r\n            }\r\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\r\n            if (deletable === true) {\r\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\r\n                let onDelClick = () => {\r\n                    if (restorable === true) {\r\n                        row.$isDeleted = !isDeleted;\r\n                        let {$source} = row;\r\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\r\n                    }\r\n                    else {\r\n                        let p = data.indexOf(row);\r\n                        if (p>=0) data.splice(p, 1);\r\n                    }\r\n                    rowContext.clearErrors();\r\n                }\r\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\r\n                    <i className={classNames('fa', icon, 'fa-fw')} />\r\n                </div>;\r\n            }\r\n            let editContainer = selectable===true || deletable===true?\r\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\r\n                    {selectCheck}\r\n                    <div className={selectable===true && deletable===true? \"form-row-content\":\"form-row-content-1\"}>{content}</div>\r\n                    {deleteIcon}\r\n                </div></fieldset>\r\n                :\r\n                (content:any) => content;\r\n\r\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\r\n                {sep}\r\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\r\n            </ContextContainer.Provider>;\r\n        })}\r\n    </>);\r\n});\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiImageItem } from '../../schema';\r\nimport { Image } from '../../image';\r\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class ImageWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiImageItem;\r\n    @observable private imageSrc: string;\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.imageSrc = this.value;\r\n    }\r\n\r\n    protected onClick = async () => {\r\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\r\n        let ret = await edit.start();\r\n        if (ret !== null) {\r\n            this.setValue(ret);\r\n            this.imageSrc = ret;\r\n        }\r\n        await edit.end();\r\n    }\r\n\r\n    render() {\r\n        return <this.observerRender />;\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let cn = [\r\n            'bg-white p-1 d-flex justify-content-center',\r\n        ];\r\n        let onClick: any;\r\n        if (!this.readOnly && !this.disabled) {\r\n            cn.push('cursor-pointer');\r\n            onClick = this.onClick;\r\n        }\r\n        return <div className={classNames(cn)} onClick={onClick}>\r\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\r\n        </div>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../../schema';\r\nimport { UiItem, UiArr, UiType, UiButton, TempletType, TypeWidget, UiCustom } from '../../schema';\r\nimport { TextWidget } from './textWidget';\r\nimport { TextAreaWidget } from './textareaWidget';\r\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nimport { UpdownWidget } from './updownWidget';\r\nimport { NumberWidget } from './numberWidget';\r\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nimport { CheckBoxWidget } from './checkBoxWidget';\r\nimport { FieldProps } from '../field';\r\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\r\nimport { SelectWidget } from './selectWidget';\r\nimport { RadioWidget } from './radioWidget';\r\nimport { RangeWidget } from './rangeWidget';\r\nimport { IdWidget } from './idWidget';\r\nimport { ButtonWidget } from './buttonWidget';\r\nimport { ArrComponent } from './arrComponent';\r\nimport { ImageWidget } from './imageWidget';\r\n\r\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\r\n    id: {\r\n        dataTypes: ['id'],\r\n        widget: IdWidget,\r\n    },\r\n    text: {\r\n        dataTypes: ['integer', 'number', 'string'],\r\n        widget: TextWidget\r\n    },\r\n    textarea: {\r\n        dataTypes: ['string'],\r\n        widget: TextAreaWidget\r\n    },\r\n    password: {\r\n        dataTypes: ['string'],\r\n        widget: PasswordWidget\r\n    },\r\n    date: {\r\n        dataTypes: ['date'],\r\n        widget: DateWidget\r\n    },\r\n    datetime: {\r\n        dataTypes: ['date'],\r\n        widget: DateTimeWidget\r\n    },\r\n    time: {\r\n        dataTypes: ['date'],\r\n        widget: TimeWidget\r\n    },\r\n    month: {\r\n        dataTypes: ['date'],\r\n        widget: MonthWidget\r\n    },\r\n    select: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: SelectWidget\r\n    },\r\n    url: {\r\n        dataTypes: ['string'],\r\n        widget: UrlWidget\r\n    },\r\n    email: {\r\n        dataTypes: ['string'],\r\n        widget: EmailWidget\r\n    },\r\n    number: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: NumberWidget\r\n    },\r\n    updown: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: UpdownWidget\r\n    },\r\n    color: {\r\n\r\n    },\r\n    checkbox: {\r\n        dataTypes: ['boolean', 'integer', 'number'],\r\n        widget: CheckBoxWidget\r\n    },\r\n    image: {\r\n        dataTypes: ['string'],\r\n        widget: ImageWidget,\r\n    },\r\n    checkboxes: {\r\n\r\n    },\r\n    radio: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: RadioWidget\r\n    },\r\n    range: {\r\n        dataTypes: ['integer'],\r\n        widget: RangeWidget,\r\n    },\r\n    button: {\r\n        dataTypes: ['button', 'submit'],\r\n        widget: ButtonWidget,\r\n    }\r\n}\r\n\r\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\r\n    if (context === undefined) {\r\n        debugger;\r\n        return null;\r\n    }\r\n    if (itemSchema === undefined) return undefined;\r\n    let {name, type} = itemSchema;\r\n    switch (type) {\r\n    case 'arr':\r\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\r\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\r\n    default:\r\n        break;\r\n    }\r\n\r\n    let typeWidget: TypeWidget;\r\n    let ui = context.getUiItem(name);\r\n    function getTypeWidget(t:DataType): TypeWidget {\r\n        switch(t) {\r\n        default: return TextWidget; \r\n        case 'id': return IdWidget;\r\n        case 'integer': return UpdownWidget;\r\n        case 'number': return NumberWidget; \r\n        case 'string': return TextWidget; \r\n        case 'date': return DateWidget; \r\n        case 'boolean': return CheckBoxWidget; \r\n        case 'button':\r\n        case 'submit': return ButtonWidget;\r\n        }\r\n    }\r\n    if (ui === undefined) { \r\n        typeWidget = getTypeWidget(type);\r\n    }\r\n    else {\r\n        let {widget:widgetType} = ui;\r\n        switch (widgetType) {\r\n        default:\r\n            if (widgetType !== undefined) {\r\n                let widgetFactory = widgetsFactory[widgetType];\r\n                typeWidget = widgetFactory.widget;\r\n            }\r\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\r\n            break;\r\n        case 'custom':\r\n            typeWidget = (ui as UiCustom).WidgetClass;\r\n            break;\r\n        case 'group':\r\n            return <span>impletment group</span>;\r\n        }\r\n        //label = uiLabel || name;\r\n    }\r\n    \r\n    let {isRow, widgets} = context;\r\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\r\n    widgets[name] = widget;\r\n\r\n    return <widget.container />;\r\n    /*\r\n    if (isRow === false) {\r\n        let WidgetElement = observer(() => widget.container());\r\n        return <WidgetElement />;\r\n    }\r\n    else {\r\n        let widgetElement = widget.container();\r\n        return widgetElement;\r\n    }\r\n    */\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextAreaItem } from '../../schema';\r\nimport { StringSchema } from '../../schema';\r\n\r\nexport class TextAreaWidget extends Widget {\r\n    protected itemSchema: StringSchema;\r\n    protected input: HTMLTextAreaElement;\r\n    protected ui: UiTextAreaItem;\r\n\r\n    protected setElementValue(value:any) {this.input.value = value}\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {};\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <textarea ref={(input) => this.input=input} \r\n            className={classNames(this.className, cn)}\r\n            rows={this.ui && this.ui.rows}\r\n            maxLength={this.itemSchema.maxLength}\r\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class PasswordWidget extends TextWidget {\r\n    protected inputType = 'password';\r\n}\r\n\r\nexport class UrlWidget extends TextWidget {\r\n    protected inputType = 'url';\r\n}\r\n\r\nexport class EmailWidget extends TextWidget {\r\n    protected inputType = 'email';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { TextWidget } from './textWidget';\r\nimport { Widget } from './widget';\r\nimport { UiRadio } from '../../schema';\r\nimport { RowContext } from '../context';\r\n\r\n\r\n//const radioStyle:React.CSSProperties = {width:'2em', height:'1.2em'};\r\nexport class RadioWidget extends Widget {\r\n    protected inputs: {[index:number]: HTMLInputElement} = {};\r\n    protected ui: UiRadio;\r\n\r\n    protected setElementValue(value:any) {\r\n        for (let i in this.inputs) {\r\n            let input = this.inputs[i];\r\n            input.checked = value === input.value;\r\n        }\r\n    }\r\n    setReadOnly(value:boolean) {\r\n        this.readOnly = value;\r\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        this.disabled = value;\r\n        for (let i in this.inputs) this.inputs[i].disabled = value\r\n    }\r\n\r\n    render() {\r\n        let {defaultValue, list} = this.ui;\r\n        let {isRow, inNode} = this.context;\r\n        let rowKey:number;\r\n        if (isRow === true) {\r\n            rowKey = (this.context as RowContext).rowKey;\r\n        }\r\n        let cn = classNames(this.className, 'form-radio-inline');\r\n        return <span className={cn}>\r\n                {list.map((v,index) => {\r\n                    let {value, title} = v;\r\n                    let name = this.name;\r\n                    if (rowKey !== undefined) name += '-' + rowKey;\r\n                    return <label key={index} className=\"form-radio-inline\">\r\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\r\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value} />\r\n                        {title || value}\r\n                    </label>;\r\n                    //</span>\r\n                })}\r\n            </span>;\r\n    }\r\n}\r\n/*\r\n<div className=\"form-control d-flex border-0\"><input\r\nref={(input)=>this.input = input}\r\nclassName={classNames(this.className, 'align-self-center')}\r\ntype=\"checkbox\"\r\nstyle={{maxHeight:\"1.2em\"}}\r\ndefaultValue={this.defaultValue} \r\nonChange={this.onChange} />\r\n</div>\r\n*/","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiRange } from '../../schema';\r\nimport { Widget } from './widget';\r\n\r\nexport class RangeWidget extends Widget {\r\n    protected inputType = 'range';\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiRange;\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let {min, max, step} = this.ui;\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\r\n            type={this.inputType}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            max={max}\r\n            min={min}\r\n            step={step}\r\n            />\r\n        </>;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { KeyValueRes, Res } from '../res';\r\n\r\nexport interface FormRes extends KeyValueRes {\r\n    required: string;\r\n    number: string;\r\n    integer: string;\r\n    min: string;\r\n    max: string;\r\n}\r\n\r\nexport const formRes:Res<FormRes> = {\r\n    _: {\r\n        required: 'required',\r\n        number: 'not valid number',\r\n        integer: 'not valid integer',\r\n        min: 'min value is ${min}',\r\n        max: 'max value is ${max}',\r\n    },\r\n    zh: {\r\n        _: {\r\n            required: '必须填',\r\n            number: '需要数字',\r\n            integer: '需要整数',\r\n            min: '不能小于${min}',\r\n            max: '不能大于${max}',\r\n        }\r\n    },\r\n}\r\n","import * as React from 'react';\r\nimport {observable, IReactionDisposer, autorun, isObservable} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\r\nimport { UiSchema, TempletType } from '../schema';\r\nimport { factory } from './widgets';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\r\nimport { FormRes, formRes } from './formRes';\r\nimport { resLang } from '../res';\r\n\r\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\r\nexport type InputEnter = (name:string, context: Context) => Promise<any>;\r\n\r\nexport interface FormProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    uiSchema?: UiSchema;\r\n    formData?: any;\r\n    onButtonClick?: FormButtonClick;\r\n    onEnter?: InputEnter;\r\n    fieldLabelSize?: number;            // col-sm-2 for label\r\n    requiredFlag?: boolean;             // default=true\r\n    beforeShow?: (formContext:FormContext) => void;\r\n    res?: FormRes;\r\n\r\n    Container?: (content:JSX.Element) => JSX.Element;\r\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\r\n    FieldClass?: string;\r\n    ButtonClass?: string;\r\n}\r\n\r\nexport class Form extends React.Component<FormProps> {\r\n    readonly schema: Schema;\r\n    readonly itemSchemas: {[name:string]: ItemSchema};\r\n    readonly uiSchema: UiSchema;\r\n    readonly res?: FormRes;\r\n    protected formContext: FormContext;\r\n    //private content: any;\r\n    //private formData: any;\r\n    private disposer: IReactionDisposer;\r\n    //@observable \r\n    readonly data:any;\r\n\r\n    readonly Container: (content:JSX.Element) => JSX.Element;\r\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    readonly FieldClass: string;\r\n    readonly ButtonClass: string;\r\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\r\n    //readonly RowSeperator: JSX.Element;\r\n\r\n    constructor(props:FormProps) {\r\n        super(props);\r\n        let {schema, uiSchema, formData, \r\n            Container, FieldContainer, FieldClass, \r\n            ButtonClass, res,\r\n        } = props;\r\n        this.Container = Container || this.DefaultContainer;\r\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\r\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\r\n        this.res = res || this.DefaultRes;\r\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\r\n\r\n        this.schema = schema;\r\n        this.itemSchemas = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.itemSchemas[itemSchema.name] = itemSchema;\r\n        }\r\n        this.uiSchema = uiSchema;\r\n\r\n        //this.formData = formData;\r\n        this.disposer = autorun(this.watch);\r\n        this.data = {};\r\n        // this.initRender();\r\n    }\r\n\r\n    private renderContent():any {\r\n        this.initData(this.props.formData);\r\n        let {children} = this.props;\r\n        if (children !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return <>{children}</>;\r\n        }\r\n\r\n        let Templet: TempletType;\r\n        if (this.uiSchema !== undefined) {\r\n            Templet = this.uiSchema.Templet;\r\n        }\r\n        if (Templet !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return typeof(Templet) === 'function'? Templet(this.data) : Templet;\r\n        }\r\n\r\n        this.formContext = new FormContext(this, false);\r\n        return <>{this.schema.map((v, index) => {\r\n            return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\r\n        })}</>;\r\n    }\r\n\r\n    private initData(formData: any) {\r\n        if (formData === undefined) formData = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.initDataItem(itemSchema, this.data, formData);\r\n        }\r\n    }\r\n\r\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\r\n        let {name, type} = itemSchema;\r\n        if (type === 'button') return;\r\n        if (type !== 'arr') {\r\n            data[name] = formData[name];\r\n            return;\r\n        }\r\n\r\n        let arrItem:ArrSchema = itemSchema as ArrSchema;\r\n        let {arr:arrItems} = arrItem;\r\n        if (arrItems === undefined) return;\r\n        let arrDict = arrItem.itemSchemas = {};\r\n        for (let item of arrItems) {\r\n            arrDict[item.name] = item;\r\n        }\r\n        let val:any[] = formData[name];\r\n        if (val === undefined) val = [];\r\n        else if (Array.isArray(val) === false) val = [val];\r\n        let arr:any[] = [];\r\n        for (let row of val) {\r\n            let {$isSelected, $isDeleted} = row;\r\n            let r = {\r\n                $source: row,\r\n                $isSelected: $isSelected,\r\n                $isDeleted: $isDeleted,\r\n            };\r\n            for (let item of arrItems) {\r\n                this.initDataItem(item, r, row);\r\n                /*\r\n                let {name:nm} = item;\r\n                let v = row[nm];\r\n                if (v === undefined) v = null;\r\n                r[nm] = v;\r\n                */\r\n            }\r\n            arr.push(r);\r\n        }\r\n        // 如果没有observable，行删除标志点击不管用\r\n        // 不知道这里为什么要去掉observable。有可能会有别的问题\r\n        data[name] = observable(arr);\r\n        //data[name] = arr;\r\n        return;\r\n    }\r\n\r\n    private watch = () => {\r\n        let {formData} = this.props;\r\n        if (formData === undefined) return;\r\n        //this.initData(formData);\r\n        this.calcSelectOrDelete();\r\n    }\r\n    private calcSelectOrDelete() {\r\n        for (let itemSchema of this.schema) {\r\n            this.arrItemOperated(itemSchema);\r\n        }\r\n    }\r\n\r\n    private arrItemOperated(itemSchema: ItemSchema) {\r\n        let {name, type} = itemSchema;\r\n        if (type !== 'arr') return;\r\n        if (this.data === undefined) return;\r\n        let formArrVal = this.data[name];\r\n        if (formArrVal === undefined) return;\r\n        let {arr: arrItems} = itemSchema as ArrSchema;\r\n        for (let row of formArrVal) {\r\n            let {$source} = row;\r\n            if ($source === undefined) continue;\r\n            let {$isSelected, $isDeleted} = $source;\r\n            row.$isSelected = $isSelected;\r\n            row.$isDeleted = $isDeleted;\r\n            //console.log($isSelected, $isDeleted);\r\n            for (let item of arrItems) {\r\n                this.arrItemOperated(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {beforeShow} = this.props;\r\n        if (beforeShow !== undefined) beforeShow(this.formContext);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.disposer !== undefined) this.disposer();\r\n    }\r\n\r\n    render() {\r\n        let content = this.renderContent();\r\n        return <ContextContainer.Provider value={this.formContext}>\r\n            <this.formContext.renderErrors />\r\n            {this.Container(content)}\r\n        </ContextContainer.Provider>;\r\n    }\r\n\r\n    async buttonClick(buttonName:string) {\r\n        this.formContext.checkRules()\r\n        if (this.formContext.hasError === true) return;\r\n\r\n        let {onButtonClick} = this.formContext.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this.formContext);\r\n        if (ret === undefined) return;\r\n        this.formContext.setError(buttonName, ret);\r\n    }\r\n\r\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\r\n        return <form className={classNames(this.props.className)} onSubmit={e=>e.preventDefault()}>\r\n            {content}\r\n        </form>;\r\n    }\r\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\r\n        let {fieldLabelSize} = this.props;\r\n\r\n        if (fieldLabelSize > 0) {\r\n            let labelView:any;\r\n            if (label === null) {\r\n                fieldLabelSize = 0;\r\n            }\r\n            else {\r\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\r\n            }\r\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\r\n            return <div className=\"form-group row\">\r\n                {labelView}\r\n                <div className={fieldCol}>{content}</div>\r\n            </div>;\r\n        }\r\n        return <div className=\"form-group\">\r\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\r\n            {content}\r\n        </div>;\r\n    }\r\n    protected DefaultFieldClass:string = undefined;\r\n    protected DefaultButtonClass = 'text-center py-2';\r\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\r\n\r\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\r\n        return <div>\r\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\r\n            {content}\r\n        </div>;\r\n    }\r\n    RowContainer = (content:JSX.Element): JSX.Element => {\r\n        let cn = classNames({\r\n            'py-3': true\r\n        });\r\n        return <div className={cn}>{content}</div>\r\n    }\r\n    RowSeperator = <div className=\"border border-gray border-top\" />;\r\n}\r\n","import * as React from 'react';\r\nimport { factory } from './widgets';\r\nimport { ContextContainer, Context } from './context';\r\n\r\nexport interface FieldProps {\r\n    name: string;\r\n}\r\n\r\nexport class Field extends React.Component<FieldProps> {\r\n    static contextType = ContextContainer;\r\n    render() {\r\n        let {name, children } = this.props;\r\n        let context:Context = this.context;\r\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\r\n        let itemSchema = context.getItemSchema(name);\r\n        let content = factory(context, itemSchema, children, this.props);\r\n        if (content === undefined) {\r\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\r\n        }\r\n        return content;\r\n    }\r\n}\r\n","export {Form} from './form';\r\nexport {Field} from './field';\r\nexport {Context, RowContext} from './context';\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport '../css/va-badge.css';\r\n\r\nexport interface BadgeProps {\r\n    className?: string;\r\n    badge?: string|number;\r\n    size?: 'xs' | 'sm' | 'lg';\r\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\r\n    badgeAlign?: 'left'|'center'|'right';\r\n    badgeVertical?: 'top'|'middle'|'bottom';\r\n}\r\n\r\n@observer\r\nexport class Badge extends React.Component<BadgeProps> {\r\n    render() {\r\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\r\n        let cn = classNames(\r\n            className,\r\n            'va-badge',\r\n            size && 'va-badge-'+size,\r\n            'va-badge-' + (color||'secondary'),\r\n            badgeAlign && 'va-badg-'+badgeAlign,\r\n            badgeVertical && 'va-badg-'+badgeVertical,\r\n        );\r\n        let b;\r\n        if (badge) b = <b>{badge}</b>;\r\n        return <div className={cn}>\r\n            {children}\r\n            {b}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport '../css/va-lmr.css';\r\n\r\nexport interface LMRProps {\r\n    className?: string | string[];\r\n    left?: string|JSX.Element;\r\n    right?: string|JSX.Element;\r\n    onClick?: ()=>void;\r\n}\r\n\r\n@observer\r\nexport class LMR extends React.Component<LMRProps> {\r\n    render() {\r\n        let {className, left, children, right, onClick} = this.props;\r\n        let l, r;\r\n        if (left !== undefined) l = <header>{left}</header>;\r\n        if (right !== undefined) r = <footer>{right}</footer>;\r\n        let cursor;\r\n        if (onClick !== undefined) cursor = 'cursor-pointer';\r\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\r\n            {l}\r\n            <div>{children}</div>\r\n            {r}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport interface FAProps {\r\n    name: string;\r\n    className?: string;\r\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\r\n    spin?: boolean;\r\n    fixWidth?: boolean;\r\n    border?: boolean;\r\n    pull?: 'left'|'right';\r\n    pulse?: boolean;\r\n    rotate?: 90|180|270;\r\n    flip?: 'horizontal'|'vertical';\r\n    inverse?: boolean;\r\n}\r\n\r\nexport class FA extends React.Component<FAProps> {\r\n    render() {\r\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\r\n        let cn = classNames(className, 'fa',\r\n            name && ('fa-' + name),\r\n            size && 'fa-'+size,\r\n            fixWidth && 'fa-fw',\r\n            border && 'fa-border',\r\n            pull && 'fa-pull-' + pull,\r\n            spin && 'fa-spin',\r\n            pulse && 'fa-pulse',\r\n            rotate && 'fa-rotate-' + rotate,\r\n            flip && 'fa-flip-' + flip,\r\n            inverse && 'fa-inverse',\r\n        );\r\n        return <i className={cn} />\r\n    }\r\n}\r\n\r\nexport interface StackedFAProps {\r\n    className?: string;\r\n    size?: 'lg',\r\n}\r\nexport class StackedFA extends React.Component<StackedFAProps> {\r\n    render() {\r\n        let {className, size, children} = this.props;\r\n        let cn = classNames(\r\n            'fa-stack',\r\n            className,\r\n            size && 'fa-' + size);\r\n        return <span className={cn}>\r\n            {children}\r\n        </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport const Muted = (props:any) => \r\n<small className={classNames('text-muted', props.className)} style={props.style}>\r\n    {props.children}\r\n</small>;\r\n","export * from './Badge';\r\nexport * from './LMR';\r\nexport * from './FA';\r\nexport * from './IconText';\r\nexport * from './Muted';\r\n","import * as React from 'react';\r\nimport { IObservableArray, computed } from 'mobx';\r\nimport { PageItems } from 'tonva-tools';\r\nimport {List} from './index';\r\n\r\nexport abstract class ListBase {\r\n    protected list: List;\r\n    constructor(list: List) {\r\n        this.list = list;\r\n    }\r\n    get isPaged():boolean {\r\n        let items = this.list.props.items;\r\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\r\n    }\r\n    get items():any[]|IObservableArray<any> {\r\n        let items = this.list.props.items;\r\n        if (items === null) return null;\r\n        if (items === undefined) return undefined;\r\n        if (Array.isArray(items) === true)\r\n            return items as IObservableArray<any>;\r\n        else\r\n            return (items as PageItems<any>).items;\r\n    }\r\n    @computed get loading():boolean {\r\n        let items = this.list.props.items;\r\n        if (items === null) return false;\r\n        if (items === undefined) return true;\r\n        let pageItems = items as PageItems<any>;\r\n        if (pageItems.items === undefined) return false;\r\n        return pageItems.loading;\r\n    }\r\n    get selectedItems():any[] { return; }\r\n    updateProps(nextProps:any) {}\r\n    abstract render(item:any, index:number):JSX.Element;\r\n    protected renderContent(item:any, index:number) {\r\n        let {render} = this.list.props.item;\r\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n        return render(item, index);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\n\r\nexport class Clickable extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, onClick} = this.list.props.item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick && onClick(item)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport { uid } from '../uid';\r\n\r\nexport class Static extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, render} = this.list.props.item;\r\n        if (typeof item === 'string') {\r\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\r\n            return <li key={uid()} className={cn}>{item}</li>;\r\n        }\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed, IObservableArray} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport {uid} from '../uid';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SelectableItem {\r\n    selected: boolean;\r\n    item: any;\r\n    labelId: string;\r\n}\r\n\r\nexport class Selectable extends ListBase {\r\n    private _items: SelectableItem[];\r\n    private _selectedItems: any[];\r\n    private input: HTMLInputElement;\r\n    private buildItems() {\r\n        console.log('buildItems in selectable.tsx');\r\n        let {items, selectedItems, compare} = this.list.props;\r\n        let itemsArray:any[] | IObservableArray<any>;\r\n        if (items === undefined) {\r\n            return this._items = undefined;\r\n        }\r\n        if (items === null) {\r\n            return this._items = null;\r\n        }\r\n        if (Array.isArray(items) === true) {\r\n            itemsArray = items as any;\r\n        }\r\n        else {\r\n            itemsArray = (items as PageItems<any>).items;\r\n        }\r\n        //let items = this.items;\r\n        this._selectedItems = selectedItems;\r\n        if (selectedItems === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:false, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        if (compare === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:selectedItems.find(si => si === v) !== undefined, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        return this._items = itemsArray.map(v => {\r\n            return {\r\n                selected:selectedItems.find(si => compare(v, si)) !== undefined, \r\n                item:v, \r\n                labelId:uid()\r\n            };\r\n        });\r\n    }\r\n    @computed get items() {\r\n        //if (this._items === undefined) \r\n        this.buildItems();\r\n        return this._items;\r\n    }\r\n    updateProps(nextProps:any) {\r\n        if (nextProps.selectedItems === this._selectedItems) return;\r\n        this.buildItems();\r\n    }\r\n    private onSelect(item:SelectableItem, selected:boolean) {\r\n        item.selected = selected;\r\n        let anySelected = this._items.some(v => v.selected);\r\n        this.list.props.item.onSelect(item.item, selected, anySelected);\r\n    }\r\n    \r\n    get selectedItems():any[] {\r\n        return this._items.filter(v => v.selected === true).map(v => v.item);\r\n    }\r\n    /*\r\n    set selectedItems(value: any[]) {\r\n        if (value === undefined) return;\r\n        if (this._items === undefined) return;\r\n        let sLen = this._items.length;\r\n        let list = value.slice();\r\n        for (let n=0; n<sLen; n++) {\r\n            let sItem = this._items[n];\r\n            let len = list.length;\r\n            if (len === 0) break;\r\n            let item = sItem.item;\r\n            for (let i=0; i<len; i++) {\r\n                let v = list[i];\r\n                if (item === v) {\r\n                    sItem.selected = true;\r\n                    value.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    */\r\n    //w-100 mb-0 pl-3\r\n    //m-0 w-100\r\n    render(item:SelectableItem, index:number):JSX.Element {\r\n        let {className, key, render, onSelect} = this.list.props.item;\r\n        let {labelId, selected} = item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            <div className=\"d-flex align-items-center px-3\">\r\n                <input ref={input=>{\r\n                        if (!input) return;\r\n                        this.input = input; input.checked = selected;\r\n                    }}\r\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\r\n                    defaultChecked={selected}\r\n                    onChange={(e)=>{\r\n                        this.onSelect(item, e.target.checked)} \r\n                    }/>\r\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\r\n                    {this.renderContent(item.item, index)}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    }\r\n}\r\n/*\r\n<label>\r\n<label className=\"custom-control custom-checkbox\">\r\n    <input type='checkbox' className=\"custom-control-input\"\r\n        //checked={selected}\r\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\r\n    <span className=\"custom-control-indicator\" />\r\n</label>\r\n{this.renderContent(item.item, index)}\r\n</label>\r\n*/\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {PageItems} from 'tonva-tools';\r\nimport {ListBase} from './base';\r\nimport {Clickable} from './clickable';\r\nimport {Static} from './static';\r\nimport {Selectable} from './selectable';\r\nimport \"../css/va-list.css\";\r\nimport { IObservableArray } from 'mobx';\r\n\r\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\r\n\r\nexport interface ListProps {\r\n    className?: string|string[];\r\n    items: any[] | IObservableArray<any> | PageItems<any>;\r\n    item: {\r\n        className?: string|string[];\r\n        render?: (item:any, index:number) => JSX.Element;\r\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\r\n        onClick?: (item:any)=>void;\r\n        key?: (item:any)=>string|number;\r\n    };\r\n    compare?:(item:any, selectItem)=>boolean;\r\n    selectedItems?:any[];\r\n    header?: StaticRow;\r\n    footer?: StaticRow;\r\n    before?: StaticRow;\r\n    loading?: StaticRow;\r\n    none?: StaticRow;\r\n}\r\n\r\n@observer\r\nexport class List extends React.Component<ListProps> {\r\n    private listBase: ListBase;\r\n    constructor(props:ListProps) {\r\n        super(props);\r\n        let {item} = this.props;\r\n        let {onClick, onSelect} = item;\r\n        if (onSelect !== undefined)\r\n            this.listBase = new Selectable(this);\r\n        else if (onClick !== undefined)\r\n            this.listBase = new Clickable(this);\r\n        else\r\n            this.listBase = new Static(this);\r\n    }\r\n    _$scroll = (direct: 'top'|'bottom') => {\r\n        console.log('############### items scroll to ' + direct);\r\n    }\r\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\r\n        this.listBase.updateProps(nextProps);\r\n    }\r\n    get selectedItems():any[] {\r\n        return this.listBase.selectedItems;\r\n    }\r\n    render() {\r\n        let {className, header, footer, before, loading, none, item, selectedItems} = this.props;\r\n        if (before === undefined) before = 'before';\r\n        if (loading === undefined) loading = 'loading';\r\n        if (none === undefined) none = 'none';        \r\n        //this.listBase.selectedItems = selectedItems;\r\n        let {isPaged, items, loading:isLoading} = this.listBase;\r\n        function staticRow(row:StaticRow, type:string) {\r\n            if (!row) return;\r\n            switch (typeof row) {\r\n                default:\r\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\r\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\r\n                case 'object': return <li>{row}</li>\r\n            } \r\n        }\r\n        let content:any;\r\n        if (items === null)\r\n            content = staticRow(before, 'before');\r\n        else if (items === undefined)\r\n            content = staticRow(loading, 'loading');\r\n        else if (items.length === 0)\r\n            content = staticRow(none, 'none');\r\n        else {\r\n            content = items.map((item, index) => {\r\n                return this.listBase.render(item, index);\r\n            });\r\n        }\r\n        return <ul className={classNames('va-list', className)}>\r\n            {staticRow(header, 'header')}\r\n            {content}\r\n            {staticRow(footer, 'footer')}\r\n        </ul>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class StringItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.newValue = evt.target.value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private onBlur = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.verifyValue();\r\n    }\r\n\r\n    private onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>{\r\n                this.verifyValue();\r\n                if (this.error === undefined) resolve(this.newValue);\r\n            }}>保存</button>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">\r\n                <input type=\"text\" \r\n                    onChange={this.onChange}\r\n                    onBlur={this.onBlur}\r\n                    onFocus={this.onFocus}\r\n                    className=\"form-control\" \r\n                    defaultValue={this.value} />\r\n                {\r\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\r\n                }\r\n                {this.error && <div className=\"text-danger\">{this.error}</div>}\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem, UiRadio } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class RadioItemEdit extends ItemEdit {\r\n    protected uiItem: UiRadio;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (value: any) => {\r\n        this.newValue = value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let {name} = this.itemSchema;\r\n        let {list, defaultValue} = this.uiItem;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>{\r\n                this.verifyValue();\r\n                if (this.error === undefined) resolve(this.newValue);\r\n            }}>保存</button>;\r\n        let content = list?\r\n            list.map((v, index:number) => {\r\n                let {title, value} = v;\r\n                return <label key={index} className=\"px-3 py-2 cursor-pointer\">\r\n                    <input name={name} type=\"radio\" value={value} \r\n                        onClick={()=>this.onChange(value)} \r\n                        defaultChecked={value === defaultValue} /> {title || value} &nbsp;\r\n                </label>;\r\n            })\r\n            :\r\n            <>no list defined</>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">{content}</div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem, UiSelect } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class SelectItemEdit extends ItemEdit {\r\n    protected uiItem: UiSelect;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (value:any) => {\r\n        this.newValue = value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let {list} = this.uiItem;\r\n        let content = list?\r\n            list.map((v, index:number) => {\r\n                let {title, value} = v;\r\n                return <div key={index} className=\"px-3 py-2 cursor-pointer bg-white mb-1\" onClick={()=>{this.onChange(value); resolve(this.newValue)}}>\r\n                    {title || value}\r\n                </div>;\r\n            })\r\n            :\r\n            <>no list defined</>;\r\n        return <Page header={'更改' + this.label}>\r\n            <div className=\"my-3\">\r\n                {content}\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\nimport { StringItemEdit } from './stringItemEdit';\r\nimport { ImageItemEdit } from './imageItemEdit';\r\nimport { Image } from '../image';\r\nimport { RadioItemEdit } from './radioItemEdit';\r\nimport { SelectItemEdit } from './selectItemEdit';\r\nimport { UiSelectBase } from '../form/uiSchema';\r\n\r\nexport interface EditProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    data: any;\r\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\r\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\r\n    stopEdit?: boolean;\r\n    uiSchema?: UiSchema;\r\n    sepClassName?: string;\r\n    topBorderClassName?: string;\r\n    bottomBorderClassName?: string;\r\n    rowContainerClassName?: string;\r\n}\r\n\r\n@observer\r\nexport class Edit extends React.Component<EditProps> {\r\n    private defaultSepClassName = \"border-top edit-sep-light-gray\";\r\n    private defaultRowContainerClassName = \"d-flex px-3 py-2 bg-white align-items-center\";\r\n    private topBorder:JSX.Element;\r\n    private bottomBorder:JSX.Element;\r\n    private rowContainerClassName?: string;\r\n    private sep:JSX.Element;\r\n    private uiSchema: {[name:string]: UiItem};\r\n\r\n    constructor(props: EditProps) {\r\n        super(props);\r\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema, stopEdit} = props;\r\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\r\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\r\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\r\n        if (stopEdit !== true) this.rowContainerClassName += ' cursor-pointer';\r\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\r\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\r\n    }\r\n\r\n    render() {\r\n        let elItems:JSX.Element[] = [];\r\n        let {schema} = this.props;\r\n        let len = schema.length;\r\n\r\n        elItems.push(this.topBorder);\r\n        for (let i=0; i<len; i++) {\r\n            let itemSchema = schema[i];\r\n            if (i>0) elItems.push(this.sep);\r\n            let value = this.props.data[itemSchema.name];\r\n            elItems.push(this.renderRow(itemSchema, value));\r\n        }\r\n        elItems.push(this.bottomBorder);\r\n\r\n        return <div>\r\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\r\n        </div>;\r\n    }\r\n\r\n    private renderRow = (itemSchema: ItemSchema, value:any):JSX.Element => {\r\n        let {name, type, required} = itemSchema;\r\n        let divValue:any;\r\n        let uiItem = this.uiSchema[name];\r\n        let label:string = (uiItem && uiItem.label) || name;\r\n        //let value:any = this.props.data[name];\r\n        if (uiItem !== undefined && value) {\r\n            switch (uiItem.widget) {\r\n                case 'radio':\r\n                case 'select':\r\n                    let {list} = uiItem as UiSelectBase;\r\n                    divValue = <b>{list.find(v => v.value === value).title}</b>;\r\n                    break;\r\n            }\r\n        }\r\n        if (divValue === undefined) {\r\n            switch (type) {\r\n                default:\r\n                    divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\r\n                    break;\r\n                case 'image':\r\n                    divValue = <Image className=\"w-4c h-4c\" src={value} />;\r\n                    break;\r\n            }\r\n        }\r\n        let requireFlag = required===true && <span className=\"text-danger\">*</span>;\r\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\r\n            <div className=\"w-6c\">{label} {requireFlag}</div>\r\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\r\n            {this.props.stopEdit!==true && <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>}\r\n        </div>;\r\n    };\r\n\r\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\r\n        let {onItemChanged, onItemClick, stopEdit} = this.props;\r\n        if (stopEdit === true) return;\r\n        let changeValue:any;\r\n        if (onItemClick !== undefined) {\r\n            await onItemClick(itemSchema, uiItem, value);\r\n            return;\r\n        }\r\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\r\n        if (itemEdit === undefined) {\r\n            alert('undefined: let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);');\r\n            return;\r\n        }\r\n        try {\r\n            changeValue = await itemEdit.start();\r\n            if (changeValue != value) {\r\n                if (onItemChanged === undefined) {\r\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\r\n                    this.props.data[itemSchema.name] = changeValue;\r\n                }\r\n                else {\r\n                    await onItemChanged(itemSchema, changeValue, value);\r\n                }\r\n            }\r\n            await itemEdit.end();\r\n        }\r\n        catch (err) {\r\n            // 如果直接back，会触发reject，就到这里了\r\n            console.log('no value changed');\r\n        }\r\n    }\r\n}\r\n\r\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\r\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\r\n    if (uiItem !== undefined) {\r\n        switch (uiItem.widget) {\r\n            default: break;\r\n            case 'text': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n            case 'radio': itemEdit = RadioItemEdit; break;\r\n            case 'select': itemEdit = SelectItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) {\r\n        switch (itemSchema.type) {\r\n            case 'string': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) return;\r\n    return new itemEdit(itemSchema, uiItem, label, value);\r\n}\r\n","export * from './edit';\r\n","import * as React from 'react';\r\nimport className from 'classnames';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\r\n\r\nexport abstract class PropRow {\r\n    setValues(values: any) {}\r\n    abstract render(key:string): any;\r\n}\r\n\r\nexport class PropBorder extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div key={'_b_' + key} className=\"\">\r\n            <div className=\"w-100\">\r\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class PropGap extends PropRow {\r\n    private param: string;\r\n    constructor(param?: string) {\r\n        super();\r\n        this.param = param;\r\n    }\r\n    render(key:string): JSX.Element {\r\n        let w: string;\r\n        switch (this.param) {\r\n            default: w = 'py-2'; break;\r\n            case '=': w = 'py-1'; break;\r\n            case '-': w = 'pb-1'; break;\r\n        }\r\n        let cn = className(w);\r\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\r\n    }\r\n}\r\n\r\nconst valueAlignStart = 'justify-content-start';\r\nconst valueAlignCenter = 'justify-content-center';\r\nconst valueAlignEnd = 'justify-content-end';\r\nexport abstract class LabeledPropRow extends PropRow {\r\n    protected gridProps: PropGridProps;\r\n    protected prop: LabeledProp;\r\n    protected content: any;\r\n    protected col: string;\r\n    //protected values: any;\r\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\r\n        super();\r\n        this.gridProps = gridProps;\r\n        this.prop = prop;\r\n        this.col = gridProps.labelFixLeft === true? 'col' : 'col-sm';\r\n        //this.values = values;\r\n    }\r\n    render(key:string):any {\r\n        let {onClick, bk} = this.prop;\r\n        let cn = className({\r\n            \"cursor-pointer\": onClick !== undefined,\r\n            \"bg-white\": bk === undefined, \r\n            \"row\": true\r\n        });\r\n        return <div key={key} className={cn} onClick={onClick}>\r\n            {this.renderLabel()}\r\n            {this.renderProp()}\r\n        </div>;\r\n    }\r\n    protected renderLabel():any {\r\n        let {label} = this.prop;\r\n        if (label === undefined) return null;\r\n        return <label className={this.col + '-3 col-form-label'}>\r\n            {label}\r\n        </label>;\r\n    }\r\n    protected renderProp():any {\r\n        let {label} = this.prop;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string = this.col + (label===undefined? '-12':'-9');\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n    protected renderPropBody():any {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.renderPropContent()}\r\n        </div>;\r\n    }\r\n    protected renderPropContent():any {\r\n        return this.content;\r\n    }\r\n}\r\n\r\nexport class StringPropRow extends LabeledPropRow {\r\n    protected prop: StringProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class NumberPropRow extends LabeledPropRow {\r\n    protected prop: NumberProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class ListPropRow extends LabeledPropRow {\r\n    protected prop: ListProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else {\r\n            let list = this.prop.list;\r\n            if (typeof list === 'string') this.content = values[list];\r\n            else this.content = undefined;\r\n        }\r\n    }\r\n    protected renderPropBody() {\r\n        let {list, row} = this.prop;\r\n        let items:any[] = typeof list === 'string'? this.content : list;\r\n        if (items === undefined) return <div/>;\r\n        // new row(item)\r\n        return <div className=\"w-100\">\r\n            {\r\n                items.map((item, index) => <React.Fragment key={index}>\r\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\r\n                    {React.createElement(row, item)}\r\n                </React.Fragment>)\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ComponentPropRow extends LabeledPropRow {\r\n    protected prop: ComponentProp;\r\n    protected renderPropBody() {\r\n        let {component} = this.prop;\r\n        return component;\r\n    }\r\n    protected renderProp():any {\r\n        let {label, full} = this.prop;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string;\r\n        if (full !== true)\r\n            col = this.col + (label===undefined? '-12':'-9');\r\n        else\r\n            col = 'w-100';\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n}\r\n","import { PropGridProps } from './PropGrid';\r\nimport {\r\n    PropRow, PropBorder, PropGap, \r\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow\r\n} from './row';\r\n\r\nexport interface Format {\r\n\r\n}\r\n\r\nexport interface PropBase {\r\n    onClick?: () => void;\r\n}\r\n\r\nexport interface LabeledProp extends PropBase {\r\n    label?: string;\r\n    bk?: string;\r\n    vAlign?: 'top' | 'bottom' | 'center' | 'stretch';\r\n}\r\n\r\nexport interface StringProp extends LabeledProp {\r\n    type: 'string';\r\n    name: string;\r\n}\r\n\r\nexport interface NumberProp extends LabeledProp {\r\n    type: 'number';\r\n    name: string;\r\n}\r\n\r\nexport interface FormatProp extends LabeledProp {\r\n    type: 'format';\r\n    format: Format;\r\n}\r\n\r\nexport interface ListProp extends LabeledProp {\r\n    type: 'list';\r\n    list: string | any[];  // string 表示名字，否则就是值\r\n    row: new (props: any) => React.Component;\r\n}\r\n\r\nexport interface ComponentProp extends LabeledProp {\r\n    type: 'component';\r\n    full?: boolean;\r\n    component: any; //JSX.Element;\r\n}\r\n\r\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\r\n\r\nexport class PropView {\r\n    private gridProps: PropGridProps\r\n    private props: Prop[];\r\n    //private values:any;\r\n    private rows: PropRow[];\r\n\r\n    constructor(gridProps: PropGridProps, props: Prop[]) {\r\n        this.gridProps = gridProps;\r\n        this.props = props;\r\n        //this.values = values;\r\n        this.buildRows();\r\n    }\r\n\r\n    private buildRows() {\r\n        this.rows = [];\r\n        let isGap: boolean = true;\r\n        for (let prop of this.props) {\r\n            if (typeof prop === 'string') {\r\n                this.rows.push(new PropGap(prop));\r\n                isGap = true;\r\n            }\r\n            else {\r\n                if (!isGap) this.rows.push(new PropBorder());\r\n                let row;\r\n                switch (prop.type) {\r\n                    default: continue;\r\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\r\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\r\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\r\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\r\n                }\r\n                this.rows.push(row);\r\n                isGap = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    setValues(values: any) {\r\n        for (let r of this.rows) r.setValues(values);\r\n    }\r\n\r\n    render() {\r\n        return this.rows.map((row, index) => row.render(String(index)));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, PropView} from './propView';\r\n\r\nexport interface PropGridProps {\r\n    className?: string;\r\n    rows: Prop[];\r\n    values: any;\r\n    alignValue?: 'left'|'center'|'right';\r\n    labelFixLeft?: boolean;\r\n}\r\n\r\n@observer\r\nexport class PropGrid extends React.Component<PropGridProps> {\r\n    render() {\r\n        let {className, rows, values} = this.props;\r\n        let propView = new PropView(this.props, rows);\r\n        propView.setValues(values);\r\n        let cn = classNames('container-fluid', className);\r\n        return <div className={cn}>\r\n            {propView.render()}\r\n        </div>;\r\n    }\r\n}\r\n","export * from './propView';\r\nexport * from './row';\r\nexport * from './PropGrid';\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {IObservableValue, IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport '../css/va-row.css';\r\n\r\nexport interface ListItem {\r\n    key?: string|number;\r\n    date?: Date;\r\n    icon?: string | JSX.Element;\r\n    main?: string;\r\n    vice?: string;\r\n    middle?: string | JSX.Element;\r\n    midSize?: number;\r\n    right?: string | JSX.Element;\r\n    onClick?: () => void;\r\n    unread?: number|IComputedValue<number>;         // <0 表示red dot\r\n}\r\n\r\nexport interface ListRowProps extends ListItem {\r\n    //onClick: () => void;\r\n}\r\n\r\nexport interface ListRowState {\r\n    pressed: boolean;\r\n}\r\n\r\n@observer\r\nexport class ListRow extends React.Component<ListRowProps, ListRowState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pressed: false,\r\n        }\r\n    }\r\n    render() {\r\n        let {date, main, vice, middle, midSize, icon, unread, right, onClick} = this.props;\r\n        let header, isIcon:boolean, noteNum;\r\n        if (unread !== undefined) {\r\n            let uv:number;\r\n            if (typeof unread === 'number') uv = unread;\r\n            else uv = unread.get();\r\n                if (uv > 0)\r\n                noteNum = <b>{uv}</b>;\r\n            else if (uv < 0)\r\n                noteNum = <b className='dot' />;\r\n        }\r\n        switch (typeof icon) {\r\n            case 'object':\r\n                header = <header>{icon}{noteNum}</header>; \r\n                isIcon= false;\r\n                break;\r\n            case 'string': \r\n                header = <header className='icon'><img src={icon as string} />{noteNum}</header>;\r\n                isIcon= true; \r\n                break;\r\n        }\r\n        let mid;\r\n        if (middle !== undefined) {\r\n            switch (typeof middle) {\r\n                case 'string':\r\n                    mid = <div style={{flex:midSize}}>{middle}</div>;\r\n                    break;\r\n                default:\r\n                    mid = middle;\r\n                    break;\r\n            }\r\n        }\r\n        let footer;\r\n        if (right !== undefined) {\r\n            if (typeof right === 'string')\r\n                footer = <footer><small className=\"text-muted\">{right}</small></footer>;\r\n            else\r\n                footer = <footer>{right}</footer>;\r\n        }\r\n        let viceSpan;\r\n        if (vice !== undefined) viceSpan = <span>{vice}</span>;\r\n        let cn = classNames('va-row', {icon:isIcon, pressed: this.state.pressed}, {\"va-action\": onClick !== undefined});\r\n        return (\r\n        <li className={cn} onClick={onClick}>\r\n            {header}\r\n            <div>\r\n                <div>{main}</div>\r\n                {viceSpan}\r\n            </div>\r\n            {mid}\r\n            {footer}\r\n        </li>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {ListItem, ListRow} from './listRow';\r\n\r\nexport interface ListViewProps {\r\n    className?: string;\r\n    items?: any[];\r\n    renderRow?: (item:any, index:number, ex?:any) => JSX.Element;\r\n    ex?: any;\r\n    header?: string|JSX.Element;\r\n    beforeLoad?: string|JSX.Element;\r\n    none?: string|JSX.Element;\r\n    footer?: string|JSX.Element;\r\n    itemClick?: (item:any)=>void;\r\n    converter?: (item:any)=>ListItem;\r\n}\r\n\r\n@observer\r\nexport class ListView extends React.Component<ListViewProps, null> {\r\n    render() {\r\n        let {header, items, beforeLoad, none, renderRow, className, footer, itemClick, converter} = this.props;\r\n        let cn = classNames(className, 'va-list');\r\n        let content, elHeader;\r\n        if (items === undefined)\r\n            content = beforeLoad === null? null : <li className='empty'>\r\n                {beforeLoad || '...'}\r\n            </li>;\r\n        else if (items.length === 0) {\r\n            content = (\r\n            <li className='empty'>\r\n                {\r\n                    none || '[none]'\r\n                }\r\n            </li>);\r\n        }\r\n        else if (renderRow !== undefined) {\r\n            content = items.map((item, index) => renderRow(item, index, this.props.ex));\r\n        }\r\n        else {\r\n            content = items.map((item, index) => {\r\n                let onClick = item.onClick;\r\n                if (onClick === undefined && itemClick !== undefined) \r\n                    onClick = ()=>itemClick(item);\r\n                let listItem:ListItem;\r\n                if (converter !== undefined) {\r\n                    listItem = converter(item);\r\n                    if (listItem === undefined) return null;\r\n                }\r\n                else {\r\n                    listItem = {\r\n                        ...item\r\n                    }\r\n                }\r\n                if (listItem.key === undefined) listItem.key = listItem.main;\r\n                return <ListRow onClick={onClick} {...listItem} />;\r\n            });\r\n        }\r\n        if (header !== undefined) {\r\n            if (typeof header === 'string') {\r\n                elHeader = <div className='va-list-header'>{header}</div>;\r\n            }\r\n            else {\r\n                elHeader = header;\r\n            }\r\n        }\r\n\r\n        return (\r\n        <div className={cn}>\r\n            {elHeader}\r\n            <ul>\r\n                {content}\r\n            </ul>\r\n            {footer}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport { IObservableValue } from 'mobx/lib/internal';\r\n\r\nexport type TabCaption = (selected:boolean) => JSX.Element;\r\n\r\nexport interface TabProp {\r\n    name: string;\r\n    caption: TabCaption;\r\n    content: () => JSX.Element;\r\n    notify?: IObservableValue<number>;\r\n}\r\n\r\nexport interface TabsProps {\r\n    tabs: TabProp[];\r\n    size?: 'sm' | 'lg' | 'md';\r\n    tabBack?: string;\r\n    contentBack?: string;\r\n    sep?: string;\r\n    selected?: string;\r\n}\r\n\r\nclass Tab {\r\n    name: string;\r\n    @observable selected: boolean;\r\n    caption: TabCaption;\r\n    contentBuilder: ()=>JSX.Element;\r\n    notify: IObservableValue<number>;\r\n\r\n    private _content: JSX.Element;\r\n    get content(): JSX.Element {\r\n        if (this.selected !== true) return this._content;\r\n        if (this._content !== undefined) return this._content;\r\n        return this._content = this.contentBuilder();\r\n    }\r\n}\r\n\r\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \r\n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\r\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\r\n    <small>{label}</small>\r\n</div>;\r\n\r\n@observer export class Tabs extends React.Component<TabsProps> {\r\n    private size: string;\r\n    private tabBack: string;\r\n    private contentBack: string;\r\n    private sep: string;\r\n    @observable private selectedTab: Tab;\r\n    @observable private tabs: Tab[] = [];\r\n\r\n    constructor(props: TabsProps) {\r\n        super(props);\r\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\r\n        switch (size) {\r\n            default:\r\n            case 'md': this.size = '3.2rem'; break;\r\n            case 'sm': this.size = '4rem'; break;\r\n            case 'lg': this.size = '2.5rem'; break;\r\n        }\r\n        this.tabs.push(...tabs.map(v => {\r\n                let tab = new Tab();\r\n                tab.name = v.name;\r\n                tab.selected = false;\r\n                tab.caption = v.caption;\r\n                tab.contentBuilder = v.content;\r\n                tab.notify = v.notify;\r\n                return tab;\r\n            }\r\n        ));\r\n        this.tabBack = tabBack || 'bg-light';\r\n        this.contentBack = contentBack;\r\n        this.sep = sep || 'border-top border-gray';\r\n        if (selected !== undefined) {\r\n            this.selectedTab = this.tabs.find(v => v.name === selected);\r\n        }\r\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\r\n        this.selectedTab.selected = true;\r\n    }\r\n\r\n    private tabClick = (tab:Tab) => {\r\n        this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    showTab(tabName: string) {\r\n        let tab = this.tabs.find(v => v.name === tabName);\r\n        if (tab === undefined) return;\r\n        if (this.selectedTab !== undefined) this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"tab\">\r\n            <div className={this.contentBack} style={{height: 'calc(100% - ' + this.size + ')'}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let style:React.CSSProperties={\r\n                        display: v.selected===true? undefined : 'none'};\r\n                    return <div key={index} style={style}>{v.content}</div>;\r\n                })}\r\n            </div>\r\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let {selected, caption, notify} = v;\r\n                    let notifyCircle:any;\r\n                    if (notify !== undefined) {\r\n                        let num = notify.get();\r\n                        if (num !== undefined) {\r\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\r\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\r\n                        }\r\n                    }\r\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\r\n                        <div className=\"align-self-center\">\r\n                            {notifyCircle}\r\n                            {caption(selected)}\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { VPage, Page, Form, ItemSchema, UiSchema, StringSchema, UiTextItem, UiPasswordItem, ButtonSchema, Edit, ImageSchema, nav, UiImageItem } from '../ui';\r\nimport userApi from './userApi';\r\n\r\nexport class EditMeInfo extends React.Component {\r\n    private schema:ItemSchema[] = [\r\n        {name:'nick', type:'string'} as StringSchema,\r\n        {name:'icon', type:'image'} as ImageSchema\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'头像'} as UiImageItem,\r\n        }\r\n    }\r\n    @observable private data:any;\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {nick, icon} = nav.user;\r\n        this.data = {\r\n            nick: nick,\r\n            icon: icon,\r\n        }\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        await userApi.userSetProp(name, newValue);\r\n        this.data[name] = newValue;\r\n        nav.user[name] = newValue;\r\n        nav.saveLocalUser();\r\n    }\r\n\r\n    render() {\r\n        return <Page header=\"个人信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={this.data}\r\n                onItemChanged={this.onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {FetchError} from '../fetchError';\r\nimport { refetchApi } from '../net';\r\n\r\nexport interface FetchErrorProps extends FetchError {\r\n    clearError: ()=>void\r\n}\r\n\r\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\r\n    private reApi = async () => {\r\n        this.props.clearError();\r\n        const {channel, url, options, resolve, reject} = this.props;\r\n        await refetchApi(channel, url, options, resolve, reject);\r\n    }\r\n    private close = async () => {\r\n        this.props.clearError();\r\n    }\r\n    render() {\r\n        let {error, url} = this.props;\r\n            //let errMsg = fetchError.errorMsg;\r\n        let errContent;\r\n        if (typeof error === 'object') {\r\n            let err = [];\r\n            for (let i in error) {\r\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\r\n            }\r\n            errContent = <ul>{err}</ul>;\r\n        }\r\n        else {\r\n            errContent = <div>{error}</div>;\r\n        }\r\n        return <li>\r\n            <article className=\"page-container\">\r\n                <section>\r\n                    <div  className=\"va-error\">\r\n                        <div>网络出现问题</div>\r\n                        <div>点击重新访问</div>\r\n                        <div>url: {url}</div>\r\n                        {errContent}\r\n                        <div className=\"p-3\">\r\n                            <button type='button' onClick={this.reApi}>重新API</button>\r\n                            <button type='button' onClick={this.close}>关闭</button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </article>\r\n        </li>;\r\n    }\r\n}\r\n","import {User, Guest, Unit} from './user';\r\n\r\nexport interface ClearableData {\r\n    clear(): void;\r\n}\r\n\r\nexport class Data<T> implements ClearableData {\r\n    private name: string;\r\n    private value?: T;\r\n    constructor(name: string) {this.name = name; }\r\n    get(): T {\r\n        if (this.value !== undefined) return this.value;\r\n        let v = localStorage.getItem(this.name);\r\n        return this.value = v === null ? undefined : JSON.parse(v); \r\n    }\r\n    set(value: T) {\r\n        if (!value) { this.clear(); return; }\r\n        this.value = value;\r\n        localStorage.setItem(this.name, JSON.stringify(value));\r\n    }\r\n    clear() {\r\n        this.value = undefined;\r\n        localStorage.removeItem(this.name);\r\n    }\r\n}\r\n\r\nexport class LocalData {\r\n    user = new Data<User>('user');\r\n    guest = new Data<Guest>('guest');\r\n    unit = new Data<Unit>('unit');\r\n    homeTabCur = new Data<number>('homeTabCur');\r\n\r\n    logoutClear() {\r\n        [\r\n            this.user,\r\n            this.unit,\r\n            this.homeTabCur\r\n        ].map(d => d.clear());\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import {CenterApi, User, appInFrame} from 'tonva-tools';\r\nimport { string } from 'prop-types';\r\n\r\nclass MainApi extends CenterApi {\r\n    async stickies():Promise<any[]> {\r\n        return await this.get('sticky/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async ties():Promise<any[]> {\r\n        return await this.get('tie/list', {start:0, pageSize:30});\r\n    }\r\n\r\n    async apps(unit:number):Promise<any> {\r\n        return await this.get('tie/apps', {unit:unit});\r\n    }\r\n\r\n    async appApi(unit:number, app:number, apiName:string) {\r\n        return await this.get('tie/app-api', {unit:unit, app:app, apiName:apiName});\r\n    }\r\n\r\n    async userId(name:string):Promise<number> {\r\n        return await this.get('tie/user-id', {name:name});\r\n    }\r\n\r\n    async userAdminUnits():Promise<any[]> {\r\n        return await this.get('tie/user-admin-units', {});\r\n    }\r\n\r\n    async sendMessage(toUser:number, type:string, content:any) {\r\n        let {unit} = appInFrame;\r\n        let adminApp = 0;\r\n        return await this.post('tie/send-message', {\r\n            type: type, \r\n            fromUnit: unit, \r\n            fromApp: adminApp,\r\n            toUser: toUser, \r\n            content: content, \r\n        });\r\n    }\r\n\r\n    async unit(unit:number):Promise<any> {\r\n        return await this.get('unit/', {unit:unit});\r\n    }\r\n\r\n    async unitMemberCount(unit:number):Promise<number> {\r\n        return await this.get('unit/member-count', {unit:unit});\r\n    }\r\n\r\n    async unitAdmins(unit:number):Promise<any[]> {\r\n        return await this.get('unit/admins', {unit:unit});\r\n    }\r\n\r\n    async unitSetAdmin(fellow:number, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/set-admin', {fellow:fellow, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitAddAdmin(user:string, unit:number, isOwner:number, isAdmin:number):Promise<any> {\r\n        return await this.post('unit/add-admin', {user:user, unit:unit, isOwner:isOwner, isAdmin:isAdmin});\r\n    }\r\n\r\n    async unitApps(unit:number):Promise<any[]> {\r\n        return await this.get('unit/apps', {unit:unit});\r\n    }\r\n\r\n    async unitAddApp(unit:number, app:number):Promise<number> {\r\n        let ret = await this.post('unit/add-app', {unit:unit, app:app});\r\n        return ret;\r\n    }\r\n\r\n    async unitDeleteApp(unit:number, app:number, deleted:number):Promise<void> {\r\n        await this.post('unit/delete-app', {unit:unit, app:app, deleted:deleted});\r\n    }\r\n\r\n    async unitChangeProp(unit:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-prop', {unit:unit, prop:prop, value:value});\r\n    }\r\n\r\n    async searchApp(unit:number, key:string, pageStart:any, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/search-app', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n\r\n    async unitRoles(unit:number):Promise<any[]> {\r\n        return await this.get('unit/roles', {unit:unit});\r\n    }\r\n\r\n    async unitAddRole(unit:number, name:string, discription:string):Promise<number> {\r\n        return await this.post('unit/add-role', {unit:unit, name:name, discription:discription});\r\n    }\r\n\r\n    async unitRoleChangeProp(unit:number, role:number, prop:string, value:any):Promise<void> {\r\n        await this.post('unit/change-role-prop', {unit:unit, role:role, prop:prop, value:value});\r\n    }\r\n\r\n    async unitRoleApps(unit:number, role:number):Promise<any[]> {\r\n        return await this.get('unit/role-apps', {unit:unit, role:role});\r\n    }\r\n\r\n    async unitRoleSetApps(unit:number, role:number, apps:number[]):Promise<void> {\r\n        await this.post('unit/role-set-apps', {unit:unit, role:role, apps:apps});\r\n    }\r\n\r\n    async unitMembers(unit:number, role:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/members', {unit:unit, role:role, key, pageStart, pageSize});\r\n    }\r\n\r\n    async unitAssignMember(unit:number, member:number, assigned:string):Promise<void> {\r\n        await this.post('unit/assign-member', {unit:unit, member:member, assigned:assigned});\r\n    }\r\n\r\n    async unitMemberRoles(unit:number, member:number):Promise<any[]> {\r\n        return await this.get('unit/member-roles', {unit:unit, member:member});\r\n    }\r\n\r\n    async unitSetMemberRoles(unit:number, member:number, roles:number[]):Promise<void> {\r\n        await this.post('unit/member-set-roles', {unit:unit, member:member, roles:roles});\r\n    }\r\n\r\n    async unitUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppUsers(unit:number, key:string, pageStart:number, pageSize:number):Promise<any> {\r\n        return await this.get('unit/app-users', {unit: unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneAppUsers(unit:number, app:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-app-users', {unit: unit, app:app, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitOneUserApps(unit:number, user:number, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/one-user-apps', {unit: unit, user:user, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitAppEditUsers(unit:number, app:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/app-edit-users', {unit: unit, app:app, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async unitUserEditApps(unit:number, user:number, key:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        return await this.get('unit/user-edit-apps', {unit: unit, user:user, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async bindAppUser(unit:number, app:number, user:number, bind:number):Promise<void> {\r\n        await this.post('unit/bind-app-user', {unit: unit, app:app, user:user, bind:bind});\r\n    }\r\n\r\n    async userFromKey(key:string):Promise<any> {\r\n        return await this.get('tie/user-from-key', {key:key});\r\n    }\r\n    async unitAddUser(unit:number, user:number) {\r\n        await this.post('unit/add-user', {unit:unit, user:user});\r\n    }\r\n}\r\n\r\nexport const mainApi = new MainApi('tv/', undefined);\r\n","import {CenterApi} from 'tonva-tools';\r\n\r\nclass DevApi extends CenterApi {\r\n    async uqBuilderUrl():Promise<any> {\r\n        let ret = await this.get('uq-builder-url', undefined);\r\n        return ret;\r\n    }    \r\n    async counts(unit:number):Promise<any> {\r\n        return await this.get('counts', {unit:unit});\r\n    }\r\n    async app(id:number):Promise<any> {\r\n        return await this.get('app', {id:id});\r\n    }\r\n    async uq(id:number):Promise<any> {\r\n        return await this.get('uq', {id:id});\r\n    }\r\n    async server(id:number):Promise<any> {\r\n        return await this.get('server', {id:id});\r\n    }\r\n    async uqdb(id:number):Promise<any> {\r\n        return await this.get('uqdb', {id:id});\r\n    }\r\n    async apps(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('apps', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async buses(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('buses', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async servers(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('servers', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async uqdbs(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('uqdbs', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async services(unit:number, pageSize:number=30):Promise<any[]> {\r\n        return await this.get('services', {unit:unit, pageSize: pageSize});\r\n    }\r\n    async saveApp(values:any):Promise<number> {\r\n        return await this.post('app-save', values);\r\n    }\r\n    async saveUq(values:any):Promise<number> {\r\n        return await this.post('uq-save', values);\r\n    }\r\n    async saveBus(values:any):Promise<number> {\r\n        return await this.post('bus-save', values);\r\n    }\r\n    async saveServer(values:any):Promise<number> {\r\n        return await this.post('server-save', values);\r\n    }\r\n    async saveUqdb(values:any):Promise<number> {\r\n        return await this.post('uqdb-save', values);\r\n    }\r\n    async saveService(values:any):Promise<number> {\r\n        return await this.post('service-save', values);\r\n    }\r\n    async delApp(unit:number,id:number):Promise<void> {\r\n        return await this.post('app-del', {unit:unit, id:id});\r\n    }\r\n    async delUq(unit:number,id:number):Promise<void> {\r\n        return await this.post('uq-del', {unit:unit, id:id});\r\n    }\r\n    async delBus(unit:number,id:number):Promise<void> {\r\n        return await this.post('bus-del', {unit:unit, id:id});\r\n    }\r\n    async delServer(unit:number,id:number):Promise<void> {\r\n        return await this.post('server-del', {unit:unit, id:id});\r\n    }\r\n    async delUqdb(unit:number,id:number):Promise<void> {\r\n        return await this.post('uqdb-del', {unit:unit, id:id});\r\n    }\r\n    async delService(unit:number,id:number):Promise<void> {\r\n        return await this.post('service-del', {unit:unit, id:id});\r\n    }\r\n    async loadAppUqs(app:number):Promise<any[]> {\r\n        return await this.get('app-uqs', {app: app});\r\n    }\r\n    async appBindUq(unit:number,app:number,uqs:{id:number, access:string[]}[]):Promise<void> {\r\n        let uqsText:string;\r\n        if (uqs !== undefined) {\r\n            uqsText = uqs.map(v => String(v.id)+'|'+v.access.join(',')).join(';');\r\n        }\r\n        await this.post('app-bind-uq', {unit:unit, app:app, uqs:uqsText});\r\n    }\r\n    async searchUq(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uq-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async getMyUqs(unit:number):Promise<any[]> {\r\n        return await this.get('my-uqs', {unit:unit});\r\n    }\r\n    async searchApp(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('app-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchServer(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('server-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    async searchUqdb(unit:number,key:string,pageStart:number,pageSize:number):Promise<any[]> {\r\n        return await this.get('uqdb-search', {unit:unit, key:key, pageStart:pageStart, pageSize:pageSize});\r\n    }\r\n    //async loadAppServices(unit:number, app:number):Promise<any[]> {\r\n    //    return await this.get('app-services', {unit:unit, app:app});\r\n    //}\r\n    async loadUqServices(unit:number, uq:number):Promise<any[]> {\r\n        return await this.get('uq-services', {unit:unit, uq:uq});\r\n    }\r\n    async changeServiceProp(unit:number, service:number, prop:string, value:any):Promise<number> {\r\n        return await this.post('service-change-prop', {unit:unit, service:service, prop:prop, value:value});\r\n    }\r\n    async uqGetEntities(unit:number, uq:number):Promise<any[][]> {\r\n        return await this.get('uq-get-entities', {unit:unit, uq:uq});\r\n    }\r\n}\r\n\r\nexport const devApi = new DevApi('tv/dev/', undefined);\r\n","import {observable} from 'mobx';\r\nimport {UnitAdmin} from '../model';\r\nimport {mainApi} from '../api';\r\nimport {Store} from './index';\r\n\r\nexport class Admins {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n    }\r\n\r\n    @observable cur: UnitAdmin = undefined;\r\n    @observable owners: UnitAdmin[] = undefined;\r\n    @observable admins: UnitAdmin[] = undefined;\r\n    @observable fellows: UnitAdmin[] = undefined;\r\n    \r\n    async load(): Promise<void> {\r\n        let unit = this.store.unit;\r\n        if (unit === undefined) return;\r\n        if (unit.id === undefined) return;\r\n        if (this.admins !== undefined) return;\r\n        let all = await mainApi.unitAdmins(unit.id);\r\n        let owners:UnitAdmin[] = [];\r\n        let admins:UnitAdmin[] = [];\r\n        let fellows:UnitAdmin[] = [];\r\n        all.forEach(ua => {\r\n            let {isOwner, isAdmin} = ua;\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                fellows.push(ua);\r\n            else {\r\n                if (isOwner === 1) owners.push(ua);\r\n                if (isAdmin === 1) admins.push(ua);\r\n            }\r\n        });\r\n        this.owners = owners;\r\n        this.admins = admins;\r\n        this.fellows = fellows;\r\n    }\r\n\r\n    private removeCur(arr: UnitAdmin[]) {\r\n        let index = arr.findIndex(v => v.id===this.cur.id);\r\n        if (index >=0) arr.splice(index, 1);\r\n    }\r\n\r\n    async unitSetAdmin(isOwner:number, isAdmin:number) {\r\n        let cur = this.cur;\r\n        cur.isOwner = isOwner;\r\n        cur.isAdmin = isAdmin;\r\n        let fellowId = cur.id, unitId = this.store.unit.id;\r\n        await mainApi.unitSetAdmin(fellowId, unitId, isOwner, isAdmin);\r\n        this.removeCur(this.owners);\r\n        this.removeCur(this.admins);\r\n        this.removeCur(this.fellows);\r\n        if (isOwner === 0 && isAdmin === 0)\r\n            this.fellows.unshift(cur);\r\n        else {\r\n            if (isOwner === 1) this.owners.unshift(cur);\r\n            if (isAdmin === 1) this.admins.unshift(cur);\r\n        }\r\n    }\r\n\r\n    async addNew(user:string, isOwner:number, isAdmin:number):Promise<UnitAdmin> {\r\n        let admin = await mainApi.unitAddAdmin(user, this.store.unit.id, isOwner, isAdmin);\r\n        if (admin !== undefined) {\r\n            let cur = this.cur = admin;\r\n            this.removeCur(this.owners);\r\n            this.removeCur(this.admins);\r\n            this.removeCur(this.fellows);\r\n            if (isOwner === 0 && isAdmin === 0)\r\n                this.fellows.unshift(cur);\r\n            else {\r\n                if (isOwner === 1) this.owners.unshift(cur);\r\n                if (isAdmin === 1) this.admins.unshift(cur);\r\n            }\r\n        }\r\n        return admin;\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {devApi} from '../api';\r\nimport {DevModel, Unit} from '../model';\r\nimport {Store} from './index';\r\n\r\ninterface Counts {\r\n    uq: number;\r\n    app: number;\r\n    bus: number;\r\n    server: number;\r\n    service: number;\r\n    //uqdb: number;\r\n}\r\n\r\nexport abstract class ObjItems<T extends DevModel.ObjBase> {\r\n    protected store:Store;\r\n    protected dev:Dev;\r\n    constructor(store:Store, dev:Dev) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    @observable cur: T = undefined;\r\n\r\n    async load():Promise<void> {\r\n         let ret = await this._load();\r\n         this.items = ret;\r\n    }\r\n    protected abstract _load():Promise<T[]>;\r\n    async saveCur(item:T):Promise<boolean> {\r\n        let values:any = {};\r\n        if (this.cur !== undefined) {\r\n            _.assign(values, this.cur, item);\r\n        }\r\n        else {\r\n            _.assign(values, item);\r\n        }\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (this.cur === undefined) {\r\n            if (id === 0) return false;\r\n            values.id = id;\r\n            if (this.items !== undefined) this.items.unshift(values);\r\n            this._inc();\r\n            this.cur = observable(values);\r\n        }\r\n        else {\r\n            _.assign(this.cur, values);\r\n        }\r\n        return true;\r\n    }\r\n    async save(item:T):Promise<T> {\r\n        let values:any = {};\r\n        _.assign(values, item);\r\n\r\n        values.unit = item.unit = this.store.unit.id;\r\n        let id = await this._save(values);\r\n        if (id === 0) return;\r\n        values.id = id;\r\n        return values;\r\n    }\r\n    protected abstract _save(item:T):Promise<number>;\r\n    async del():Promise<void> {\r\n        let c = this.cur;\r\n        if (c === undefined) return;\r\n        let id = c.id;\r\n        await this._del(c);\r\n        if (this.items === undefined) return;\r\n        let index = this.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.items.splice(index, 1);\r\n            this._dec();\r\n        }\r\n    }\r\n    protected abstract _del(item:T):Promise<void>;\r\n    protected abstract _inc();\r\n    protected abstract _dec();\r\n}\r\n\r\nclass Apps extends ObjItems<DevModel.App> {\r\n    @observable uqs: DevModel.UQ[] = undefined;\r\n    @observable searchedUqs: DevModel.UQ[] = undefined;\r\n    //@observable service: DevModel.Service = null;\r\n    protected async _load() {\r\n        return await devApi.apps(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.App):Promise<number> {\r\n        return await devApi.saveApp(item);\r\n    }\r\n    protected async _del(item:DevModel.App):Promise<void> {\r\n        await devApi.delApp(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.app++; }\r\n    protected _dec() { this.dev.counts.app--; }\r\n\r\n    public async loadCurUqs() {\r\n        let ret = await devApi.loadAppUqs(this.cur.id);\r\n        this.uqs = ret;\r\n    }\r\n    public async searchUq(key:string) {\r\n        this.searchedUqs = await devApi.searchUq(this.store.unit.id, key, 0, searchPageSize);\r\n    }\r\n    public async appBindUq(uqs:{id:number, access:string[]}[], bind:boolean) {\r\n        let allUqs:{id:number, access:string[]}[] = this.uqs.map(v => {\r\n            let {id, access} = v;\r\n            return {id: id, access: [access]};\r\n        });\r\n        for (let uq of uqs) {\r\n            let index = allUqs.findIndex(v => v.id === uq.id);\r\n            if (bind === true) {\r\n                if (index < 0) allUqs.unshift(uq);\r\n            }\r\n            else {\r\n                allUqs.splice(index, 1);\r\n            }\r\n        }\r\n        await devApi.appBindUq(this.store.unit.id, this.cur.id, allUqs);\r\n        for (let uq of uqs) {\r\n            let index = this.uqs.findIndex(a => a.id === uq.id);\r\n            if (index>=0) this.uqs.splice(index, 1);\r\n            if (bind === true) {\r\n                if (this.searchedUqs !== undefined) {\r\n                    let find = this.searchedUqs.find(a => a.id === uq.id);\r\n                    if (find !== undefined) this.uqs.unshift(find);\r\n                }\r\n            }\r\n            else {\r\n                // 已经删除，不需要处理\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Uqs extends ObjItems<DevModel.UQ> {\r\n    protected async _load() {\r\n        let ret = await devApi.uqs(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.UQ):Promise<number> {\r\n        //let {access} = item;\r\n        //if (!access) access = \"*\";\r\n        //let parts = access.split(',').map(v => v.trim()).filter(v => v!=='');\r\n        //item.access = parts.join(',');\r\n        return await devApi.saveUq(item);\r\n    }\r\n    protected async _del(item:DevModel.UQ):Promise<void> {\r\n        await devApi.delUq(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uq++; }\r\n    protected _dec() { this.dev.counts.uq--; }\r\n}\r\n\r\nclass Buses extends ObjItems<DevModel.Bus> {\r\n    protected async _load() {\r\n        let ret = await devApi.buses(this.store.unit.id);\r\n        return ret;\r\n    }\r\n    protected async _save(item:DevModel.Bus):Promise<number> {\r\n        return await devApi.saveBus(item);\r\n    }\r\n    protected async _del(item:DevModel.Bus):Promise<void> {\r\n        await devApi.delBus(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.bus++; }\r\n    protected _dec() { this.dev.counts.bus--; }\r\n}\r\n\r\nclass Servers extends ObjItems<DevModel.Server> {\r\n    protected async _load() {\r\n        return await devApi.servers(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Server):Promise<number> {\r\n        return await devApi.saveServer(item);\r\n    }\r\n    protected async _del(item:DevModel.Server):Promise<void> {\r\n        await devApi.delServer(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.server++; }\r\n    protected _dec() { this.dev.counts.server--; }\r\n}\r\n/*\r\nclass Uqdbs extends ObjItems<DevModel.Uqdb> {\r\n    protected async _load() {\r\n        return await devApi.uqdbs(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Uqdb):Promise<number> {\r\n        return await devApi.saveUqdb(item);\r\n    }\r\n    protected async _del(item:DevModel.Uqdb):Promise<void> {\r\n        await devApi.delUqdb(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.uqdb++; }\r\n    protected _dec() { this.dev.counts.uqdb--; }\r\n}\r\n*/\r\nclass Services extends ObjItems<DevModel.Service> {\r\n    protected async _load() {\r\n        return await devApi.services(this.store.unit.id);\r\n    }\r\n    protected async _save(item:DevModel.Service):Promise<number> {\r\n        return await devApi.saveService(item);\r\n    }\r\n    protected async _del(item:DevModel.Service):Promise<void> {\r\n        await devApi.delService(this.store.unit.id, item.id);\r\n    }\r\n    protected _inc() { this.dev.counts.service++; }\r\n    protected _dec() { this.dev.counts.service--; }\r\n    async changeProp(prop:string, value:any):Promise<number> {\r\n        let ret = await devApi.changeServiceProp(this.store.unit.id, this.cur.id, prop, value);\r\n        switch (prop) {\r\n            case 'url': this.cur.url = value; break;\r\n            case 'server': this.cur.server = value; break;\r\n            case 'db': this.cur.db = value; break;\r\n            case 'db_type': this.cur.db_type = value; break;\r\n            case 'connection': this.cur.connection = value; break;\r\n        }\r\n        return ret;\r\n    }\r\n    async loadUqServices(uq:number):Promise<void> {\r\n        let ret = await devApi.loadUqServices(this.store.unit.id, uq);\r\n        this.items = ret[0];\r\n    }\r\n}\r\n\r\nconst searchPageSize = 50;\r\ntype Search = (unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\nclass SearchItems<T extends DevModel.ObjBase> {\r\n    private store:Store;\r\n    private dev:Dev;\r\n    private search:(unit:number,key:string,pageStart:number,pageSize:number)=>Promise<any[]>;\r\n\r\n    constructor(store:Store, dev:Dev, search:Search) {\r\n        this.store = store;\r\n        this.dev = dev;\r\n        this.search = search;\r\n    }\r\n\r\n    @observable items: T[] = undefined;\r\n    allLoaded: boolean = false;\r\n    private key: string;\r\n    private pageStart = 0;\r\n\r\n    async first(key:string) {\r\n        this.key = key;\r\n        this.items = undefined;\r\n        this.allLoaded = false;\r\n        this.pageStart = 0;\r\n        await this.more();\r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        let ret = await this.search(this.store.unit.id, this.key, this.pageStart, searchPageSize);\r\n        let len = ret.length;\r\n        if (len > searchPageSize) {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len > 0) {\r\n            this.pageStart = ret[len-1].id;\r\n            if (this.items === undefined)\r\n                this.items = ret;\r\n            else\r\n                this.items.push(...ret);\r\n        }\r\n        else {\r\n            this.items = [];\r\n        }\r\n    }\r\n}\r\n\r\nexport class Dev {\r\n    private store:Store;\r\n    constructor(store:Store) {\r\n        this.store = store;\r\n        this.apps = new Apps(store, this);\r\n        this.uqs = new Uqs(store, this);\r\n        this.buses = new Buses(store, this);\r\n        this.servers = new Servers(store, this);\r\n        //this.uqdbs = new Uqdbs(store, this);\r\n        this.services = new Services(store, this);\r\n        this.searchApp = new SearchItems<DevModel.App>(store, this, devApi.searchApp.bind(devApi));\r\n        this.searchUq = new SearchItems<DevModel.UQ>(store, this, devApi.searchUq.bind(devApi));\r\n        this.searchServer = new SearchItems<DevModel.Server>(store, this, devApi.searchServer.bind(devApi));\r\n    }\r\n\r\n    @observable counts:Counts = undefined;\r\n    apps:Apps = undefined;\r\n    uqs:Uqs = undefined;\r\n    buses:Buses = undefined;\r\n    servers:Servers = undefined;\r\n    //uqdbs:Uqdbs = undefined;\r\n    services:Services = undefined;\r\n\r\n    searchApp:SearchItems<DevModel.App> = undefined;\r\n    searchUq:SearchItems<DevModel.UQ> = undefined;\r\n    searchServer:SearchItems<DevModel.Server> = undefined;\r\n    searchUqdb:SearchItems<DevModel.Uqdb> = undefined;\r\n    \r\n    async loadCounts(): Promise<void> {\r\n        let {unit} = this.store;\r\n        this.counts = await devApi.counts(unit.id);\r\n    }\r\n}\r\n","import {CacheIds} from 'tonva-tools';\r\nimport {Id, Unit, DevModel} from '../model';\r\nimport {mainApi, devApi} from '../api';\r\n\r\nexport class CacheUnits extends CacheIds<Unit> {\r\n    protected async _loadIds(ids:number[]):Promise<Unit[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<Unit> {\r\n        return await mainApi.unit(id);\r\n    }\r\n}\r\n\r\nexport class CacheUqs extends CacheIds<DevModel.UQ> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.UQ[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.UQ> {\r\n        return await devApi.uq(id);\r\n    }\r\n}\r\n\r\nexport class CacheApps extends CacheIds<DevModel.App> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.App[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.App> {\r\n        return await devApi.app(id);\r\n    }\r\n}\r\n\r\nexport class CacheServers extends CacheIds<DevModel.Server> {\r\n    protected async _loadIds(ids:number[]):Promise<DevModel.Server[]> {\r\n        return;\r\n    }\r\n    protected async _loadId(id:number):Promise<DevModel.Server> {\r\n        return await devApi.server(id);\r\n    }\r\n}\r\n","import {observable, autorun} from 'mobx';\r\nimport _ from 'lodash';\r\nimport {appInFrame, host} from 'tonva-tools';\r\nimport {mainApi, devApi} from '../api';\r\nimport {Unit, UnitApps, App, Api, UnitAdmin, UnitApp, Role, RoleMember} from '../model';\r\nimport {Admins} from './admins';\r\nimport {Dev} from './dev';\r\nimport {CacheUnits, CacheUqs, CacheApps, CacheServers} from './cacheIds';\r\n\r\nexport class Store {\r\n    private get unitId():number {return appInFrame.unit;};\r\n    admins:Admins;\r\n    dev:Dev;\r\n    cacheUnits: CacheUnits;\r\n    cacheUqs: CacheUqs;\r\n    cacheApps: CacheApps;\r\n    cacheServers: CacheServers;\r\n    uqServer: string;\r\n\r\n    @observable unit: Unit;\r\n    @observable memberCount: number;\r\n    @observable apps: UnitApp[];\r\n    @observable role:Role;\r\n    @observable roles: Role[];\r\n    @observable roleApps: UnitApp[];\r\n    @observable roleMember: RoleMember;\r\n    @observable roleMembers: RoleMember[];\r\n    @observable memberRoles: Role[];\r\n\r\n    init() {\r\n        this.unit = undefined;\r\n        this.admins = new Admins(this);\r\n        this.dev = new Dev(this);\r\n        this.cacheUnits = new CacheUnits();\r\n        this.cacheUqs = new CacheUqs();\r\n        this.cacheApps = new CacheApps();\r\n        this.cacheServers = new CacheServers();\r\n    }\r\n\r\n    logout() {\r\n        //meInFrame.app = undefined;\r\n        appInFrame.hash = undefined;\r\n        //let unitId = process.env.REACT_APP_DEBUG_UNITID;\r\n        //if (unitId !== undefined)\r\n        //    meInFrame.unit = Number(unitId);\r\n        appInFrame.unit = undefined;\r\n        this.init();\r\n        this.memberCount = undefined;\r\n        this.apps = undefined;\r\n        this.role = undefined;\r\n        this.roles = undefined;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRole(role:Role) {\r\n        if (this.role === role) return;\r\n        this.role = role;\r\n        this.roleApps = undefined;\r\n        this.roleMember = undefined;\r\n        this.roleMembers = undefined;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    setRoleUser(user:RoleMember) {\r\n        if (this.roleMember === user) return;\r\n        this.roleMember = user;\r\n        this.memberRoles = undefined;\r\n    }\r\n\r\n    async unitChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitChangeProp(this.unit.id, prop, value);\r\n        this.unit[prop] = value;\r\n    }\r\n\r\n    async loadApps(): Promise<void> {\r\n        if (this.apps !== undefined) return;\r\n        this.apps = await mainApi.unitApps(this.unitId);\r\n    }\r\n\r\n    async loadUnit(): Promise<void> {\r\n        if (this.unitId === undefined) return;\r\n        let ret = await mainApi.unit(this.unitId);\r\n        this.unit = ret;\r\n        console.log(\"loadUnit unit=%s\", ret);\r\n        this.memberCount = await mainApi.unitMemberCount(this.unitId);\r\n        let uqServer = await devApi.uqBuilderUrl();\r\n        let {url, urlDebug} = uqServer;\r\n        this.uqServer = host.getUrlOrDebug(url, urlDebug);\r\n        console.log(\"uq-build: %s\", JSON.stringify(this.uqServer));\r\n    }\r\n\r\n    async stopUnitApp(appId:number): Promise<void> {\r\n        await mainApi.unitDeleteApp(this.unit.id, appId, 1);\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 0;\r\n    }\r\n\r\n    async restoreUnitApp(appId:number): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, appId);\r\n        if (ret <= 0) return ret;\r\n        let app = this.apps.find(v => v.id === appId);\r\n        app.inUnit = 1;\r\n        return 1;\r\n    }\r\n\r\n    async addUnitApp(app:UnitApp): Promise<number> {\r\n        let ret = await mainApi.unitAddApp(this.unit.id, app.id);\r\n        if (ret <= 0) return ret;\r\n        this.apps.push(app);\r\n        return 1;\r\n    }\r\n\r\n    async loadRoles(): Promise<void> {\r\n        if (this.roles !== undefined) return;\r\n        let ret = await mainApi.unitRoles(this.unit.id);\r\n        ret.forEach(v => {\r\n            switch (v.id) {\r\n                case 1: \r\n                    v.name= '访客';\r\n                    v.discription = '可以获取开放信息';\r\n                    break;\r\n                case 2: \r\n                    v.name= '普通';\r\n                    v.discription = '能访问最基本的功能';\r\n                    break;\r\n            }\r\n        });\r\n        this.roles = ret;\r\n    }\r\n\r\n    async unitAddRole(name:string, discription:string): Promise<number> {\r\n        let id = await mainApi.unitAddRole(this.unit.id, name, discription);\r\n        if (id > 0) {\r\n            this.roles.push({\r\n                id: id,\r\n                name: name,\r\n                discription: discription,\r\n                count: undefined,\r\n            });\r\n        }\r\n        return id;\r\n    }\r\n\r\n    async roleChangeProp(prop:string, value:any):Promise<void> {\r\n        await mainApi.unitRoleChangeProp(this.unit.id, this.role.id, prop, value);\r\n        this.role[prop] = value;\r\n    }\r\n\r\n    async loadRoleApps():Promise<void> {\r\n        let ret = await mainApi.unitRoleApps(this.unit.id, this.role.id);\r\n        this.roleApps = ret.map(v => {\r\n            return this.apps.find(app=>app.id === v.id);\r\n        });\r\n    }\r\n\r\n    async setRoleApps(apps:UnitApp[]) {\r\n        await mainApi.unitRoleSetApps(this.unit.id, this.role.id, apps.map(v=>v.id));\r\n        this.roleApps = apps;\r\n    }\r\n\r\n    async loadMembers():Promise<void> {\r\n        let ret = await mainApi.unitMembers(this.unit.id, this.role === undefined? 0:this.role.id, undefined, 0, 100);\r\n        this.roleMembers = ret;\r\n    }\r\n\r\n    async unitAssignMember(assigned:string):Promise<void> {\r\n        await mainApi.unitAssignMember(this.unit.id, this.roleMember.id, assigned);\r\n        this.roleMember.assigned = assigned;\r\n    }\r\n\r\n    async loadMemberRoles():Promise<void> {\r\n        let ret = await mainApi.unitMemberRoles(this.unit.id, this.roleMember.id);\r\n        let roles:Role[] = ret.map(v => {\r\n            let rId = v.id;\r\n            let role = this.roles.find(r => r.id === rId);\r\n            return _.clone(role);\r\n        });\r\n        this.memberRoles = roles;\r\n    }\r\n\r\n    async setMemberRoles(memberRoles:Role[]) {\r\n        await mainApi.unitSetMemberRoles(this.unit.id, this.roleMember.id, memberRoles.map(v=>v.id));\r\n        this.roles.forEach(role => {\r\n            let rId = role.id;\r\n            let org = this.memberRoles.find(v => v.id === rId);\r\n            let cur = memberRoles.find(v => v.id === rId);\r\n            if (org !== undefined) {\r\n                if (cur !== undefined) return;\r\n                role.count--;\r\n                return;\r\n            }\r\n            if (cur === undefined) return;\r\n            role.count++;\r\n        });\r\n        this.memberRoles = memberRoles;\r\n    }\r\n};\r\n\r\nexport const store = new Store();\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Context, Form, Schema, UiSchema, UiTextItem} from 'tonva-tools';\r\nimport {store} from '../store';\r\n\r\n@observer\r\nexport default class NewFellowPage extends React.Component<{isOwner:boolean, isAdmin:boolean}> {\r\n    //private form: TonvaForm;\r\n    private schema: Schema = [\r\n        {name:'user', type:'string', required:true},\r\n        {name:'submit', type:'submit'}\r\n    ]\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            user: {widget:'text', maxLength: 100, placeholder: '用户名', label: '管理员'} as UiTextItem,\r\n            submit: {widget:'button', label: '添加', className: 'btn btn-primary'}\r\n        }\r\n    }\r\n    /*\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '用户名',\r\n            field: {\r\n                type: 'string',\r\n                name: 'user',\r\n                required: true,\r\n                maxLength: 100,\r\n            },\r\n            face: {\r\n                type: 'string',\r\n                placeholder: '用户名',\r\n            }\r\n        },\r\n    ];\r\n    private schema:FormSchema = new FormSchema({\r\n        fields: [\r\n            {\r\n                type: 'string',\r\n                name: 'user',\r\n                placeholder: '用户名',\r\n                label: '邀请成员',\r\n                rules: ['required', 'maxlength:100']\r\n            },\r\n        ],\r\n        onSumit: this.onSendInvitation,\r\n        submitText: '邀请'\r\n    });\r\n    */\r\n    private onSendInvitation = async (name:string, context:Context): Promise<string> => {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let user = context.form.data['user'];\r\n        let ret = await store.admins.addNew(user, isOwner?1:0, isAdmin?1:0);\r\n        if (ret !== undefined) {\r\n            nav.pop();\r\n            return;\r\n        }\r\n        return user + '没有关注小号';\r\n        /*\r\n        let msg = {a: 1, b: 'ddd'};\r\n        let toName = values['user'];\r\n        let userId = await mainApi.userId(toName);\r\n        if (userId === 0) {\r\n            this.form.formView.setError('user', '\\'' + toName +  '\\' 不存在');\r\n            return;\r\n        }\r\n        await mainApi.sendMessage(userId, 'unit-follow-invite', msg);\r\n        nav.replace(<Page header='完成' back=\"close\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>邀请成员</CardTitle>\r\n                    <CardText>已发送给{toName}，请等待确认。</CardText>\r\n                    <Button color='primary' onClick={()=>nav.back()}>完成</Button>\r\n                </CardBody>\r\n            </Card>\r\n        </Page>);\r\n        */\r\n    }\r\n    render() {\r\n        let {isOwner, isAdmin} = this.props;\r\n        let caption = isOwner? \"高管\" : \"管理员\";\r\n        return <Page header={'新增' + caption}>\r\n            <div className=\"container\">\r\n                <div className='my-4 text-info'>\r\n                    只有关注本小号的用户，才能成为{caption}\r\n                </div>\r\n                <Form schema={this.schema} uiSchema={this.uiSchema} onButtonClick={this.onSendInvitation}/>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n// <ValidForm formSchema={this.schema} />\r\n//<TonvaForm ref={f=>this.form=f} formRows={this.formRows} onSubmit={this.onSendInvitation} />\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Schema, UiSchema, ItemSchema, UiCheckItem, UiButton, ButtonSchema, Form, Context, Image} from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport { UnitAdmin } from '../model/index';\r\n//import {mainApi} from '../api';\r\n//, ValidForm, FormSchema, FormFields, Field\r\n\r\n@observer\r\nexport default class EditAdmin extends React.Component {\r\n    private onSubmit = async (name:string, context:Context) => {\r\n        let {isOwner, isAdmin} = context.form.data;\r\n        await store.admins.unitSetAdmin(isOwner, isAdmin);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit} = store;\r\n        let {isRoot, isOwner, isAdmin} = unit;\r\n        let unitAdmin = store.admins.cur;\r\n        let owner:ItemSchema = {name: 'isOwner', type: 'boolean'};\r\n        let admin:ItemSchema = {name: 'isAdmin', type: 'boolean'};\r\n        let submit:ButtonSchema = {name: 'submit', type: 'submit'};\r\n        let schema:ItemSchema[];\r\n        if (isRoot === 1) schema = [owner, admin, submit];\r\n        else if (isOwner === 1) schema = [admin, submit];\r\n        let data = {\r\n            isOwner: unitAdmin.isOwner,\r\n            isAdmin: unitAdmin.isAdmin,\r\n        };\r\n\r\n        let uiSchema = {\r\n            items: {\r\n                'isOwner': {widget: 'checkbox', label: '高管', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'isAdmin': {widget: 'checkbox', label: '管理员', trueValue:1, falseValue:0} as UiCheckItem,\r\n                'submit': {widget: 'button', label: '提交', className: 'btn btn-primary'} as UiButton,\r\n            }\r\n        };\r\n\r\n        return <Page header='权限'>\r\n            <div className=\"px-3\">\r\n                <Fellow {...store.admins.cur} />\r\n                <Form schema={schema} uiSchema={uiSchema} formData={data} onButtonClick={this.onSubmit} />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nconst Fellow = (props:UnitAdmin) => {\r\n    let {name, nick, icon} = props;\r\n    //<img className='w-75' src={icon || process.env.REACT_APP_DEFAULT_ICON} />\r\n    return <div>\r\n        <div className='d-flex my-4'>\r\n            <Image className=\"w-3c h-3c mr-3\" src={icon} />\r\n            <div className=\"\">\r\n                <h4 className='text-dark'>{name}</h4>\r\n                {nick && <h6><small className='text-secondary'>{nick}</small></h6>}\r\n            </div>\r\n        </div>\r\n        <hr className='mb-4' />\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, Image} from 'tonva-tools';\r\nimport {UnitApps, UnitAdmin} from '../model';\r\nimport {store} from '../store';\r\nimport NewFellow from './NewFellow';\r\nimport EditAdmin from './EditAdmin';\r\nimport {LMR, Badge, List} from 'tonva-react-form';\r\n\r\n@observer\r\nexport default class AdministorsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.admins.load();\r\n    }\r\n\r\n    onNewFellow() {\r\n        //nav.push(<NewFellow />);\r\n    }\r\n    onItemClick(ua:UnitAdmin) {\r\n        store.admins.cur = ua;\r\n        nav.push(<EditAdmin />);\r\n    }\r\n    private row = ({icon, name, nick}:UnitAdmin) => {\r\n        let content = nick?\r\n            <><b>{nick}</b> &nbsp; <small className=\"text-muted\">{name}</small></>\r\n            :\r\n            <b>{name}</b>;\r\n        let left = <Image className=\"w-2-5c h-2-5c\" src={icon} />; \r\n        return <LMR className=\"py-2 px-3 align-items-stretch\" left={left}>\r\n            <div className=\"px-3\">{content}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    private onNewOwner = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, true, false);\r\n    }\r\n\r\n    private onNewAdmin = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        this.newAdmin(evt, false, true);\r\n    }\r\n\r\n    private newAdmin(evt: React.MouseEvent<HTMLAnchorElement>, isOwner:boolean, isAdmin:boolean) {\r\n        evt.preventDefault();\r\n        nav.push(<NewFellow isOwner={isOwner} isAdmin={isAdmin} />);\r\n    } \r\n    render() {\r\n        //let n = nav;\r\n        //let me = n.local.user.get().id;\r\n        let {unit} = store;\r\n        if (unit === undefined) return;\r\n        let {owners, admins, fellows} = store.admins;\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.onNewFellow}>新增成员</button>;\r\n\r\n        let showOwners = false, showAdmins = false;\r\n        let ownersView, adminsView, fellowsView;\r\n        if (unit.isRoot === 1) {\r\n            showOwners = true;\r\n            showAdmins = true;\r\n        }\r\n        if (unit.isOwner === 1) showAdmins = true;\r\n        if (showOwners === true) {\r\n            let header = <LMR \r\n                className=\"px-3 py-1 small\"\r\n                left=\"高管\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewOwner}>新增</a>} />;\r\n            ownersView = <List \r\n                className=\"my-4\"\r\n                header={header} items={owners}\r\n                none=\"[无]\"\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        if (showAdmins === true) {\r\n            let header = <LMR \r\n                className=\"px-3 py-1 small\"\r\n                left=\"管理员\" \r\n                right={<a className=\"small\" href='#' onClick={this.onNewAdmin}>新增</a>} />;\r\n            adminsView = <List \r\n                className='my-4' \r\n                header={header} items={admins} \r\n                none='[无]'\r\n                item={{onClick: this.onItemClick, render: this.row}}\r\n            />;\r\n        }\r\n        return <Page header=\"管理员\" right={right}>\r\n            {ownersView}\r\n            {adminsView}\r\n            <div className=\"my-4 p-3\">\r\n                <div className=\"ml-2 mb-2\">说明</div>\r\n                <div className=\"\">\r\n                    <ul className=\"pl-2\">\r\n                        <li className=\"card-text\">管理组包括主人、高管、管理员</li>\r\n                        <li className=\"card-text\">小号主人可以增减高管</li>\r\n                        <li className=\"card-text\">高管可以增减管理员</li>\r\n                        <li className=\"card-text\">管理员可以管理小号，程序的开发，以及用户</li>\r\n                        <li className=\"card-text\">开发号高管可以增减编辑APP，UQ，Server，Service</li>\r\n                        <li className=\"card-text\">开发号管理员可以编译指定UQ，BUS</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {EasyDate} from 'tonva-react-form';\r\n\r\nexport interface IdDatesProps {\r\n    date_init: Date;\r\n    date_update: Date;\r\n}\r\n\r\nexport class IdDates extends React.Component<IdDatesProps> {\r\n    render() {\r\n        let {date_init, date_update} = this.props;\r\n        return <small className=\"text-muted\">\r\n            上次修改: <EasyDate date={date_update}/>\r\n            <i className=\"fa fa-fw\" />\r\n            创建: <EasyDate date={date_init}/>\r\n        </small>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport function span(\r\n    isLink:boolean,\r\n    className:string, \r\n    onClick:(evt:React.MouseEventHandler<HTMLElement>)=>void,\r\n    content:any): JSX.Element\r\n{\r\n    let tag:string;\r\n    let props:any;\r\n    if (isLink === true) {\r\n        tag = 'a';\r\n        props = {\r\n            className: classNames(className, 'cursor-pointer'),\r\n            onClick: onClick,\r\n            href: '#',\r\n        }\r\n    }\r\n    else {\r\n        tag = 'span';\r\n        props = {\r\n            className: className,\r\n        }\r\n    }\r\n    return React.createElement(tag, props, content);\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport {span} from './span';\r\n\r\nexport interface UnitLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UnitSpan extends React.Component<UnitLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UnitInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let content;\r\n        let {name, nick, discription} = unit;\r\n        let disc = discription && '- ' + discription;\r\n        if (nick) {\r\n            content = <>{nick} &nbsp; <small className=\"text-muted\">{name} {disc}</small></>;\r\n        }\r\n        else if (name) {\r\n            content = <>{name} &nbsp; <small className=\"text-muted\">{disc}</small></>;\r\n        }\r\n        else {\r\n            content = id;\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nexport class UnitName extends React.Component<UnitLinkProps> {\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        if (id === undefined) return null;\r\n        let unit = store.cacheUnits.get(id);\r\n        let {name} = unit;\r\n        return <>{name}</>;\r\n    }\r\n}\r\n\r\nclass UnitInfo extends React.Component<UnitLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let unit = store.cacheUnits.get(this.props.id);\r\n        let {name, nick, icon, discription} = unit;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={discription} />},\r\n            '',\r\n        ];\r\n        return <Page header={'小号 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","export const appIcon = process.env.REACT_APP_ICON;\r\nexport const appItemIcon = process.env.REACT_APP_ITEM_ICON;\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from 'consts';\r\nimport {store} from 'store';\r\nimport {IdDates} from './idDates';\r\nimport {span} from './span';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface UqLinkProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class UqSpan extends React.Component<UqLinkProps> {\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<UqInfo id={this.props.id} />);\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, className, isLink} = this.props;\r\n        let api = store.cacheUqs.get(id);\r\n        let content;\r\n        if (api === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, discription} = api;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n@observer\r\nclass UqInfo extends React.Component<UqLinkProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let uq = store.cacheUqs.get(this.props.id);\r\n        let {name, discription, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n        ];\r\n        return <Page header={'UQ - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface AppSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class AppSpan extends React.Component<AppSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheApps.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<AppInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let app = store.cacheApps.get(id);\r\n        let content;\r\n        if (app === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {name, icon, discription} = app;\r\n            let isPublic = app.public;\r\n            let disc = discription && '- ' + discription;\r\n            if (name !== undefined) {\r\n                content = <React.Fragment>{name} &nbsp; <small className=\"text-muted\">{disc}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\n\r\n@observer\r\nclass AppInfo extends React.Component<AppSpanProps> {\r\n    private rows:Prop[];\r\n    @observable private apis:ListProp = {\r\n        label: '关联API', type: 'list', list: undefined, row: AppRow\r\n    };\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    async componentDidMount() {\r\n        this.apis.list = await devApi.loadAppUqs(this.props.id);\r\n    }\r\n    render() {\r\n        let app = store.cacheApps.get(this.props.id);\r\n        let {unit, name, discription, icon, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={icon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            this.apis,\r\n        ];\r\n        return <Page header={'APP - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass AppRow extends React.Component<any> {\r\n    render() {\r\n        let {name, discription} = this.props;\r\n        let disp;\r\n        if (discription) disp = <div className=\"small text-muted\">{discription}</div>;\r\n        return <div className='form-control-plaintext'>\r\n            <div>{name}</div>\r\n            {disp}\r\n        </div>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport {Prop, ListProp, Media, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page}  from 'tonva-tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {store} from '../store';\r\nimport {DevModel} from '../model';\r\nimport {devApi} from '../api';\r\nimport {span} from './span';\r\nimport {IdDates} from './idDates';\r\nimport {UnitSpan} from './unitSpan';\r\n\r\nexport interface ServerSpanProps {\r\n    className?: string;\r\n    id: number;\r\n    isLink?: boolean;\r\n}\r\n\r\n@observer\r\nexport class ServerSpan extends React.Component<ServerSpanProps> {\r\n    /*\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        let {id} = this.props;\r\n        store.cacheServers.get(id);\r\n    }\r\n    */\r\n    onClick = (evt) => {\r\n        evt.preventDefault();\r\n        nav.push(<ServerInfo id={this.props.id} />)\r\n        return false;\r\n    }\r\n    render() {\r\n        let {id, isLink, className} = this.props;\r\n        let server = store.cacheServers.get(id);\r\n        let content;\r\n        if (server === null) {\r\n            content = id;\r\n        }\r\n        else {\r\n            let {cloud, ip, discription} = server;\r\n            if (discription !== undefined) {\r\n                content = <React.Fragment>{discription} &nbsp; <small className=\"text-muted\">{ip}</small></React.Fragment>;\r\n            }\r\n            else {\r\n                content = id;\r\n            }\r\n        }\r\n        return span(isLink, className, this.onClick, content);\r\n    }\r\n}\r\n\r\nclass ServerInfo extends React.Component<ServerSpanProps> {\r\n    private rows:Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let server = store.cacheServers.get(this.props.id);\r\n        let {discription, cloud, ip, unit, date_init, date_update} = server;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={ip} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <Page header={'服务器 - 详细资料'}>\r\n            <PropGrid rows={this.rows} values={this.props} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\n\r\ninterface StringValueEditProps {\r\n    title: string;\r\n    onChanged:(value:any, orgValue:any)=>Promise<string|void>;\r\n    value?: any;\r\n    buttonText?: string;\r\n    info?: string;\r\n}\r\ninterface StringValueEditState {\r\n    disabled: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport class StringValueEdit extends React.Component<StringValueEditProps, StringValueEditState> {\r\n    //private input:HTMLInputElement;\r\n    protected value: string;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: true,\r\n        };\r\n    }\r\n    /*\r\n    private ref = (input:HTMLInputElement) => {\r\n        if (!input) return;\r\n        input.value = this.props.value || '';\r\n        this.input = input;\r\n    }*/\r\n    private onChange = (evt:React.FormEvent<HTMLInputElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        });\r\n        \r\n    }\r\n    protected onSubmit = async () => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        let v = this.value; // this.input.value.trim();\r\n        let onChanged = this.props.onChanged;\r\n        if (onChanged !== undefined) {\r\n            let ret = await onChanged(v, org);\r\n            if (typeof ret === 'string') {\r\n                this.setState({error: ret});\r\n                return;\r\n            }\r\n            nav.pop();\r\n        }\r\n    }\r\n    protected renderControl() {\r\n        return <input className=\"form-control w-100\" type=\"text\"\r\n            // ref={this.ref}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onChange} />\r\n    }\r\n    render() {\r\n        let {title, onChanged, buttonText, info, value} = this.props;\r\n        let {disabled, error} = this.state;\r\n        let right = <button\r\n            className=\"btn btn-success btn-sm\"\r\n            disabled={disabled}\r\n            onClick={this.onSubmit}\r\n        >\r\n            {buttonText||'保存'}\r\n        </button>;\r\n        let errorDiv;\r\n        if (error !== undefined) errorDiv = <div className='text-danger'>{error}</div>;\r\n        return <Page header={title} right={right}>\r\n            <div className=\"my-4 mx-3\">\r\n                {this.renderControl()}\r\n                {errorDiv}\r\n                <small className=\"d-block mt-2 text-muted\">{info}</small>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class TextValueEdit extends StringValueEdit {\r\n    /*\r\n    private textArea:HTMLTextAreaElement;\r\n    private refTextArea = (textArea:HTMLTextAreaElement) => {\r\n        if (!textArea) return;\r\n        textArea.value = this.props.value || '';\r\n        this.textArea = textArea;\r\n    }\r\n    */\r\n    private onTextAreaChange = (evt:React.FormEvent<HTMLTextAreaElement>) => {\r\n        let val = this.props.value;\r\n        let org = val && val.trim();\r\n        this.value = evt.currentTarget.value.trim();\r\n        this.setState({\r\n            disabled: org === this.value\r\n        })\r\n    }\r\n    protected renderControl() {\r\n        return <textarea className=\"form-control w-100\" rows={8}\r\n            // ref={this.refTextArea}\r\n            defaultValue={this.props.value}\r\n            onChange={this.onTextAreaChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport interface IdPickPageProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n    idFromItem: (item:any) => number;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\n\r\n@observer\r\nexport class IdPickPage extends React.Component<IdPickPageProps> {\r\n    @observable private items:any[];\r\n\r\n    async componentDidMount() {\r\n        let {candidateItems, params} = this.props;\r\n        this.items = Array.isArray(candidateItems)? \r\n            candidateItems \r\n            : await candidateItems(params, '');\r\n    }\r\n    private itemClick = (item:any):Promise<void> => {\r\n        let {resolve, idFromItem} = this.props;\r\n        resolve(idFromItem(item));\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private onSearch = async (key: string):Promise<void> => {\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.items = ret;\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid, FA} from 'tonva-react-form';\r\nimport {nav, Page, PageItems} from 'tonva-tools';\r\nimport {IdDates, UnitSpan} from '../tools';\r\nimport {UnitApp, DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport { devApi } from 'api';\r\n\r\n@observer\r\nexport class Info extends React.Component<{app:UnitApp, appActed?:(appId:number, inUnit:number)=>void}> {\r\n    @observable private uqAccesses: any[];\r\n    async componentWillMount() {\r\n        this.uqAccesses = await devApi.loadAppUqs(this.props.app.id);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:any, index:number):JSX.Element => {\r\n        let {name, owner, unit, discription} = uqAccess;\r\n        return <LMR className=\"py-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            {owner} / {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private act = async () => {\r\n        let {app, appActed} = this.props;\r\n        let {id, unit, inUnit} = app;\r\n        let newInUnit:number = 1;\r\n        if (inUnit === 0) {\r\n            let ret = await store.restoreUnitApp(id);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        else if (inUnit === 1) {\r\n            await store.stopUnitApp(id);\r\n            newInUnit = 0;\r\n        }\r\n        else {\r\n            let newApp:UnitApp = _.clone(app);\r\n            newApp.id = id;\r\n            newApp.inUnit = 1;\r\n            let ret = await store.addUnitApp(newApp);\r\n            if (ret <= 0) alert('app 或者 uq 没有定义 service');\r\n        }\r\n        if (appActed !== undefined) {\r\n            appActed(id, newInUnit);\r\n        }\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, icon, inUnit, date_init, date_update} = this.props.app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let faName:string, text:string, color:string;\r\n        if (inUnit === 1) {\r\n            faName = 'ban';\r\n            text = '停用APP';\r\n            color = 'btn-danger';\r\n        }\r\n        else if (inUnit === 0) {\r\n            faName = 'refresh';\r\n            text = '恢复APP';\r\n            color = 'btn-success';\r\n        }\r\n        else {\r\n            faName = 'plus';\r\n            text = '启用APP';\r\n            color = 'btn-primary';\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '关联UQ', \r\n                component: <List className=\"w-100\" items={this.uqAccesses} item={{render: this.renderUqRow}} />\r\n            },\r\n            '',\r\n            '',\r\n            {\r\n                type: 'component', \r\n                bk: '', \r\n                component: <button className={classNames('btn', 'w-100', color)} onClick={this.act}>\r\n                    <FA name={faName} size=\"lg\" /> {text}\r\n                </button>\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IObservableArray} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {SearchBox, Media, List, LMR, Badge, Prop, PropGrid} from 'tonva-react-form';\r\nimport {nav, Page, PageItems, Image} from 'tonva-tools';\r\nimport {mainApi} from '../api';\r\nimport {store} from '../store';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\nclass PageApps extends PageItems<UnitApp> {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super();\r\n        this.unitId = unitId;\r\n    }\r\n    protected async load():Promise<UnitApp[]> {\r\n        return await mainApi.searchApp(this.unitId, this.param, this.pageStart, this.pageSize);\r\n    }\r\n    protected setPageStart(item:UnitApp) {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}\r\n\r\n@observer\r\nexport class NewApp extends React.Component {\r\n    private apps: PageApps;\r\n    constructor(props) {\r\n        super(props);\r\n        this.apps = new PageApps(store.unit.id);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.apps.first(key);\r\n    }\r\n    private appClick = (app:UnitApp) => {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} appActed={this.appActed}/>\r\n        </Page>);\r\n    }\r\n    private appActed = (appId:number, inUnit:number) => {\r\n        let apps = this.apps.items as IObservableArray<UnitApp>; //.replace .find(v => v.id === appId);\r\n        let app = apps.find(v => v.id === appId);\r\n        app.inUnit = inUnit;\r\n        apps.replace([app]);\r\n    }\r\n    private renderApp(app:UnitApp):JSX.Element {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let right;\r\n        if (inUnit === 1)\r\n            right = <small>已启用</small>;\r\n        else if (inUnit === 0)\r\n            right = <small>已停用</small>;\r\n        return <LMR className=\"px-3 py-2\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    render() {\r\n        let items = this.apps.items;\r\n        let center = <SearchBox onSearch={this.onSearch} \r\n            className=\"w-100 mx-1\" \r\n            placeholder=\"搜索App\" \r\n            maxLength={100} />;\r\n        return <Page header={center}>\r\n            <List\r\n                items={items}\r\n                item={{onClick:this.appClick, render:this.renderApp}}\r\n                before=\"搜索App名字\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, FA, SubmitResult, LMR, Badge} from 'tonva-react-form';\r\nimport {nav, Page, Image} from 'tonva-tools';\r\nimport {store} from '../store';\r\nimport {NewApp} from './new';\r\nimport {UnitApp} from '../model';\r\nimport {Info} from './info';\r\n\r\n@observer\r\nexport default class AppsPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n    }\r\n    private itemRender(app:UnitApp, index:number) {\r\n        let {name, discription, icon, inUnit} = app;\r\n        let ban;\r\n        if (inUnit === 0)\r\n            ban = <FA className=\"text-danger\" name='ban' />;\r\n        return <LMR className=\"px-3 py-1\"\r\n            left={<Badge><Image src={icon} /></Badge>}\r\n            right={ban}>\r\n            <div className=\"px-3\">\r\n                <div>{name}</div>\r\n                <small className=\"text-muted\">{discription}</small>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private appClick(app:UnitApp) {\r\n        nav.push(<Page header=\"App详细信息\">\r\n            <Info app={app} />\r\n        </Page>);\r\n    }\r\n    private newItem() {\r\n        nav.push(<NewApp {...this.props} />);\r\n    }\r\n    render() {\r\n        let right = <button \r\n            className='btn btn-secondary btn-sm' \r\n            onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"启停App\" right={right}>\r\n            <List items={store.apps} item={{render: this.itemRender, onClick: this.appClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {TonvaForm, SubmitResult, FormRow} from 'tonva-react-form';\r\nimport {nav, Page, ItemSchema, StringSchema, UiSchema, Form, Context} from 'tonva-tools';\r\nimport {store} from '../store';\r\n\r\nexport class NewRole extends React.Component {\r\n    /*\r\n    private form:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n    ];*/\r\n    private schema: ItemSchema[] = [\r\n        {name: 'name', type: 'string', maxLength: 5, required: true} as StringSchema,\r\n        {name: 'discription', type: 'string', maxLength: 250},\r\n        {name: 'submit', type: 'button'},\r\n    ];\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'},\r\n            discription: {widget: 'textarea', label: '描述'},\r\n            submit: {widget:'button', label: '提交'}\r\n        }\r\n    }\r\n    private onSubmit = async (buttonName:string, context: Context):Promise<SubmitResult> => {\r\n        //let {name, discription} = values;\r\n        let {name, discription} = this.context.formData;\r\n        let id = await store.unitAddRole(name, discription);\r\n        if (id <= 0) {\r\n            this.context.setError('name', '角色名 ' + name + ' 已经存在');\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    render() {\r\n        return <Page header=\"新建角色\">\r\n            <Form className=\"m-3\" \r\n                schema={this.schema} uiSchema={this.uiSchema} \r\n                formData={{}}\r\n                onButtonClick={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n    /*\r\n    <TonvaForm className=\"m-3\" ref={tf => this.form = tf} \r\n    formRows={this.formRows} \r\n    onSubmit={this.onSubmit} />\r\n    */\r\n}\r\n","import * as React from 'react';\r\nimport {List, LMR} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\n\r\ninterface Props {\r\n    role: Role;\r\n}\r\ninterface State {\r\n    apps: UnitApp[]\r\n}\r\nexport class RoleApps extends React.Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {apps:undefined};\r\n    }\r\n    async componentDidMount() {\r\n        let ret = await mainApi.unitRoleApps(store.unit.id, this.props.role.id);\r\n        this.setState({\r\n            apps: ret,\r\n        });\r\n    }\r\n    private renderRoleApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    render() {\r\n        let {role} = this.props;\r\n        return <Page header={role.name + ' - 可用APP'}>\r\n            <List\r\n                items={this.state.apps}\r\n                item={{render: this.renderRoleApp}}\r\n                none=\"没有APP\" />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Media, Muted, PropGrid, Prop} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {StringValueEdit} from '../tools';\r\nimport {RoleApps} from './roleApps';\r\n\r\n@observer\r\nexport class MemberPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    async onAssigned(value:any, orgValue:any):Promise<void> {\r\n        await store.unitAssignMember(value);\r\n    }\r\n    private renderMemberRole = (role:Role) => {\r\n        let {name, discription} = role;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={name}\r\n                right={<Muted>{discription}</Muted>} />\r\n    }\r\n    private roleClick(role:Role) {\r\n        nav.push(<RoleApps role={role} />);\r\n    }\r\n    private setRole = () => {\r\n        nav.push(<SetRole />);\r\n    }\r\n    render() {\r\n        let roleUser = store.roleMember;\r\n        let {nick, name, assigned, icon} = roleUser;\r\n        let disp = <div>\r\n            <div><Muted>唯一名: </Muted> &nbsp; {name}</div>\r\n            <div><Muted>昵称: </Muted> &nbsp; {nick||<Muted>[无]</Muted>}</div>\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component',\r\n                component: <Media icon={icon||appIcon} main={roleUser.assigned||nick||name} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                label: '备注名',\r\n                type: 'string',\r\n                name: 'assigned',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改备注名\"\r\n                    value={roleUser.assigned}\r\n                    onChanged={this.onAssigned} \r\n                    info=\"加一个备注，便于甄别用户\" />),\r\n            },\r\n            '',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.setRole}>修改角色</button>;\r\n        return <Page header=\"用户详情\" right={right}>\r\n            <PropGrid rows={rows} values={roleUser} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 所属角色</small></div>\r\n            <List\r\n                items={store.memberRoles} \r\n                item={{render: this.renderMemberRole, onClick: this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass SetRole extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n        await store.loadMemberRoles();\r\n    }\r\n    private renderRole(role:Role, index:number) {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={role.name}\r\n                right={<small className=\"text-muted\">{role.discription}</small>} />\r\n    }\r\n    private roleSelect(role:Role, isSelected: boolean, anySelected: boolean) {\r\n    }\r\n    private async submit() {\r\n        await store.setMemberRoles(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let roles = store.roles;\r\n        let memberRoles = store.memberRoles;\r\n        return <Page header=\"修改角色\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={roles}\r\n                selectedItems={memberRoles}\r\n                compare={(role:Role, selectRole:Role)=>role.id === selectRole.id}\r\n                item={{render: this.renderRole, onSelect: this.roleSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, Badge, FA, Muted, SearchBox} from 'tonva-react-form';\r\nimport {nav, Page, Image} from 'tonva-tools';\r\nimport {Role, RoleMember} from '../model';\r\nimport {store} from '../store';\r\nimport {mainApi} from '../api';\r\nimport {MemberPage} from './memberPage';\r\n\r\n@observer\r\nexport class MembersPage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadMembers();\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    private onSearch() {\r\n        let role = store.role;\r\n        let roleId = role === undefined? 0:role.id;\r\n        nav.push(<MemberSearch roleId={roleId} />);\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-sm\" onClick={this.onSearch}><FA name=\"search\" /></button>;\r\n        return <Page header=\"用户\" right={right}>\r\n            <List items={store.roleMembers} item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n\r\nconst MemberRow = (member:RoleMember) => {\r\n    let {nick, name, assigned, icon} = member;\r\n    let content;\r\n    if (assigned)\r\n        content = <><div><b>{assigned}</b> <Muted>{nick}</Muted></div><Muted>{name}</Muted></>;\r\n    else if (nick)\r\n        content = <><div><b>{nick}</b></div><Muted>{name}</Muted></>;\r\n    else\r\n        content = <div><b>{name}</b></div>;\r\n    return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n        left={<Badge size=\"sm\"><Image src={icon} /></Badge>}>\r\n        <div className=\"px-3\">{content}</div>\r\n    </LMR>;\r\n};\r\n\r\ninterface SearchProps {\r\n    roleId: number;\r\n}\r\ninterface SearchState {\r\n    members: RoleMember[];\r\n}\r\nexport class MemberSearch extends React.Component<SearchProps, SearchState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.state = {\r\n            members: null,\r\n        }\r\n    }\r\n    private async onSearch(key:string) {\r\n        let ret = await mainApi.unitMembers(store.unit.id, this.props.roleId, key, 0, 100);\r\n        this.setState({members: ret});\r\n    }\r\n    private renderMember(member:RoleMember, index:number):JSX.Element {\r\n        return <MemberRow {...member} />;\r\n    }\r\n    private userClick(user:RoleMember) {\r\n        store.setRoleUser(user);\r\n        nav.push(<MemberPage />);\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            maxLength={100}\r\n            placeholder=\"搜索用户\" />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.state.members}\r\n                item={{render: this.renderMember, onClick: this.userClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {List, Media, LMR, FA, PropGrid, Prop} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {StringValueEdit} from '../tools';\r\nimport {Role, UnitApp} from '../model';\r\nimport {store} from '../store';\r\nimport {MembersPage} from './membersPage';\r\n\r\n@observer\r\nexport class RolePage extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private editRole() {\r\n        nav.push(<EditRole />);\r\n    }\r\n    private renderRoleApp = (app:UnitApp, index:number) => {\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private roleAppClick = (app:UnitApp) => {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private addRoleApp() {\r\n        nav.push(<RoleApps />);\r\n    }\r\n    private members() {\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let {name, discription, count} = store.role;\r\n        let onMembersClick, membersLeft, membersRight;\r\n        if (count===undefined || count===null || count===0) {\r\n            membersLeft = <small className=\"text-muted\">无用户</small>;\r\n        }\r\n        else {\r\n            membersLeft = `共有 ${count} 用户`;\r\n            membersRight = <div><FA name=\"chevron-right\" /></div>;\r\n            onMembersClick = this.members;\r\n        }\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={undefined} main={name} discription={discription} />,\r\n                onClick: this.editRole,\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\" left={membersLeft} right={membersRight} />,\r\n                onClick: onMembersClick,\r\n            },\r\n            '=',\r\n        ];\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={()=>this.addRoleApp()}><FA name=\"plus\" /> APP</button>;\r\n        return <Page header=\"角色\" right={right}>\r\n            <PropGrid rows={rows} values={{}} />\r\n            <div className=\"px-3 py-1\"><small><FA name=\"angle-double-right\" /> 可用APP列表</small></div>\r\n            <List\r\n                items={store.roleApps} \r\n                item={{render: this.renderRoleApp, onClick:this.roleAppClick}}\r\n                none={<small className=\"text-muted px-3 py-1\">没有APP, 点击右上角按钮选择APP</small>} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass EditRole extends React.Component {\r\n    async onNameChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('name', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.roleChangeProp('discription', value);\r\n    }\r\n    render() {\r\n        let role = store.role;\r\n        let {id} = role;\r\n        let isSysRole = id === 1 || id === 2;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                label: '名称', \r\n                type: 'string',\r\n                name: 'name', \r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改名称\"\r\n                    value={role.name}\r\n                    onChanged={this.onNameChanged} \r\n                    info=\"好的名字便于理解\" />)\r\n            },\r\n            {\r\n                label: '描述',\r\n                type: 'string',\r\n                name: 'discription',\r\n                onClick: isSysRole? undefined : ()=>nav.push(<StringValueEdit \r\n                    title=\"修改描述\"\r\n                    value={role.discription}\r\n                    onChanged={this.onDiscriptionChanged} \r\n                    info=\"对角色做一个说明\" />)\r\n            },\r\n        ];\r\n        return <Page header=\"修改角色信息\">\r\n            <PropGrid rows={rows} values={role} alignValue=\"right\" />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass RoleApps extends React.Component {\r\n    private list:List;\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        await store.loadApps();\r\n        await store.loadRoleApps();\r\n    }\r\n    private renderApp(app:UnitApp, index:number) {\r\n        return <LMR className=\"py-1 px-2 align-items-center\"\r\n                left={app.name}\r\n                right={<small className=\"text-muted\">{app.discription}</small>} />\r\n    }\r\n    private appSelect(app:UnitApp, isSelected: boolean, anySelected: boolean) {\r\n\r\n    }\r\n    private async submit() {\r\n        await store.setRoleApps(this.list.selectedItems);\r\n        nav.pop();\r\n    }\r\n    render() {\r\n        let right = <button className=\"btn btn-success btn-sm\" onClick={this.submit}>保存</button>;\r\n        let apps = store.apps;\r\n        let roleApps = store.roleApps;\r\n        return <Page header=\"选择APP\" right={right}>\r\n            <List \r\n                ref={list=>this.list=list}\r\n                items={apps}\r\n                selectedItems={roleApps}\r\n                item={{render: this.renderApp, onSelect: this.appSelect}} />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {List, LMR, FA, Muted} from 'tonva-react-form';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {Role} from '../model';\r\nimport {store} from '../store';\r\nimport {NewRole} from './newRole';\r\nimport {RolePage} from './rolePage';\r\nimport {MembersPage} from './membersPage';\r\n\r\nconst midClassName = classNames('d-flex', 'h-100', 'align-items-center', 'px-5', 'small', 'text-muted');\r\n\r\n@observer\r\nexport class Members extends React.Component {\r\n    async componentDidMount() {\r\n        await store.loadRoles();\r\n    }\r\n    private renderRole = (role:Role, index:number) => {\r\n        let {name, discription, count} = role;\r\n        return <LMR\r\n            className=\"px-3 py-2\" \r\n            left={name}\r\n            right={String(count || '')}>\r\n            <div className={midClassName}>\r\n                {discription}\r\n            </div>\r\n        </LMR>;\r\n    }\r\n    private roleClick = (role:Role) => {\r\n        store.setRole(role);\r\n        nav.push(<RolePage />)\r\n    }\r\n    private newRole = (evt: React.MouseEvent<HTMLAnchorElement>) => {\r\n        evt.preventDefault();\r\n        nav.push(<NewRole />);\r\n    }\r\n    private allUsersClick = () => {\r\n        store.setRole(undefined);\r\n        nav.push(<MembersPage />);\r\n    }\r\n    render() {\r\n        let right = <a className=\"small\" href='#' onClick={this.newRole}>新增</a>;\r\n        let header = <LMR className=\"px-3 small bg-light\" left=\"角色\" right={right} />;\r\n        return <Page header=\"用户角色\">\r\n            <LMR\r\n                className=\"my-3 px-3 py-2 bg-white\" \r\n                left={'用户'}\r\n                right={String(store.memberCount)}\r\n                onClick={this.allUsersClick}>\r\n                <div className={midClassName}>\r\n                    设置用户角色\r\n                </div>\r\n            </LMR>\r\n            <List\r\n                header={header}\r\n                items={store.roles}\r\n                none=\"[无]\"\r\n                item={{render:this.renderRole, onClick:this.roleClick}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Muted } from 'tonva-react-form';\r\nimport { left0 } from 'tonva-tools';\r\nimport { VMapMain, MapUI, Field, CMap }  from 'tonva-react-uq'; \r\n\r\nclass CMapTeamPerson extends CMap {\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        switch (keyField.name) {\r\n            default: return await super.searchOnKey(keyField, param);\r\n            case 'post': return await this.searchOnPost(param);                \r\n        }\r\n    }\r\n\r\n    private async searchOnPost(param: any):Promise<number> {\r\n        let querySelect = this.cQuerySelect('teamPosts');\r\n        let val = await querySelect.call(param);\r\n        return val['post'].id;\r\n    }\r\n}\r\n\r\nclass VMapTeamPerson extends VMapMain {\r\n}\r\n\r\nconst ui:MapUI = {\r\n    CMap: CMapTeamPerson,\r\n    keys: [\r\n        {\r\n            content: ({name, id}:any, x:any) => <><Muted>{x.team} &nbsp; </Muted> {name}</>,\r\n            none: (x:any)=>x.noStaff,\r\n        },\r\n        {\r\n            content: ({name, id}:any, x:any) => <><Muted>{x.staff} &nbsp; </Muted> {name} &nbsp; <Muted>{x.no} {left0(id, 4)}</Muted></>,\r\n            none: (x:any)=>x.noPost,\r\n        },\r\n        {\r\n            content: ({title, id}:any, x:any) => <><Muted>{x.post} &nbsp; </Muted> {title}</>,\r\n            none: undefined,\r\n        },\r\n    ]\r\n}\r\n\r\nexport default ui;\r\n","import { UqUI } from 'tonva-react-uq';\r\nimport map from './map';\r\nimport tuid from './tuid';\r\nimport query from './query';\r\nimport res from './res';\r\n\r\nconst uqUI:UqUI = {\r\n    map: map,\r\n    tuid: tuid,\r\n    query: query,\r\n    res: res,\r\n}\r\n\r\nexport default uqUI;\r\n","import teamPerson from './teamPerson';\r\n\r\nexport default {\r\n    teamPerson: teamPerson,\r\n};\r\n","import user from './user';\r\nimport organization from './organization';\r\n\r\nexport default {\r\n    user: user,\r\n    organization: organization,\r\n};\r\n","import * as React from 'react';\r\nimport { TuidUI, CTuidSelect, CQuery, QueryPageItems } from \"tonva-react-uq\";\r\nimport { PageItems } from \"tonva-tools\";\r\n\r\nclass CUserSelect extends CTuidSelect {\r\n    protected buildPageItems():PageItems<any> {\r\n        let query:CQuery = this.cUq.cFromName('query', 'SearchUser') as CQuery;\r\n        return new QueryPageItems(query.entity);\r\n    }\r\n    idFromItem(item:any) {return item.id;}\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first({key: key});\r\n    }\r\n}\r\n\r\nconst ui:TuidUI = {\r\n    CTuidSelect: CUserSelect,\r\n    content: (item:any) => {return <>{item.name}</>},\r\n}\r\n\r\nexport default ui;\r\n","import * as React from 'react';\r\nimport { TuidUI } from \"tonva-react-uq\";\r\n\r\nconst ui:TuidUI = {\r\n    divs: {\r\n        post: {\r\n            content: (item:any) => {\r\n                let {title} = item;\r\n                return <>{title}</>;\r\n            },\r\n            rowContent: (item:any) => {\r\n                let {title} = item;\r\n                return <>{title}</>;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ui;\r\n","import teamPosts from './teamPosts';\r\n\r\nexport default {\r\n    teamPosts: teamPosts,\r\n};\r\n","import * as React from 'react';\r\nimport { QueryUI } from \"tonva-react-uq\";\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ui:QueryUI = {\r\n    row: observer((item:any) => {\r\n        let {post} = item;\r\n        return <div className=\"px-3 py-2\">{post.content()}</div>;\r\n    }),\r\n};\r\n\r\nexport default ui;\r\n","import CN from './zh/CN';\r\n\r\nconst res = {\r\n    zh: {\r\n        CN: CN\r\n    }\r\n};\r\n\r\nexport default res;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport default {\r\n    x: {\r\n        no: '编号',\r\n        team: '部门',\r\n        staff: '员工',\r\n        noStaff: '无员工',\r\n        post: '职位',\r\n        noPost: '无职位',\r\n        a: 'aaa',\r\n        b: {\r\n            s: 'sss',\r\n            d: ()=><span className=\"text-success\">ddd</span>,\r\n        },\r\n        c: ()=><span className=\"text-danger\">ccc</span>,\r\n    },\r\n    uq: '$UNITX',\r\n    tuid: '基础档案',\r\n    map: '对照表',\r\n    sheet: '单据',\r\n    pending: '待处理',\r\n    book: '帐',\r\n    action: '操作',\r\n    tuidNullCaption: '选择',\r\n    submit: '提交',\r\n    arrNew: '新增',\r\n    arrEdit: '保存',\r\n    entity: {\r\n        message: {\r\n            label: '消息-message',\r\n            arrNew: '新增消息',\r\n            arrEdit: '保存消息',\r\n            fields: {\r\n                fromUser: '发送人',\r\n                fromUnit: '发送部门',\r\n                type: '类型',\r\n                date: '日期',\r\n                subject: '主题',\r\n                discription: '描述',\r\n                content: '内容'\r\n            },\r\n        },\r\n        getMessage: {\r\n            label: '获取Message',\r\n            submit: '获取消息',\r\n            fields: {\r\n                msg: '消息'\r\n            }\r\n        },\r\n        newMessage: {\r\n            label: '新建消息',\r\n            fields: {\r\n                type: '类型',\r\n                subject: '主题',\r\n            },\r\n            arrs: {\r\n                to: {\r\n                    label: '发送',\r\n                    newSubmit: '新增to',\r\n                    editSumbit: '保存to',\r\n                },\r\n                cc: {\r\n                    label: '抄送',\r\n                    newSubmit: '新增cc',\r\n                    editSumbit: '保存cc',\r\n                }\r\n            }\r\n        },\r\n        sectionTeam: {\r\n            label: '大部-团队对照表',\r\n        },\r\n        teamPerson: {\r\n            label: '员工-岗位对照表',\r\n            fields: {\r\n            },\r\n            confirmDelete: _.template('真的要删除${label}吗'),\r\n        },\r\n        teamOrganization: {\r\n            label: '团队-机构对照表',\r\n        },\r\n        teamPosts: {\r\n            label: '团队-岗位对照表',\r\n        },\r\n        person: {\r\n            label: '员工',\r\n            fields: {\r\n                name: '姓名',\r\n                nick: '别名',\r\n                given: '名字',\r\n                sur: '姓',\r\n                gender: '性别',\r\n                user: '用户',\r\n            }\r\n        },\r\n        organization: {\r\n            label: '机构',\r\n            arrs: {\r\n                post: {\r\n                    label: '岗位',\r\n                }\r\n            }\r\n        },\r\n        user: {\r\n            label: '用户'\r\n        },\r\n        team: {\r\n            label: '团队',\r\n        },\r\n        section: {\r\n            label: '大部',\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { IObservableValue, observable } from 'mobx';\r\nimport { Page, VPage } from 'tonva-tools';\r\nimport { Muted, LMR, FA, List } from 'tonva-react-form';\r\nimport { COpBinding } from './cOpBinding';\r\nimport { StateTo, Sheet, Organization, Post, Team, Section, To, Entity } from './model';\r\n\r\ninterface SelectablePost {\r\n    post: Post;\r\n    selected: IObservableValue<boolean>;\r\n    teams?: SelectableTeam[];\r\n}\r\n\r\ninterface SelectableTeam {\r\n    team: Team;\r\n    selected: IObservableValue<boolean>;\r\n    sections?: SelectableSection[];\r\n}\r\n\r\ninterface SelectableSection {\r\n    section: Section;\r\n    selected: IObservableValue<boolean>;\r\n}\r\n\r\nexport class VOpBinding extends VPage<COpBinding> {\r\n    private sheet: Sheet;\r\n    private states: StateTo[];\r\n    private selectablePosts:SelectablePost[];\r\n    private sheetOpsChanged:boolean = false;\r\n\r\n    private stateClick(state:StateTo) {\r\n        let {organizations, teams, sections, posts} = this.controller;\r\n        let postTos:{[post:number]:To[]} = {};\r\n        let {tos} = state;\r\n        if (tos !== undefined) {\r\n            for (let to of tos) {\r\n                let {post} = to;\r\n                let pid = post.id;\r\n                let pto = postTos[pid];\r\n                if (pto === undefined) postTos[pid] = pto = [];\r\n                pto.push(to);\r\n            }\r\n        }\r\n        this.selectablePosts = posts.map(v => this.buildSelectablePost(v, postTos));\r\n        /*\r\n            return {\r\n                post: v,\r\n                selected: observable.box(false),\r\n                teams: [],\r\n            }\r\n        });*/\r\n        this.sheetOpsChanged = false;\r\n        this.openPage(this.stateView, state);\r\n        this.regConfirmClose(async ():Promise<boolean> => {\r\n            if (this.sheetOpsChanged === false) return true;\r\n            return confirm('未保存\\n真的不保存吗？');\r\n        });\r\n    }\r\n\r\n    private buildSelectablePost(post:Post, postTos:{[post:number]:To[]}):SelectablePost {\r\n        let pto = postTos[post.id];\r\n        let selected:boolean;\r\n        let teams:SelectableTeam[];\r\n        if (pto === undefined) {\r\n            selected = false;\r\n            teams = [];\r\n        }\r\n        else {\r\n            selected = true;\r\n            teams = this.buildSelectableTeams(post, pto);\r\n        }\r\n        let ret = {\r\n            post: post,\r\n            selected: observable.box(selected),\r\n            teams: teams,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildSelectableTeams(post:Post, tos: To[]):SelectableTeam[] {\r\n        let teamTos:{[team:number]:To[]} = {};\r\n        let hasAllTeams = false;\r\n        for (let to of tos) {\r\n            let {team} = to;\r\n            let teamId;\r\n            if (team === undefined) {\r\n                teamId = 0;\r\n                hasAllTeams = true;\r\n            }\r\n            else {\r\n                teamId = team.id;\r\n            }\r\n            let tto = teamTos[teamId];\r\n            if (tto === undefined) teamTos[teamId] = tto = [];\r\n            tto.push(to);\r\n        }\r\n        let sections:Section[] = [];\r\n        let {organization} = post;\r\n        if (organization !== undefined && organization.teams !== undefined) {\r\n            for (let team of post.organization.teams) {\r\n                if (team.sections !== undefined) sections.push(...team.sections);\r\n            }\r\n        }\r\n        let teams:SelectableTeam[] = [];\r\n        let teamTo0 = teamTos[0];\r\n        let teamTo0Sections = this.buildSelectableSections(sections, teamTo0);\r\n        teams.push({\r\n            team: {\r\n                id: 0,\r\n                name: '* 所有部门',\r\n                no: undefined,\r\n                sections: sections,\r\n                organizations: undefined,\r\n            }, \r\n            selected: observable.box(teamTo0!==undefined), \r\n            sections: teamTo0Sections,\r\n        });\r\n        if (organization !== undefined && organization.teams !== undefined) {\r\n            post.organization.teams.forEach(v => {\r\n                let teamTo = teamTos[v.id];\r\n                teams.push({\r\n                    team: v,\r\n                    selected: observable.box(teamTo!==undefined),\r\n                    sections: this.buildSelectableSections(sections, teamTo),\r\n                });\r\n            });\r\n        }\r\n        if (hasAllTeams === true && tos.length === 1) {\r\n            let selectableTeam0 = teams[0];\r\n            let hasSection = false;\r\n            for (let selectableSection of selectableTeam0.sections) {\r\n                if (selectableSection.selected.get() === true) {\r\n                    hasSection = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (hasSection === false) {\r\n                selectableTeam0.selected.set(false);\r\n                selectableTeam0.sections = [];\r\n            }\r\n        }\r\n        return teams;\r\n    }\r\n\r\n    private buildSelectableSections(sections:Section[], tos: To[]):SelectableSection[] {\r\n        let selectableSections:SelectableSection[] = [];\r\n        for (let section of sections) {\r\n            selectableSections.push({\r\n                section: section,\r\n                selected: observable.box(tos && tos.find(v => v.section && section.id === v.section.id) !== undefined),\r\n            });\r\n        }\r\n        return selectableSections;\r\n    }\r\n\r\n    private renderState(stateTo:StateTo) {\r\n        let {name, caption, tos, tosText, configable} = stateTo;\r\n        let content;\r\n        if (configable === true) {\r\n            let right = <FA className=\"text-muted align-self-center\" name=\"chevron-right\" />;\r\n            let onClick = () => this.stateClick(stateTo);\r\n            let tosView = <this.stateTosView tosText={tosText} />;\r\n            content = <>\r\n                <LMR className=\"bg-white py-1 px-2 cursor-pointer\" right={right} onClick={onClick}>\r\n                    {caption}\r\n                </LMR>\r\n                {tosView}\r\n            </>\r\n        }\r\n        else {\r\n            content = <div className=\"bg-white py-1 px-2\">\r\n                {caption}\r\n            </div>;\r\n        }\r\n        return <div key={name} className=\"border border-light rounded mx-1 my-3\">\r\n            {content}\r\n        </div>\r\n    }\r\n\r\n    private stateTosView = observer(({tosText}:{tosText: IObservableValue<string[]>}) => {\r\n        let tos = tosText.get();\r\n        return <div className=\"bg-light py-1 px-2\">{\r\n            tos === undefined || tos.length === 0? <Muted>[无岗位]</Muted> :\r\n            tos.map((v,index) => {\r\n                return <span\r\n                    key={v}\r\n                    className=\"d-inline-block border bg-white rounded mr-2 my-1 py-1 px-2\">\r\n                    {v}\r\n                </span>\r\n            })\r\n        }\r\n        </div>\r\n    });\r\n\r\n    private tosTexts(tos: To[]):string[] {\r\n        return tos && tos.map((v,index) => {\r\n            let {post, team, section} = v;\r\n            let content:string = post.title;\r\n            if (team !== undefined && team.id > 0) content += ' @ ' + team.name;\r\n            if (section !== undefined) {\r\n                if (team === undefined || team.id === 0) content += ' @ * ';\r\n                content += ' / ' + section.name;\r\n            }\r\n            return content;\r\n        });\r\n    }\r\n\r\n    async open({entity, opTos}:{entity:Entity, opTos:{[op:string]:To[]}}) {\r\n        this.sheet = entity;\r\n        let {name, states} = entity;\r\n        if (states === undefined) {\r\n            let tos = opTos['$'];\r\n            this.states = [{\r\n                name: '$',\r\n                caption: '允许岗位',\r\n                configable: true,\r\n                tos: tos,\r\n                tosText: observable.box<string[]>(this.tosTexts(tos)),\r\n            }];\r\n            this.openPageElement(<Page header={name + ' - 岗位'}>\r\n                {this.states.map(v => this.renderState(v))}\r\n            </Page>);\r\n            return;\r\n        }\r\n\r\n        this.states = states.map(v => {\r\n            let prefix = v.substr(0, 1);\r\n            let caption: string | JSX.Element;\r\n            let configable: boolean;\r\n            let tos;\r\n            switch (prefix) {\r\n                case '<': caption = <>{v.substr(1)} &nbsp; <Muted>回复</Muted></>; configable = false; break;\r\n                case '#': caption = <>{v.substr(1)} &nbsp; <Muted>返初</Muted></>; configable = false; break;\r\n                case '$': \r\n                    caption = '[新开单]'; \r\n                    configable = true; \r\n                    tos = opTos[v];\r\n                    break;\r\n                default:\r\n                    caption = v;\r\n                    configable = true; \r\n                    tos = opTos[v];\r\n                    break;\r\n            }\r\n            return {\r\n                name: v,\r\n                caption: caption,\r\n                configable: configable,\r\n                tos: tos,\r\n                tosText: observable.box<string[]>(this.tosTexts(tos)),\r\n            };\r\n        });\r\n        this.openPageElement(<Page header={'单据状态对应岗位 - ' + name} >\r\n            {this.states.map(v => this.renderState(v))}\r\n        </Page>);\r\n    }\r\n\r\n    private async saveOps(stateTo: StateTo) {\r\n        let stateToName = stateTo.name;\r\n        let tos:To[] = [];\r\n        let toArr:{post:number, team:number, section:number}[] = [];\r\n        for (let sp of this.selectablePosts) {\r\n            if (sp.selected.get() === false) continue;\r\n            let postId = sp.post.id;\r\n            let teamCount = 0;\r\n            for (let st of sp.teams) {\r\n                if (st.selected.get() === false) continue;\r\n                let teamId = st.team.id;\r\n                ++teamCount;\r\n                let sectionCount = 0;\r\n                for (let ss of st.sections) {\r\n                    if (ss.selected.get() === false) continue;\r\n                    let sectionId = ss.section.id;\r\n                    ++sectionCount;\r\n                    toArr.push({\r\n                        post: postId,\r\n                        team: teamId,\r\n                        section: sectionId,\r\n                    });\r\n                    tos.push({\r\n                        post: sp.post,\r\n                        team: st.team,\r\n                        section: ss.section,\r\n                    });\r\n                }\r\n                if (sectionCount === 0) {\r\n                    toArr.push({\r\n                        post: postId,\r\n                        team: teamId,\r\n                        section: 0,\r\n                    });\r\n                    tos.push({\r\n                        post: sp.post,\r\n                        team: st.team,\r\n                        section: undefined,\r\n                    });\r\n                }\r\n            }\r\n            if (teamCount === 0) {\r\n                toArr.push({\r\n                    post: postId,\r\n                    team: 0,\r\n                    section: 0,\r\n                });\r\n                tos.push({\r\n                    post: sp.post,\r\n                    team: undefined,\r\n                    section: undefined,\r\n                });\r\n            }\r\n        }\r\n        await this.controller.saveSheetStatePosts(this.sheet, stateToName, toArr);\r\n        let state = this.states.find(v => v.name === stateToName);\r\n        state.tos = tos;\r\n        let tosTexts = this.tosTexts(tos);\r\n        state.tosText.set(tosTexts);\r\n        this.closePage();\r\n    }\r\n\r\n    private organizationRow = (item: Organization, index:number) => {\r\n        let {id, name} = item;\r\n        return <div>id:{id} name:{name}</div>;\r\n    }\r\n    private teamRow = (item: SelectableTeam, index:number) => {\r\n        return <this.observableTeamRow {...item} />;\r\n    }\r\n    private sectionRow = (item: SelectableSection, index:number) => {\r\n        return <this.observableSectionRow {...item} />;\r\n    }\r\n    private postRow = (item:SelectablePost, index:number) => {\r\n        return <this.observablePostRow {...item} />;\r\n    };\r\n    private stateView: React.SFC<StateTo> = (state:StateTo) => {\r\n        let {caption} = state;\r\n        /*\r\n        switch (state.name) {\r\n            case '-':  stateCaption = '允许岗位'; break;\r\n            case '$':  stateCaption = '[新开单]'; break;\r\n            default: stateCaption = state.name; break;\r\n        }\r\n        */\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={async ()=>await this.saveOps(state)}>保存</button>\r\n        return <Page header={`${this.sheet.name} - ${caption}`}\r\n            back=\"close\"\r\n            right={right}>\r\n            <div className=\"mx-3 my-2\">\r\n                <Muted>设置单据状态跟岗位的对应关系</Muted>\r\n            </div>\r\n            <List className=\"my-2\" \r\n                items={this.selectablePosts} \r\n                item={{render: this.postRow}} />\r\n        </Page>\r\n    }\r\n    /*\r\n    <List className=\"my-2\" header=\"Organization\" items={organizations} item={{render: this.organizationRow}} />\r\n    <List className=\"my-2\" header=\"Team\" items={teams} item={{render: this.teamRow}} />\r\n    <List className=\"my-2\" header=\"Section\" items={sections} item={{render: this.sectionRow}} />\r\n    */\r\n\r\n    private onPostSelectChanged(item:SelectablePost, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {post, selected} = item;\r\n        if (checked === true) {\r\n            let sections:Section[] = [];\r\n            let {organization} = post;\r\n            if (organization !== undefined && organization.teams !== undefined) {\r\n                for (let team of post.organization.teams) {\r\n                    if (team.sections !== undefined) sections.push(...team.sections);\r\n                }\r\n            }\r\n            item.teams.push({\r\n                team: {\r\n                    id: 0,\r\n                    name: '* 所有部门',\r\n                    no: undefined,\r\n                    sections: sections,\r\n                    organizations: undefined,\r\n                }, \r\n                selected: observable.box(false), \r\n                sections:[]\r\n            });\r\n            if (organization !== undefined && organization.teams !== undefined) {\r\n                post.organization.teams.forEach(v => {\r\n                    item.teams.push({\r\n                        team: v,\r\n                        selected: observable.box(false),\r\n                        sections: []\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            item.teams.splice(0);\r\n        }\r\n        selected.set(checked);\r\n    }\r\n\r\n    private onTeamSelectChanged(item:SelectableTeam, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {team, selected} = item;\r\n        if (checked === true) {\r\n            //item.sections.push({section: undefined, selected: observable.box(false)});\r\n            team.sections.forEach(v => {\r\n                item.sections.push({\r\n                    section: v,\r\n                    selected: observable.box(false)\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            item.sections.splice(0);\r\n        }\r\n        selected.set(checked);\r\n    }\r\n\r\n    private onSectionSelectChanged(item:SelectableSection, checked:boolean) {\r\n        this.sheetOpsChanged = true;\r\n        let {section, selected} = item;\r\n        selected.set(checked);\r\n    }\r\n\r\n    private observablePostRow = observer((item:SelectablePost) => {\r\n        let {post, selected, teams} = item;\r\n        let {title} = post;\r\n        let teamsList;\r\n        let defaultSelected = selected.get();\r\n        if (defaultSelected === true) {\r\n            teamsList = <List className=\"ml-4 va-list-top-border\" items={teams} item={{render:this.teamRow}} />\r\n        }\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onPostSelectChanged(item, evt.target.checked)} />\r\n                <Muted>岗位</Muted> &nbsp; {title}\r\n            </label>\r\n            {teamsList}\r\n        </div>;\r\n    });\r\n\r\n    private observableTeamRow = observer((item:SelectableTeam) => {\r\n        let {team, selected, sections} = item;\r\n        let {name} = team;\r\n        let teamsList;\r\n        let defaultSelected = selected.get();\r\n        if (defaultSelected === true && sections.length > 0) {\r\n            teamsList = <List className=\"ml-4 va-list-top-border\" items={sections} item={{render:this.sectionRow}} />\r\n        }\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onTeamSelectChanged(item, evt.target.checked)} />\r\n                <Muted>部门</Muted> &nbsp; {name}\r\n            </label>\r\n            {teamsList}\r\n        </div>;\r\n    });\r\n\r\n    private observableSectionRow = observer((item:SelectableSection) => {\r\n        let {section, selected} = item;\r\n        let {name} = section;\r\n        let defaultSelected = selected.get();\r\n        return <div className=\"flex-column\">\r\n            <label className=\"px-3 py-2 w-100 mb-0\">\r\n                <input className=\"mr-3 align-middle\"\r\n                    type=\"checkbox\" \r\n                    defaultChecked={defaultSelected}\r\n                    onChange={(evt)=>this.onSectionSelectChanged(item, evt.target.checked)} />\r\n                <Muted>大部</Muted> &nbsp; {name}\r\n            </label>\r\n        </div>;\r\n    });\r\n}\r\n ","import * as React from 'react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { COpBinding } from \"./cOpBinding\";\r\nimport { Entity, EntityBlock, Uq } from './model';\r\nimport { entityIcons, CAction, CQuery } from 'tonva-react-uq';\r\nimport { List, Muted, LMR, FA } from 'tonva-react-form';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\ninterface Checked {\r\n    def: boolean;\r\n    checked: boolean;\r\n}\r\n\r\nexport class VAllPosts extends VPage<COpBinding> {\r\n    private uq: Uq;\r\n    private blocks:EntityBlock[];\r\n    private checked:{[entity:string]:Checked} = {};\r\n\r\n    @observable private isChanged:boolean = false;\r\n    async open(uq: Uq) {\r\n        this.uq = uq;\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = this.uq;\r\n        this.blocks = [\r\n            {items: tuids, type: 'tuid'},\r\n            {items: sheets, type: 'sheet'},\r\n            {items: actions, type: 'action'},\r\n            {items: maps, type: 'map'},\r\n            {items: books, type: 'book'},\r\n            {items: queries, type: 'query'},\r\n            {items: histories, type: 'history'},\r\n            {items: pendings, type: 'pending'},\r\n        ];\r\n        let getEntityOpForAll = this.controller.cUq.cFromName('query', 'getEntityOpForAll') as CQuery;\r\n        let entityOpForAllResult = await getEntityOpForAll.entity.query({uq: this.uq.id});\r\n        let entityOpForAll:{[entity:string]:boolean} = {};\r\n        for (let eaa of entityOpForAllResult.ret) {\r\n            entityOpForAll[eaa.entity] = true;\r\n        }\r\n        for (let b of this.blocks) {\r\n            let {items} = b;\r\n            if (items === undefined) continue;\r\n            for (let item of items) {\r\n                let {name} = item;\r\n                let checked = (entityOpForAll[name] === true);\r\n                this.checked[name] = {\r\n                    def: checked,\r\n                    checked: checked,\r\n                };\r\n            }\r\n        }\r\n        this.openPage(this.pageRender);\r\n        this.regConfirmClose(async ():Promise<boolean> => {\r\n            if (this.isChanged === false) return true;\r\n            return confirm('未保存\\n真的不保存吗？');\r\n        });\r\n    }\r\n\r\n    private onCheckChanged = (entity:Entity, checked: boolean) => {\r\n        this.checked[entity.name].checked = checked;\r\n        let isChanged:boolean = false;\r\n        for (let i in this.checked) {\r\n            let {def, checked} = this.checked[i];\r\n            if (def !== checked) {\r\n                isChanged = true;\r\n                break;\r\n            }\r\n        }\r\n        this.isChanged = isChanged;\r\n    }\r\n\r\n    private saveChange = async () => {\r\n        let entities:{entity:string}[] = [];\r\n        for (let i in this.checked) {\r\n            if (this.checked[i].checked !== true) continue;\r\n            entities.push({entity: i});\r\n        }\r\n        let saveEntityOpForAll = this.controller.cUq.cFromName('action', 'saveEntityOpForAll') as CAction;\r\n        let ret = await saveEntityOpForAll.entity.submit({\r\n            uq: this.uq.id,\r\n            entities: entities,\r\n        });\r\n        this.ceasePage();\r\n        this.openPageElement(<Page header=\"所有岗位可操作\" back=\"close\">\r\n            <div className=\"p-3\">\r\n                <FA name=\"check-circle\" className=\"text-success\" /> &nbsp;\r\n                已保存\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    private entityRender(entity:Entity, icon:any) {\r\n        let {name} = entity;\r\n        let right = <input className=\"mr-3 align-middle\"\r\n            type=\"checkbox\" \r\n            defaultChecked={this.checked[name].def}\r\n            onChange={(evt)=>this.onCheckChanged(entity, evt.target.checked)}/>\r\n\r\n        return <LMR className=\"px-3 py-2 align-items-center\"\r\n            right={right}>\r\n            {icon} &nbsp; {name}\r\n        </LMR>;\r\n    }\r\n\r\n    private pageRender = observer(() => {\r\n        /*\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = this.uq;\r\n        let blocks:EntityBlock[] = [\r\n            {items: tuids, type: 'tuid'},\r\n            {items: sheets, type: 'sheet'},\r\n            {items: actions, type: 'action'},\r\n            {items: maps, type: 'map'},\r\n            {items: books, type: 'book'},\r\n            {items: queries, type: 'query'},\r\n            {items: histories, type: 'history'},\r\n            {items: pendings, type: 'pending'},\r\n        ];*/\r\n        let buttonSave = this.isChanged===true? <button className=\"btn btn-sm btn-success\" onClick={this.saveChange}>保存</button> : null;\r\n        return <Page header={'所有岗位可操作'} right={buttonSave}>\r\n            <div className=\"text-muted p-3 small\">\r\n                <div style={{lineHeight:'1.8', fontWeight:'bold'}}>说明</div>\r\n                <ol className=\"pl-3\" style={{listStyleType: '1', lineHeight: '1.8'}}>\r\n                    <li >\r\n                        有些操作，默认允许所有用户可操作，可以在这里设置。\r\n                    </li>\r\n                    <li>\r\n                        比如，用户下订单。任何客户，登录进系统，都可以下单。\r\n                    </li>\r\n                    <li>\r\n                        如果每个用户都需要设置，用户会丢失，管理人员会繁琐。\r\n                    </li>\r\n                </ol>\r\n            </div>\r\n            {this.blocks.map(block => {\r\n                let {items, type} = block;\r\n                let icon = entityIcons[type];\r\n                return items && items.length>0 &&\r\n                    <List key={type}\r\n                        className=\"mt-3\"\r\n                        header={<Muted className=\"px-3 pt-1 bg-light w-100\">{this.res[type]||type}</Muted>} \r\n                        items={items} \r\n                        item={{\r\n                            render:(item:any, index:number)=>this.entityRender(item, icon), \r\n                            onClick: undefined\r\n                        }} />;\r\n            })}\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from \"tonva-tools\";\r\nimport { COpBinding } from \"./cOpBinding\";\r\nimport { Uq } from './model';\r\nimport { List, FA, SearchBox } from 'tonva-react-form';\r\nimport { observable } from 'mobx';\r\nimport { CMap, CQuery, QueryPageItems, Query, Tuid, CTuid } from 'tonva-react-uq';\r\n\r\nexport class PageUsers extends QueryPageItems {\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n\r\nexport class VFullFunction extends VPage<COpBinding> {\r\n    private uq: Uq;\r\n    @observable private users: any[] = [];\r\n    private entityOpUserFully:CMap;\r\n    private pageUsers: PageUsers;\r\n    private tuidUser: CTuid<Tuid>;\r\n    async open(uq: Uq) {\r\n        this.uq = uq;\r\n        this.entityOpUserFully = this.controller.cUq.cFromName('map', 'entityOpUserFully') as CMap;\r\n        this.tuidUser = this.controller.cUq.cFromName('tuid', 'user') as CTuid<Tuid>;\r\n        await this.entityOpUserFully.entity.loadSchema();\r\n        let all = await this.entityOpUserFully.entity.queries.all.query({_uq: this.uq.id});\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.addClick}><FA name=\"plus\" /></button>;\r\n        this.users.push(...all.ret);\r\n        this.openPageElement(<Page header={'全功能用户'} right={right}>\r\n            <List items={this.users} item={{render:this.renderUser, onClick: this.onStopFully}} />\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    private onStopFully = async (item:any) => {\r\n        this.openPageElement(<Page header={'停止全功能'}>\r\n            <div className=\"p-3\">\r\n                <div><b className=\"text-danger h4\">{item.user.content()}</b> 停止全功能用户。<br/>请确认。</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-success\" onClick={()=>this.onSumitStopFully(item)}>停止全功能</button>\r\n                    <button className=\"ml-3 btn btn-outline-danger\" onClick={this.onCancelStop}>不停</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    private onSumitStopFully = async (item:any) => {\r\n        let data = {_uq: this.uq.id, arr1:[{_user: item.user.id}]};\r\n        await this.entityOpUserFully.entity.actions.del.submit(data);\r\n        let index = this.users.findIndex(v => v === item);\r\n        if (index >= 0) this.users.splice(index, 1);\r\n        this.closePage();\r\n    }\r\n\r\n    private onCancelStop = () => this.closePage();\r\n\r\n    private addClick = async () => {\r\n        let user = await this.controller.callSearchUser(this.uq);\r\n        this.onUserSelected(user);\r\n        /*\r\n        let searchUser = this.controller.cUq.cFromName('query', 'SearchUser') as CQuery;\r\n        this.pageUsers = new PageUsers(searchUser.entity);\r\n        this.openPage(this.usersView);\r\n        */\r\n    }\r\n\r\n    private renderUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{item.user.content()}</div>;\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        await this.pageUsers.first({key: key});\r\n    }\r\n    private onSetFully = async (item:any) => {\r\n        await this.entityOpUserFully.entity.actions.add.submit({_uq: this.uq.id, arr1:[{_user: item.id}]});\r\n        this.tuidUser.entity.useId(item.id);\r\n        let row = {\r\n            uq: this.uq.id,\r\n            user: this.tuidUser.entity.boxId(item.id),\r\n        }\r\n        this.users.push(row);\r\n        this.closePage(2);\r\n    }\r\n    private onCancelFully = () => {this.backPage()}\r\n    private onUserSelected = (item:any) => {\r\n        this.openPageElement(<Page header=\"确认\">\r\n            <div className=\"p-3\">\r\n                <div><b className=\"text-danger h4\">{item.name}</b> 将设置为全功能用户。只有系统管理员或者测试人员才需要全功能，可以操作所有数据。<br/>请确认。</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-success\" onClick={()=>this.onSetFully(item)}>设置为全功能用户</button>\r\n                    <button className=\"ml-3 btn btn-outline-danger\" onClick={this.onCancelFully}>取消</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n    private renderSelectUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n    }\r\n    private usersView = () => {\r\n        let search = <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder=\"选择用户\" />;\r\n        return <Page header={search}>            \r\n            <List\r\n                before=\"搜索用户名\"\r\n                items={this.pageUsers} \r\n                item={{render: this.renderSelectUser, onClick:this.onUserSelected}} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from \"tonva-tools\";\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport { centerApi } from 'tonva-react-uq';\r\nimport { COpBinding } from \"./cOpBinding\";\r\n\r\nexport class VSearchUser extends VPage<COpBinding> {\r\n    private unit:number;\r\n    private pageUsers = new PageUsers();\r\n\r\n    private onUserClick = (item:any) => {\r\n        this.closePage();\r\n        this.returnCall(item);\r\n    }\r\n    private onSearch = async (key:string) => {\r\n        await this.pageUsers.first({key: key, unit:this.unit, role:undefined});\r\n    }\r\n    private renderSelectUser = (item:any, index:number) => {\r\n        return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n    }\r\n    async open(unit: number) {\r\n        this.unit = unit;\r\n        let search = <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder=\"选择用户\" />;\r\n        this.openPageElement(<Page header={search}>\r\n            <List\r\n                before=\"搜索用户名\"\r\n                items={this.pageUsers}\r\n                item={{render: this.renderSelectUser, onClick:this.onUserClick}} />\r\n        </Page>);\r\n    }\r\n}\r\n\r\nclass PageUsers extends PageItems<any> {\r\n    protected async load(param:{key:string, unit:number, role:number}, pageStart: any, pageSize: number): Promise<any[]> {\r\n        let {unit, role, key} = param;\r\n        let ret = await centerApi.get('unit/members', {key: key, unit:unit, role:role, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    protected setPageStart(item: any): any {\r\n        if (item === undefined)\r\n            this.pageStart = 0;\r\n        else\r\n            this.pageStart = item.id;\r\n    }\r\n}","import React from \"react\";\r\nimport { Page, Controller, appInFrame, VPage } from \"tonva-tools\";\r\nimport { List, Muted, LMR, FA } from \"tonva-react-form\";\r\nimport { VOpBinding } from './vOpBinding';\r\nimport { CAction, CQuery, centerApi, entityIcons, ControllerUq } from \"tonva-react-uq\";\r\nimport { Organization, Team, Section, Post, Sheet, App, Uq, To, Entity, EntityBlock } from \"./model\";\r\nimport { VAllPosts } from \"./vAllPosts\";\r\nimport { VFullFunction } from \"./vFullFunction\";\r\nimport { VSearchUser } from \"./vSearchUser\";\r\n\r\n// 单据跟操作的绑定设置\r\nexport class COpBinding extends ControllerUq {\r\n    /*\r\n    constructor(unitxUq: CUq, res:any) {\r\n        super({});\r\n        this.unitxUq = unitxUq;\r\n    }*/\r\n\r\n    icon = <FA name=\"map-o\" className=\"text-success\" fixWidth={true} />;\r\n    label = '岗位权限 - UQ对象';\r\n\r\n    //private unitxUq: CUq;\r\n    private apps: App[];\r\n    organizations: Organization[];\r\n    teams: Team[];\r\n    sections: Section[];\r\n    posts: Post[];\r\n    postDict: {[id:number]:Post};\r\n    teamDict: {[id:number]:Team};\r\n    organizationDict: {[id:number]:Organization};\r\n    sectionDict: {[id:number]:Section};\r\n\r\n    protected async internalStart():Promise<void> {\r\n        await this.buildPosts();\r\n        await this.buildAppsUqs();\r\n        this.openPage(<this.appsView />);\r\n    }\r\n\r\n    private async buildAppsUqs() {\r\n        let unit = appInFrame.unit;\r\n        let ret:any[][] = await centerApi.get('/unit/apps-uqs', {unit: unit});\r\n        this.apps = ret[0];\r\n        let uqs: Uq[] = ret[1];\r\n\r\n        for (let app of this.apps) {\r\n            app.uqs = [];\r\n        }\r\n        for (let uq of uqs) {\r\n            let app = this.apps.find(v => v.id === uq.app);\r\n            if (app === undefined) continue;\r\n            app.uqs.push(uq);\r\n            this.setUqEntities(uq);\r\n        }\r\n    }\r\n\r\n    private async buildPosts() {\r\n        let queryAllTeams = this.cUq.cFromName('query', 'allteams') as CQuery;\r\n        let ret:any[][] = await queryAllTeams.entity.query(undefined);\r\n        this.teams = ret['teams'];\r\n        this.organizations = ret['organization'];\r\n        this.posts = ret['organizationpost'];\r\n        this.sections = ret['sections'];\r\n        this.postDict = {};\r\n        this.teamDict = {};\r\n        this.organizationDict = {};\r\n        this.sectionDict = {};\r\n        for (let organization of this.organizations) {\r\n            organization.posts = [];\r\n            organization.teams = [];\r\n            this.organizationDict[organization.id] = organization;\r\n        }\r\n        for (let team of this.teams) {\r\n            team.organizations = [];\r\n            team.sections = [];\r\n            this.teamDict[team.id] = team;\r\n        }\r\n        for (let section of this.sections) {\r\n            section.teams = [];\r\n            this.sectionDict[section.id] = section;\r\n        }\r\n        for (let post of this.posts) {\r\n            this.postDict[post.id] = post;\r\n            let organization = this.organizationDict[post.owner];\r\n            if (organization === undefined) {\r\n                continue;\r\n            }\r\n            post.organization = organization;\r\n            organization.posts.push(post);\r\n        }\r\n        // teamOrganization\r\n        for (let teamOrganization of ret['teamorganization']) {\r\n            let {team:tm, organization:og} = teamOrganization;\r\n            let team = this.teamDict[tm];\r\n            let organization = this.organizationDict[og];\r\n            team.organizations.push(organization);\r\n            organization.teams.push(team);\r\n        }\r\n        // sectionTeam\r\n        for (let sectionTeam of ret['sectionteam']) {\r\n            let {section:sec, team:tm} = sectionTeam;\r\n            let section = this.sectionDict[sec];\r\n            let team = this.teamDict[tm];\r\n            section.teams.push(team);\r\n            team.sections.push(section);\r\n        }\r\n    }\r\n\r\n    private setUqEntities(uq:Uq) {\r\n        let entities = uq.entities;\r\n        if (entities === null) return;\r\n        let lns = entities.split('\\n');\r\n        let len = lns.length;\r\n        let p:number;\r\n        for (let i=0; i<len;) {\r\n            switch (lns[i]) {\r\n                case 'tuid': p = this.setEntities(uq.tuids = [], lns, i, uq); break;\r\n                case 'map': p = this.setEntities(uq.maps = [], lns, i, uq); break;\r\n                case 'book': p = this.setEntities(uq.books = [], lns, i, uq); break;\r\n                case 'history': p = this.setEntities(uq.histories = [], lns, i, uq); break;\r\n                case 'pending': p = this.setEntities(uq.pendings = [], lns, i, uq); break;\r\n                case 'query': p = this.setEntities(uq.queries = [], lns, i, uq); break;\r\n                case 'action': p = this.setEntities(uq.actions = [], lns, i, uq); break;\r\n                case 'sheet': p = this.setSheets(uq.sheets = [], lns, i, uq); break;\r\n                default:\r\n                    alert('unknown entity type: ' + lns[i]);\r\n                    return;\r\n            }\r\n            i = p;\r\n        }\r\n    }\r\n\r\n    private setEntities(entities:Entity[], lines:string[], p:number, uq:Uq):number {\r\n        let len = lines.length;\r\n        let i = p+1;\r\n        for (; i<len; i++) {\r\n            let ln = lines[i];\r\n            if (ln.length > 0) {\r\n                let name = ln;\r\n                entities.push({\r\n                    uq: uq,\r\n                    name: name,\r\n                    states: undefined\r\n                });\r\n            }\r\n            else return i+1;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    private setSheets(sheets:Sheet[], lines:string[], p:number, uq:Uq):number {\r\n        let len = lines.length;\r\n        let i = p+1;\r\n        for (; i<len; i++) {\r\n            let ln = lines[i];\r\n            if (ln.length > 0) {\r\n                let parts:string[] = ln.split('\\t');\r\n                let name = parts[0];\r\n                parts[0] = '$';\r\n                let sheet:Sheet = {\r\n                    uq: uq,\r\n                    name: name,\r\n                    states: parts,\r\n                }\r\n                sheets.push(sheet);\r\n            }\r\n            else return i+1;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    async saveSheetStatePosts(sheet:Sheet, stateName:string, toArr:{post:number, team:number, section:number}[]) {\r\n        let actionSaveEntityOpPost = this.cUq.cFromName('action', 'saveentityoppost') as CAction;\r\n        let {uq, name} = sheet;\r\n        await actionSaveEntityOpPost.submit({\r\n            uq: uq.id,\r\n            entityName: name,\r\n            opName: stateName,\r\n            posts: toArr\r\n        });\r\n    }\r\n\r\n    private appRender = (app:App, index:number) => {\r\n        let {name, discription} = app;\r\n        return <LMR className=\"px-3 py-2\" right={discription && <Muted>{discription}</Muted>}>\r\n            {name}\r\n        </LMR>\r\n    }\r\n\r\n    private appClick = (app:App) => {\r\n        this.openPage(<this.appView {...app} />)\r\n    }\r\n\r\n    async callSearchUser(uq:Uq): Promise<any> {\r\n        let user = await this.vCall(VSearchUser, appInFrame.unit);\r\n        return user;\r\n    }\r\n\r\n    private appsView = () => <Page header={this.label}>\r\n        <div className=\"text-muted p-3 small\">\r\n            <div style={{lineHeight:'1.8', fontWeight:'bold'}}>说明</div>\r\n            <ol className=\"pl-3\" style={{listStyleType: '1', lineHeight: '1.8'}}>\r\n                <li >\r\n                    下面是全部启用的APP。请选择\r\n                </li>\r\n                <li>\r\n                    每个APP会使用一个以上的UQ。UQ里面定义了Tuid，Action，Map和Sheet等对象。\r\n                </li>\r\n                <li>\r\n                    设置对象跟岗位的关联\r\n                </li>\r\n            </ol>\r\n        </div>\r\n        <List items={this.apps} item={{render:this.appRender, onClick:this.appClick}} />\r\n    </Page>;\r\n\r\n    private entityRender(entity:Entity, icon:any) {\r\n        let {name} = entity;\r\n        return <div className=\"px-3 py-2 align-items-center\">{icon} &nbsp; {name}</div>\r\n    }\r\n    private sheetRender(sheet:Sheet, icon:any) {\r\n        let {name, states} = sheet;\r\n        return <div className=\"px-3 py-2 align-items-center\">\r\n            {icon} &nbsp; {name} <Muted> &nbsp; {sheet.states.join(', ')}</Muted>\r\n        </div>\r\n    }\r\n    private entityClick = async (block:EntityBlock, entity:Entity) => {\r\n        //alert('entity click');\r\n        let entityPosts = this.cUq.cFromName('query', 'getEntityPost') as CQuery;\r\n        let ret = await entityPosts.entity.query({uq: entity.uq.id, entityName: entity.name});\r\n        let opTos:{[op:string]:To[]} = {};\r\n        for (let row of ret.ret) {\r\n            let {op, post, team, section} = row;\r\n            let opTo = opTos[op];\r\n            if (opTo === undefined) opTos[op] = opTo = [];\r\n            opTo.push({\r\n                post: this.postDict[post],\r\n                team: this.teamDict[team],\r\n                section: this.sectionDict[section],\r\n            });\r\n        }\r\n        this.openVPage(VOpBinding, {entity:entity, opTos:opTos});\r\n    }\r\n    private sheetClick = async (block:EntityBlock, sheet:Sheet) => {\r\n        this.sheetClickOld(sheet);\r\n    }\r\n\r\n    private sheetClickOld = async (sheet:Sheet) => {\r\n        let entityPosts = this.cUq.cFromName('query', 'getEntityPost') as CQuery;\r\n        let ret = await entityPosts.entity.query({uq: sheet.uq.id, entityName: sheet.name});\r\n        let opTos:{[op:string]:To[]} = {};\r\n        for (let row of ret.ret) {\r\n            let {op, post, team, section} = row;\r\n            let opTo = opTos[op];\r\n            if (opTo === undefined) opTos[op] = opTo = [];\r\n            opTo.push({\r\n                post: this.postDict[post],\r\n                team: this.teamDict[team],\r\n                section: this.sectionDict[section],\r\n            });\r\n        }\r\n        this.openVPage(VOpBinding, {entity:sheet, opTos:opTos});\r\n    }\r\n\r\n    private renderSetting = (item:any, index:number) => {\r\n        let {icon, color, text} = item;\r\n        return <div className=\"px-3 py-2 align-items-center\">\r\n            {<FA name={icon} fixWidth={true} className={color} />} &nbsp; {text}\r\n        </div>\r\n    }\r\n\r\n    private settingClick = (item:any, uq:Uq) => {\r\n        let {name} = item;\r\n        let V: new (coordinator) => VPage<COpBinding>;\r\n        switch (name) {\r\n            default: return;\r\n            case 'entity-by-all-post': V = VAllPosts; break;\r\n            case 'user-all-entities': V = VFullFunction; break;\r\n        }\r\n        this.openVPage(V, uq);\r\n    }\r\n    \r\n    private uqRender = (uq:Uq, index:number) => {\r\n        let {name, tuids, actions, maps, books, queries, histories, pendings, sheets} = uq;\r\n        let nameRender = this.entityRender;\r\n        let blocks:EntityBlock[] = [\r\n            {items: tuids, type: 'tuid', itemClick: this.entityClick},\r\n            {items: sheets, type: 'sheet', itemClick: this.sheetClick, itemRender: this.sheetRender},\r\n            {items: actions, type: 'action', itemClick: this.entityClick},\r\n            {items: maps, type: 'map', itemClick: this.entityClick},\r\n            {items: books, type: 'book', itemClick: this.entityClick},\r\n            {items: queries, type: 'query', itemClick: this.entityClick},\r\n            {items: histories, type: 'history', itemClick: this.entityClick},\r\n            {items: pendings, type: 'pending', itemClick: this.entityClick},\r\n        ];\r\n\r\n        let settings:any[] = [\r\n            {name:'entity-by-all-post', icon: 'cog', color: 'text-success', text: '所有岗位可操作'},\r\n            {name: 'user-all-entities', icon: 'cog', color: 'text-success', text: '全功能用户'}\r\n        ];\r\n\r\n        // {icon} &nbsp; {name} <Muted> &nbsp; {sheet.states.join(', ')}</Muted>\r\n        return <div key={name} className=\"my-2\">\r\n            <div className=\"px-3 font-weight-bold\">{name}</div>\r\n            <List className=\"mt-3\"\r\n                items={settings}\r\n                item={{\r\n                    key: (item:any)=>item.name, \r\n                    render: this.renderSetting,\r\n                    onClick:(item:any)=>this.settingClick(item, uq) \r\n                }}\r\n             />\r\n            {blocks.map(block => {\r\n                let {items, type, itemClick, itemRender} = block;\r\n                let icon = entityIcons[type];\r\n                return items && items.length>0 &&\r\n                    <List key={type} className=\"mt-3\"\r\n                        header={<Muted className=\"px-3 pt-1 bg-light w-100\">{this.res[type]||type}</Muted>} \r\n                        items={items} \r\n                        item={{\r\n                            key: (item:any)=>item.name, \r\n                            render:(item:any, index:number)=>(itemRender || nameRender)(item, icon), \r\n                            onClick: (item:Entity)=>itemClick(block, item)\r\n                        }} />;\r\n            })}\r\n        </div>;\r\n        /*\r\n        function headerCaption(caption:string):JSX.Element {\r\n            return <Muted className=\"px-3 pt-1 bg-light w-100\">{caption}</Muted>\r\n        }\r\n        function itemList(items:any[], type:string, itemClick:(item:any)=>void, render:((item:any, icon:any)=>JSX.Element) = nameRender) {\r\n            //let res = entitiesRes;\r\n            //let {caption, icon} = res[type];\r\n            let icon = entityIcons[type];\r\n            return items && \r\n                <List className=\"mt-3\"\r\n                    header={headerCaption(type)} \r\n                    items={items} \r\n                    item={{render:(item:any, index:number)=>render(item, icon), onClick: itemClick}} />;\r\n        }\r\n            {itemList(tuids, 'tuid', this.tuidClick)}\r\n            {itemList(sheets, 'sheet', this.sheetClickOld, this.sheetRender)}\r\n            {itemList(actions, 'action', this.actionClick)}\r\n            {itemList(maps, 'map', this.mapClick)}\r\n            {itemList(books, 'book', this.bookClick)}\r\n            {itemList(queries, 'query', this.queryClick)}\r\n            {itemList(histories, 'history', this.historyClick)}\r\n            {itemList(pendings, 'pending', this.pendingClick)}\r\n        */\r\n    }\r\n\r\n    private appView = (app:App) => <Page header={app.name + '操作权限'}>\r\n        {\r\n            app.uqs.map((v, index) => this.uqRender(v, index))\r\n        }\r\n    </Page>;\r\n\r\n    /*\r\n    private tuidClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private mapClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private actionClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private bookClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private queryClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private historyClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    private pendingClick = (entityName:string) => {\r\n        alert(entityName);\r\n    }\r\n    */\r\n}\r\n","import * as React from 'react';\r\nimport { Page, VPage } from 'tonva-tools';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { CUq, Link, CLink, CApp } from \"tonva-react-uq\";\r\nimport ui from './ui';\r\nimport { COpBinding } from './op';\r\n\r\nexport class COrganization extends CUq {\r\n    constructor() {\r\n        super(undefined, '$$$/$unitx', 0, 0, undefined, ui);\r\n    }\r\n\r\n    label = '岗位权限';\r\n    icon = 'sitemap';\r\n    links: (CLink|string)[];\r\n\r\n    protected clearPrevPages() {\r\n        // 保留回退按钮，所以，去掉下面这行\r\n        //nav.clear();\r\n    }\r\n\r\n    protected async loadEntites() {\r\n        // 只有赋Entity权限的地方，需要取全部的Entities，其它地方默认取user access，this.entities.loadAccess()\r\n        await this.entities.loadEntities();\r\n    }\r\n\r\n    protected async internalStart() {\r\n        await this.loadSchema();\r\n        this.links= [\r\n            '',\r\n            new CLink(new COpBinding(this, this.res)),\r\n            '',\r\n            this.linkFromName('map', 'teamPerson'),\r\n            this.linkFromName('map', 'sectionTeam'),\r\n            this.linkFromName('map', 'teamOrganization'),\r\n            '',\r\n            this.linkFromName('tuid', 'person'),\r\n            this.linkFromName('tuid', 'team'),\r\n            this.linkFromName('tuid', 'section'),\r\n            this.linkFromName('tuid', 'organization'),\r\n        ];\r\n        this.openVPage(VOrganization);\r\n    }\r\n    \r\n}\r\n\r\nclass VOrganization extends VPage<COrganization> {\r\n    async open() {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    private renderRow = (link: Link, index:number) => {\r\n        return link.render('bg-white');\r\n    }\r\n\r\n    protected appPage = () => {\r\n        let {links, label} = this.controller;\r\n        return <Page header={label} logout={async ()=>{}}>\r\n            <List items={links} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { AppController } from '.';\r\nimport { VPage, nav, Page, ItemSchema, UiSchema, StringSchema, BoolSchema, UiTextItem, UiTextAreaItem, UiCheckItem, Form, ButtonSchema, Context, ImageSchema, UiImageItem, IdSchema, UiIdItem } from 'tonva-tools';\r\nimport { SubmitResult, DropdownActions, TonvaForm, FormRow } from 'tonva-react-form';\r\nimport { createIdPick, IdPickProps } from 'createIdPick';\r\nimport { DevModel } from 'model';\r\nimport { store } from 'store';\r\nimport { IdPickPage, ServerSpan } from '../../tools';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst schema:ItemSchema[] = [\r\n    {name: 'name', type: 'string', maxLength: 100, required: true} as StringSchema,\r\n    {name: 'caption', type: 'string', maxLength: 100} as StringSchema,\r\n    {name: 'discription', type: 'string', maxLength: 250} as StringSchema,\r\n    {name: 'url', type: 'string', maxLength: 200} as StringSchema,\r\n    {name: 'public', type: 'boolean'} as BoolSchema,\r\n    {name: 'server', type: 'id'} as IdSchema,\r\n    {name: 'icon', type: 'image'} as ImageSchema,\r\n    {name: 'submit', type: 'submit'} as ButtonSchema,\r\n];\r\n\r\nexport abstract class EditBasePage extends VPage<AppController> {\r\n    private candidateItems = async (params:any, key:string):Promise<any[]> => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    }\r\n\r\n    private moreCandidates = async ():Promise<void> => {\r\n        await store.dev.searchServer.more();\r\n    }\r\n\r\n    private renderRow = (item:DevModel.Server, index:number): JSX.Element => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    }\r\n\r\n    private pickServerId = (context:Context, name:string, value:number): Promise<number> => {\r\n        return new Promise<number>((resolve, reject) => {\r\n            nav.push(<IdPickPage \r\n                caption=\"选择服务器\" \r\n                searchPlaceHolder=\"搜索服务器\"\r\n                candidateItems={this.candidateItems}\r\n                moreCandidates={this.moreCandidates}\r\n                row={this.renderRow}\r\n                idFromItem={(item:DevModel.Server) => item.id}\r\n                resolve={resolve} params={undefined} />, \r\n                ()=> {\r\n                    reject();\r\n                });\r\n        });\r\n    }\r\n\r\n    private renderServerInput = (itemId:number): JSX.Element => {\r\n        return <ServerSpan id={itemId} />;\r\n    };\r\n\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            name: {widget: 'text', label: '名称'} as UiTextItem,\r\n            caption: {widget: 'text', label: '标题'} as UiTextItem,\r\n            discription: {widget: 'textarea', label: '描述', rows: 5} as UiTextAreaItem,\r\n            url: {widget: 'text', label: 'URL', placeholder: 'http(s)://APP地址'} as UiTextItem,\r\n            'public': {widget: 'checkbox', label: '公开', } as UiCheckItem,\r\n            server: {widget: 'id', label: '服务器', pickId: this.pickServerId, Templet: this.renderServerInput} as UiIdItem,\r\n            icon: {widget: 'image', label: '标志图'} as UiImageItem,\r\n            submit: {widget: 'button', label: '提交', className: 'btn btn-primary'}\r\n        }\r\n    }\r\n    \r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onButtonClick = async (name:string, context: Context) => {\r\n        let {data} = context;\r\n        let app:DevModel.App = _.clone(this.controller.app) || {} as any;\r\n        _.merge(app, data);\r\n        await this.controller.saveApp(app);\r\n        nav.pop();\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form = observer(() => {\r\n        return <Form fieldLabelSize={2}\r\n            className=\"m-3\" \r\n            schema={schema} \r\n            uiSchema={this.uiSchema}\r\n            formData={this.initValues}\r\n            onButtonClick={this.onButtonClick} />\r\n    });\r\n    abstract get initValues():any;\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    get initValues():any {return this.controller.app}\r\n    protected page = () => {\r\n        let {app} = this.controller;\r\n        let {name} = app;\r\n        return <Page header={'修改APP - ' + name} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    get initValues():any {return {}}\r\n    protected page = () => {\r\n        return <Page header={'新建APP'} back=\"close\">\r\n            <this.form />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, Image } from \"tonva-tools\";\r\nimport { AppController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\n\r\nexport class AppsPage extends VPage<AppController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {appList, listRowClick} = this.controller;\r\n        let right = <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"App\" right={right}>\r\n            <List items={appList} item={{render: this.appRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private appRow = (item:DevModel.App):JSX.Element => {\r\n        let {name, caption, discription, icon, url, urlDebug} = item;\r\n        let left = <Badge size=\"sm\"><Image src={icon} /></Badge>;\r\n        let right = <div className=\"text-muted small text-right\">\r\n            {url || '-'}<br/>\r\n            {urlDebug}\r\n        </div>;\r\n        let spanCaption = caption?\r\n            <>{name}: <b>{caption}</b></> :\r\n            <b>{name}</b>;\r\n        return <LMR className=\"py-2 px-3 align-items-stretch\"\r\n            left={left} right={right}>\r\n            <div className=\"px-3\">\r\n                <div>{spanCaption}</div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { List, LMR, SearchBox } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { UnitSpan } from 'tools';\r\nimport { store } from 'store';\r\nimport { nav, Page, VPage } from 'tonva-tools';\r\nimport { AppController } from '.';\r\n\r\nexport class SearchUqPage extends VPage<AppController> {\r\n    @observable private uqs: DevModel.UQ[];\r\n\r\n    async open() {\r\n        this.uqs = await this.controller.getMyUqs();\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onSearch = async (key:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.uqs = await this.controller.searchUq(key, pageStart, pageSize);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch}\r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={this.uqs} item={{render: this.row, onClick: this.controller.onUq}} />\r\n        </Page>;\r\n    });\r\n\r\n    private row = (uq: DevModel.UQ) => {\r\n        let {owner, name, discription} = uq;\r\n        return <LMR className=\"py-2 px-3\" right={discription}>\r\n            <div>{owner} / {name}</div>\r\n        </LMR>;\r\n    };\r\n}\r\n\r\n@observer\r\nexport class AppUqs extends React.Component {\r\n    @observable anySelected: boolean = false;\r\n    private list:List;\r\n    private onSelect = (item: DevModel.UQ, isSelected:boolean, anySelected:boolean) => {\r\n        this.anySelected = anySelected;\r\n    }\r\n    private row = (item: DevModel.UQ) => {\r\n        let {name, unit, discription} = item;\r\n        return <LMR className=\"p-2\" right={<small className=\"text-muted\">{discription}</small>}>\r\n            <UnitSpan id={unit} />/{name}\r\n        </LMR>;\r\n    }\r\n    private removeBind = () => {\r\n        if (this.list === null) return;\r\n        let {selectedItems} = this.list;\r\n        if (selectedItems === undefined) return;\r\n        if (selectedItems.length === 0) return;\r\n        store.dev.apps.appBindUq(\r\n            selectedItems.map(v => {\r\n                return {id:v.id, access:['*']}\r\n            }), \r\n            false);\r\n    }\r\n    render() {\r\n        let btnProps = this.anySelected?\r\n            {color:'danger', onClick:this.removeBind, icon:'trash', text:'取消'}:\r\n            {color:'primary', onClick:()=>nav.push(<Uqs/>), icon:'plus', text:'新增'};\r\n        let btn = (p)=><button \r\n            className={classNames('btn', 'btn-outline-'+p.color, 'btn-sm')} \r\n            onClick={p.onClick}>\r\n            <i className={\"fa fa-\" + p.icon} /> {p.text}关联\r\n        </button>;\r\n        let listHeader = <div className=\"va-row py-1 justify-content-center\">{btn(btnProps)}</div>;\r\n        return <Page header=\"关联UQ\">\r\n            <List ref={list=>this.list=list} header={listHeader}\r\n                items={store.dev.apps.uqs}\r\n                item={{render: this.row, onSelect: this.onSelect}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\n@observer\r\nclass Uqs extends React.Component {\r\n    onSearch = async (key:string) => {\r\n        await store.dev.apps.searchUq(key);\r\n    }\r\n    onBind(uq: DevModel.UQ, bind: boolean) {\r\n        store.dev.apps.appBindUq([{id:uq.id, access:['*']}], bind);\r\n    }\r\n    row = (uq: DevModel.UQ) => {\r\n        let isConnected = store.dev.apps.uqs.find(a => a.id === uq.id) !== undefined;\r\n        let cn = ['btn', 'btn-sm'];\r\n        let btnContent:any, onClick:any;\r\n        if (isConnected) {\r\n            cn.push('btn-success');\r\n            onClick = ()=>this.onBind(uq, false);\r\n            btnContent = \"已关联\";\r\n        }\r\n        else {\r\n            cn.push('btn-primary');\r\n            onClick = ()=>this.onBind(uq, true);\r\n            btnContent = <span><i className=\"fa fa-check\"/> 关联</span>;\r\n        }\r\n        return <div className=\"d-flex justify-content-start py-1 px-3\">\r\n            <div className=\"align-self-center\">{uq.name + ' - ' + uq.discription}</div>\r\n            <footer className=\"ml-auto\"><button className={classNames(cn)} onClick={onClick}>{btnContent}</button></footer>\r\n        </div>\r\n    }\r\n    render() {\r\n        let header = <SearchBox className=\"w-100 mx-1\" \r\n            onSearch={this.onSearch} \r\n            placeholder=\"搜索UQ名字\" \r\n            maxLength={100} />;\r\n        return <Page back=\"close\" header={header}>\r\n            <List items={store.dev.apps.searchedUqs} item={{render: this.row}} loading={null} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva-tools';\r\nimport { AppController, UqAccess } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan, UnitName } from 'tools';\r\nimport { Prop, Media, PropGrid, ListProp, DropdownActions, List, LMR } from 'tonva-react-form';\r\nimport { EditPage } from './editPage';\r\nimport { AppUqs, SearchUqPage } from './appUqs';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class AppPage extends VPage<AppController> {\r\n    async open() {\r\n        //this.uqs.list = this.controller.uqs;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.controller.deleteApp();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let {app} = this.controller;\r\n        let {unit, name, caption, discription, icon, server, date_init, date_update} = app;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            // {icon: 'cogs', caption:'设置关联UQ', action: ()=>nav.push(<AppUqs />)},\r\n            {caption:'修改App', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n\r\n        let right = <DropdownActions actions={menuItems} />;\r\n        let spanCaption = caption?\r\n            <>{name}: <b>{caption}</b></> :\r\n            <b>{name}</b>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <Media icon={icon} main={spanCaption} discription={disp} />\r\n            },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n            /*\r\n            {\r\n                type: 'component', \r\n                label: 'Service',\r\n                vAlign: 'stretch',\r\n                component: <ServiceRow />,\r\n            },*/\r\n            {\r\n                label: 'URL',\r\n                name: 'url',\r\n                type: 'string',                \r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={server} />\r\n            },\r\n            '',\r\n            //this.uqs,\r\n        ];\r\n        let btnAddUq = <button className=\"btn btn-outline-primary btn-sm\" onClick={()=>this.openVPage(SearchUqPage)}>\r\n            增加关联\r\n        </button>;\r\n        return <Page header={'App - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={app} />\r\n            <LMR className=\"mx-3 mt-3 mb-1\" right={btnAddUq}>\r\n                关联UQ\r\n            </LMR>\r\n            <List items={this.controller.uqAccesses} item={{render:this.renderUqRow, onClick:this.uqClick}} />\r\n        </Page>\r\n    })\r\n\r\n    private uqClick = (uqAccess:UqAccess) => {\r\n        this.controller.onUq(uqAccess.uq);\r\n    }\r\n\r\n    private renderUqRow = (uqAccess:UqAccess, index:number):JSX.Element => {\r\n        let {uq, bind_access: access} = uqAccess;\r\n        let {name, discription, unit} = uq;\r\n        let disp: any;\r\n        let elAccess: any;\r\n        if (access && access.length > 0) {\r\n            elAccess = <> + {access.join(', ')} </>;\r\n        }\r\n        if (discription) disp = <div className=\"small text-muted\"> &nbsp; {discription}</div>;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={disp}>\r\n            <UnitName id={unit} /> / {name} {elAccess}\r\n        </LMR>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from \"tonva-tools\";\r\nimport { AppController, UqAccess } from \".\";\r\nimport { LMR } from 'tonva-react-form';\r\n\r\nexport class UqBindPage extends VPage<AppController> {\r\n    private uqAccess: UqAccess;\r\n    private accesses: string[];\r\n    private accessChecked:{[name:string]:boolean};\r\n    async open(uqAccess: UqAccess) {\r\n        this.uqAccess = uqAccess;\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {access} = uq;\r\n        if (access) {\r\n            this.accessChecked = {};\r\n            this.accesses = access.split(',');\r\n            for (let acc of this.accesses) {\r\n                this.accessChecked[acc] = (bind_access && bind_access.find(bc => bc === acc)) !== undefined;\r\n            }\r\n        }\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onCheckChanged = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let {target} = evt;\r\n        this.accessChecked[target.name] = target.checked;\r\n    }\r\n\r\n    private saveUqBind = async () => {\r\n        let acc:string[] = [];\r\n        if (this.accesses) {\r\n            for (let i in this.accessChecked) {\r\n                if (this.accessChecked[i] === true) acc.push(i);\r\n            }\r\n        }\r\n        await this.controller.saveUqBind(this.uqAccess.uq, acc);\r\n        nav.pop();\r\n    }\r\n\r\n    private removeUqBind = async () => {\r\n        await this.controller.removeUqBind(this.uqAccess.uq);\r\n        nav.pop();\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {uq, bind_access} = this.uqAccess;\r\n        let {owner, name, discription, access} = uq;\r\n        let btnDelete:any;\r\n        if (bind_access !== null && bind_access !== undefined) {\r\n            btnDelete = <button className=\"btn btn-outline-danger btn-sm\" onClick={this.removeUqBind}>取消关联</button>;\r\n        }\r\n        let checkAccessList:any;\r\n        if (this.accesses) {\r\n            checkAccessList = <div className=\"mt-3\">\r\n            {\r\n                this.accesses.map(v => {\r\n                    let checked = this.accessChecked[v];\r\n                    return <label key={v} className=\"d-inline-block mr-4\">\r\n                        <input onChange={this.onCheckChanged}\r\n                            style={{width:'1.1rem', height:'1.1rem'}} \r\n                            name={v} type=\"checkbox\" defaultChecked={checked} />&nbsp;{v}\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>;\r\n        }\r\n        return <Page header=\"关联UQ\">\r\n            <div className=\"m-3 py-3 px-3 bg-white border\">\r\n                <div>{owner} / {name}</div>\r\n                <div className=\"text-muted\">{discription}</div>\r\n                {checkAccessList}\r\n                <LMR className=\"pt-3\" right={btnDelete}>\r\n                    <button className=\"btn btn-primary btn-sm\" onClick={this.saveUqBind}>保存关联</button>\r\n                </LMR>\r\n            </div>\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { Controller } from \"tonva-tools\";\r\nimport { DevModel } from 'model';\r\nimport { devApi } from 'api';\r\nimport { AppsPage } from './appsPage';\r\nimport { AppPage } from './appPage';\r\nimport { UqBindPage } from './uqBindPage';\r\n\r\nexport interface UqAccess {\r\n    uq: DevModel.UQ;\r\n    bind_access: string[];\r\n}\r\n\r\nexport class AppController extends Controller {\r\n    private unitId: number;\r\n    app: DevModel.App;\r\n    @observable appList: DevModel.App[];\r\n    @observable uqAccesses: UqAccess[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.appList = await devApi.apps(this.unitId);\r\n        this.openVPage(AppsPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.App) => {\r\n        this.app = item;\r\n        let ret = await devApi.loadAppUqs(item.id);\r\n        this.uqAccesses = ret.map(v => {\r\n            let {owner, access, id, name, discription, unit, date_init, date_update, bind_access} = v;\r\n            return {\r\n                uq: {\r\n                    id: id,\r\n                    name: name,\r\n                    discription: discription,\r\n                    unit: unit,\r\n                    access: access,\r\n                    owner: owner,\r\n                    date_init: date_init,\r\n                    date_update: date_update, \r\n                    service_count: undefined,\r\n                },\r\n                uqOwner: owner,\r\n                bind_access: bind_access && bind_access.split(',')\r\n            }\r\n        });\r\n        this.openVPage(AppPage);\r\n    }\r\n\r\n    saveApp = async (values: DevModel.App) => {\r\n        let app: DevModel.App;\r\n        let now = new Date();\r\n        if (this.app === undefined) {\r\n            app = _.clone(values);\r\n            app.date_init = now;\r\n        }\r\n        else {\r\n            app = _.clone(this.app);\r\n            _.merge(app, values);\r\n        }\r\n        app.unit = this.unitId;\r\n        app.date_update = now;\r\n        let ret = await devApi.saveApp(app);\r\n        app.id = ret;\r\n        let org = this.appList.find(v => v.id === ret);\r\n        if (org !== undefined) {\r\n            _.merge(org, app);\r\n        }\r\n        else {\r\n            this.appList.push(app);\r\n        }\r\n    }\r\n\r\n    deleteApp = async () => {\r\n        await devApi.delApp(this.unitId, this.app.id);\r\n        let index = this.appList.findIndex(v => v.id === this.app.id);\r\n        if (index >= 0) this.appList.splice(index, 1);\r\n    }\r\n\r\n    searchUq = async (key:string, pageStart:number, pageSize:number) => {\r\n        return await devApi.searchUq(this.unitId, key, pageStart, pageSize);\r\n    }\r\n\r\n    getMyUqs = async () => {\r\n        return await devApi.getMyUqs(this.unitId);\r\n    }\r\n\r\n    onUq = (uq: DevModel.UQ) => {\r\n        let uqAccess:UqAccess = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n        if (uqAccess === undefined) {\r\n            uqAccess = {\r\n                uq: uq,\r\n                bind_access: undefined,\r\n            }\r\n        }\r\n        else {\r\n            let access = uqAccess.bind_access;\r\n            if (access === null || access === undefined) uqAccess.bind_access = [];\r\n        }\r\n        this.openVPage(UqBindPage, uqAccess);\r\n    }\r\n\r\n    // accesses = undefined, 表示删除\r\n    private buildBindUqs(uq: DevModel.UQ, accesses?:string[]) {\r\n        let uqs:{id:number, access:string[]}[] = [];\r\n        let isNew = true;\r\n        for (let ua of this.uqAccesses) {\r\n            let {uq:uaUq, bind_access} = ua;\r\n            if (uaUq.id === uq.id) {\r\n                if (accesses === undefined) continue;\r\n                bind_access = accesses;\r\n                isNew = false;\r\n            }\r\n            uqs.push({\r\n                id: uaUq.id,\r\n                access: bind_access || [],\r\n            });\r\n        }\r\n        if (accesses !== undefined && isNew === true) {\r\n            uqs.push({id: uq.id, access: accesses});\r\n        }\r\n        return uqs;\r\n    }\r\n\r\n    saveUqBind = async (uq: DevModel.UQ, accesses:string[]) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq, accesses);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        if (uqs.length > this.uqAccesses.length) {\r\n            this.uqAccesses.unshift({\r\n                uq: uq,\r\n                bind_access: accesses,\r\n            });\r\n        }\r\n        else {\r\n            let ua = this.uqAccesses.find(v => v.uq.id === uq.id);\r\n            ua.bind_access = accesses;\r\n        }\r\n    }\r\n\r\n    removeUqBind = async (uq: DevModel.UQ) => {\r\n        let uqs:{id:number, access:string[]}[] = this.buildBindUqs(uq);\r\n        await devApi.appBindUq(this.unitId, this.app.id, uqs);\r\n        let index = this.uqAccesses.findIndex(v => v.uq.id === uq.id);\r\n        if (index>=0) this.uqAccesses.splice(index, 1);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {List, EasyDate, LMR, Muted} from 'tonva-react-form';\r\nimport {DevModel} from '../../model';\r\nimport {store} from '../../store';\r\n\r\ninterface State {\r\n    files: any[];\r\n    compiled?: string;\r\n    text?: string;\r\n}\r\n\r\nexport interface UpUploadProps {\r\n    uq: DevModel.UQ;\r\n    services: DevModel.Service[];\r\n}\r\n\r\nexport class UqUpload extends React.Component<UpUploadProps, State> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            files: undefined,\r\n        }\r\n    }\r\n    private onFilesChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let upFiles:any[] = [];\r\n        let {files} = evt.target;\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            upFiles.push(files[i]);\r\n        }\r\n        this.setState({\r\n            files: upFiles,\r\n        });\r\n    }\r\n    fileRender(file, index):JSX.Element {\r\n        let {name, size, lastModifiedDate} = file;\r\n        function sz():string {\r\n            let n:number, u:string;\r\n            if (size < 1024) {\r\n                n = size; u = 'b';\r\n            }\r\n            else if (size < 1024*1024) {\r\n                n = Math.trunc((size / 1024) * 100)/100; u = 'k';\r\n            }\r\n            else {\r\n                n = Math.trunc((size / 1024 / 1024) * 100)/100; u = 'm';\r\n            }\r\n            return n + ' ' + u;\r\n        }\r\n        return <LMR className=\"px-2 py-1\" right={<Muted>{sz()}</Muted>}>\r\n            <div>{name}</div>\r\n            <div><Muted>修改日期: <EasyDate date={lastModifiedDate} /></Muted></div>\r\n        </LMR>;\r\n    }\r\n    private fileClick = (file:any) => {\r\n        let fr = new FileReader();\r\n        fr.onload = function(f) {\r\n            //alert(this.result);\r\n            nav.push(<UqPage name={file.name} content={this.result} />)\r\n        }\r\n        fr.readAsText(file, \"utf8\");\r\n    }\r\n    private onSubmit = (evt:React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n    private async update(thoroughly:boolean) {\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        let url = store.uqServer + 'uq-compile/' + this.props.uq.id + '/update';\r\n        if (thoroughly === true) url += '-thoroughly';\r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(url, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            nav.push(<CompileResult {...this.props} res={res} abortController={abortController} />);\r\n        }\r\n        catch (e) {\r\n            console.error('%s %s', url, e);\r\n        }\r\n    }\r\n    private onUpdate = async () => {\r\n        let thoroughly = false;\r\n        await this.update(thoroughly);\r\n    }\r\n    private onUpdateThoroughly = async () => {\r\n        let thoroughly = true;\r\n        await this.update(thoroughly);\r\n    }\r\n    render() {\r\n        let {files} = this.state;\r\n        let fileList:any;\r\n        if (files !== undefined) {\r\n            fileList = <List \r\n                className=\"my-3\" \r\n                items={files} \r\n                item={{render: this.fileRender, onClick: this.fileClick}}/>;\r\n        }\r\n        let button:any;\r\n        if (files !== undefined && files.length > 0) {\r\n            button = <div className=\"my-2 d-flex\">\r\n                <button className=\"btn btn-success\" type=\"submit\" onClick={this.onUpdate}>优化编译</button>\r\n                <div className=\"py-2 flex-grow-1\" />\r\n                <button className=\"btn btn-outline-warning\"\r\n                    type=\"submit\" onClick={this.onUpdateThoroughly}>完全编译</button>\r\n            </div>;\r\n        }\r\n        return <Page header={\"编译 - \" + this.props.uq.name}>\r\n            <div className=\"py-2 px-3\">\r\n                <div>请选择UQ源代码文件</div>\r\n                <form className=\"my-1\" encType=\"multipart/form-data\" onSubmit={this.onSubmit}>\r\n                    <div className=\"my-1\">\r\n                        <input ref={(fileInput) => this.fileInput=fileInput}type=\"file\" id=\"photo\" \r\n                            className=\"w-100 form-control-file\" name=\"files\" multiple={true} \r\n                            onChange={this.onFilesChange} />\r\n                    </div>\r\n                    {fileList}\r\n                    {button}\r\n                </form>\r\n                <pre>{this.state.compiled}</pre>\r\n                <div>{this.state.text}</div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n\r\ninterface UqPgeProps {\r\n    name: string;\r\n    content: string|ArrayBuffer;\r\n}\r\nclass UqPage extends React.Component<UqPgeProps> {\r\n    render() {\r\n        return <Page header={this.props.name}>\r\n            <pre className=\"px-3 py-2\">{this.props.content}</pre>\r\n        </Page>;\r\n    }\r\n}\r\n\r\ninterface CompileResultProps {\r\n    res: Response;\r\n    abortController: AbortController;\r\n}\r\ninterface CompileResultState {\r\n    texts: string[];\r\n    seconds: number;\r\n}\r\nclass CompileResult extends React.Component<CompileResultProps, CompileResultState> {\r\n    private texts: string[];\r\n    private timeHandler:any;\r\n    constructor(props) {\r\n        super(props);\r\n        this.texts = [];\r\n        this.state = {\r\n            texts: this.texts,\r\n            seconds: -1,\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        nav.regConfirmClose(async ():Promise<boolean>=>{\r\n            if (this.state.seconds>=0) return true;\r\n            return new Promise<boolean>((resolve, reject) => {\r\n                try {\r\n                    if (confirm('正在编译中，真的要中止吗？') === true) {\r\n                        try {\r\n                            this.props.abortController.abort();\r\n                        }\r\n                        catch (err) {\r\n                            console.error(err);\r\n                        }\r\n                        resolve(true);\r\n                    }\r\n                    else {\r\n                        resolve(false);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            })\r\n        });\r\n    }\r\n    private clearTimeHandler() {\r\n        if (this.timeHandler !== undefined) {\r\n            clearTimeout(this.timeHandler);\r\n            this.timeHandler = undefined;\r\n        }\r\n    }\r\n    private getParent(el:HTMLElement):HTMLElement {\r\n        if (!el) return;\r\n        if (el.tagName === 'MAIN') return el;\r\n        return this.getParent(el.parentElement);\r\n    }\r\n    private scrollToBottom(defer:number = 100) {\r\n        this.clearTimeHandler();\r\n        let that = this;\r\n        this.timeHandler = setTimeout(() => {\r\n            var pane = document.getElementById('bottomDiv');\r\n            pane && pane.scrollIntoView();\r\n            /*\r\n            if (pane !== undefined) {\r\n                let childNodes = pane.childNodes;\r\n                let last = childNodes.item(childNodes.length-1);\r\n                (last as HTMLElement).scrollIntoView();\r\n            }\r\n            */\r\n            that.clearTimeHandler();\r\n        }, defer);\r\n    }\r\n    private topIntoView() {\r\n        var pane = document.getElementById('topDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let first = childNodes.item(0);\r\n        (first as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private bottomIntoView() {\r\n        var pane = document.getElementById('bottomDiv');\r\n        pane && pane.scrollIntoView();\r\n        /*\r\n        let childNodes = pane.childNodes;\r\n        let len = childNodes.length;\r\n        if (len === 0) return;\r\n        let last = childNodes.item(len-1);\r\n        (last as HTMLElement).scrollIntoView();\r\n        */\r\n    }\r\n    private doubleClick = () => {\r\n        var pane = document.getElementById('scrollDiv');\r\n        let main = this.getParent(pane);\r\n        if (!main) return;\r\n        if (main.scrollTop >= main.scrollHeight / 2) {\r\n            this.topIntoView();\r\n        }\r\n        else {\r\n            this.bottomIntoView();\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        let that = this;\r\n        let time = new Date();\r\n        function consume(reader: ReadableStreamReader) {\r\n            var total = 0\r\n            return new Promise((resolve, reject) => {\r\n                function uintToString(uintArray):string {\r\n                    var encodedString = String.fromCharCode.apply(null, uintArray),\r\n                        decodedString = decodeURIComponent(escape(encodedString));\r\n                    return decodedString;\r\n                }\r\n                function pump() {\r\n                    reader.read().then(({done, value}) => {\r\n                        if (done) {\r\n                            that.scrollToBottom();\r\n                            that.setState({\r\n                                seconds: (new Date().getTime() - time.getTime()),\r\n                            })\r\n                            resolve();\r\n                            return;\r\n                        }\r\n                        let text = uintToString(value);\r\n                        that.texts.push(text);\r\n                        that.setState({\r\n                            texts: that.texts,\r\n                        });\r\n                        total += value.byteLength;\r\n                        that.scrollToBottom();\r\n                        pump();\r\n                    }).catch(reject)\r\n                }\r\n                pump();\r\n            });\r\n        }\r\n        try {\r\n            await consume(this.props.res.body.getReader());\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n    render() {\r\n        let {seconds, texts} = this.state;\r\n        return <Page header={seconds>=0? \"编译完成\" : \"编译中...\"} back=\"close\">\r\n            <div id='topDiv' />\r\n            <div id='scrollDiv'\r\n                onDoubleClick={this.doubleClick} \r\n                className='py-2 px-3' \r\n                style={{wordWrap: 'break-word', whiteSpace: 'normal'}}>\r\n                {texts.map((v, i) => <pre style={{whiteSpace: 'pre-wrap'}} key={i}>{v}</pre>)}\r\n            </div>\r\n            {seconds>=0? <div className='px-3 pb-3' style={{color: 'red', fontWeight: 'bold'}}>\r\n                编译完成。共计用时{Math.floor(seconds/1000)}秒\r\n            </div> : undefined}\r\n            <div id='bottomDiv' />\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {IdPick, IdPickFace, List, SearchBox} from 'tonva-react-form';\r\nimport {DevModel} from './model';\r\n\r\nexport interface IdPickProps {\r\n    caption: string;\r\n    searchPlaceHolder?: string;\r\n    candidateItems: ((params:any, key:string) => Promise<any[]>) | any[];\r\n    moreCandidates: () => Promise<void>;\r\n    row: (item:any, index:number) => JSX.Element;\r\n}\r\n\r\nexport function createIdPick(props: IdPickProps):IdPick {\r\n    return function(face: IdPickFace, params: any):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            nav.push(<IdPickPage resolve={resolve} face={face} params={params} {...props} />);\r\n        });\r\n    }\r\n}\r\n\r\ninterface IdPickPageProps extends IdPickProps {\r\n    face: IdPickFace;\r\n    resolve: (item?: any) => void;\r\n    params: any;\r\n}\r\ninterface IdPickPageState {\r\n    items?: any[];\r\n}\r\n\r\nclass IdPickPage extends React.Component<IdPickPageProps, IdPickPageState> {\r\n    private items:any[];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: null,\r\n        }\r\n        this.itemClick = this.itemClick.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        let {face, candidateItems, params} = this.props;\r\n        this.setState({\r\n            items: Array.isArray(candidateItems)? candidateItems : await candidateItems(params, ''),\r\n        });\r\n    }\r\n    itemClick(item:any) {\r\n        let {resolve} = this.props;\r\n        resolve(item);\r\n        nav.pop();\r\n    }\r\n    async onSearch(key: string) {\r\n        //alert('search ' + key);\r\n        //await store.dev.searchServer.first(key)\r\n        let {candidateItems, params} = this.props;\r\n        if (typeof candidateItems === 'function') {\r\n            let ret = await candidateItems(params, key);\r\n            this.setState({items: ret});\r\n        }\r\n    }\r\n    render() {\r\n        let {caption, row, searchPlaceHolder} = this.props;\r\n        return <Page header={caption} back=\"close\">\r\n            <div className=\"container\">\r\n                <SearchBox className=\"my-2\" \r\n                    onSearch={this.onSearch} \r\n                    placeholder={searchPlaceHolder}\r\n                    maxLength={100} />\r\n            </div>\r\n            <List items={this.state.items} item={{onClick:this.itemClick, render:row}} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DevModel } from \"model\";\r\nimport { IdPickProps, createIdPick } from 'createIdPick';\r\nimport { store } from 'store';\r\nimport { Field, FormRow, StringFace, TextAreaFace, TonvaForm, SubmitResult } from 'tonva-react-form';\r\nimport { UQController } from '.';\r\nimport { VPage, nav, Page } from 'tonva-tools';\r\n\r\nconst ServerCaption = (item:DevModel.Server) => {\r\n    let {discription, cloud, ip} = item;\r\n    return <>{discription} {cloud} {ip}</>;\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\"><ServerCaption {...item} /></div>;\r\n    },\r\n};\r\n\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst dbTypeField:Field = {name: 'db_type', type: 'string', maxLength:20, defaultValue:'mysql'};\r\nconst dbField:Field = {name: 'db', type: 'string', maxLength:50, required: true};\r\nconst connectionField:Field = {name:'connection', type:'string', maxLength:250};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: <ServerCaption {...item} />,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n\r\nconst dbTypeRow:FormRow = {\r\n    label: '数据库类型',\r\n    field: dbTypeField,\r\n    face: {\r\n        type: 'string',\r\n        readonly: true,\r\n    } as StringFace\r\n};\r\n\r\nconst dbRow = {\r\n    label: '数据库名字',\r\n    field: dbField,\r\n};\r\n\r\nconst connectionRow = {\r\n    label: '连接字符串',\r\n    field: connectionField,\r\n    face: {\r\n        type: 'textarea',\r\n        maxLength: 250,\r\n        rows: 8,\r\n    } as TextAreaFace,\r\n};\r\n\r\nexport class NewServicePage extends VPage<UQController> {\r\n    private tonvaForm:TonvaForm;\r\n    private formRows:FormRow[] = [\r\n        urlRow,\r\n        serverRow,\r\n        dbTypeRow,\r\n        dbRow,\r\n        connectionRow\r\n    ];\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    private onSubmit = async (values:any):Promise<SubmitResult | undefined> => {\r\n        if (values.url.indexOf('/uq/')<0) {\r\n            this.tonvaForm.formView.setError('url', 'service url 必须包含/uq/');\r\n            return;\r\n        }\r\n\r\n        values.type = 2; // uq type, to be removed\r\n        values.bindId = this.controller.uq.id;\r\n        let ret = await this.controller.saveService(values);\r\n        if (ret === 0) {\r\n            if (this.tonvaForm !== undefined) {\r\n                this.tonvaForm.formView.setError('url', '已经有Service使用这个url');\r\n            }\r\n            return;\r\n        }\r\n        nav.pop();\r\n        return;\r\n    }\r\n    private page = () => {\r\n        return <Page header=\"新建Service\">\r\n            <TonvaForm ref={t=>this.tonvaForm=t} className=\"m-3\" formRows={this.formRows} onSubmit={this.onSubmit} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Page, VPage, nav } from \"tonva-tools\";\r\nimport { UQController } from '.';\r\nimport { DevModel } from 'model';\r\nimport { Prop, PropGrid } from 'tonva-react-form';\r\nimport { StringValueEdit, ServerSpan, TextValueEdit } from 'tools';\r\n\r\nexport class ServicePage extends VPage<UQController> {\r\n    @observable private service: DevModel.Service;\r\n    async open(service: DevModel.Service) {\r\n        this.service = service;\r\n        this.openPage(this.page);\r\n    }\r\n    private async changeProp(prop:string, value:any):Promise<any> {\r\n        return await this.controller.changeServiceProp(this.service, prop, value);\r\n    }\r\n    private onUrlChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        if ((value as string).indexOf('/uq/')<0) {\r\n            return 'URL必须包含/uq/';\r\n        }\r\n        let ret = await this.changeProp('url', value);\r\n        if (ret === 0) {\r\n            return 'URL已经被使用了';\r\n        }\r\n        this.service.url = value;\r\n    }\r\n    private onDbChanged = async (value:any, orgValue:any):Promise<string|void> => {\r\n        let ret = await this.changeProp('db', value);\r\n        if (ret === 0) {\r\n            return 'Db已经被使用了';\r\n        }\r\n        this.service.db = value;\r\n    }\r\n    private onDbTypeChanged = async (value:string, orgValue:any):Promise<string|void> => {\r\n        if (value === undefined || value === null) return;\r\n        if (value.toLowerCase().trim() !== 'mysql') return '目前只支持mysql';\r\n        let ret = await this.changeProp('db_type', value);\r\n        this.service.db_type = value;\r\n    }\r\n    private onConnectionChanged = async (value:string, orgValue:any):Promise<string|void> => {        \r\n        await this.changeProp('connection', value);\r\n        this.service.connection = value;\r\n    }\r\n    private onDeleteClick = async () => {\r\n        if (confirm(\"真的要删除Service吗？删除了不可恢复，需要重新录入。\")!==true) return;\r\n        await this.controller.delService(this.service);\r\n        nav.pop();\r\n    }\r\n    private page = () => {\r\n        let {uq} = this.controller;\r\n        //let {type, name, discription, server, url, db, db_type, connection} = this.service;\r\n        let rows:Prop[] = [\r\n            '',\r\n            /*\r\n            {\r\n                type: 'component',\r\n                component: <div className=\"px-3 py-2\">\r\n                    <b>{name}</b><br/><Muted>{discription}</Muted>\r\n                </div>,\r\n            },\r\n            '',*/\r\n            {\r\n                type: 'string',\r\n                name: 'url',\r\n                label: 'URL',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"修改URL\"\r\n                    value={this.service.url}\r\n                    onChanged={this.onUrlChanged} />)\r\n            },\r\n            {\r\n                type: 'component',\r\n                label: '服务器',\r\n                component: <ServerSpan id={this.service.server} />\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db_type',\r\n                label: '数据库类型',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库类型\"\r\n                    value={this.service.db_type}\r\n                    onChanged={this.onDbTypeChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'db',\r\n                label: '数据库名',\r\n                onClick: ()=>nav.push(<StringValueEdit \r\n                    title=\"数据库名字\"\r\n                    value={this.service.db}\r\n                    onChanged={this.onDbChanged} />)\r\n            },\r\n            {\r\n                type: 'string',\r\n                name: 'connection',\r\n                label: '连接字符串',\r\n                onClick: ()=>nav.push(<TextValueEdit\r\n                    title=\"连接字符串\"\r\n                    value={this.service.connection}\r\n                    onChanged={this.onConnectionChanged} />)\r\n            },\r\n        ];\r\n        let right = <button onClick={this.onDeleteClick} className=\"btn btn-success\">删除</button>;\r\n        return <Page header={'UQ - ' + uq.name} right={right}>\r\n            <PropGrid rows={rows} values={this.service} />\r\n        </Page>\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { UQController } from \".\";\r\nimport { VPage, nav, Page } from \"tonva-tools\";\r\nimport { SubmitResult, TonvaForm } from \"tonva-react-form\";\r\n\r\nconst formRows = [\r\n    {\r\n        label: '名称', \r\n        field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n    },\r\n    {\r\n        label: '描述',\r\n        field: {name: 'discription', type: 'string', maxLength: 250},\r\n        face: {type: 'textarea'}\r\n    },\r\n    //{\r\n    //    label: '入口',\r\n    //    field: {name: 'access', type: 'string', maxLength: 250},\r\n    //    face: {type: 'textarea', placeholder: '逗号分隔的入口名'}\r\n    //},\r\n];\r\n\r\n\r\nexport abstract class EditBasePage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n    protected onSubmit = async (values:any):Promise<SubmitResult> => {\r\n        await this.controller.saveUq(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    protected page: ()=>JSX.Element;\r\n    protected form(initValues:any):JSX.Element {\r\n        return <TonvaForm\r\n            className=\"m-3\"\r\n            formRows={formRows} \r\n            onSubmit={this.onSubmit} initValues={initValues} />\r\n    }\r\n}\r\n\r\nexport class EditPage extends EditBasePage {\r\n    protected page = () => {\r\n        let {uq} = this.controller;\r\n        let {name} = uq;\r\n        return <Page header={'修改UQ - ' + name} back=\"close\">\r\n            {this.form(uq)}\r\n        </Page>;\r\n    }\r\n}\r\n\r\nexport class NewPage extends EditBasePage {\r\n    protected page = () => {\r\n        return <Page header={'新建UQ'} back=\"close\">\r\n            {this.form({})}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva-tools';\r\nimport { UQController } from '.';\r\nimport { IdDates, UnitSpan, ServerSpan } from 'tools';\r\nimport { Prop, Media, LMR, FA, PropGrid, Muted, List, EasyDate, DropdownActions } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { EditPage } from './editPage';\r\nimport { store } from 'store';\r\n\r\nexport class UQPage extends VPage<UQController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private editItem = async () => {\r\n        await this.openVPage(EditPage);\r\n        //nav.push(<EditAppPage {...this.props} />);\r\n    }\r\n\r\n    private deleteItem = async () => {\r\n        if (confirm('真的要删除UQ吗？') === true) {\r\n            await this.controller.deleteUq();\r\n            nav.pop();\r\n        }\r\n    }\r\n\r\n    private page = ():JSX.Element => {\r\n        let {onUqUpload, serviceClick, uq, services} = this.controller;\r\n        let {isOwner} = store.unit;\r\n        let {id, name, discription, access, unit, date_init, date_update} = uq;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let menuItems = [\r\n            {caption:'修改UQ', action:this.editItem, icon:'edit' },\r\n            {caption:'删除', action:this.deleteItem, icon:'trash-o' }\r\n        ];\r\n        let right = isOwner>0 && <DropdownActions actions={menuItems} />;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component', \r\n                component: <LMR className=\"py-2\"\r\n                    left={<FA name=\"database\" className=\"text-primary fa-2x mr-3\" />}>\r\n                    <div><b>{name}</b></div>\r\n                    {disp}\r\n                </LMR>\r\n            },\r\n            {\r\n                type: 'component', \r\n                label: '开发号', \r\n                component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> \r\n            },\r\n           '',\r\n           {\r\n                type: 'component', \r\n                label: '编译代码', \r\n                component: <LMR onClick={()=>onUqUpload()} className=\"w-100 py-2 cursor-pointer\" \r\n                    left=\"上传编译uq代码\" right={<FA className=\"align-self-center\" name=\"chevron-right\" />} />\r\n            },\r\n            /*\r\n            {type: 'component', label: 'ACCESS', component: <div className=\"py-2\">{\r\n                access? \r\n                    access.split(',').join(', ')\r\n                    : <Muted>(全)</Muted>\r\n            }</div> },\r\n            */\r\n        ];\r\n        let btnAddService = isOwner>0 && <button\r\n            className=\"btn btn-outline-primary btn-sm\"\r\n            onClick={()=>this.controller.showNewServicePage()}>\r\n            增加\r\n        </button>;\r\n        \r\n        let onServiceClick:any;\r\n        if (isOwner>0) onServiceClick = serviceClick;\r\n\r\n        return <Page header={'UQ - ' + name} right={right}>\r\n            <PropGrid rows={rows} values={uq} />\r\n            <div className=\"d-flex mx-3 mt-3 mb-1 align-items-end\">\r\n                <Muted style={{display:'block', flex:1}}>Service</Muted>\r\n                {btnAddService}\r\n            </div>\r\n            <List items={services} item={{render:this.renderService, onClick:onServiceClick}} />\r\n        </Page>;\r\n    }\r\n    private renderService(service:DevModel.Service, index:number):JSX.Element {\r\n        let {url, server, db, db_type, compile_time} = service;\r\n        let compile = !compile_time?\r\n            <Muted>未编译</Muted> :\r\n            <><Muted>编译: </Muted><EasyDate date={compile_time}/></>;\r\n\r\n        return <LMR className=\"d-flex w-100 align-items-center cursor-pointer py-2 px-3\"\r\n            right={<small>{compile}</small>}\r\n            >\r\n            <div>\r\n                <div>{url}</div>\r\n                <div>{db_type} {db}</div>\r\n                <Muted><ServerSpan id={server} /></Muted>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { UQController } from '.';\r\nimport { List, LMR, Badge, Muted, FA } from 'tonva-react-form';\r\nimport { DevModel } from 'model';\r\nimport { NewPage } from './editPage';\r\nimport { store } from 'store';\r\n\r\nexport class ListPage extends VPage<UQController> {\r\n    async open(param:any) {\r\n        this.openPage(this.page);\r\n    }\r\n    private newItem = () => {\r\n        this.controller.uq = undefined;\r\n        this.openVPage(NewPage);\r\n    }\r\n    private page = ():JSX.Element => {\r\n        let {uqList: list, listRowClick} = this.controller;\r\n        let {isOwner} = store.unit;\r\n        let right = isOwner>0 && <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header=\"UQ\" right={right}>\r\n            <List items={list} item={{render: this.listRow, onClick: listRowClick}} />\r\n        </Page>\r\n    }\r\n    private listRow = (item:DevModel.UQ):JSX.Element => {\r\n        let {name, discription, service_count} = item;\r\n        return <LMR className=\"py-1 px-3 align-items-center\"\r\n            left={<FA name=\"database\" className=\"text-primary fa-lg\" />}\r\n            right={<>{service_count}</>}>\r\n            <div className=\"py-2 px-3\">\r\n                <div><b>{name}</b></div>\r\n                <div><Muted>{discription}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { observable } from 'mobx';\r\nimport { nav, Controller } from 'tonva-tools';\r\nimport { DevModel } from '../../model';\r\nimport { UqUpload, UpUploadProps } from './uqUpload';\r\nimport { devApi } from 'api';\r\nimport { NewServicePage } from './newServicePage';\r\nimport { ServicePage } from './servicePage';\r\nimport { UQPage } from './uqPage';\r\nimport { ListPage } from './listPage';\r\n\r\nexport class UQController extends Controller {\r\n    private unitId: number;\r\n    uq: DevModel.UQ;\r\n    access: string;\r\n    entities: string;\r\n    @observable uqList: DevModel.UQ[];\r\n    @observable services: DevModel.Service[];\r\n    protected async internalStart(unitId:any) {\r\n        this.unitId = unitId;\r\n        this.uqList = await devApi.uqs(this.unitId);\r\n        this.openVPage(ListPage);\r\n    }\r\n\r\n    listRowClick = async (item:DevModel.UQ) => {\r\n        this.uq = item;\r\n        await this.loadUqEntities(item.id);\r\n        this.openVPage(UQPage);\r\n    }\r\n\r\n    private async loadUqEntities(uqId: number) {\r\n        let ret = await devApi.uqGetEntities(this.unitId, uqId);\r\n        let r0 = ret[0][0];\r\n        this.access = r0.access;\r\n        this.entities = r0.entities;\r\n        this.services = ret[1];\r\n    }\r\n\r\n    serviceClick = (service: DevModel.Service) => {\r\n        this.openVPage(ServicePage, service);\r\n    }\r\n\r\n    onUqUpload = async() => {\r\n        let onDispose = () => {\r\n        };\r\n        nav.push(<UqUpload uq={this.uq} services={this.services} />, onDispose);\r\n    }\r\n\r\n    saveUq = async (values: DevModel.UQ) => {\r\n        let uq: DevModel.UQ;\r\n        if (this.uq === undefined) {\r\n            uq = _.clone(values);\r\n        }\r\n        else {\r\n            uq = _.clone(this.uq);\r\n            _.merge(uq, values);\r\n        }\r\n        uq.unit = this.unitId;\r\n        let ret = await devApi.saveUq(uq);\r\n        uq.id = ret;\r\n        this.uqList.push(uq);\r\n    }\r\n\r\n    deleteUq = async () => {\r\n        await devApi.delUq(this.unitId, this.uq.id);\r\n        let index = this.uqList.findIndex(v => v.id === this.uq.id);\r\n        if (index >= 0) this.uqList.splice(index);\r\n    }\r\n\r\n    async changeServiceProp(service: DevModel.Service, prop:string, value:any):Promise<any> {\r\n        return await devApi.changeServiceProp(this.unitId, service.id, prop, value);\r\n    }\r\n\r\n    async saveService(service: DevModel.Service):Promise<number> {\r\n        let svc = _.clone(service);\r\n        svc.unit = this.unitId;\r\n        let ret = await devApi.saveService(svc);\r\n        svc.id = ret;\r\n        this.services.push(svc);\r\n        return ret;\r\n    }\r\n\r\n    async delService(service: DevModel.Service) {\r\n        await devApi.delService(this.unitId, service.id);\r\n        let index = this.services.findIndex(v => v.id == service.id);\r\n        if (index >= 0) this.services.splice(index);\r\n    }\r\n\r\n    showNewServicePage = async () => {\r\n        await this.openVPage(NewServicePage);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {LMR, Badge, Muted} from 'tonva-react-form';\r\n\r\nexport interface RowProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    vice: string|JSX.Element;\r\n}\r\n\r\nexport class Row extends React.Component<RowProps> {\r\n    render() {\r\n        let {icon, main, vice} = this.props;\r\n        return <LMR className=\"py-1 px-3 align-items-stretch\"\r\n            left={<Badge size=\"sm\" className=\"pt-1\"><img src={icon} /></Badge>}>\r\n            <div className=\"px-3\">\r\n                <div><b>{main}</b></div>\r\n                <div><Muted>{vice}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport _ from 'lodash';\r\nimport {FormRow, EasyDate, Media, \r\n    Prop, ListProp, PropGrid, List, SearchBox, LMR, Badge, Muted} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates, ServerSpan} from '../tools';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {Row} from './row';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\n@observer\r\nclass Info extends React.Component<DevModel.Bus> {\r\n    /*\r\n    private rows: Prop[];\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        this.rows = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n    }*/\r\n    async componentDidMount() {\r\n        //await store.dev.buses.loadCurApis();\r\n    }\r\n    render() {\r\n        let {unit, name, discription, schema, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={name} discription={disp} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            '',\r\n            {\r\n                type: 'component', \r\n                label: 'Schema',\r\n                vAlign: 'stretch',\r\n                component: <SchemaView />,\r\n            },\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>\r\n    }\r\n}\r\n\r\n@observer\r\nexport class SchemaView extends React.Component {\r\n    render() {\r\n        let bus = store.dev.buses.cur;\r\n        if (bus === null) return '...';\r\n        let content = bus.schema;\r\n        return <div className=\"d-flex py-2 w-100 align-items-center\" style={{flex:1}}>\r\n            <pre>\r\n                {content}\r\n            </pre>\r\n        </div>;\r\n\r\n    }\r\n}\r\n\r\nconst busesProps:ObjViewProps<DevModel.Bus> = {\r\n    title: 'BUS',\r\n    formRows: [\r\n        {\r\n            label: '名称', \r\n            field: {name: 'name', type: 'string', maxLength: 100, required: true},\r\n        },\r\n        {\r\n            label: '描述',\r\n            field: {name: 'discription', type: 'string', maxLength: 250},\r\n            face: {type: 'textarea'}\r\n        },\r\n        {\r\n            label: 'Schema',\r\n            field: {name: 'schema', type: 'string', maxLength: 2500},\r\n            face: {type: 'textarea', rows: 8}\r\n        },\r\n    ],\r\n    row: (item:DevModel.Bus):JSX.Element => {\r\n        let {owner, name, discription} = item;\r\n        return <Row icon={appItemIcon} main={owner + ' / ' + name} vice={discription} />;\r\n    },\r\n    items: ()=>store.dev.buses,\r\n    repeated: {\r\n        name: 'name',\r\n        err: '跟已有的名称重复',\r\n    },\r\n    info: Info,\r\n};\r\n\r\nexport default busesProps;\r\n","import * as React from 'react';\r\nimport {Prop, PropGrid, LMR, Muted, FA} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates} from '../tools';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\n\r\nclass Info extends React.Component<DevModel.Server> {\r\n    render() {\r\n        let {discription, cloud, ip, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;        \r\n        //<Media icon={appIcon} main={discription} discription={ip} />},\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <LMR className=\"py-2\"\r\n                left={<FA name=\"server\" className=\"text-primary fa-2x mr-3\" />}>\r\n                <div><b>{ip}</b></div>\r\n                {disp}\r\n            </LMR>},\r\n            '',\r\n            {type: 'component', label: '开发号', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'string', label: '云服务', name: 'cloud'},\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst serversProps:ObjViewProps<DevModel.Server> = {\r\n    title: 'Server',\r\n    info: Info,\r\n    formRows: [\r\n        {\r\n            label: '描述', \r\n            field: {name: 'discription', type: 'string', maxLength: 50, required: true},\r\n        },\r\n        {\r\n            label: '云服务商', \r\n            field: {name: 'cloud', type: 'string', maxLength: 20, required: true},\r\n        },\r\n        {\r\n            label: 'IP地址', \r\n            field: {name: 'ip', type: 'string', maxLength: 20},\r\n        },\r\n    ],\r\n    row: (item: DevModel.Server):JSX.Element => {\r\n        let {discription, cloud} = item;\r\n        //return <Row main={item.discription} vice={<>{item.cloud}  {item.ip}</>} />;\r\n        return <LMR className=\"py-2 px-3 align-items-center\"\r\n            left={<FA name=\"server\" className=\"text-primary fa-lg\" />}>\r\n            <div className=\"px-3\">\r\n                <div><b>{discription}</b></div>\r\n                <div><Muted>{cloud}</Muted></div>\r\n            </div>\r\n        </LMR>;\r\n    },\r\n    items: ()=>store.dev.servers,\r\n    repeated: {\r\n        name: 'discription',\r\n        err: '重复的描述',\r\n    }\r\n};\r\n\r\nexport default serversProps;\r\n","import * as React from 'react';\r\nimport {Step, Field, Prop, PropGrid, Media} from 'tonva-react-form';\r\nimport {UnitSpan, IdDates, ServerSpan, UqSpan, AppSpan} from '../tools';\r\nimport {Row} from './row';\r\nimport {appIcon, appItemIcon} from '../consts';\r\nimport {DevModel} from '../model';\r\nimport {store} from '../store';\r\nimport {ObjViewProps} from './ObjViewProps';\r\nimport {createIdPick, IdPickProps} from '../createIdPick';\r\n\r\nclass Info extends React.Component<DevModel.Service> {\r\n    render() {\r\n        let {url, type, discription, server, app, uq, unit, date_init, date_update} = this.props;\r\n        let disp = <div>\r\n            <div>{discription}</div>\r\n            <IdDates date_update={date_update} date_init={date_init} />\r\n        </div>;\r\n        let obj:Prop;\r\n        if (app !== undefined)\r\n            obj = {type: 'component', label: 'APP', component: <div className=\"py-2\"><AppSpan id={app} isLink={true} /></div> };\r\n        else\r\n            obj = {type: 'component', label: 'UQ', component: <div className=\"py-2\"><UqSpan id={uq} isLink={true} /></div> };\r\n\r\n        let rows:Prop[] = [\r\n            '',\r\n            {type: 'component', component: <Media icon={appIcon} main={discription} discription={url} />},\r\n            '',\r\n            {type: 'component', label: '所有者', component: <div className=\"py-2\"><UnitSpan id={unit} isLink={true} /></div> },\r\n            {type: 'component', label: '服务器', component: <div className=\"py-2\"><ServerSpan id={server} isLink={true} /></div> },\r\n            obj,\r\n        ];\r\n        return <div>\r\n            <PropGrid rows={rows} values={this.props} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst idPickServerProps: IdPickProps = {\r\n    caption: '选择服务器',\r\n    searchPlaceHolder: '搜索服务器',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchServer.first(key);\r\n        return store.dev.searchServer.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchServer.more();\r\n    },\r\n    row: (item:DevModel.Server, index:number) => {\r\n        return <div className=\"px-3 py-2\">{item.discription + ' ' + item.cloud + ' ' + item.ip}</div>;\r\n    },\r\n};\r\n\r\nconst idPickAppProps: IdPickProps = {\r\n    caption: '选择APP',\r\n    searchPlaceHolder: '搜索APP',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchApp.first(key);\r\n        return store.dev.searchApp.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchApp.more();\r\n    },\r\n    row: (item:DevModel.App, index:number) => {\r\n        return <div>{item.name + ' ' + item.discription}</div>;\r\n    },\r\n};\r\n\r\nconst idPickUqProps: IdPickProps = {\r\n    caption: '选择UQ',\r\n    searchPlaceHolder: '搜索UQ',\r\n    candidateItems: async (params:any, key:string) => {\r\n        await store.dev.searchUq.first(key);\r\n        return store.dev.searchUq.items;\r\n    },\r\n    moreCandidates: async () => {\r\n        await store.dev.searchUq.more();\r\n    },\r\n    row: (item:DevModel.UQ, index:number) => {\r\n        return <div>{item.name + ' ' + item.discription}</div>;\r\n    },\r\n};\r\n\r\nconst serviceTypeNames = ['中心', '交换', 'APP', 'UQ'];\r\nconst urlField:Field = {name: 'url', type: 'string', required:true, maxLength:200};\r\nconst discriptionField:Field = {name: 'discription', type: 'string', maxLength:100};\r\nconst serverField:Field = {name: 'server', type: 'id'};\r\nconst bindTypeField:Field = {name: 'type', type: 'number'};\r\nconst bindIdField:Field = {name: 'bindId', type: 'number'};\r\nconst authField:Field = {name: 'auth', type: 'string', maxLength:200};\r\n\r\nconst urlRow = {\r\n    label: 'URL',\r\n    field: urlField,\r\n};\r\nconst discriptionRow = {\r\n    label: '描述',\r\n    field: discriptionField,\r\n};\r\n\r\nconst serverRow = {\r\n    label: '服务器', \r\n    field: serverField,\r\n    face: {\r\n        type: 'pick-id', \r\n        initCaption: '请选择服务器', \r\n        pick: createIdPick(idPickServerProps), //this.idPick,\r\n        fromPicked: (item:DevModel.Server)=>{\r\n            return {\r\n                id: item.id, \r\n                caption: item.discription + ' ' + item.ip,\r\n            };\r\n        },\r\n        itemFromId: (id:number)=>store.cacheServers.get(id),\r\n    },\r\n};\r\n\r\nconst servicesProps:ObjViewProps<DevModel.Service> = {\r\n    title: 'Service',\r\n    info: Info,\r\n    formRows: [\r\n        urlRow,\r\n        discriptionRow,\r\n        serverRow,\r\n    ],\r\n    steps: {\r\n        step1: {\r\n            formRows: [\r\n                {\r\n                    label: '服务类型', \r\n                    field: bindTypeField,\r\n                    face: {\r\n                        type: 'select', \r\n                        list: [\r\n                            {text:'APP', value:2}, \r\n                            {text:'UQ', value:3}\r\n                        ]\r\n                    }\r\n                },\r\n            ],\r\n            next: (values:any) => {\r\n                switch (values['type']) {\r\n                    case 2: return 'appStep';\r\n                    case 3: return 'uqStep';\r\n                }\r\n            },\r\n            ex: '服务类型',\r\n        },\r\n        appStep: {\r\n            formRows: [\r\n                urlRow,\r\n                discriptionRow,\r\n                serverRow,\r\n                {\r\n                    label: 'APP', \r\n                    field: bindIdField,\r\n                    face:{\r\n                        type: 'pick-id', \r\n                        initCaption: '请选择APP', \r\n                        pick: createIdPick(idPickAppProps), //this.idPick,\r\n                        fromPickedItem: (item:DevModel.App)=>{\r\n                            return {id: item.id, caption: item.name + ' ' + item.discription}\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n            next: undefined,\r\n            ex: '绑定APP'\r\n        },\r\n        uqStep: {\r\n            formRows: [\r\n                urlRow,\r\n                discriptionRow,\r\n                serverRow,\r\n                {\r\n                    label: 'UQ', \r\n                    field: bindIdField,\r\n                    face:{\r\n                        type: 'pick-id', \r\n                        initCaption: '请选择UQ', \r\n                        pick: createIdPick(idPickUqProps), //this.idPick,\r\n                        fromPickedItem: (item:DevModel.UQ)=>{\r\n                            return {id: item.id, caption: item.name + ' ' + item.discription}\r\n                        },\r\n                    },\r\n                },                \r\n                { label: 'Auth', field: authField },\r\n            ],\r\n            next: undefined,\r\n            ex: '绑定UQ',\r\n        },\r\n    },\r\n    stepHeader: (step:Step, num:number):JSX.Element => {\r\n        return <div className=\"d-flex justify-content-center align-items-center\">\r\n            <h4><small className=\"text-muted\">第{num}步</small> {step.ex}</h4>\r\n        </div>;\r\n    },\r\n    row: (item:DevModel.Service):JSX.Element => {\r\n        return <Row\r\n            icon={appItemIcon}\r\n            main={item.url}\r\n            vice={serviceTypeNames[item.type] + ': ' + item.discription} />;\r\n    },\r\n    items: ()=>store.dev.services,\r\n    repeated: {\r\n        name: 'url',\r\n        err: 'url重复',\r\n    }\r\n};\r\n\r\nexport default servicesProps;\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page} from 'tonva-tools';\r\nimport {FormRow, TonvaForm, Step, MultiStep, DropdownActions, Action, List, FA, SubmitResult} from 'tonva-react-form';\r\nimport {DevModel} from '../model';\r\nimport { ObjViewProps } from './ObjViewProps';\r\nimport { store } from 'store';\r\n\r\n@observer\r\nexport class ObjView<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    async componentDidMount() {\r\n        await this.props.items().load();\r\n    }\r\n    //converter(item:T):ListItem {\r\n    //    return this.props.converter(item);\r\n    //}\r\n    newItem() {\r\n        this.props.items().cur = undefined;\r\n        nav.push(<New {...this.props} />);\r\n    }\r\n    itemClick = (item:T) => {\r\n        this.props.items().cur = observable(item);\r\n        nav.push(<Info {...this.props} />);\r\n    }\r\n    render() {\r\n        let {title, items} = this.props;\r\n        let {isOwner} = store.unit;\r\n        let right = isOwner>0 && <button className='btn btn-secondary btn-sm' onClick={()=>this.newItem()}><FA name=\"plus\" /></button>;\r\n        return <Page header={title} right={right}>\r\n            <List items={items().items}\r\n                item={{render: this.props.row, onClick: this.itemClick}}\r\n                // converter={this.props.converter} \r\n                //itemClick={this.itemClick} \r\n                />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass New<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        let ret = await this.props.items().saveCur(values);\r\n        if (ret === true) {\r\n            nav.pop();\r\n        }\r\n        else {\r\n            let repeated = this.props.repeated;\r\n            //this.formView.setError(repeated.name, repeated.err);\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        let content;\r\n        let {title, steps, stepHeader} = this.props;\r\n        let {formRows, items} = this.props;\r\n        if (steps !== undefined) {\r\n            content = <MultiStep className=\"mt-4\" header={stepHeader} steps={steps} first=\"step1\" onSubmit={this.onSubmit} />;\r\n        }\r\n        else if (formRows !== undefined) {\r\n            content = <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={formRows} \r\n                onSubmit={this.onSubmit} initValues={items().cur} />;\r\n        }\r\n        else {\r\n            content = \"ObjViewProps: no steps and no formRows\";\r\n        }\r\n        return <Page header={'新增'+title}>\r\n            {content}\r\n        </Page>\r\n    }\r\n}\r\n\r\n@observer\r\nclass Info<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private menuItems = [\r\n        {caption:'修改' + this.props.title, action:this.editItem.bind(this), icon:'edit' },\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    editItem() {\r\n        nav.push(<Edit {...this.props} />);\r\n    }\r\n    render() {\r\n        let actions = [];\r\n        let ex = this.props.extraMenuActions;\r\n        if (ex !== undefined) actions.push(...ex);\r\n        actions.push(...this.menuItems);        \r\n        let right = <DropdownActions actions={actions} />\r\n        let item = this.props.items().cur;\r\n        return <Page header={this.props.title + ' - 详细资料'} right={right}>\r\n            <this.props.info {...item} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass Edit<T extends DevModel.ObjBase> extends React.Component<ObjViewProps<T>> {\r\n    private actions = [\r\n        {caption:'删除', action:this.deleteItem.bind(this), icon:'trash-o' }\r\n    ];\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentWillMount() {\r\n    }\r\n    async onSubmit(values:any):Promise<SubmitResult> {\r\n        await this.props.items().saveCur(values);\r\n        nav.pop();\r\n        return;\r\n    }\r\n    async deleteItem() {\r\n        if (confirm('真的要删除吗？系统删除时并不会检查相关引用，请谨慎') === true) {\r\n            await this.props.items().del();\r\n            nav.pop();\r\n        }\r\n    }\r\n    render() {\r\n        let right = <DropdownActions actions={this.actions} />\r\n        return <Page header={'修改 '+this.props.title} right={right} back=\"close\">\r\n            <TonvaForm \r\n                className=\"m-3\"\r\n                formRows={this.props.formRows} \r\n                onSubmit={this.onSubmit} initValues={this.props.items().cur} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers } from './cUsers';\r\n\r\nexport class VApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (appUsers: AppUsers, index:number):JSX.Element => {\r\n        let {app, users} = appUsers;\r\n        let {id, name, discription} = app;\r\n        let right = <small className=\"text-muted\">{discription}</small>;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <LMR className=\"mb-2\" right={right}>\r\n                <FA name=\"address-card-o\" className=\"text-primary mr-3\" />\r\n                <b>{name}</b>\r\n            </LMR>\r\n            <div>\r\n                <small className=\"text-muted\">用户: </small>\r\n                {users.length===0?'[无]':users.map(u => u.assigned || u.nick || u.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {appUsersList, searchApp, onAppsClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchApp} \r\n            placeholder=\"搜索App\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={appUsersList} \r\n                item={{render: this.renderRow, onClick:onAppsClick,  key: (item=>item.app.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps } from './cUsers';\r\n\r\nexport class VUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderRow = (userApps: UserApps, index:number):JSX.Element => {\r\n        let {user, apps} = userApps;\r\n        let {id, name, nick, icon, assigned} = user;\r\n        return <div className=\"d-block px-3 py-2\">\r\n            <div className=\"mb-2\">\r\n                <FA name=\"user-o\" className=\"text-primary mr-3\" />\r\n                <b>{assigned || nick || name}</b>\r\n            </div>\r\n            <div>\r\n                <small className=\"text-muted\">App: </small>\r\n                {apps.length===0?'[无]':apps.map(a => a.name).join(', ')}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {userAppsList, searchUser, onUsersClick} = this.controller;\r\n        let searchBox = <SearchBox className=\"w-100 pr-1\" \r\n            onSearch={searchUser} \r\n            placeholder=\"搜索用户\" \r\n            allowEmptySearch={true} />;\r\n        return <Page header={searchBox}>\r\n            <List items={userAppsList} \r\n                item={{render: this.renderRow, onClick:onUsersClick, key: (item=>item.user.id)}} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, Muted } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, User } from './cUsers';\r\n\r\nexport class VApp extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, curAppUsers, onAppEditUsers} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onAppEditUsers()}>增减用户</button>;\r\n        return <Page header={'App - ' + (curApp.name)} right={right}>\r\n            <List items={curAppUsers} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (user: User, index:number):JSX.Element => {\r\n        let {name, nick, assigned} = user;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <span>{assigned} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else if (nick)\r\n            content = <span>{nick} &nbsp; <small className=\"text-muted\">{name}</small></span>;\r\n        else\r\n            content = <>{name}</>\r\n        return <div className=\"px-3 py-2\">{content}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, App } from './cUsers';\r\n\r\nexport class VUser extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, curUserApps, onUserEditApps} = this.controller;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={()=>onUserEditApps()}>增减App</button>;\r\n        return <Page header={'用户 - ' + (curUser.assigned || curUser.nick || curUser.name)}\r\n            right={right}>\r\n            <List items={curUserApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (app: App, index:number):JSX.Element => {\r\n        let {name, discription} = app;\r\n        return <div className=\"px-3 py-2\">{name} {discription}</div>\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR, Muted, FA } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, User, EditUser } from './cUsers';\r\n\r\nexport class VAppEditUsers extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curApp, appEditUsers, onAppEditUsers} = this.controller;\r\n        return <Page header={curApp.name + ' - 增减用户'} >\r\n            <List items={appEditUsers} item={{render:this.renderUser}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderUser = (editUser: EditUser, index:number):JSX.Element => {\r\n        let {name, nick, assigned, bind} = editUser;\r\n        let content:any;\r\n        if (assigned)\r\n            content = <>{assigned} <Muted>{name}</Muted></>;\r\n        else if (nick)\r\n            content = <>{nick} <Muted>{name}</Muted></>;\r\n        else\r\n            content = <>{name}</>\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onUserChanged(editUser, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2 align-items-center\" right={right}>\r\n            {content}\r\n        </LMR>\r\n    }\r\n\r\n    private onUserChanged = async (editUser: EditUser, checked:boolean) => {\r\n        await this.controller.bindAppUser(editUser, checked);\r\n        editUser.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page } from \"tonva-tools\";\r\nimport { List, SearchBox, LMR } from 'tonva-react-form';\r\nimport { UsersController, UserApps, AppUsers, App, EditApp } from './cUsers';\r\n\r\nexport class VUserEditApps extends VPage<UsersController> {\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let {curUser, userEditApps, onUserEditApps} = this.controller;\r\n        return <Page header={'增减App - ' + (curUser.assigned || curUser.nick || curUser.name)}>\r\n            <List items={userEditApps} item={{render:this.renderApp}} />\r\n        </Page>\r\n    })\r\n\r\n    private renderApp = (editApp: EditApp, index:number):JSX.Element => {\r\n        let {name, discription, bind} = editApp;\r\n        let right = <input type=\"checkbox\" defaultChecked={bind===1} \r\n            onChange={(evt)=>this.onAppChanged(editApp, evt.target.checked)} />;\r\n        return <LMR className=\"px-3 py-2\" right={right}>\r\n            {name} {discription}\r\n        </LMR>\r\n    }\r\n\r\n    private onAppChanged = async (editApp: EditApp, checked:boolean) => {\r\n        await this.controller.bindUserApp(editApp, checked);\r\n        editApp.bind = checked===true? 1: 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, Image, nav } from \"tonva-tools\";\r\nimport { UsersController, User } from \"./cUsers\";\r\nimport { SearchBox } from 'tonva-react-form';\r\nimport { mainApi } from 'api';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VAddUser extends VPage<UsersController> {\r\n    @observable private user: User = null;\r\n    //@observable private addedUser: User;\r\n    private searchBox: SearchBox;\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(():JSX.Element => {\r\n        let searchBox = <SearchBox ref={v=>this.searchBox=v}\r\n            className=\"w-100\"\r\n            onSearch={this.onSearch}\r\n            onFocus={this.onSearchFocus}\r\n            placeholder=\"用户全名/手机号/邮箱\"\r\n             />;\r\n        let content:any;\r\n        if (this.user === null) {\r\n        }\r\n        else if (this.user === undefined) {\r\n            content = <div className=\"text-info p-3\">没有找到用户</div>;\r\n        }\r\n        else {\r\n            let {name, nick, icon} = this.user;\r\n            let divUser:any;\r\n            if (nick) {\r\n                divUser = <><div><b>{nick}</b></div><div>{name}</div></>;\r\n            }\r\n            else {\r\n                divUser = <div><b>{name}</b></div>;\r\n            }\r\n            content = <div>\r\n                <div className=\"m-3 p-3 d-flex bg-white\">\r\n                    <Image src={icon} />\r\n                    <div className=\"ml-3\">{divUser}</div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <button className=\"btn btn-success text-center\" onClick={this.onAddUser}>增加用户</button>\r\n                </div>\r\n            </div>;\r\n        }\r\n        /*\r\n        let divUserAdded:any;\r\n        if (this.addedUser) {\r\n            divUserAdded = <div className=\"p-3\">\r\n                <div>\r\n                    新增用户: {this.addedUser.name} &nbsp; &nbsp; \r\n                    <button className=\"btn btn-success\" \r\n                        onClick={()=>this.controller.onUserEditApps()}>\r\n                        为用户添加App\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        }\r\n        */\r\n        return <Page header={searchBox}>\r\n            {content}\r\n        </Page>;\r\n    })\r\n    //{divUserAdded}\r\n\r\n    private onSearch = async (key:string) => {\r\n        this.user = await mainApi.userFromKey(key);\r\n    }\r\n\r\n    private onAddUser = async () => {\r\n        await this.controller.addUser(this.user.id);\r\n        this.controller.curUser = this.user;\r\n        this.user = null;\r\n        this.searchBox.clear();\r\n        this.replacePage(this.addedPage);\r\n    }\r\n\r\n    private onSearchFocus = () => {\r\n        this.user = null;\r\n        //this.addedUser = null;\r\n        if (this.searchBox) this.searchBox.clear();\r\n    }\r\n\r\n    private onAddApps = () => {\r\n        this.closePage();\r\n        this.controller.onUserEditApps();\r\n    }\r\n\r\n    private onContinueAddUser = () => {\r\n        this.closePage();\r\n        this.controller.onAddUser();\r\n    }\r\n\r\n    private addedPage = () => {\r\n        return <Page header=\"添加成功\">\r\n            <div className=\"p-3 text-center\">\r\n                <div>\r\n                    新增用户: {this.controller.curUser.name}\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-success mr-3\" \r\n                        onClick={this.onAddApps}>\r\n                        为用户添加App\r\n                    </button>\r\n                    <button className=\"btn btn-outline-primary\"\r\n                        onClick={this.onContinueAddUser}>\r\n                        继续添加新用户\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Controller, VPage, Page } from \"tonva-tools\";\r\nimport { mainApi } from 'api';\r\nimport { LMR, FA } from 'tonva-react-form';\r\nimport { VApps } from './vApps';\r\nimport { VUsers } from './vUsers';\r\nimport { VApp } from './vApp';\r\nimport { VUser } from './vUser';\r\nimport { VAppEditUsers } from './vAppEditUsers';\r\nimport { VUserEditApps } from './vUserEditApps';\r\nimport { VAddUser } from './VAddUser';\r\nimport { Unit } from 'model';\r\n\r\nexport interface User {\r\n    id: number;\r\n    name: string;\r\n    nick: string;\r\n    icon: string;\r\n    assigned: string;\r\n}\r\nexport interface App {\r\n    id: number;\r\n    name: string;\r\n    discription: string;\r\n}\r\nexport interface UserApps {\r\n    user: User;\r\n    apps: App[];\r\n}\r\nexport interface AppUsers {\r\n    app: App;\r\n    users: User[];\r\n}\r\nexport interface EditApp extends App {\r\n    bind: number;   // 0: not bind, 1: bind\r\n}\r\nexport interface EditUser extends User {\r\n    bind: number;  // 0: not bind, 1: bind\r\n}\r\n\r\nexport class UsersController extends Controller {\r\n    private unit: Unit;\r\n    @observable userAppsList: UserApps[];\r\n    @observable appUsersList: AppUsers[];\r\n    curUser: User;\r\n    @observable curUserApps: App[];\r\n    @observable userEditApps: EditApp[];\r\n    curApp: App;\r\n    @observable curAppUsers: User[];\r\n    @observable appEditUsers: EditUser[];\r\n\r\n    protected async internalStart(unit:Unit) {\r\n        this.unit = unit;\r\n        let cn = \"bg-white px-3 py-2 my-1\";\r\n        let appIcon = <FA name=\"columns\" className=\"text-primary mr-3\" />;\r\n        let userIcon = <FA name=\"user-plus\" className=\"text-primary mr-3\" />;\r\n        let right = <button className=\"btn btn-sm btn-success\" onClick={this.onAddUser}><FA name=\"plus\" /></button>;\r\n        this.openPage(<Page header={'用户管理 - ' +  this.unit.name} right={right}>\r\n            <LMR className={cn} onClick={this.onAppUsers} left={appIcon}>App</LMR>\r\n            <LMR className={cn} onClick={this.onUserApps} left={userIcon}>用户</LMR>\r\n        </Page>);\r\n    }\r\n\r\n    private onAppUsers = async () => {\r\n        await this.loadAppUsers(undefined);\r\n        this.openVPage(VApps);\r\n    }\r\n\r\n    private onUserApps = async () => {\r\n        await this.loadUserApps(undefined);\r\n        this.openVPage(VUsers);\r\n    }\r\n\r\n    private async loadAppUsers(key:string) {\r\n        let list:AppUsers[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitAppUsers(this.unit.id, key, pageStart, pageSize);\r\n        let apps = ret[0];\r\n        let users = ret[1];\r\n        let coll: {[id:number]:AppUsers} = {}\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.id,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            };\r\n            list.push(coll[a.id] = {app:app, users:[]});\r\n        }\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.user,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            }\r\n            coll[u.app].users.push(user);\r\n        }\r\n        this.appUsersList = list;\r\n    }\r\n\r\n    private async loadUserApps(key:string) {\r\n        let list:UserApps[] = [];\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        let ret = await mainApi.unitUsers(this.unit.id, key, pageStart, pageSize);\r\n        let users = ret[0];\r\n        let apps = ret[1];\r\n        let coll: {[id:number]:UserApps} = {}\r\n        for (let u of users) {\r\n            let user:User = {\r\n                id: u.id,\r\n                name: u.name,\r\n                nick: u.nick,\r\n                icon: u.icon,\r\n                assigned: u.assigned\r\n            };\r\n            list.push(coll[u.id] = {user:user, apps:[]});\r\n        }\r\n        for (let a of apps) {\r\n            let app:App = {\r\n                id: a.app,\r\n                name: a.name,\r\n                discription: a.discription,\r\n            }\r\n            coll[a.user].apps.push(app);\r\n        }\r\n        this.userAppsList = list;\r\n    }\r\n\r\n    searchUser = async(key:string) => {\r\n        await this.loadUserApps(key);\r\n    }\r\n\r\n    searchApp = async(key:string) => {\r\n        await this.loadAppUsers(key);\r\n    }\r\n\r\n    onAppsClick = async (appUsers: AppUsers) => {\r\n        this.curApp = appUsers.app;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curAppUsers = await mainApi.unitOneAppUsers(this.unit.id, this.curApp.id, pageStart, pageSize);\r\n        this.openVPage(VApp);\r\n    }\r\n\r\n    onUsersClick = async (userApps: UserApps) => {\r\n        this.curUser = userApps.user;\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.curUserApps = await mainApi.unitOneUserApps(this.unit.id, this.curUser.id, pageStart, pageSize);\r\n        this.openVPage(VUser);\r\n    }\r\n\r\n    onAppEditUsers = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.appEditUsers = await mainApi.unitAppEditUsers(this.unit.id, this.curApp.id, key, pageStart, pageSize);\r\n        this.openVPage(VAppEditUsers);\r\n    }\r\n\r\n    onAddUser = () => {\r\n        this.openVPage(VAddUser);\r\n    }\r\n\r\n    onUserEditApps = async (key?:string) => {\r\n        let pageStart = 0;\r\n        let pageSize = 100;\r\n        this.userEditApps = await mainApi.unitUserEditApps(this.unit.id, this.curUser.id, key, pageStart, pageSize);\r\n        this.openVPage(VUserEditApps);\r\n    }\r\n\r\n    bindAppUser = async(user:User, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, this.curApp.id, user.id, checked===true? 1:0);\r\n        let appUsers = this.appUsersList.find(v => v.app.id === this.curApp.id);\r\n        if (checked === true) {\r\n            this.curAppUsers.push(user);\r\n            if (appUsers) appUsers.users.push(user);\r\n        }\r\n        else {\r\n            let index = this.curAppUsers.findIndex(v => v.id === user.id);\r\n            if (index>=0) this.curAppUsers.splice(index, 1);\r\n            if (appUsers) {\r\n                index = appUsers.users.findIndex(v => v.id === user.id);\r\n                if (index>=0) appUsers.users.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    bindUserApp = async(app:App, checked:boolean) => {\r\n        await mainApi.bindAppUser(this.unit.id, app.id, this.curUser.id, checked===true? 1:0);\r\n        if (this.userAppsList === undefined) return;\r\n        let userApps = this.userAppsList.find(v => v.user.id === this.curUser.id);\r\n        if (checked === true) {\r\n            this.curUserApps.push(app);\r\n            if (userApps) userApps.apps.push(app);\r\n        }\r\n        else {\r\n            let index = this.curUserApps.findIndex(v => v.id === app.id);\r\n            if (index>=0) this.curUserApps.splice(index, 1);\r\n            if (userApps) {\r\n                index = userApps.apps.findIndex(v => v.id === app.id);\r\n                if (index>=0) userApps.apps.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    addUser = async (userId: number) => {\r\n        await mainApi.unitAddUser(this.unit.id, userId);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {nav, Page, appInFrame, Controller, VPage, Image, Edit, ItemSchema, UiSchema, StringSchema, ImageSchema, UiImageItem, UiTextItem} from  'tonva-tools'; \r\nimport {List, LMR, FA, StackedFA, PropGrid, Prop, Muted} from 'tonva-react-form';\r\nimport {StringValueEdit} from './tools';\r\nimport {Unit, UnitApps, UnitAdmin, DevModel} from './model';\r\nimport {store} from './store';\r\nimport Administors from './Administors';\r\nimport AppsPage from './Apps';\r\nimport {Members} from './Members';\r\nimport { mainApi } from 'api';\r\nimport { COrganization } from 'organization';\r\nimport {\r\n    ObjViewProps, ObjView,\r\n    //appsProps, \r\n    busesProps, \r\n    serversProps, /*uqdbsProps, */servicesProps, UQController} from './Dev';\r\nimport { AppController } from './Dev';\r\nimport { UsersController } from 'Users';\r\n\r\nexport class CAdmin extends Controller {\r\n    isProduction: boolean;\r\n    adminUnits: UnitAdmin[]; // 仅仅为Admins调试用。从登录用户获取units\r\n\r\n    private async loadAdminUnits(): Promise<void> {        \r\n        let ret = await mainApi.userAdminUnits();\r\n        let adminUnits = this.adminUnits = ret[0];\r\n        console.log('loadAdminUnits', adminUnits);\r\n        if (adminUnits.length === 1) {\r\n            appInFrame.unit = adminUnits[0].id;\r\n            await store.loadUnit();\r\n        }\r\n    }\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        store.init();\r\n        \r\n        this.isProduction = document.location.hash.startsWith('#tv');\r\n        console.log('admins isProduction %s', this.isProduction);\r\n\r\n        if (this.isProduction === false) {\r\n            await this.loadAdminUnits();\r\n            this.openVPage(VAdmin);\r\n            return;\r\n        }\r\n        await store.loadUnit();\r\n        this.openVPage(VAdmin);\r\n    /*\r\n        let user = nav.user;\r\n        if (user === undefined) {\r\n            console.log('autorun: user has logged out');\r\n            return;\r\n        }\r\n    \r\n        console.log('autorun login');\r\n        */\r\n       /*\r\n        setTimeout(async () => {\r\n            // 等待 tonva-tools 里面的initSubWin的nav.user的赋值\r\n            // 这个地方实际上有问题的，不应该这么写。程序逻辑顺序逻辑错误。\r\n            // 2018-11-5: 临时凑合用延时的方式来解决。\r\n            await store.loadUnit();\r\n            this.showVPage(VAdmin);\r\n        }, 200);\r\n        */\r\n    }\r\n}\r\n\r\nexport class VAdmin extends VPage<CAdmin> {\r\n    async open() {\r\n        let {isProduction, adminUnits} = this.controller;\r\n        if (isProduction === false) {\r\n            switch (adminUnits.length) {\r\n                default: this.openPage(this.selectUnitPage); return;\r\n                case 0: this.openPage(this.noUnitPage); return;\r\n                case 1: this.openPageElement(<AdminPage />); return;\r\n            }\r\n        }\r\n\r\n        if (store.unit === undefined) {\r\n            this.openPage(this.noUnitPage);\r\n            return;\r\n        }\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n\r\n    private selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={logout}>\r\n            <List items={this.controller.adminUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>;\r\n    }\r\n\r\n    private noUnitPage = () => {\r\n        let {nick, name} = nav.user;\r\n        return <Page header=\"没有小号\" logout={logout}>\r\n            <div className=\"p-3 small text-info\">\r\n                {nick || name}: 没有需要管理的小号\r\n            </div>\r\n        </Page>\r\n    }\r\n\r\n    protected get view() {return undefined}\r\n\r\n    renderRow = (item: UnitAdmin, index: number):JSX.Element => {\r\n        return <LMR className=\"p-2\" right={'id: ' + item.id}>\r\n            <div>{item.nick || item.name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: UnitAdmin) => {\r\n        appInFrame.unit = item.id; // 25;\r\n        store.init();\r\n        await store.loadUnit();\r\n        this.closePage();\r\n        this.openPageElement(<AdminPage />);\r\n    }\r\n}\r\n\r\nconst logout = async () => {\r\n    store.logout();\r\n}\r\n\r\ninterface ActionItem {\r\n    main: string | JSX.Element;\r\n    right?: string | JSX.Element;\r\n    icon: string|JSX.Element;\r\n    page?: new (props:any) => React.Component;\r\n    //onClick: () => nav.push(<Administors />),\r\n    controller?: Controller;\r\n}\r\n\r\ninterface DevItem<T extends DevModel.ObjBase> {\r\n    title: string;\r\n    count: number;\r\n    icon: string;\r\n    objProps?: ObjViewProps<T>;\r\n    onClick?: ()=>void;\r\n}\r\n\r\ntype Item = ActionItem|DevItem<DevModel.ObjBase>|string;\r\n\r\nconst rArrow = <FA name=\"chevron-right\" />;\r\nconst typeCaptions = {\r\n    1: '开发号',\r\n    2: '小号',\r\n    3: '系统号'\r\n}\r\n@observer\r\ndefault class AdminPage extends React.Component {\r\n    private caption:string;\r\n\r\n    async componentWillMount() {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        this.caption = typeCaptions[type];\r\n        if ((type & 1) !== 0) {\r\n            await store.dev.loadCounts();\r\n        }\r\n    }\r\n\r\n    private appsAction:ActionItem = {\r\n        main: '启停App',\r\n        right: rArrow, //'增减',\r\n        icon: 'play-circle-o',\r\n        page: AppsPage,\r\n    };\r\n    private usersAction:ActionItem = {\r\n        main: '用户角色',\r\n        right: rArrow,\r\n        icon: 'users',\r\n        page: Members,\r\n    };\r\n    private newUsersAction:ActionItem = {\r\n        main: '用户管理',\r\n        right: rArrow,\r\n        icon: 'user-o',\r\n        controller: new UsersController(undefined),\r\n    };\r\n    /*\r\n    private devAction:Item = {\r\n        main: <DevActions />,\r\n        right: '程序开发相关管理',\r\n        icon: 'laptop',\r\n        //page: Dev,\r\n    };*/\r\n    private adminsAction:ActionItem = {\r\n        main: '管理员',\r\n        right: rArrow,\r\n        icon: 'universal-access',\r\n        page: Administors,\r\n    };\r\n\r\n    private cOrganization = new COrganization;\r\n    private organizeAction:ActionItem = {\r\n        main: this.cOrganization.label,\r\n        right: rArrow,\r\n        icon: this.cOrganization.icon,\r\n        controller: this.cOrganization\r\n    };\r\n\r\n    private noneAction:ActionItem = {\r\n        main: '请耐心等待分配任务',\r\n        icon: 'hourglass-start',\r\n    };\r\n\r\n    private buildItems():Item[] {\r\n        let {unit, dev} = store;\r\n        let {isAdmin, isOwner, type} = unit;\r\n        let items:Item[] = [];\r\n        if (isOwner === 1) {\r\n            items.push(this.adminsAction);\r\n        }\r\n        console.log('unit:', unit);\r\n        if (isAdmin === 1) {\r\n            if ((type & 2) !== 0) {\r\n                // unit\r\n                items.push(\r\n                    '小号管理',\r\n                    this.appsAction, \r\n                    //this.usersAction, \r\n                    this.newUsersAction, \r\n                    //this.organizeAction\r\n                );\r\n            }\r\n            if ((type & 1) !== 0) {\r\n                // dev unit\r\n                let {counts} = dev;\r\n\r\n                let appAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'APP', \r\n                    count: counts && counts.app, \r\n                    icon: 'tablet', \r\n                    onClick: () => new AppController(undefined).start(unit.id),\r\n                };\r\n                let uqAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'UQ', \r\n                    count: counts && counts.uq, \r\n                    icon: 'database', \r\n                    onClick: () => new UQController(undefined).start(unit.id),\r\n                };\r\n                let busAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'BUS', \r\n                    count: counts && counts.bus, \r\n                    icon: 'cogs', \r\n                    objProps: busesProps,\r\n                };\r\n                let serverAction:DevItem<DevModel.ObjBase> = {\r\n                    title: 'Server', \r\n                    count: counts && counts.server, \r\n                    icon: 'server', \r\n                    objProps: serversProps,\r\n                };\r\n                items.push('开发号管理')\r\n                if (isOwner>0) items.push(appAction);\r\n                items.push(uqAction, busAction);\r\n                if (isOwner>0) items.push(serverAction);\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n    private row = (item:Item, index:number):JSX.Element => {\r\n        if (typeof item === 'string') {\r\n            return <div className=\"px-3 pt-3 pb-1 small text-muted\" style={{backgroundColor:'#f0f0f0'}}>{item}</div>;\r\n        }\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        let left:any, mid:any, r:any;\r\n        if (title !== undefined) {\r\n            let {icon, count} = item as DevItem<DevModel.ObjBase>;\r\n            left = <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" />;\r\n            mid = title;\r\n            r = count>0 && <span>{count}</span>;\r\n        }\r\n        else {\r\n            let {right, main, icon} = item as ActionItem;\r\n            left = typeof icon === 'string'? \r\n                <FA className=\"text-primary\" name={icon} fixWidth={true} size=\"lg\" /> :\r\n                item.icon;\r\n            mid = main;\r\n            r = <span>{right}</span>;\r\n        }\r\n        return <LMR className=\"px-3 py-2 align-items-center\" left={left} right={r}>\r\n            <div className=\"px-3\"><b>{mid}</b></div>\r\n        </LMR>;\r\n    }\r\n    private rowClick = async (item:Item) => {\r\n        let {title} = item as DevItem<DevModel.ObjBase>;\r\n        if (title !== undefined) {\r\n            let {objProps, onClick} = item as DevItem<DevModel.ObjBase>;\r\n            if (objProps !== undefined)\r\n                return nav.push(<ObjView {...objProps} />);\r\n            else {\r\n                onClick();\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            let {page:P, controller} = item as ActionItem;\r\n            if (P !== undefined)\r\n                nav.push(<P />);\r\n            else {\r\n                await controller.start(store.unit);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        if (unit === undefined) {\r\n            console.log(\"admin render without unit\");\r\n            return null;\r\n        }\r\n        console.log(\"admin render with unit\");\r\n        let items = this.buildItems();\r\n        if (items === undefined) {\r\n            return <Page header=\"\" />;\r\n        }\r\n        let header:any, top:any;\r\n        if (unit !== undefined) {\r\n            let {name, nick, icon, discription} = unit;\r\n            let title:string, vice:any;\r\n            if (nick) {\r\n                title = nick;\r\n                vice = <h6><small className='text-secondary'>{name}</small></h6>;\r\n            }\r\n            else {\r\n                title = name;\r\n            }\r\n            if (this.caption !== undefined) header = this.caption + ' - ' + title;\r\n            top = <LMR className='px-3 my-4 bg-white py-2 cursor-pointer' onClick={()=>nav.push(<UnitProps />)}\r\n                left={<div><Image className=\"w-3c h-3c\" src={icon} /></div>}>\r\n                <div className=\"px-3\">\r\n                    <LMR right={vice}><h6 className='text-dark font-weight-bold'>{title}</h6></LMR>\r\n                    <div className='small text-info'>{discription}</div>\r\n                </div>\r\n            </LMR>;\r\n        }\r\n        else {\r\n            header = '系统管理';\r\n        }\r\n        return <Page header={header} logout={logout}>\r\n            {top}\r\n            <List items={items} item={{render:this.row, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n\r\nclass UnitProps extends React.Component {\r\n    /*\r\n    private rows:Prop[] = [\r\n        '',\r\n        {label: '标志图', type: 'string', name: 'icon'},\r\n        '=',\r\n        {label: '唯一号', type: 'string', name: 'name'},\r\n        {\r\n            label: '名称', \r\n            type: 'string',\r\n            name: 'nick', \r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改名称\"\r\n                value={store.unit.nick}\r\n                onChanged={this.onNickChanged} \r\n                info=\"好的名字会提升接受度\" />)\r\n        },\r\n        {\r\n            label: '说明',\r\n            type: 'string',\r\n            name: 'discription',\r\n            onClick:()=>nav.push(<StringValueEdit \r\n                title=\"修改说明\"\r\n                value={store.unit.discription}\r\n                onChanged={this.onDiscriptionChanged} \r\n                info=\"对小号做一个说明\" />)\r\n        },\r\n    ];\r\n    */\r\n    private schema:ItemSchema[] =[\r\n        {name: 'icon', type: 'image'} as ImageSchema,\r\n        {name: 'nick', type: 'string'} as StringSchema,\r\n        {name: 'discription', type: 'string'} as StringSchema,\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'标志图'} as UiImageItem,\r\n            discription: {widget:'text', label:'描述', placeholder:'简短清晰的描述'} as UiTextItem,\r\n        }\r\n    }\r\n    /*\r\n    async onNickChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('nick', value);\r\n    }\r\n    async onDiscriptionChanged(value:any, orgValue:any):Promise<void> {\r\n        await store.unitChangeProp('discription', value);\r\n    }\r\n    */\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        //await userApi.userSetProp(name, newValue);\r\n        await store.unitChangeProp(name, newValue);\r\n        //this.data[name] = newValue;\r\n        //nav.user[name] = newValue;\r\n        //nav.saveLocalUser();\r\n    }\r\n    //<PropGrid rows={this.rows} values={store.unit} alignValue=\"right\" />\r\n    render() {\r\n        let unit:Unit = store.unit;\r\n        let {isRoot, isOwner} = unit;\r\n        return <Page header=\"小号信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={store.unit}\r\n                onItemChanged={this.onItemChanged}\r\n                stopEdit={!(isRoot>0 && isOwner>0)} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\nimport { nav, NavView } from 'tonva-tools';\nimport { CAdmin } from './Admin';\nimport './App.css';\n\nclass App extends React.Component {\n    async onLogined() {\n        let loc = document.location;\n        nav.clear();\n        //nav.push(<StartPage />);\n        let cAdmin = new CAdmin({});\n        await cAdmin.start();\n    }\n    render() {\n        return (\n            <NavView onLogined={this.onLogined} />\n        )\n    }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}